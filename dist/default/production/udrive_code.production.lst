

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 30 12:11:09 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	stringtext12,global,class=STRCODE,delta=2
    23                           	psect	stringtext13,global,class=STRCODE,delta=2
    24                           	psect	stringtext14,global,class=STRCODE,delta=2
    25                           	psect	stringtext15,global,class=STRCODE,delta=2
    26                           	psect	stringtext16,global,class=STRCODE,delta=2
    27                           	psect	stringtext17,global,class=STRCODE,delta=2
    28                           	psect	stringtext18,global,class=STRCODE,delta=2
    29                           	psect	stringtext19,global,class=STRCODE,delta=2
    30                           	psect	stringtext20,global,class=STRCODE,delta=2
    31                           	psect	stringtext21,global,class=STRCODE,delta=2
    32                           	psect	stringtext22,global,class=STRCODE,delta=2
    33                           	psect	stringtext23,global,class=STRCODE,delta=2
    34                           	psect	stringtext24,global,class=STRCODE,delta=2
    35                           	psect	stringtext25,global,class=STRCODE,delta=2
    36                           	psect	stringtext26,global,class=STRCODE,delta=2
    37                           	psect	stringtext27,global,class=STRCODE,delta=2
    38                           	psect	stringtext28,global,class=STRCODE,delta=2
    39                           	psect	stringtext29,global,class=STRCODE,delta=2
    40                           	psect	stringtext30,global,class=STRCODE,delta=2
    41                           	psect	stringtext31,global,class=STRCODE,delta=2
    42                           	psect	stringtext32,global,class=STRCODE,delta=2
    43                           	psect	stringtext33,global,class=STRCODE,delta=2
    44                           	psect	stringtext34,global,class=STRCODE,delta=2
    45                           	psect	stringtext35,global,class=STRCODE,delta=2
    46                           	psect	stringtext36,global,class=STRCODE,delta=2
    47                           	psect	stringtext37,global,class=STRCODE,delta=2
    48                           	psect	stringtext38,global,class=STRCODE,delta=2
    49                           	psect	stringtext39,global,class=STRCODE,delta=2
    50                           	psect	stringtext40,global,class=STRCODE,delta=2
    51                           	psect	stringtext41,global,class=STRCODE,delta=2
    52                           	psect	stringtext42,global,class=STRCODE,delta=2
    53                           	psect	stringtext43,global,class=STRCODE,delta=2
    54                           	psect	stringtext44,global,class=STRCODE,delta=2
    55                           	psect	stringtext45,global,class=STRCODE,delta=2
    56                           	psect	stringtext46,global,class=STRCODE,delta=2
    57                           	psect	stringtext47,global,class=STRCODE,delta=2
    58                           	psect	stringtext48,global,class=STRCODE,delta=2
    59                           	psect	stringtext49,global,class=STRCODE,delta=2
    60                           	psect	stringtext50,global,class=STRCODE,delta=2
    61                           	psect	stringtext51,global,class=STRCODE,delta=2
    62                           	psect	stringtext52,global,class=STRCODE,delta=2
    63                           	psect	stringtext53,global,class=STRCODE,delta=2
    64                           	psect	stringtext54,global,class=STRCODE,delta=2
    65                           	psect	stringtext55,global,class=STRCODE,delta=2
    66                           	psect	stringtext56,global,class=STRCODE,delta=2
    67                           	psect	stringtext57,global,class=STRCODE,delta=2
    68                           	psect	stringtext58,global,class=STRCODE,delta=2
    69                           	psect	stringtext59,global,class=STRCODE,delta=2
    70                           	psect	stringtext60,global,class=STRCODE,delta=2
    71                           	psect	stringtext61,global,class=STRCODE,delta=2
    72                           	psect	cinit,global,class=CODE,merge=1,delta=2
    73                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    74                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    75                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    76                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    77                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    78                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    79                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    80                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    81                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    82                           	psect	inittext,global,class=CODE,delta=2
    83                           	psect	clrtext,global,class=CODE,delta=2
    84                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    85                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    86                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    87                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    88                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    89                           	psect	text1,local,class=CODE,merge=1,delta=2
    90                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text11,local,class=CODE,merge=1,delta=2
   100                           	psect	text12,local,class=CODE,merge=1,delta=2
   101                           	psect	text13,local,class=CODE,merge=1,delta=2
   102                           	psect	text14,local,class=CODE,merge=1,delta=2
   103                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text17,local,class=CODE,merge=1,delta=2
   106                           	psect	text18,local,class=CODE,merge=1,delta=2
   107                           	psect	text19,local,class=CODE,merge=1,delta=2
   108                           	psect	swtext1,local,class=CONST,delta=2
   109                           	psect	text20,local,class=CODE,merge=1,delta=2
   110                           	psect	text21,local,class=CODE,merge=1,delta=2
   111                           	psect	text22,local,class=CODE,merge=1,delta=2
   112                           	psect	text23,local,class=CODE,merge=1,delta=2
   113                           	psect	text24,local,class=CODE,merge=1,delta=2
   114                           	psect	text25,local,class=CODE,merge=1,delta=2
   115                           	psect	text26,local,class=CODE,merge=1,delta=2
   116                           	psect	text27,local,class=CODE,merge=1,delta=2
   117                           	psect	text28,local,class=CODE,merge=1,delta=2
   118                           	psect	text29,local,class=CODE,merge=1,delta=2
   119                           	psect	text30,local,class=CODE,merge=1,delta=2
   120                           	psect	text31,local,class=CODE,merge=1,delta=2
   121                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
   122                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text37,local,class=CODE,merge=1,delta=2
   127                           	psect	text38,local,class=CODE,merge=1,delta=2
   128                           	psect	text39,local,class=CODE,merge=1,delta=2
   129                           	psect	text40,local,class=CODE,merge=1,delta=2
   130                           	psect	text41,local,class=CODE,merge=1,delta=2
   131                           	psect	text42,local,class=CODE,merge=1,delta=2
   132                           	psect	text43,local,class=CODE,merge=1,delta=2
   133                           	psect	text44,local,class=CODE,merge=1,delta=2
   134                           	psect	text45,local,class=CODE,merge=1,delta=2
   135                           	psect	text46,local,class=CODE,merge=1,delta=2
   136                           	psect	text47,local,class=CODE,merge=1,delta=2
   137                           	psect	text48,local,class=CODE,merge=1,delta=2
   138                           	psect	text49,local,class=CODE,merge=1,delta=2
   139                           	psect	text50,local,class=CODE,merge=1,delta=2
   140                           	psect	text51,local,class=CODE,merge=1,delta=2
   141                           	psect	text52,local,class=CODE,merge=1,delta=2
   142                           	psect	text53,local,class=CODE,merge=1,delta=2
   143                           	psect	text54,local,class=CODE,merge=1,delta=2
   144                           	psect	text55,local,class=CODE,merge=1,delta=2
   145                           	psect	text56,local,class=CODE,merge=1,delta=2
   146                           	psect	text57,local,class=CODE,merge=1,delta=2
   147                           	psect	text58,local,class=CODE,merge=1,delta=2
   148                           	psect	text59,local,class=CODE,merge=1,delta=2
   149                           	psect	text60,local,class=CODE,merge=1,delta=2
   150                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
   151                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   152                           	psect	text63,local,class=CODE,merge=1,delta=2
   153                           	psect	text64,local,class=CODE,merge=1,delta=2
   154                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text68,local,class=CODE,merge=1,delta=2
   158                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   159                           	psect	text70,local,class=CODE,merge=1,delta=2
   160                           	psect	text71,local,class=CODE,merge=1,delta=2
   161                           	psect	text72,local,class=CODE,merge=1,delta=2
   162                           	psect	text73,local,class=CODE,merge=1,delta=2
   163                           	psect	text74,local,class=CODE,merge=1,delta=2
   164                           	psect	text75,local,class=CODE,merge=1,delta=2
   165                           	psect	text76,local,class=CODE,merge=1,delta=2
   166                           	psect	text77,local,class=CODE,merge=1,delta=2
   167                           	psect	text78,local,class=CODE,merge=1,delta=2
   168                           	psect	text79,local,class=CODE,merge=1,delta=2
   169                           	psect	text80,local,class=CODE,merge=1,delta=2
   170                           	psect	text81,local,class=CODE,merge=1,delta=2
   171                           	psect	text82,local,class=CODE,merge=1,delta=2
   172                           	psect	text83,local,class=CODE,merge=1,delta=2
   173                           	psect	text84,local,class=CODE,merge=1,delta=2
   174                           	psect	text85,local,class=CODE,merge=1,delta=2
   175                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   181                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   182                           	psect	text93,local,class=CODE,merge=1,delta=2
   183                           	psect	text94,local,class=CODE,merge=1,delta=2
   184                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   185                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   186                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   187                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   188                           	psect	text99,local,class=CODE,merge=1,delta=2,group=2
   189                           	psect	text100,local,class=CODE,merge=1,delta=2
   190                           	psect	text101,local,class=CODE,merge=1,delta=2
   191                           	psect	text102,local,class=CODE,merge=1,delta=2
   192                           	psect	text103,local,class=CODE,merge=1,delta=2
   193                           	psect	text104,local,class=CODE,merge=1,delta=2
   194                           	psect	text105,local,class=CODE,merge=1,delta=2
   195                           	psect	text106,local,class=CODE,merge=1,delta=2
   196                           	psect	text107,local,class=CODE,merge=1,delta=2
   197                           	psect	text108,local,class=CODE,merge=1,delta=2
   198                           	psect	text109,local,class=CODE,merge=1,delta=2
   199                           	psect	text110,local,class=CODE,merge=1,delta=2
   200                           	psect	text111,local,class=CODE,merge=1,delta=2
   201                           	psect	text112,local,class=CODE,merge=1,delta=2
   202                           	psect	text113,local,class=CODE,merge=1,delta=2
   203                           	psect	text114,local,class=CODE,merge=1,delta=2
   204                           	psect	text115,local,class=CODE,merge=1,delta=2
   205                           	psect	text116,local,class=CODE,merge=1,delta=2
   206                           	psect	text117,local,class=CODE,merge=1,delta=2
   207                           	psect	intentry,global,class=CODE,delta=2
   208                           	psect	text119,local,class=CODE,merge=1,delta=2
   209                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   210                           	psect	text121,local,class=CODE,merge=1,delta=2
   211                           	psect	text122,local,class=CODE,merge=1,delta=2
   212                           	psect	text123,local,class=CODE,merge=1,delta=2
   213                           	psect	text124,local,class=CODE,merge=1,delta=2
   214                           	psect	text125,local,class=CODE,merge=1,delta=2
   215                           	psect	text126,local,class=CODE,merge=1,delta=2
   216                           	psect	text127,local,class=CODE,merge=1,delta=2
   217                           	psect	text128,local,class=CODE,merge=1,delta=2
   218                           	psect	text129,local,class=CODE,merge=1,delta=2
   219                           	psect	text130,local,class=CODE,merge=1,delta=2
   220                           	psect	text131,local,class=CODE,merge=1,delta=2
   221                           	psect	text132,local,class=CODE,merge=1,delta=2
   222                           	psect	text133,local,class=CODE,merge=1,delta=2
   223                           	psect	text134,local,class=CODE,merge=1,delta=2
   224                           	psect	text135,local,class=CODE,merge=1,delta=2
   225                           	psect	text136,local,class=CODE,merge=1,delta=2
   226                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   227                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   228                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   229                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   230                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   231                           	psect	text142,local,class=CODE,merge=1,inline,delta=2
   232                           	psect	text143,local,class=CODE,merge=1,inline,delta=2
   233                           	psect	text144,local,class=CODE,merge=1,delta=2
   234                           	psect	text145,local,class=CODE,merge=1,delta=2
   235                           	psect	text146,local,class=CODE,merge=1,inline,delta=2
   236                           	psect	text147,local,class=CODE,merge=1,inline,delta=2
   237                           	psect	text148,local,class=CODE,merge=1,inline,delta=2
   238                           	psect	text149,local,class=CODE,merge=1,delta=2
   239                           	psect	text150,local,class=CODE,merge=1,inline,delta=2
   240                           	psect	text151,local,class=CODE,merge=1,delta=2
   241                           	psect	text152,local,class=CODE,merge=1,delta=2
   242                           	psect	text153,local,class=CODE,merge=1,delta=2
   243                           	psect	text154,local,class=CODE,merge=1,delta=2
   244                           	psect	text155,local,class=CODE,merge=1,delta=2
   245                           	psect	text156,local,class=CODE,merge=1,delta=2
   246                           	psect	text157,local,class=CODE,merge=1,delta=2
   247                           	psect	text158,local,class=CODE,merge=1,delta=2
   248                           	psect	text159,local,class=CODE,merge=1,delta=2
   249                           	psect	text160,local,class=CODE,merge=1,delta=2
   250                           	psect	text161,local,class=CODE,merge=1,delta=2
   251                           	psect	text162,local,class=CODE,merge=1,delta=2
   252                           	psect	text163,local,class=CODE,merge=1,delta=2
   253                           	psect	text164,local,class=CODE,merge=1,delta=2
   254                           	dabs	1,0xCA0,32
   255                           	dabs	1,0xC30,64
   256                           	dabs	1,0x2790,0,_currentPositions_steps
   257                           	dabs	1,0x7E,2
   258  0000                     
   259                           ; Version 1.45
   260                           ; Generated 16/11/2017 GMT
   261                           ; 
   262                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   263                           ; All rights reserved.
   264                           ; 
   265                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   266                           ; 
   267                           ; Redistribution and use in source and binary forms, with or without modification, are
   268                           ; permitted provided that the following conditions are met:
   269                           ; 
   270                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   271                           ;        conditions and the following disclaimer.
   272                           ; 
   273                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   274                           ;        of conditions and the following disclaimer in the documentation and/or other
   275                           ;        materials provided with the distribution.
   276                           ; 
   277                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   278                           ;        software without specific prior written permission.
   279                           ; 
   280                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   281                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   282                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   283                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   284                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   285                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   286                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   287                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   288                           ; 
   289                           ; 
   290                           ; Code-generator required, PIC16F18346 Definitions
   291                           ; 
   292                           ; SFR Addresses
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0097                     	;# 
   336  009B                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  009F                     	;# 
   342  010C                     	;# 
   343  010D                     	;# 
   344  010E                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0113                     	;# 
   348  0114                     	;# 
   349  0115                     	;# 
   350  0116                     	;# 
   351  0117                     	;# 
   352  0118                     	;# 
   353  0119                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  018E                     	;# 
   357  0197                     	;# 
   358  0199                     	;# 
   359  0199                     	;# 
   360  0199                     	;# 
   361  019A                     	;# 
   362  019A                     	;# 
   363  019A                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019C                     	;# 
   370  019C                     	;# 
   371  019C                     	;# 
   372  019D                     	;# 
   373  019D                     	;# 
   374  019D                     	;# 
   375  019E                     	;# 
   376  019E                     	;# 
   377  019E                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  019F                     	;# 
   382  019F                     	;# 
   383  020C                     	;# 
   384  020D                     	;# 
   385  020E                     	;# 
   386  0211                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0212                     	;# 
   390  0213                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0216                     	;# 
   399  0216                     	;# 
   400  0217                     	;# 
   401  0217                     	;# 
   402  0219                     	;# 
   403  021A                     	;# 
   404  021B                     	;# 
   405  021C                     	;# 
   406  021D                     	;# 
   407  021D                     	;# 
   408  021E                     	;# 
   409  021F                     	;# 
   410  028C                     	;# 
   411  028D                     	;# 
   412  028E                     	;# 
   413  0291                     	;# 
   414  0291                     	;# 
   415  0292                     	;# 
   416  0293                     	;# 
   417  0294                     	;# 
   418  0295                     	;# 
   419  0295                     	;# 
   420  0296                     	;# 
   421  0297                     	;# 
   422  0298                     	;# 
   423  029F                     	;# 
   424  030C                     	;# 
   425  030D                     	;# 
   426  030E                     	;# 
   427  0311                     	;# 
   428  0311                     	;# 
   429  0312                     	;# 
   430  0313                     	;# 
   431  0314                     	;# 
   432  0315                     	;# 
   433  0315                     	;# 
   434  0316                     	;# 
   435  0317                     	;# 
   436  0318                     	;# 
   437  038C                     	;# 
   438  038D                     	;# 
   439  038E                     	;# 
   440  0391                     	;# 
   441  0392                     	;# 
   442  0393                     	;# 
   443  0394                     	;# 
   444  0395                     	;# 
   445  0396                     	;# 
   446  0397                     	;# 
   447  0398                     	;# 
   448  0399                     	;# 
   449  039A                     	;# 
   450  039C                     	;# 
   451  039D                     	;# 
   452  039E                     	;# 
   453  039F                     	;# 
   454  0411                     	;# 
   455  0411                     	;# 
   456  0412                     	;# 
   457  0413                     	;# 
   458  0414                     	;# 
   459  0415                     	;# 
   460  0416                     	;# 
   461  0417                     	;# 
   462  0418                     	;# 
   463  0418                     	;# 
   464  0419                     	;# 
   465  041A                     	;# 
   466  041B                     	;# 
   467  041C                     	;# 
   468  041D                     	;# 
   469  041E                     	;# 
   470  041F                     	;# 
   471  0498                     	;# 
   472  0498                     	;# 
   473  0499                     	;# 
   474  049A                     	;# 
   475  049B                     	;# 
   476  049B                     	;# 
   477  049C                     	;# 
   478  049D                     	;# 
   479  049E                     	;# 
   480  049F                     	;# 
   481  0617                     	;# 
   482  0618                     	;# 
   483  0619                     	;# 
   484  0619                     	;# 
   485  061A                     	;# 
   486  061B                     	;# 
   487  061C                     	;# 
   488  061C                     	;# 
   489  061F                     	;# 
   490  0691                     	;# 
   491  0692                     	;# 
   492  0693                     	;# 
   493  0694                     	;# 
   494  0695                     	;# 
   495  0696                     	;# 
   496  0697                     	;# 
   497  0698                     	;# 
   498  0699                     	;# 
   499  0711                     	;# 
   500  0712                     	;# 
   501  0713                     	;# 
   502  0714                     	;# 
   503  0715                     	;# 
   504  0716                     	;# 
   505  0717                     	;# 
   506  0718                     	;# 
   507  0719                     	;# 
   508  0891                     	;# 
   509  0891                     	;# 
   510  0891                     	;# 
   511  0891                     	;# 
   512  0891                     	;# 
   513  0891                     	;# 
   514  0892                     	;# 
   515  0892                     	;# 
   516  0892                     	;# 
   517  0893                     	;# 
   518  0893                     	;# 
   519  0893                     	;# 
   520  0893                     	;# 
   521  0893                     	;# 
   522  0893                     	;# 
   523  0894                     	;# 
   524  0894                     	;# 
   525  0894                     	;# 
   526  0895                     	;# 
   527  0895                     	;# 
   528  0895                     	;# 
   529  0896                     	;# 
   530  0896                     	;# 
   531  0896                     	;# 
   532  089B                     	;# 
   533  0911                     	;# 
   534  0912                     	;# 
   535  0913                     	;# 
   536  0914                     	;# 
   537  0915                     	;# 
   538  0916                     	;# 
   539  0918                     	;# 
   540  0919                     	;# 
   541  091A                     	;# 
   542  091B                     	;# 
   543  091C                     	;# 
   544  091D                     	;# 
   545  091E                     	;# 
   546  091F                     	;# 
   547  0E0F                     	;# 
   548  0E10                     	;# 
   549  0E11                     	;# 
   550  0E12                     	;# 
   551  0E13                     	;# 
   552  0E14                     	;# 
   553  0E15                     	;# 
   554  0E16                     	;# 
   555  0E17                     	;# 
   556  0E18                     	;# 
   557  0E19                     	;# 
   558  0E1A                     	;# 
   559  0E1B                     	;# 
   560  0E1C                     	;# 
   561  0E1D                     	;# 
   562  0E1E                     	;# 
   563  0E1F                     	;# 
   564  0E20                     	;# 
   565  0E21                     	;# 
   566  0E22                     	;# 
   567  0E24                     	;# 
   568  0E25                     	;# 
   569  0E28                     	;# 
   570  0E29                     	;# 
   571  0E2A                     	;# 
   572  0E2B                     	;# 
   573  0E2C                     	;# 
   574  0E2D                     	;# 
   575  0E2E                     	;# 
   576  0E2F                     	;# 
   577  0E90                     	;# 
   578  0E91                     	;# 
   579  0E92                     	;# 
   580  0E94                     	;# 
   581  0E95                     	;# 
   582  0E9C                     	;# 
   583  0E9D                     	;# 
   584  0E9E                     	;# 
   585  0E9F                     	;# 
   586  0EA0                     	;# 
   587  0EA1                     	;# 
   588  0EA2                     	;# 
   589  0EA3                     	;# 
   590  0EA4                     	;# 
   591  0EA5                     	;# 
   592  0EA6                     	;# 
   593  0EA7                     	;# 
   594  0F0F                     	;# 
   595  0F10                     	;# 
   596  0F11                     	;# 
   597  0F12                     	;# 
   598  0F13                     	;# 
   599  0F14                     	;# 
   600  0F15                     	;# 
   601  0F16                     	;# 
   602  0F17                     	;# 
   603  0F18                     	;# 
   604  0F19                     	;# 
   605  0F1A                     	;# 
   606  0F1B                     	;# 
   607  0F1C                     	;# 
   608  0F1D                     	;# 
   609  0F1E                     	;# 
   610  0F1F                     	;# 
   611  0F20                     	;# 
   612  0F21                     	;# 
   613  0F22                     	;# 
   614  0F23                     	;# 
   615  0F24                     	;# 
   616  0F25                     	;# 
   617  0F26                     	;# 
   618  0F27                     	;# 
   619  0F28                     	;# 
   620  0F29                     	;# 
   621  0F2A                     	;# 
   622  0F2B                     	;# 
   623  0F2C                     	;# 
   624  0F2D                     	;# 
   625  0F2E                     	;# 
   626  0F2F                     	;# 
   627  0F30                     	;# 
   628  0F31                     	;# 
   629  0F32                     	;# 
   630  0F33                     	;# 
   631  0F34                     	;# 
   632  0F35                     	;# 
   633  0F36                     	;# 
   634  0F37                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646  0000                     	;# 
   647  0001                     	;# 
   648  0002                     	;# 
   649  0003                     	;# 
   650  0004                     	;# 
   651  0005                     	;# 
   652  0006                     	;# 
   653  0007                     	;# 
   654  0008                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  0010                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0013                     	;# 
   665  0014                     	;# 
   666  0015                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  001D                     	;# 
   678  001E                     	;# 
   679  001F                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  0090                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0093                     	;# 
   687  0094                     	;# 
   688  0097                     	;# 
   689  009B                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  009F                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  0111                     	;# 
   699  0112                     	;# 
   700  0113                     	;# 
   701  0114                     	;# 
   702  0115                     	;# 
   703  0116                     	;# 
   704  0117                     	;# 
   705  0118                     	;# 
   706  0119                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  018E                     	;# 
   710  0197                     	;# 
   711  0199                     	;# 
   712  0199                     	;# 
   713  0199                     	;# 
   714  019A                     	;# 
   715  019A                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  019C                     	;# 
   724  019C                     	;# 
   725  019D                     	;# 
   726  019D                     	;# 
   727  019D                     	;# 
   728  019E                     	;# 
   729  019E                     	;# 
   730  019E                     	;# 
   731  019F                     	;# 
   732  019F                     	;# 
   733  019F                     	;# 
   734  019F                     	;# 
   735  019F                     	;# 
   736  020C                     	;# 
   737  020D                     	;# 
   738  020E                     	;# 
   739  0211                     	;# 
   740  0211                     	;# 
   741  0212                     	;# 
   742  0212                     	;# 
   743  0213                     	;# 
   744  0213                     	;# 
   745  0214                     	;# 
   746  0214                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0215                     	;# 
   750  0215                     	;# 
   751  0216                     	;# 
   752  0216                     	;# 
   753  0217                     	;# 
   754  0217                     	;# 
   755  0219                     	;# 
   756  021A                     	;# 
   757  021B                     	;# 
   758  021C                     	;# 
   759  021D                     	;# 
   760  021D                     	;# 
   761  021E                     	;# 
   762  021F                     	;# 
   763  028C                     	;# 
   764  028D                     	;# 
   765  028E                     	;# 
   766  0291                     	;# 
   767  0291                     	;# 
   768  0292                     	;# 
   769  0293                     	;# 
   770  0294                     	;# 
   771  0295                     	;# 
   772  0295                     	;# 
   773  0296                     	;# 
   774  0297                     	;# 
   775  0298                     	;# 
   776  029F                     	;# 
   777  030C                     	;# 
   778  030D                     	;# 
   779  030E                     	;# 
   780  0311                     	;# 
   781  0311                     	;# 
   782  0312                     	;# 
   783  0313                     	;# 
   784  0314                     	;# 
   785  0315                     	;# 
   786  0315                     	;# 
   787  0316                     	;# 
   788  0317                     	;# 
   789  0318                     	;# 
   790  038C                     	;# 
   791  038D                     	;# 
   792  038E                     	;# 
   793  0391                     	;# 
   794  0392                     	;# 
   795  0393                     	;# 
   796  0394                     	;# 
   797  0395                     	;# 
   798  0396                     	;# 
   799  0397                     	;# 
   800  0398                     	;# 
   801  0399                     	;# 
   802  039A                     	;# 
   803  039C                     	;# 
   804  039D                     	;# 
   805  039E                     	;# 
   806  039F                     	;# 
   807  0411                     	;# 
   808  0411                     	;# 
   809  0412                     	;# 
   810  0413                     	;# 
   811  0414                     	;# 
   812  0415                     	;# 
   813  0416                     	;# 
   814  0417                     	;# 
   815  0418                     	;# 
   816  0418                     	;# 
   817  0419                     	;# 
   818  041A                     	;# 
   819  041B                     	;# 
   820  041C                     	;# 
   821  041D                     	;# 
   822  041E                     	;# 
   823  041F                     	;# 
   824  0498                     	;# 
   825  0498                     	;# 
   826  0499                     	;# 
   827  049A                     	;# 
   828  049B                     	;# 
   829  049B                     	;# 
   830  049C                     	;# 
   831  049D                     	;# 
   832  049E                     	;# 
   833  049F                     	;# 
   834  0617                     	;# 
   835  0618                     	;# 
   836  0619                     	;# 
   837  0619                     	;# 
   838  061A                     	;# 
   839  061B                     	;# 
   840  061C                     	;# 
   841  061C                     	;# 
   842  061F                     	;# 
   843  0691                     	;# 
   844  0692                     	;# 
   845  0693                     	;# 
   846  0694                     	;# 
   847  0695                     	;# 
   848  0696                     	;# 
   849  0697                     	;# 
   850  0698                     	;# 
   851  0699                     	;# 
   852  0711                     	;# 
   853  0712                     	;# 
   854  0713                     	;# 
   855  0714                     	;# 
   856  0715                     	;# 
   857  0716                     	;# 
   858  0717                     	;# 
   859  0718                     	;# 
   860  0719                     	;# 
   861  0891                     	;# 
   862  0891                     	;# 
   863  0891                     	;# 
   864  0891                     	;# 
   865  0891                     	;# 
   866  0891                     	;# 
   867  0892                     	;# 
   868  0892                     	;# 
   869  0892                     	;# 
   870  0893                     	;# 
   871  0893                     	;# 
   872  0893                     	;# 
   873  0893                     	;# 
   874  0893                     	;# 
   875  0893                     	;# 
   876  0894                     	;# 
   877  0894                     	;# 
   878  0894                     	;# 
   879  0895                     	;# 
   880  0895                     	;# 
   881  0895                     	;# 
   882  0896                     	;# 
   883  0896                     	;# 
   884  0896                     	;# 
   885  089B                     	;# 
   886  0911                     	;# 
   887  0912                     	;# 
   888  0913                     	;# 
   889  0914                     	;# 
   890  0915                     	;# 
   891  0916                     	;# 
   892  0918                     	;# 
   893  0919                     	;# 
   894  091A                     	;# 
   895  091B                     	;# 
   896  091C                     	;# 
   897  091D                     	;# 
   898  091E                     	;# 
   899  091F                     	;# 
   900  0E0F                     	;# 
   901  0E10                     	;# 
   902  0E11                     	;# 
   903  0E12                     	;# 
   904  0E13                     	;# 
   905  0E14                     	;# 
   906  0E15                     	;# 
   907  0E16                     	;# 
   908  0E17                     	;# 
   909  0E18                     	;# 
   910  0E19                     	;# 
   911  0E1A                     	;# 
   912  0E1B                     	;# 
   913  0E1C                     	;# 
   914  0E1D                     	;# 
   915  0E1E                     	;# 
   916  0E1F                     	;# 
   917  0E20                     	;# 
   918  0E21                     	;# 
   919  0E22                     	;# 
   920  0E24                     	;# 
   921  0E25                     	;# 
   922  0E28                     	;# 
   923  0E29                     	;# 
   924  0E2A                     	;# 
   925  0E2B                     	;# 
   926  0E2C                     	;# 
   927  0E2D                     	;# 
   928  0E2E                     	;# 
   929  0E2F                     	;# 
   930  0E90                     	;# 
   931  0E91                     	;# 
   932  0E92                     	;# 
   933  0E94                     	;# 
   934  0E95                     	;# 
   935  0E9C                     	;# 
   936  0E9D                     	;# 
   937  0E9E                     	;# 
   938  0E9F                     	;# 
   939  0EA0                     	;# 
   940  0EA1                     	;# 
   941  0EA2                     	;# 
   942  0EA3                     	;# 
   943  0EA4                     	;# 
   944  0EA5                     	;# 
   945  0EA6                     	;# 
   946  0EA7                     	;# 
   947  0F0F                     	;# 
   948  0F10                     	;# 
   949  0F11                     	;# 
   950  0F12                     	;# 
   951  0F13                     	;# 
   952  0F14                     	;# 
   953  0F15                     	;# 
   954  0F16                     	;# 
   955  0F17                     	;# 
   956  0F18                     	;# 
   957  0F19                     	;# 
   958  0F1A                     	;# 
   959  0F1B                     	;# 
   960  0F1C                     	;# 
   961  0F1D                     	;# 
   962  0F1E                     	;# 
   963  0F1F                     	;# 
   964  0F20                     	;# 
   965  0F21                     	;# 
   966  0F22                     	;# 
   967  0F23                     	;# 
   968  0F24                     	;# 
   969  0F25                     	;# 
   970  0F26                     	;# 
   971  0F27                     	;# 
   972  0F28                     	;# 
   973  0F29                     	;# 
   974  0F2A                     	;# 
   975  0F2B                     	;# 
   976  0F2C                     	;# 
   977  0F2D                     	;# 
   978  0F2E                     	;# 
   979  0F2F                     	;# 
   980  0F30                     	;# 
   981  0F31                     	;# 
   982  0F32                     	;# 
   983  0F33                     	;# 
   984  0F34                     	;# 
   985  0F35                     	;# 
   986  0F36                     	;# 
   987  0F37                     	;# 
   988  0FE4                     	;# 
   989  0FE5                     	;# 
   990  0FE6                     	;# 
   991  0FE7                     	;# 
   992  0FE8                     	;# 
   993  0FE9                     	;# 
   994  0FEA                     	;# 
   995  0FEB                     	;# 
   996  0FED                     	;# 
   997  0FEE                     	;# 
   998  0FEF                     	;# 
   999  0000                     	;# 
  1000  0001                     	;# 
  1001  0002                     	;# 
  1002  0003                     	;# 
  1003  0004                     	;# 
  1004  0005                     	;# 
  1005  0006                     	;# 
  1006  0007                     	;# 
  1007  0008                     	;# 
  1008  0009                     	;# 
  1009  000A                     	;# 
  1010  000B                     	;# 
  1011  000C                     	;# 
  1012  000D                     	;# 
  1013  000E                     	;# 
  1014  0010                     	;# 
  1015  0011                     	;# 
  1016  0012                     	;# 
  1017  0013                     	;# 
  1018  0014                     	;# 
  1019  0015                     	;# 
  1020  0015                     	;# 
  1021  0016                     	;# 
  1022  0016                     	;# 
  1023  0017                     	;# 
  1024  0018                     	;# 
  1025  0019                     	;# 
  1026  0019                     	;# 
  1027  001A                     	;# 
  1028  001B                     	;# 
  1029  001C                     	;# 
  1030  001D                     	;# 
  1031  001E                     	;# 
  1032  001F                     	;# 
  1033  008C                     	;# 
  1034  008D                     	;# 
  1035  008E                     	;# 
  1036  0090                     	;# 
  1037  0091                     	;# 
  1038  0092                     	;# 
  1039  0093                     	;# 
  1040  0094                     	;# 
  1041  0097                     	;# 
  1042  009B                     	;# 
  1043  009B                     	;# 
  1044  009C                     	;# 
  1045  009D                     	;# 
  1046  009E                     	;# 
  1047  009F                     	;# 
  1048  010C                     	;# 
  1049  010D                     	;# 
  1050  010E                     	;# 
  1051  0111                     	;# 
  1052  0112                     	;# 
  1053  0113                     	;# 
  1054  0114                     	;# 
  1055  0115                     	;# 
  1056  0116                     	;# 
  1057  0117                     	;# 
  1058  0118                     	;# 
  1059  0119                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  018E                     	;# 
  1063  0197                     	;# 
  1064  0199                     	;# 
  1065  0199                     	;# 
  1066  0199                     	;# 
  1067  019A                     	;# 
  1068  019A                     	;# 
  1069  019A                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019C                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019D                     	;# 
  1079  019D                     	;# 
  1080  019D                     	;# 
  1081  019E                     	;# 
  1082  019E                     	;# 
  1083  019E                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  020C                     	;# 
  1090  020D                     	;# 
  1091  020E                     	;# 
  1092  0211                     	;# 
  1093  0211                     	;# 
  1094  0212                     	;# 
  1095  0212                     	;# 
  1096  0213                     	;# 
  1097  0213                     	;# 
  1098  0214                     	;# 
  1099  0214                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0216                     	;# 
  1105  0216                     	;# 
  1106  0217                     	;# 
  1107  0217                     	;# 
  1108  0219                     	;# 
  1109  021A                     	;# 
  1110  021B                     	;# 
  1111  021C                     	;# 
  1112  021D                     	;# 
  1113  021D                     	;# 
  1114  021E                     	;# 
  1115  021F                     	;# 
  1116  028C                     	;# 
  1117  028D                     	;# 
  1118  028E                     	;# 
  1119  0291                     	;# 
  1120  0291                     	;# 
  1121  0292                     	;# 
  1122  0293                     	;# 
  1123  0294                     	;# 
  1124  0295                     	;# 
  1125  0295                     	;# 
  1126  0296                     	;# 
  1127  0297                     	;# 
  1128  0298                     	;# 
  1129  029F                     	;# 
  1130  030C                     	;# 
  1131  030D                     	;# 
  1132  030E                     	;# 
  1133  0311                     	;# 
  1134  0311                     	;# 
  1135  0312                     	;# 
  1136  0313                     	;# 
  1137  0314                     	;# 
  1138  0315                     	;# 
  1139  0315                     	;# 
  1140  0316                     	;# 
  1141  0317                     	;# 
  1142  0318                     	;# 
  1143  038C                     	;# 
  1144  038D                     	;# 
  1145  038E                     	;# 
  1146  0391                     	;# 
  1147  0392                     	;# 
  1148  0393                     	;# 
  1149  0394                     	;# 
  1150  0395                     	;# 
  1151  0396                     	;# 
  1152  0397                     	;# 
  1153  0398                     	;# 
  1154  0399                     	;# 
  1155  039A                     	;# 
  1156  039C                     	;# 
  1157  039D                     	;# 
  1158  039E                     	;# 
  1159  039F                     	;# 
  1160  0411                     	;# 
  1161  0411                     	;# 
  1162  0412                     	;# 
  1163  0413                     	;# 
  1164  0414                     	;# 
  1165  0415                     	;# 
  1166  0416                     	;# 
  1167  0417                     	;# 
  1168  0418                     	;# 
  1169  0418                     	;# 
  1170  0419                     	;# 
  1171  041A                     	;# 
  1172  041B                     	;# 
  1173  041C                     	;# 
  1174  041D                     	;# 
  1175  041E                     	;# 
  1176  041F                     	;# 
  1177  0498                     	;# 
  1178  0498                     	;# 
  1179  0499                     	;# 
  1180  049A                     	;# 
  1181  049B                     	;# 
  1182  049B                     	;# 
  1183  049C                     	;# 
  1184  049D                     	;# 
  1185  049E                     	;# 
  1186  049F                     	;# 
  1187  0617                     	;# 
  1188  0618                     	;# 
  1189  0619                     	;# 
  1190  0619                     	;# 
  1191  061A                     	;# 
  1192  061B                     	;# 
  1193  061C                     	;# 
  1194  061C                     	;# 
  1195  061F                     	;# 
  1196  0691                     	;# 
  1197  0692                     	;# 
  1198  0693                     	;# 
  1199  0694                     	;# 
  1200  0695                     	;# 
  1201  0696                     	;# 
  1202  0697                     	;# 
  1203  0698                     	;# 
  1204  0699                     	;# 
  1205  0711                     	;# 
  1206  0712                     	;# 
  1207  0713                     	;# 
  1208  0714                     	;# 
  1209  0715                     	;# 
  1210  0716                     	;# 
  1211  0717                     	;# 
  1212  0718                     	;# 
  1213  0719                     	;# 
  1214  0891                     	;# 
  1215  0891                     	;# 
  1216  0891                     	;# 
  1217  0891                     	;# 
  1218  0891                     	;# 
  1219  0891                     	;# 
  1220  0892                     	;# 
  1221  0892                     	;# 
  1222  0892                     	;# 
  1223  0893                     	;# 
  1224  0893                     	;# 
  1225  0893                     	;# 
  1226  0893                     	;# 
  1227  0893                     	;# 
  1228  0893                     	;# 
  1229  0894                     	;# 
  1230  0894                     	;# 
  1231  0894                     	;# 
  1232  0895                     	;# 
  1233  0895                     	;# 
  1234  0895                     	;# 
  1235  0896                     	;# 
  1236  0896                     	;# 
  1237  0896                     	;# 
  1238  089B                     	;# 
  1239  0911                     	;# 
  1240  0912                     	;# 
  1241  0913                     	;# 
  1242  0914                     	;# 
  1243  0915                     	;# 
  1244  0916                     	;# 
  1245  0918                     	;# 
  1246  0919                     	;# 
  1247  091A                     	;# 
  1248  091B                     	;# 
  1249  091C                     	;# 
  1250  091D                     	;# 
  1251  091E                     	;# 
  1252  091F                     	;# 
  1253  0E0F                     	;# 
  1254  0E10                     	;# 
  1255  0E11                     	;# 
  1256  0E12                     	;# 
  1257  0E13                     	;# 
  1258  0E14                     	;# 
  1259  0E15                     	;# 
  1260  0E16                     	;# 
  1261  0E17                     	;# 
  1262  0E18                     	;# 
  1263  0E19                     	;# 
  1264  0E1A                     	;# 
  1265  0E1B                     	;# 
  1266  0E1C                     	;# 
  1267  0E1D                     	;# 
  1268  0E1E                     	;# 
  1269  0E1F                     	;# 
  1270  0E20                     	;# 
  1271  0E21                     	;# 
  1272  0E22                     	;# 
  1273  0E24                     	;# 
  1274  0E25                     	;# 
  1275  0E28                     	;# 
  1276  0E29                     	;# 
  1277  0E2A                     	;# 
  1278  0E2B                     	;# 
  1279  0E2C                     	;# 
  1280  0E2D                     	;# 
  1281  0E2E                     	;# 
  1282  0E2F                     	;# 
  1283  0E90                     	;# 
  1284  0E91                     	;# 
  1285  0E92                     	;# 
  1286  0E94                     	;# 
  1287  0E95                     	;# 
  1288  0E9C                     	;# 
  1289  0E9D                     	;# 
  1290  0E9E                     	;# 
  1291  0E9F                     	;# 
  1292  0EA0                     	;# 
  1293  0EA1                     	;# 
  1294  0EA2                     	;# 
  1295  0EA3                     	;# 
  1296  0EA4                     	;# 
  1297  0EA5                     	;# 
  1298  0EA6                     	;# 
  1299  0EA7                     	;# 
  1300  0F0F                     	;# 
  1301  0F10                     	;# 
  1302  0F11                     	;# 
  1303  0F12                     	;# 
  1304  0F13                     	;# 
  1305  0F14                     	;# 
  1306  0F15                     	;# 
  1307  0F16                     	;# 
  1308  0F17                     	;# 
  1309  0F18                     	;# 
  1310  0F19                     	;# 
  1311  0F1A                     	;# 
  1312  0F1B                     	;# 
  1313  0F1C                     	;# 
  1314  0F1D                     	;# 
  1315  0F1E                     	;# 
  1316  0F1F                     	;# 
  1317  0F20                     	;# 
  1318  0F21                     	;# 
  1319  0F22                     	;# 
  1320  0F23                     	;# 
  1321  0F24                     	;# 
  1322  0F25                     	;# 
  1323  0F26                     	;# 
  1324  0F27                     	;# 
  1325  0F28                     	;# 
  1326  0F29                     	;# 
  1327  0F2A                     	;# 
  1328  0F2B                     	;# 
  1329  0F2C                     	;# 
  1330  0F2D                     	;# 
  1331  0F2E                     	;# 
  1332  0F2F                     	;# 
  1333  0F30                     	;# 
  1334  0F31                     	;# 
  1335  0F32                     	;# 
  1336  0F33                     	;# 
  1337  0F34                     	;# 
  1338  0F35                     	;# 
  1339  0F36                     	;# 
  1340  0F37                     	;# 
  1341  0FE4                     	;# 
  1342  0FE5                     	;# 
  1343  0FE6                     	;# 
  1344  0FE7                     	;# 
  1345  0FE8                     	;# 
  1346  0FE9                     	;# 
  1347  0FEA                     	;# 
  1348  0FEB                     	;# 
  1349  0FED                     	;# 
  1350  0FEE                     	;# 
  1351  0FEF                     	;# 
  1352  0000                     	;# 
  1353  0001                     	;# 
  1354  0002                     	;# 
  1355  0003                     	;# 
  1356  0004                     	;# 
  1357  0005                     	;# 
  1358  0006                     	;# 
  1359  0007                     	;# 
  1360  0008                     	;# 
  1361  0009                     	;# 
  1362  000A                     	;# 
  1363  000B                     	;# 
  1364  000C                     	;# 
  1365  000D                     	;# 
  1366  000E                     	;# 
  1367  0010                     	;# 
  1368  0011                     	;# 
  1369  0012                     	;# 
  1370  0013                     	;# 
  1371  0014                     	;# 
  1372  0015                     	;# 
  1373  0015                     	;# 
  1374  0016                     	;# 
  1375  0016                     	;# 
  1376  0017                     	;# 
  1377  0018                     	;# 
  1378  0019                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  001D                     	;# 
  1384  001E                     	;# 
  1385  001F                     	;# 
  1386  008C                     	;# 
  1387  008D                     	;# 
  1388  008E                     	;# 
  1389  0090                     	;# 
  1390  0091                     	;# 
  1391  0092                     	;# 
  1392  0093                     	;# 
  1393  0094                     	;# 
  1394  0097                     	;# 
  1395  009B                     	;# 
  1396  009B                     	;# 
  1397  009C                     	;# 
  1398  009D                     	;# 
  1399  009E                     	;# 
  1400  009F                     	;# 
  1401  010C                     	;# 
  1402  010D                     	;# 
  1403  010E                     	;# 
  1404  0111                     	;# 
  1405  0112                     	;# 
  1406  0113                     	;# 
  1407  0114                     	;# 
  1408  0115                     	;# 
  1409  0116                     	;# 
  1410  0117                     	;# 
  1411  0118                     	;# 
  1412  0119                     	;# 
  1413  018C                     	;# 
  1414  018D                     	;# 
  1415  018E                     	;# 
  1416  0197                     	;# 
  1417  0199                     	;# 
  1418  0199                     	;# 
  1419  0199                     	;# 
  1420  019A                     	;# 
  1421  019A                     	;# 
  1422  019A                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019C                     	;# 
  1429  019C                     	;# 
  1430  019C                     	;# 
  1431  019D                     	;# 
  1432  019D                     	;# 
  1433  019D                     	;# 
  1434  019E                     	;# 
  1435  019E                     	;# 
  1436  019E                     	;# 
  1437  019F                     	;# 
  1438  019F                     	;# 
  1439  019F                     	;# 
  1440  019F                     	;# 
  1441  019F                     	;# 
  1442  020C                     	;# 
  1443  020D                     	;# 
  1444  020E                     	;# 
  1445  0211                     	;# 
  1446  0211                     	;# 
  1447  0212                     	;# 
  1448  0212                     	;# 
  1449  0213                     	;# 
  1450  0213                     	;# 
  1451  0214                     	;# 
  1452  0214                     	;# 
  1453  0215                     	;# 
  1454  0215                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0216                     	;# 
  1458  0216                     	;# 
  1459  0217                     	;# 
  1460  0217                     	;# 
  1461  0219                     	;# 
  1462  021A                     	;# 
  1463  021B                     	;# 
  1464  021C                     	;# 
  1465  021D                     	;# 
  1466  021D                     	;# 
  1467  021E                     	;# 
  1468  021F                     	;# 
  1469  028C                     	;# 
  1470  028D                     	;# 
  1471  028E                     	;# 
  1472  0291                     	;# 
  1473  0291                     	;# 
  1474  0292                     	;# 
  1475  0293                     	;# 
  1476  0294                     	;# 
  1477  0295                     	;# 
  1478  0295                     	;# 
  1479  0296                     	;# 
  1480  0297                     	;# 
  1481  0298                     	;# 
  1482  029F                     	;# 
  1483  030C                     	;# 
  1484  030D                     	;# 
  1485  030E                     	;# 
  1486  0311                     	;# 
  1487  0311                     	;# 
  1488  0312                     	;# 
  1489  0313                     	;# 
  1490  0314                     	;# 
  1491  0315                     	;# 
  1492  0315                     	;# 
  1493  0316                     	;# 
  1494  0317                     	;# 
  1495  0318                     	;# 
  1496  038C                     	;# 
  1497  038D                     	;# 
  1498  038E                     	;# 
  1499  0391                     	;# 
  1500  0392                     	;# 
  1501  0393                     	;# 
  1502  0394                     	;# 
  1503  0395                     	;# 
  1504  0396                     	;# 
  1505  0397                     	;# 
  1506  0398                     	;# 
  1507  0399                     	;# 
  1508  039A                     	;# 
  1509  039C                     	;# 
  1510  039D                     	;# 
  1511  039E                     	;# 
  1512  039F                     	;# 
  1513  0411                     	;# 
  1514  0411                     	;# 
  1515  0412                     	;# 
  1516  0413                     	;# 
  1517  0414                     	;# 
  1518  0415                     	;# 
  1519  0416                     	;# 
  1520  0417                     	;# 
  1521  0418                     	;# 
  1522  0418                     	;# 
  1523  0419                     	;# 
  1524  041A                     	;# 
  1525  041B                     	;# 
  1526  041C                     	;# 
  1527  041D                     	;# 
  1528  041E                     	;# 
  1529  041F                     	;# 
  1530  0498                     	;# 
  1531  0498                     	;# 
  1532  0499                     	;# 
  1533  049A                     	;# 
  1534  049B                     	;# 
  1535  049B                     	;# 
  1536  049C                     	;# 
  1537  049D                     	;# 
  1538  049E                     	;# 
  1539  049F                     	;# 
  1540  0617                     	;# 
  1541  0618                     	;# 
  1542  0619                     	;# 
  1543  0619                     	;# 
  1544  061A                     	;# 
  1545  061B                     	;# 
  1546  061C                     	;# 
  1547  061C                     	;# 
  1548  061F                     	;# 
  1549  0691                     	;# 
  1550  0692                     	;# 
  1551  0693                     	;# 
  1552  0694                     	;# 
  1553  0695                     	;# 
  1554  0696                     	;# 
  1555  0697                     	;# 
  1556  0698                     	;# 
  1557  0699                     	;# 
  1558  0711                     	;# 
  1559  0712                     	;# 
  1560  0713                     	;# 
  1561  0714                     	;# 
  1562  0715                     	;# 
  1563  0716                     	;# 
  1564  0717                     	;# 
  1565  0718                     	;# 
  1566  0719                     	;# 
  1567  0891                     	;# 
  1568  0891                     	;# 
  1569  0891                     	;# 
  1570  0891                     	;# 
  1571  0891                     	;# 
  1572  0891                     	;# 
  1573  0892                     	;# 
  1574  0892                     	;# 
  1575  0892                     	;# 
  1576  0893                     	;# 
  1577  0893                     	;# 
  1578  0893                     	;# 
  1579  0893                     	;# 
  1580  0893                     	;# 
  1581  0893                     	;# 
  1582  0894                     	;# 
  1583  0894                     	;# 
  1584  0894                     	;# 
  1585  0895                     	;# 
  1586  0895                     	;# 
  1587  0895                     	;# 
  1588  0896                     	;# 
  1589  0896                     	;# 
  1590  0896                     	;# 
  1591  089B                     	;# 
  1592  0911                     	;# 
  1593  0912                     	;# 
  1594  0913                     	;# 
  1595  0914                     	;# 
  1596  0915                     	;# 
  1597  0916                     	;# 
  1598  0918                     	;# 
  1599  0919                     	;# 
  1600  091A                     	;# 
  1601  091B                     	;# 
  1602  091C                     	;# 
  1603  091D                     	;# 
  1604  091E                     	;# 
  1605  091F                     	;# 
  1606  0E0F                     	;# 
  1607  0E10                     	;# 
  1608  0E11                     	;# 
  1609  0E12                     	;# 
  1610  0E13                     	;# 
  1611  0E14                     	;# 
  1612  0E15                     	;# 
  1613  0E16                     	;# 
  1614  0E17                     	;# 
  1615  0E18                     	;# 
  1616  0E19                     	;# 
  1617  0E1A                     	;# 
  1618  0E1B                     	;# 
  1619  0E1C                     	;# 
  1620  0E1D                     	;# 
  1621  0E1E                     	;# 
  1622  0E1F                     	;# 
  1623  0E20                     	;# 
  1624  0E21                     	;# 
  1625  0E22                     	;# 
  1626  0E24                     	;# 
  1627  0E25                     	;# 
  1628  0E28                     	;# 
  1629  0E29                     	;# 
  1630  0E2A                     	;# 
  1631  0E2B                     	;# 
  1632  0E2C                     	;# 
  1633  0E2D                     	;# 
  1634  0E2E                     	;# 
  1635  0E2F                     	;# 
  1636  0E90                     	;# 
  1637  0E91                     	;# 
  1638  0E92                     	;# 
  1639  0E94                     	;# 
  1640  0E95                     	;# 
  1641  0E9C                     	;# 
  1642  0E9D                     	;# 
  1643  0E9E                     	;# 
  1644  0E9F                     	;# 
  1645  0EA0                     	;# 
  1646  0EA1                     	;# 
  1647  0EA2                     	;# 
  1648  0EA3                     	;# 
  1649  0EA4                     	;# 
  1650  0EA5                     	;# 
  1651  0EA6                     	;# 
  1652  0EA7                     	;# 
  1653  0F0F                     	;# 
  1654  0F10                     	;# 
  1655  0F11                     	;# 
  1656  0F12                     	;# 
  1657  0F13                     	;# 
  1658  0F14                     	;# 
  1659  0F15                     	;# 
  1660  0F16                     	;# 
  1661  0F17                     	;# 
  1662  0F18                     	;# 
  1663  0F19                     	;# 
  1664  0F1A                     	;# 
  1665  0F1B                     	;# 
  1666  0F1C                     	;# 
  1667  0F1D                     	;# 
  1668  0F1E                     	;# 
  1669  0F1F                     	;# 
  1670  0F20                     	;# 
  1671  0F21                     	;# 
  1672  0F22                     	;# 
  1673  0F23                     	;# 
  1674  0F24                     	;# 
  1675  0F25                     	;# 
  1676  0F26                     	;# 
  1677  0F27                     	;# 
  1678  0F28                     	;# 
  1679  0F29                     	;# 
  1680  0F2A                     	;# 
  1681  0F2B                     	;# 
  1682  0F2C                     	;# 
  1683  0F2D                     	;# 
  1684  0F2E                     	;# 
  1685  0F2F                     	;# 
  1686  0F30                     	;# 
  1687  0F31                     	;# 
  1688  0F32                     	;# 
  1689  0F33                     	;# 
  1690  0F34                     	;# 
  1691  0F35                     	;# 
  1692  0F36                     	;# 
  1693  0F37                     	;# 
  1694  0FE4                     	;# 
  1695  0FE5                     	;# 
  1696  0FE6                     	;# 
  1697  0FE7                     	;# 
  1698  0FE8                     	;# 
  1699  0FE9                     	;# 
  1700  0FEA                     	;# 
  1701  0FEB                     	;# 
  1702  0FED                     	;# 
  1703  0FEE                     	;# 
  1704  0FEF                     	;# 
  1705  0000                     	;# 
  1706  0001                     	;# 
  1707  0002                     	;# 
  1708  0003                     	;# 
  1709  0004                     	;# 
  1710  0005                     	;# 
  1711  0006                     	;# 
  1712  0007                     	;# 
  1713  0008                     	;# 
  1714  0009                     	;# 
  1715  000A                     	;# 
  1716  000B                     	;# 
  1717  000C                     	;# 
  1718  000D                     	;# 
  1719  000E                     	;# 
  1720  0010                     	;# 
  1721  0011                     	;# 
  1722  0012                     	;# 
  1723  0013                     	;# 
  1724  0014                     	;# 
  1725  0015                     	;# 
  1726  0015                     	;# 
  1727  0016                     	;# 
  1728  0016                     	;# 
  1729  0017                     	;# 
  1730  0018                     	;# 
  1731  0019                     	;# 
  1732  0019                     	;# 
  1733  001A                     	;# 
  1734  001B                     	;# 
  1735  001C                     	;# 
  1736  001D                     	;# 
  1737  001E                     	;# 
  1738  001F                     	;# 
  1739  008C                     	;# 
  1740  008D                     	;# 
  1741  008E                     	;# 
  1742  0090                     	;# 
  1743  0091                     	;# 
  1744  0092                     	;# 
  1745  0093                     	;# 
  1746  0094                     	;# 
  1747  0097                     	;# 
  1748  009B                     	;# 
  1749  009B                     	;# 
  1750  009C                     	;# 
  1751  009D                     	;# 
  1752  009E                     	;# 
  1753  009F                     	;# 
  1754  010C                     	;# 
  1755  010D                     	;# 
  1756  010E                     	;# 
  1757  0111                     	;# 
  1758  0112                     	;# 
  1759  0113                     	;# 
  1760  0114                     	;# 
  1761  0115                     	;# 
  1762  0116                     	;# 
  1763  0117                     	;# 
  1764  0118                     	;# 
  1765  0119                     	;# 
  1766  018C                     	;# 
  1767  018D                     	;# 
  1768  018E                     	;# 
  1769  0197                     	;# 
  1770  0199                     	;# 
  1771  0199                     	;# 
  1772  0199                     	;# 
  1773  019A                     	;# 
  1774  019A                     	;# 
  1775  019A                     	;# 
  1776  019B                     	;# 
  1777  019B                     	;# 
  1778  019B                     	;# 
  1779  019B                     	;# 
  1780  019B                     	;# 
  1781  019C                     	;# 
  1782  019C                     	;# 
  1783  019C                     	;# 
  1784  019D                     	;# 
  1785  019D                     	;# 
  1786  019D                     	;# 
  1787  019E                     	;# 
  1788  019E                     	;# 
  1789  019E                     	;# 
  1790  019F                     	;# 
  1791  019F                     	;# 
  1792  019F                     	;# 
  1793  019F                     	;# 
  1794  019F                     	;# 
  1795  020C                     	;# 
  1796  020D                     	;# 
  1797  020E                     	;# 
  1798  0211                     	;# 
  1799  0211                     	;# 
  1800  0212                     	;# 
  1801  0212                     	;# 
  1802  0213                     	;# 
  1803  0213                     	;# 
  1804  0214                     	;# 
  1805  0214                     	;# 
  1806  0215                     	;# 
  1807  0215                     	;# 
  1808  0215                     	;# 
  1809  0215                     	;# 
  1810  0216                     	;# 
  1811  0216                     	;# 
  1812  0217                     	;# 
  1813  0217                     	;# 
  1814  0219                     	;# 
  1815  021A                     	;# 
  1816  021B                     	;# 
  1817  021C                     	;# 
  1818  021D                     	;# 
  1819  021D                     	;# 
  1820  021E                     	;# 
  1821  021F                     	;# 
  1822  028C                     	;# 
  1823  028D                     	;# 
  1824  028E                     	;# 
  1825  0291                     	;# 
  1826  0291                     	;# 
  1827  0292                     	;# 
  1828  0293                     	;# 
  1829  0294                     	;# 
  1830  0295                     	;# 
  1831  0295                     	;# 
  1832  0296                     	;# 
  1833  0297                     	;# 
  1834  0298                     	;# 
  1835  029F                     	;# 
  1836  030C                     	;# 
  1837  030D                     	;# 
  1838  030E                     	;# 
  1839  0311                     	;# 
  1840  0311                     	;# 
  1841  0312                     	;# 
  1842  0313                     	;# 
  1843  0314                     	;# 
  1844  0315                     	;# 
  1845  0315                     	;# 
  1846  0316                     	;# 
  1847  0317                     	;# 
  1848  0318                     	;# 
  1849  038C                     	;# 
  1850  038D                     	;# 
  1851  038E                     	;# 
  1852  0391                     	;# 
  1853  0392                     	;# 
  1854  0393                     	;# 
  1855  0394                     	;# 
  1856  0395                     	;# 
  1857  0396                     	;# 
  1858  0397                     	;# 
  1859  0398                     	;# 
  1860  0399                     	;# 
  1861  039A                     	;# 
  1862  039C                     	;# 
  1863  039D                     	;# 
  1864  039E                     	;# 
  1865  039F                     	;# 
  1866  0411                     	;# 
  1867  0411                     	;# 
  1868  0412                     	;# 
  1869  0413                     	;# 
  1870  0414                     	;# 
  1871  0415                     	;# 
  1872  0416                     	;# 
  1873  0417                     	;# 
  1874  0418                     	;# 
  1875  0418                     	;# 
  1876  0419                     	;# 
  1877  041A                     	;# 
  1878  041B                     	;# 
  1879  041C                     	;# 
  1880  041D                     	;# 
  1881  041E                     	;# 
  1882  041F                     	;# 
  1883  0498                     	;# 
  1884  0498                     	;# 
  1885  0499                     	;# 
  1886  049A                     	;# 
  1887  049B                     	;# 
  1888  049B                     	;# 
  1889  049C                     	;# 
  1890  049D                     	;# 
  1891  049E                     	;# 
  1892  049F                     	;# 
  1893  0617                     	;# 
  1894  0618                     	;# 
  1895  0619                     	;# 
  1896  0619                     	;# 
  1897  061A                     	;# 
  1898  061B                     	;# 
  1899  061C                     	;# 
  1900  061C                     	;# 
  1901  061F                     	;# 
  1902  0691                     	;# 
  1903  0692                     	;# 
  1904  0693                     	;# 
  1905  0694                     	;# 
  1906  0695                     	;# 
  1907  0696                     	;# 
  1908  0697                     	;# 
  1909  0698                     	;# 
  1910  0699                     	;# 
  1911  0711                     	;# 
  1912  0712                     	;# 
  1913  0713                     	;# 
  1914  0714                     	;# 
  1915  0715                     	;# 
  1916  0716                     	;# 
  1917  0717                     	;# 
  1918  0718                     	;# 
  1919  0719                     	;# 
  1920  0891                     	;# 
  1921  0891                     	;# 
  1922  0891                     	;# 
  1923  0891                     	;# 
  1924  0891                     	;# 
  1925  0891                     	;# 
  1926  0892                     	;# 
  1927  0892                     	;# 
  1928  0892                     	;# 
  1929  0893                     	;# 
  1930  0893                     	;# 
  1931  0893                     	;# 
  1932  0893                     	;# 
  1933  0893                     	;# 
  1934  0893                     	;# 
  1935  0894                     	;# 
  1936  0894                     	;# 
  1937  0894                     	;# 
  1938  0895                     	;# 
  1939  0895                     	;# 
  1940  0895                     	;# 
  1941  0896                     	;# 
  1942  0896                     	;# 
  1943  0896                     	;# 
  1944  089B                     	;# 
  1945  0911                     	;# 
  1946  0912                     	;# 
  1947  0913                     	;# 
  1948  0914                     	;# 
  1949  0915                     	;# 
  1950  0916                     	;# 
  1951  0918                     	;# 
  1952  0919                     	;# 
  1953  091A                     	;# 
  1954  091B                     	;# 
  1955  091C                     	;# 
  1956  091D                     	;# 
  1957  091E                     	;# 
  1958  091F                     	;# 
  1959  0E0F                     	;# 
  1960  0E10                     	;# 
  1961  0E11                     	;# 
  1962  0E12                     	;# 
  1963  0E13                     	;# 
  1964  0E14                     	;# 
  1965  0E15                     	;# 
  1966  0E16                     	;# 
  1967  0E17                     	;# 
  1968  0E18                     	;# 
  1969  0E19                     	;# 
  1970  0E1A                     	;# 
  1971  0E1B                     	;# 
  1972  0E1C                     	;# 
  1973  0E1D                     	;# 
  1974  0E1E                     	;# 
  1975  0E1F                     	;# 
  1976  0E20                     	;# 
  1977  0E21                     	;# 
  1978  0E22                     	;# 
  1979  0E24                     	;# 
  1980  0E25                     	;# 
  1981  0E28                     	;# 
  1982  0E29                     	;# 
  1983  0E2A                     	;# 
  1984  0E2B                     	;# 
  1985  0E2C                     	;# 
  1986  0E2D                     	;# 
  1987  0E2E                     	;# 
  1988  0E2F                     	;# 
  1989  0E90                     	;# 
  1990  0E91                     	;# 
  1991  0E92                     	;# 
  1992  0E94                     	;# 
  1993  0E95                     	;# 
  1994  0E9C                     	;# 
  1995  0E9D                     	;# 
  1996  0E9E                     	;# 
  1997  0E9F                     	;# 
  1998  0EA0                     	;# 
  1999  0EA1                     	;# 
  2000  0EA2                     	;# 
  2001  0EA3                     	;# 
  2002  0EA4                     	;# 
  2003  0EA5                     	;# 
  2004  0EA6                     	;# 
  2005  0EA7                     	;# 
  2006  0F0F                     	;# 
  2007  0F10                     	;# 
  2008  0F11                     	;# 
  2009  0F12                     	;# 
  2010  0F13                     	;# 
  2011  0F14                     	;# 
  2012  0F15                     	;# 
  2013  0F16                     	;# 
  2014  0F17                     	;# 
  2015  0F18                     	;# 
  2016  0F19                     	;# 
  2017  0F1A                     	;# 
  2018  0F1B                     	;# 
  2019  0F1C                     	;# 
  2020  0F1D                     	;# 
  2021  0F1E                     	;# 
  2022  0F1F                     	;# 
  2023  0F20                     	;# 
  2024  0F21                     	;# 
  2025  0F22                     	;# 
  2026  0F23                     	;# 
  2027  0F24                     	;# 
  2028  0F25                     	;# 
  2029  0F26                     	;# 
  2030  0F27                     	;# 
  2031  0F28                     	;# 
  2032  0F29                     	;# 
  2033  0F2A                     	;# 
  2034  0F2B                     	;# 
  2035  0F2C                     	;# 
  2036  0F2D                     	;# 
  2037  0F2E                     	;# 
  2038  0F2F                     	;# 
  2039  0F30                     	;# 
  2040  0F31                     	;# 
  2041  0F32                     	;# 
  2042  0F33                     	;# 
  2043  0F34                     	;# 
  2044  0F35                     	;# 
  2045  0F36                     	;# 
  2046  0F37                     	;# 
  2047  0FE4                     	;# 
  2048  0FE5                     	;# 
  2049  0FE6                     	;# 
  2050  0FE7                     	;# 
  2051  0FE8                     	;# 
  2052  0FE9                     	;# 
  2053  0FEA                     	;# 
  2054  0FEB                     	;# 
  2055  0FED                     	;# 
  2056  0FEE                     	;# 
  2057  0FEF                     	;# 
  2058  0000                     	;# 
  2059  0001                     	;# 
  2060  0002                     	;# 
  2061  0003                     	;# 
  2062  0004                     	;# 
  2063  0005                     	;# 
  2064  0006                     	;# 
  2065  0007                     	;# 
  2066  0008                     	;# 
  2067  0009                     	;# 
  2068  000A                     	;# 
  2069  000B                     	;# 
  2070  000C                     	;# 
  2071  000D                     	;# 
  2072  000E                     	;# 
  2073  0010                     	;# 
  2074  0011                     	;# 
  2075  0012                     	;# 
  2076  0013                     	;# 
  2077  0014                     	;# 
  2078  0015                     	;# 
  2079  0015                     	;# 
  2080  0016                     	;# 
  2081  0016                     	;# 
  2082  0017                     	;# 
  2083  0018                     	;# 
  2084  0019                     	;# 
  2085  0019                     	;# 
  2086  001A                     	;# 
  2087  001B                     	;# 
  2088  001C                     	;# 
  2089  001D                     	;# 
  2090  001E                     	;# 
  2091  001F                     	;# 
  2092  008C                     	;# 
  2093  008D                     	;# 
  2094  008E                     	;# 
  2095  0090                     	;# 
  2096  0091                     	;# 
  2097  0092                     	;# 
  2098  0093                     	;# 
  2099  0094                     	;# 
  2100  0097                     	;# 
  2101  009B                     	;# 
  2102  009B                     	;# 
  2103  009C                     	;# 
  2104  009D                     	;# 
  2105  009E                     	;# 
  2106  009F                     	;# 
  2107  010C                     	;# 
  2108  010D                     	;# 
  2109  010E                     	;# 
  2110  0111                     	;# 
  2111  0112                     	;# 
  2112  0113                     	;# 
  2113  0114                     	;# 
  2114  0115                     	;# 
  2115  0116                     	;# 
  2116  0117                     	;# 
  2117  0118                     	;# 
  2118  0119                     	;# 
  2119  018C                     	;# 
  2120  018D                     	;# 
  2121  018E                     	;# 
  2122  0197                     	;# 
  2123  0199                     	;# 
  2124  0199                     	;# 
  2125  0199                     	;# 
  2126  019A                     	;# 
  2127  019A                     	;# 
  2128  019A                     	;# 
  2129  019B                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019B                     	;# 
  2134  019C                     	;# 
  2135  019C                     	;# 
  2136  019C                     	;# 
  2137  019D                     	;# 
  2138  019D                     	;# 
  2139  019D                     	;# 
  2140  019E                     	;# 
  2141  019E                     	;# 
  2142  019E                     	;# 
  2143  019F                     	;# 
  2144  019F                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  019F                     	;# 
  2148  020C                     	;# 
  2149  020D                     	;# 
  2150  020E                     	;# 
  2151  0211                     	;# 
  2152  0211                     	;# 
  2153  0212                     	;# 
  2154  0212                     	;# 
  2155  0213                     	;# 
  2156  0213                     	;# 
  2157  0214                     	;# 
  2158  0214                     	;# 
  2159  0215                     	;# 
  2160  0215                     	;# 
  2161  0215                     	;# 
  2162  0215                     	;# 
  2163  0216                     	;# 
  2164  0216                     	;# 
  2165  0217                     	;# 
  2166  0217                     	;# 
  2167  0219                     	;# 
  2168  021A                     	;# 
  2169  021B                     	;# 
  2170  021C                     	;# 
  2171  021D                     	;# 
  2172  021D                     	;# 
  2173  021E                     	;# 
  2174  021F                     	;# 
  2175  028C                     	;# 
  2176  028D                     	;# 
  2177  028E                     	;# 
  2178  0291                     	;# 
  2179  0291                     	;# 
  2180  0292                     	;# 
  2181  0293                     	;# 
  2182  0294                     	;# 
  2183  0295                     	;# 
  2184  0295                     	;# 
  2185  0296                     	;# 
  2186  0297                     	;# 
  2187  0298                     	;# 
  2188  029F                     	;# 
  2189  030C                     	;# 
  2190  030D                     	;# 
  2191  030E                     	;# 
  2192  0311                     	;# 
  2193  0311                     	;# 
  2194  0312                     	;# 
  2195  0313                     	;# 
  2196  0314                     	;# 
  2197  0315                     	;# 
  2198  0315                     	;# 
  2199  0316                     	;# 
  2200  0317                     	;# 
  2201  0318                     	;# 
  2202  038C                     	;# 
  2203  038D                     	;# 
  2204  038E                     	;# 
  2205  0391                     	;# 
  2206  0392                     	;# 
  2207  0393                     	;# 
  2208  0394                     	;# 
  2209  0395                     	;# 
  2210  0396                     	;# 
  2211  0397                     	;# 
  2212  0398                     	;# 
  2213  0399                     	;# 
  2214  039A                     	;# 
  2215  039C                     	;# 
  2216  039D                     	;# 
  2217  039E                     	;# 
  2218  039F                     	;# 
  2219  0411                     	;# 
  2220  0411                     	;# 
  2221  0412                     	;# 
  2222  0413                     	;# 
  2223  0414                     	;# 
  2224  0415                     	;# 
  2225  0416                     	;# 
  2226  0417                     	;# 
  2227  0418                     	;# 
  2228  0418                     	;# 
  2229  0419                     	;# 
  2230  041A                     	;# 
  2231  041B                     	;# 
  2232  041C                     	;# 
  2233  041D                     	;# 
  2234  041E                     	;# 
  2235  041F                     	;# 
  2236  0498                     	;# 
  2237  0498                     	;# 
  2238  0499                     	;# 
  2239  049A                     	;# 
  2240  049B                     	;# 
  2241  049B                     	;# 
  2242  049C                     	;# 
  2243  049D                     	;# 
  2244  049E                     	;# 
  2245  049F                     	;# 
  2246  0617                     	;# 
  2247  0618                     	;# 
  2248  0619                     	;# 
  2249  0619                     	;# 
  2250  061A                     	;# 
  2251  061B                     	;# 
  2252  061C                     	;# 
  2253  061C                     	;# 
  2254  061F                     	;# 
  2255  0691                     	;# 
  2256  0692                     	;# 
  2257  0693                     	;# 
  2258  0694                     	;# 
  2259  0695                     	;# 
  2260  0696                     	;# 
  2261  0697                     	;# 
  2262  0698                     	;# 
  2263  0699                     	;# 
  2264  0711                     	;# 
  2265  0712                     	;# 
  2266  0713                     	;# 
  2267  0714                     	;# 
  2268  0715                     	;# 
  2269  0716                     	;# 
  2270  0717                     	;# 
  2271  0718                     	;# 
  2272  0719                     	;# 
  2273  0891                     	;# 
  2274  0891                     	;# 
  2275  0891                     	;# 
  2276  0891                     	;# 
  2277  0891                     	;# 
  2278  0891                     	;# 
  2279  0892                     	;# 
  2280  0892                     	;# 
  2281  0892                     	;# 
  2282  0893                     	;# 
  2283  0893                     	;# 
  2284  0893                     	;# 
  2285  0893                     	;# 
  2286  0893                     	;# 
  2287  0893                     	;# 
  2288  0894                     	;# 
  2289  0894                     	;# 
  2290  0894                     	;# 
  2291  0895                     	;# 
  2292  0895                     	;# 
  2293  0895                     	;# 
  2294  0896                     	;# 
  2295  0896                     	;# 
  2296  0896                     	;# 
  2297  089B                     	;# 
  2298  0911                     	;# 
  2299  0912                     	;# 
  2300  0913                     	;# 
  2301  0914                     	;# 
  2302  0915                     	;# 
  2303  0916                     	;# 
  2304  0918                     	;# 
  2305  0919                     	;# 
  2306  091A                     	;# 
  2307  091B                     	;# 
  2308  091C                     	;# 
  2309  091D                     	;# 
  2310  091E                     	;# 
  2311  091F                     	;# 
  2312  0E0F                     	;# 
  2313  0E10                     	;# 
  2314  0E11                     	;# 
  2315  0E12                     	;# 
  2316  0E13                     	;# 
  2317  0E14                     	;# 
  2318  0E15                     	;# 
  2319  0E16                     	;# 
  2320  0E17                     	;# 
  2321  0E18                     	;# 
  2322  0E19                     	;# 
  2323  0E1A                     	;# 
  2324  0E1B                     	;# 
  2325  0E1C                     	;# 
  2326  0E1D                     	;# 
  2327  0E1E                     	;# 
  2328  0E1F                     	;# 
  2329  0E20                     	;# 
  2330  0E21                     	;# 
  2331  0E22                     	;# 
  2332  0E24                     	;# 
  2333  0E25                     	;# 
  2334  0E28                     	;# 
  2335  0E29                     	;# 
  2336  0E2A                     	;# 
  2337  0E2B                     	;# 
  2338  0E2C                     	;# 
  2339  0E2D                     	;# 
  2340  0E2E                     	;# 
  2341  0E2F                     	;# 
  2342  0E90                     	;# 
  2343  0E91                     	;# 
  2344  0E92                     	;# 
  2345  0E94                     	;# 
  2346  0E95                     	;# 
  2347  0E9C                     	;# 
  2348  0E9D                     	;# 
  2349  0E9E                     	;# 
  2350  0E9F                     	;# 
  2351  0EA0                     	;# 
  2352  0EA1                     	;# 
  2353  0EA2                     	;# 
  2354  0EA3                     	;# 
  2355  0EA4                     	;# 
  2356  0EA5                     	;# 
  2357  0EA6                     	;# 
  2358  0EA7                     	;# 
  2359  0F0F                     	;# 
  2360  0F10                     	;# 
  2361  0F11                     	;# 
  2362  0F12                     	;# 
  2363  0F13                     	;# 
  2364  0F14                     	;# 
  2365  0F15                     	;# 
  2366  0F16                     	;# 
  2367  0F17                     	;# 
  2368  0F18                     	;# 
  2369  0F19                     	;# 
  2370  0F1A                     	;# 
  2371  0F1B                     	;# 
  2372  0F1C                     	;# 
  2373  0F1D                     	;# 
  2374  0F1E                     	;# 
  2375  0F1F                     	;# 
  2376  0F20                     	;# 
  2377  0F21                     	;# 
  2378  0F22                     	;# 
  2379  0F23                     	;# 
  2380  0F24                     	;# 
  2381  0F25                     	;# 
  2382  0F26                     	;# 
  2383  0F27                     	;# 
  2384  0F28                     	;# 
  2385  0F29                     	;# 
  2386  0F2A                     	;# 
  2387  0F2B                     	;# 
  2388  0F2C                     	;# 
  2389  0F2D                     	;# 
  2390  0F2E                     	;# 
  2391  0F2F                     	;# 
  2392  0F30                     	;# 
  2393  0F31                     	;# 
  2394  0F32                     	;# 
  2395  0F33                     	;# 
  2396  0F34                     	;# 
  2397  0F35                     	;# 
  2398  0F36                     	;# 
  2399  0F37                     	;# 
  2400  0FE4                     	;# 
  2401  0FE5                     	;# 
  2402  0FE6                     	;# 
  2403  0FE7                     	;# 
  2404  0FE8                     	;# 
  2405  0FE9                     	;# 
  2406  0FEA                     	;# 
  2407  0FEB                     	;# 
  2408  0FED                     	;# 
  2409  0FEE                     	;# 
  2410  0FEF                     	;# 
  2411  0000                     	;# 
  2412  0001                     	;# 
  2413  0002                     	;# 
  2414  0003                     	;# 
  2415  0004                     	;# 
  2416  0005                     	;# 
  2417  0006                     	;# 
  2418  0007                     	;# 
  2419  0008                     	;# 
  2420  0009                     	;# 
  2421  000A                     	;# 
  2422  000B                     	;# 
  2423  000C                     	;# 
  2424  000D                     	;# 
  2425  000E                     	;# 
  2426  0010                     	;# 
  2427  0011                     	;# 
  2428  0012                     	;# 
  2429  0013                     	;# 
  2430  0014                     	;# 
  2431  0015                     	;# 
  2432  0015                     	;# 
  2433  0016                     	;# 
  2434  0016                     	;# 
  2435  0017                     	;# 
  2436  0018                     	;# 
  2437  0019                     	;# 
  2438  0019                     	;# 
  2439  001A                     	;# 
  2440  001B                     	;# 
  2441  001C                     	;# 
  2442  001D                     	;# 
  2443  001E                     	;# 
  2444  001F                     	;# 
  2445  008C                     	;# 
  2446  008D                     	;# 
  2447  008E                     	;# 
  2448  0090                     	;# 
  2449  0091                     	;# 
  2450  0092                     	;# 
  2451  0093                     	;# 
  2452  0094                     	;# 
  2453  0097                     	;# 
  2454  009B                     	;# 
  2455  009B                     	;# 
  2456  009C                     	;# 
  2457  009D                     	;# 
  2458  009E                     	;# 
  2459  009F                     	;# 
  2460  010C                     	;# 
  2461  010D                     	;# 
  2462  010E                     	;# 
  2463  0111                     	;# 
  2464  0112                     	;# 
  2465  0113                     	;# 
  2466  0114                     	;# 
  2467  0115                     	;# 
  2468  0116                     	;# 
  2469  0117                     	;# 
  2470  0118                     	;# 
  2471  0119                     	;# 
  2472  018C                     	;# 
  2473  018D                     	;# 
  2474  018E                     	;# 
  2475  0197                     	;# 
  2476  0199                     	;# 
  2477  0199                     	;# 
  2478  0199                     	;# 
  2479  019A                     	;# 
  2480  019A                     	;# 
  2481  019A                     	;# 
  2482  019B                     	;# 
  2483  019B                     	;# 
  2484  019B                     	;# 
  2485  019B                     	;# 
  2486  019B                     	;# 
  2487  019C                     	;# 
  2488  019C                     	;# 
  2489  019C                     	;# 
  2490  019D                     	;# 
  2491  019D                     	;# 
  2492  019D                     	;# 
  2493  019E                     	;# 
  2494  019E                     	;# 
  2495  019E                     	;# 
  2496  019F                     	;# 
  2497  019F                     	;# 
  2498  019F                     	;# 
  2499  019F                     	;# 
  2500  019F                     	;# 
  2501  020C                     	;# 
  2502  020D                     	;# 
  2503  020E                     	;# 
  2504  0211                     	;# 
  2505  0211                     	;# 
  2506  0212                     	;# 
  2507  0212                     	;# 
  2508  0213                     	;# 
  2509  0213                     	;# 
  2510  0214                     	;# 
  2511  0214                     	;# 
  2512  0215                     	;# 
  2513  0215                     	;# 
  2514  0215                     	;# 
  2515  0215                     	;# 
  2516  0216                     	;# 
  2517  0216                     	;# 
  2518  0217                     	;# 
  2519  0217                     	;# 
  2520  0219                     	;# 
  2521  021A                     	;# 
  2522  021B                     	;# 
  2523  021C                     	;# 
  2524  021D                     	;# 
  2525  021D                     	;# 
  2526  021E                     	;# 
  2527  021F                     	;# 
  2528  028C                     	;# 
  2529  028D                     	;# 
  2530  028E                     	;# 
  2531  0291                     	;# 
  2532  0291                     	;# 
  2533  0292                     	;# 
  2534  0293                     	;# 
  2535  0294                     	;# 
  2536  0295                     	;# 
  2537  0295                     	;# 
  2538  0296                     	;# 
  2539  0297                     	;# 
  2540  0298                     	;# 
  2541  029F                     	;# 
  2542  030C                     	;# 
  2543  030D                     	;# 
  2544  030E                     	;# 
  2545  0311                     	;# 
  2546  0311                     	;# 
  2547  0312                     	;# 
  2548  0313                     	;# 
  2549  0314                     	;# 
  2550  0315                     	;# 
  2551  0315                     	;# 
  2552  0316                     	;# 
  2553  0317                     	;# 
  2554  0318                     	;# 
  2555  038C                     	;# 
  2556  038D                     	;# 
  2557  038E                     	;# 
  2558  0391                     	;# 
  2559  0392                     	;# 
  2560  0393                     	;# 
  2561  0394                     	;# 
  2562  0395                     	;# 
  2563  0396                     	;# 
  2564  0397                     	;# 
  2565  0398                     	;# 
  2566  0399                     	;# 
  2567  039A                     	;# 
  2568  039C                     	;# 
  2569  039D                     	;# 
  2570  039E                     	;# 
  2571  039F                     	;# 
  2572  0411                     	;# 
  2573  0411                     	;# 
  2574  0412                     	;# 
  2575  0413                     	;# 
  2576  0414                     	;# 
  2577  0415                     	;# 
  2578  0416                     	;# 
  2579  0417                     	;# 
  2580  0418                     	;# 
  2581  0418                     	;# 
  2582  0419                     	;# 
  2583  041A                     	;# 
  2584  041B                     	;# 
  2585  041C                     	;# 
  2586  041D                     	;# 
  2587  041E                     	;# 
  2588  041F                     	;# 
  2589  0498                     	;# 
  2590  0498                     	;# 
  2591  0499                     	;# 
  2592  049A                     	;# 
  2593  049B                     	;# 
  2594  049B                     	;# 
  2595  049C                     	;# 
  2596  049D                     	;# 
  2597  049E                     	;# 
  2598  049F                     	;# 
  2599  0617                     	;# 
  2600  0618                     	;# 
  2601  0619                     	;# 
  2602  0619                     	;# 
  2603  061A                     	;# 
  2604  061B                     	;# 
  2605  061C                     	;# 
  2606  061C                     	;# 
  2607  061F                     	;# 
  2608  0691                     	;# 
  2609  0692                     	;# 
  2610  0693                     	;# 
  2611  0694                     	;# 
  2612  0695                     	;# 
  2613  0696                     	;# 
  2614  0697                     	;# 
  2615  0698                     	;# 
  2616  0699                     	;# 
  2617  0711                     	;# 
  2618  0712                     	;# 
  2619  0713                     	;# 
  2620  0714                     	;# 
  2621  0715                     	;# 
  2622  0716                     	;# 
  2623  0717                     	;# 
  2624  0718                     	;# 
  2625  0719                     	;# 
  2626  0891                     	;# 
  2627  0891                     	;# 
  2628  0891                     	;# 
  2629  0891                     	;# 
  2630  0891                     	;# 
  2631  0891                     	;# 
  2632  0892                     	;# 
  2633  0892                     	;# 
  2634  0892                     	;# 
  2635  0893                     	;# 
  2636  0893                     	;# 
  2637  0893                     	;# 
  2638  0893                     	;# 
  2639  0893                     	;# 
  2640  0893                     	;# 
  2641  0894                     	;# 
  2642  0894                     	;# 
  2643  0894                     	;# 
  2644  0895                     	;# 
  2645  0895                     	;# 
  2646  0895                     	;# 
  2647  0896                     	;# 
  2648  0896                     	;# 
  2649  0896                     	;# 
  2650  089B                     	;# 
  2651  0911                     	;# 
  2652  0912                     	;# 
  2653  0913                     	;# 
  2654  0914                     	;# 
  2655  0915                     	;# 
  2656  0916                     	;# 
  2657  0918                     	;# 
  2658  0919                     	;# 
  2659  091A                     	;# 
  2660  091B                     	;# 
  2661  091C                     	;# 
  2662  091D                     	;# 
  2663  091E                     	;# 
  2664  091F                     	;# 
  2665  0E0F                     	;# 
  2666  0E10                     	;# 
  2667  0E11                     	;# 
  2668  0E12                     	;# 
  2669  0E13                     	;# 
  2670  0E14                     	;# 
  2671  0E15                     	;# 
  2672  0E16                     	;# 
  2673  0E17                     	;# 
  2674  0E18                     	;# 
  2675  0E19                     	;# 
  2676  0E1A                     	;# 
  2677  0E1B                     	;# 
  2678  0E1C                     	;# 
  2679  0E1D                     	;# 
  2680  0E1E                     	;# 
  2681  0E1F                     	;# 
  2682  0E20                     	;# 
  2683  0E21                     	;# 
  2684  0E22                     	;# 
  2685  0E24                     	;# 
  2686  0E25                     	;# 
  2687  0E28                     	;# 
  2688  0E29                     	;# 
  2689  0E2A                     	;# 
  2690  0E2B                     	;# 
  2691  0E2C                     	;# 
  2692  0E2D                     	;# 
  2693  0E2E                     	;# 
  2694  0E2F                     	;# 
  2695  0E90                     	;# 
  2696  0E91                     	;# 
  2697  0E92                     	;# 
  2698  0E94                     	;# 
  2699  0E95                     	;# 
  2700  0E9C                     	;# 
  2701  0E9D                     	;# 
  2702  0E9E                     	;# 
  2703  0E9F                     	;# 
  2704  0EA0                     	;# 
  2705  0EA1                     	;# 
  2706  0EA2                     	;# 
  2707  0EA3                     	;# 
  2708  0EA4                     	;# 
  2709  0EA5                     	;# 
  2710  0EA6                     	;# 
  2711  0EA7                     	;# 
  2712  0F0F                     	;# 
  2713  0F10                     	;# 
  2714  0F11                     	;# 
  2715  0F12                     	;# 
  2716  0F13                     	;# 
  2717  0F14                     	;# 
  2718  0F15                     	;# 
  2719  0F16                     	;# 
  2720  0F17                     	;# 
  2721  0F18                     	;# 
  2722  0F19                     	;# 
  2723  0F1A                     	;# 
  2724  0F1B                     	;# 
  2725  0F1C                     	;# 
  2726  0F1D                     	;# 
  2727  0F1E                     	;# 
  2728  0F1F                     	;# 
  2729  0F20                     	;# 
  2730  0F21                     	;# 
  2731  0F22                     	;# 
  2732  0F23                     	;# 
  2733  0F24                     	;# 
  2734  0F25                     	;# 
  2735  0F26                     	;# 
  2736  0F27                     	;# 
  2737  0F28                     	;# 
  2738  0F29                     	;# 
  2739  0F2A                     	;# 
  2740  0F2B                     	;# 
  2741  0F2C                     	;# 
  2742  0F2D                     	;# 
  2743  0F2E                     	;# 
  2744  0F2F                     	;# 
  2745  0F30                     	;# 
  2746  0F31                     	;# 
  2747  0F32                     	;# 
  2748  0F33                     	;# 
  2749  0F34                     	;# 
  2750  0F35                     	;# 
  2751  0F36                     	;# 
  2752  0F37                     	;# 
  2753  0FE4                     	;# 
  2754  0FE5                     	;# 
  2755  0FE6                     	;# 
  2756  0FE7                     	;# 
  2757  0FE8                     	;# 
  2758  0FE9                     	;# 
  2759  0FEA                     	;# 
  2760  0FEB                     	;# 
  2761  0FED                     	;# 
  2762  0FEE                     	;# 
  2763  0FEF                     	;# 
  2764  0000                     	;# 
  2765  0001                     	;# 
  2766  0002                     	;# 
  2767  0003                     	;# 
  2768  0004                     	;# 
  2769  0005                     	;# 
  2770  0006                     	;# 
  2771  0007                     	;# 
  2772  0008                     	;# 
  2773  0009                     	;# 
  2774  000A                     	;# 
  2775  000B                     	;# 
  2776  000C                     	;# 
  2777  000D                     	;# 
  2778  000E                     	;# 
  2779  0010                     	;# 
  2780  0011                     	;# 
  2781  0012                     	;# 
  2782  0013                     	;# 
  2783  0014                     	;# 
  2784  0015                     	;# 
  2785  0015                     	;# 
  2786  0016                     	;# 
  2787  0016                     	;# 
  2788  0017                     	;# 
  2789  0018                     	;# 
  2790  0019                     	;# 
  2791  0019                     	;# 
  2792  001A                     	;# 
  2793  001B                     	;# 
  2794  001C                     	;# 
  2795  001D                     	;# 
  2796  001E                     	;# 
  2797  001F                     	;# 
  2798  008C                     	;# 
  2799  008D                     	;# 
  2800  008E                     	;# 
  2801  0090                     	;# 
  2802  0091                     	;# 
  2803  0092                     	;# 
  2804  0093                     	;# 
  2805  0094                     	;# 
  2806  0097                     	;# 
  2807  009B                     	;# 
  2808  009B                     	;# 
  2809  009C                     	;# 
  2810  009D                     	;# 
  2811  009E                     	;# 
  2812  009F                     	;# 
  2813  010C                     	;# 
  2814  010D                     	;# 
  2815  010E                     	;# 
  2816  0111                     	;# 
  2817  0112                     	;# 
  2818  0113                     	;# 
  2819  0114                     	;# 
  2820  0115                     	;# 
  2821  0116                     	;# 
  2822  0117                     	;# 
  2823  0118                     	;# 
  2824  0119                     	;# 
  2825  018C                     	;# 
  2826  018D                     	;# 
  2827  018E                     	;# 
  2828  0197                     	;# 
  2829  0199                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  019A                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019B                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019C                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019D                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019E                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019F                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  020C                     	;# 
  2855  020D                     	;# 
  2856  020E                     	;# 
  2857  0211                     	;# 
  2858  0211                     	;# 
  2859  0212                     	;# 
  2860  0212                     	;# 
  2861  0213                     	;# 
  2862  0213                     	;# 
  2863  0214                     	;# 
  2864  0214                     	;# 
  2865  0215                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0216                     	;# 
  2870  0216                     	;# 
  2871  0217                     	;# 
  2872  0217                     	;# 
  2873  0219                     	;# 
  2874  021A                     	;# 
  2875  021B                     	;# 
  2876  021C                     	;# 
  2877  021D                     	;# 
  2878  021D                     	;# 
  2879  021E                     	;# 
  2880  021F                     	;# 
  2881  028C                     	;# 
  2882  028D                     	;# 
  2883  028E                     	;# 
  2884  0291                     	;# 
  2885  0291                     	;# 
  2886  0292                     	;# 
  2887  0293                     	;# 
  2888  0294                     	;# 
  2889  0295                     	;# 
  2890  0295                     	;# 
  2891  0296                     	;# 
  2892  0297                     	;# 
  2893  0298                     	;# 
  2894  029F                     	;# 
  2895  030C                     	;# 
  2896  030D                     	;# 
  2897  030E                     	;# 
  2898  0311                     	;# 
  2899  0311                     	;# 
  2900  0312                     	;# 
  2901  0313                     	;# 
  2902  0314                     	;# 
  2903  0315                     	;# 
  2904  0315                     	;# 
  2905  0316                     	;# 
  2906  0317                     	;# 
  2907  0318                     	;# 
  2908  038C                     	;# 
  2909  038D                     	;# 
  2910  038E                     	;# 
  2911  0391                     	;# 
  2912  0392                     	;# 
  2913  0393                     	;# 
  2914  0394                     	;# 
  2915  0395                     	;# 
  2916  0396                     	;# 
  2917  0397                     	;# 
  2918  0398                     	;# 
  2919  0399                     	;# 
  2920  039A                     	;# 
  2921  039C                     	;# 
  2922  039D                     	;# 
  2923  039E                     	;# 
  2924  039F                     	;# 
  2925  0411                     	;# 
  2926  0411                     	;# 
  2927  0412                     	;# 
  2928  0413                     	;# 
  2929  0414                     	;# 
  2930  0415                     	;# 
  2931  0416                     	;# 
  2932  0417                     	;# 
  2933  0418                     	;# 
  2934  0418                     	;# 
  2935  0419                     	;# 
  2936  041A                     	;# 
  2937  041B                     	;# 
  2938  041C                     	;# 
  2939  041D                     	;# 
  2940  041E                     	;# 
  2941  041F                     	;# 
  2942  0498                     	;# 
  2943  0498                     	;# 
  2944  0499                     	;# 
  2945  049A                     	;# 
  2946  049B                     	;# 
  2947  049B                     	;# 
  2948  049C                     	;# 
  2949  049D                     	;# 
  2950  049E                     	;# 
  2951  049F                     	;# 
  2952  0617                     	;# 
  2953  0618                     	;# 
  2954  0619                     	;# 
  2955  0619                     	;# 
  2956  061A                     	;# 
  2957  061B                     	;# 
  2958  061C                     	;# 
  2959  061C                     	;# 
  2960  061F                     	;# 
  2961  0691                     	;# 
  2962  0692                     	;# 
  2963  0693                     	;# 
  2964  0694                     	;# 
  2965  0695                     	;# 
  2966  0696                     	;# 
  2967  0697                     	;# 
  2968  0698                     	;# 
  2969  0699                     	;# 
  2970  0711                     	;# 
  2971  0712                     	;# 
  2972  0713                     	;# 
  2973  0714                     	;# 
  2974  0715                     	;# 
  2975  0716                     	;# 
  2976  0717                     	;# 
  2977  0718                     	;# 
  2978  0719                     	;# 
  2979  0891                     	;# 
  2980  0891                     	;# 
  2981  0891                     	;# 
  2982  0891                     	;# 
  2983  0891                     	;# 
  2984  0891                     	;# 
  2985  0892                     	;# 
  2986  0892                     	;# 
  2987  0892                     	;# 
  2988  0893                     	;# 
  2989  0893                     	;# 
  2990  0893                     	;# 
  2991  0893                     	;# 
  2992  0893                     	;# 
  2993  0893                     	;# 
  2994  0894                     	;# 
  2995  0894                     	;# 
  2996  0894                     	;# 
  2997  0895                     	;# 
  2998  0895                     	;# 
  2999  0895                     	;# 
  3000  0896                     	;# 
  3001  0896                     	;# 
  3002  0896                     	;# 
  3003  089B                     	;# 
  3004  0911                     	;# 
  3005  0912                     	;# 
  3006  0913                     	;# 
  3007  0914                     	;# 
  3008  0915                     	;# 
  3009  0916                     	;# 
  3010  0918                     	;# 
  3011  0919                     	;# 
  3012  091A                     	;# 
  3013  091B                     	;# 
  3014  091C                     	;# 
  3015  091D                     	;# 
  3016  091E                     	;# 
  3017  091F                     	;# 
  3018  0E0F                     	;# 
  3019  0E10                     	;# 
  3020  0E11                     	;# 
  3021  0E12                     	;# 
  3022  0E13                     	;# 
  3023  0E14                     	;# 
  3024  0E15                     	;# 
  3025  0E16                     	;# 
  3026  0E17                     	;# 
  3027  0E18                     	;# 
  3028  0E19                     	;# 
  3029  0E1A                     	;# 
  3030  0E1B                     	;# 
  3031  0E1C                     	;# 
  3032  0E1D                     	;# 
  3033  0E1E                     	;# 
  3034  0E1F                     	;# 
  3035  0E20                     	;# 
  3036  0E21                     	;# 
  3037  0E22                     	;# 
  3038  0E24                     	;# 
  3039  0E25                     	;# 
  3040  0E28                     	;# 
  3041  0E29                     	;# 
  3042  0E2A                     	;# 
  3043  0E2B                     	;# 
  3044  0E2C                     	;# 
  3045  0E2D                     	;# 
  3046  0E2E                     	;# 
  3047  0E2F                     	;# 
  3048  0E90                     	;# 
  3049  0E91                     	;# 
  3050  0E92                     	;# 
  3051  0E94                     	;# 
  3052  0E95                     	;# 
  3053  0E9C                     	;# 
  3054  0E9D                     	;# 
  3055  0E9E                     	;# 
  3056  0E9F                     	;# 
  3057  0EA0                     	;# 
  3058  0EA1                     	;# 
  3059  0EA2                     	;# 
  3060  0EA3                     	;# 
  3061  0EA4                     	;# 
  3062  0EA5                     	;# 
  3063  0EA6                     	;# 
  3064  0EA7                     	;# 
  3065  0F0F                     	;# 
  3066  0F10                     	;# 
  3067  0F11                     	;# 
  3068  0F12                     	;# 
  3069  0F13                     	;# 
  3070  0F14                     	;# 
  3071  0F15                     	;# 
  3072  0F16                     	;# 
  3073  0F17                     	;# 
  3074  0F18                     	;# 
  3075  0F19                     	;# 
  3076  0F1A                     	;# 
  3077  0F1B                     	;# 
  3078  0F1C                     	;# 
  3079  0F1D                     	;# 
  3080  0F1E                     	;# 
  3081  0F1F                     	;# 
  3082  0F20                     	;# 
  3083  0F21                     	;# 
  3084  0F22                     	;# 
  3085  0F23                     	;# 
  3086  0F24                     	;# 
  3087  0F25                     	;# 
  3088  0F26                     	;# 
  3089  0F27                     	;# 
  3090  0F28                     	;# 
  3091  0F29                     	;# 
  3092  0F2A                     	;# 
  3093  0F2B                     	;# 
  3094  0F2C                     	;# 
  3095  0F2D                     	;# 
  3096  0F2E                     	;# 
  3097  0F2F                     	;# 
  3098  0F30                     	;# 
  3099  0F31                     	;# 
  3100  0F32                     	;# 
  3101  0F33                     	;# 
  3102  0F34                     	;# 
  3103  0F35                     	;# 
  3104  0F36                     	;# 
  3105  0F37                     	;# 
  3106  0FE4                     	;# 
  3107  0FE5                     	;# 
  3108  0FE6                     	;# 
  3109  0FE7                     	;# 
  3110  0FE8                     	;# 
  3111  0FE9                     	;# 
  3112  0FEA                     	;# 
  3113  0FEB                     	;# 
  3114  0FED                     	;# 
  3115  0FEE                     	;# 
  3116  0FEF                     	;# 
  3117  0000                     	;# 
  3118  0001                     	;# 
  3119  0002                     	;# 
  3120  0003                     	;# 
  3121  0004                     	;# 
  3122  0005                     	;# 
  3123  0006                     	;# 
  3124  0007                     	;# 
  3125  0008                     	;# 
  3126  0009                     	;# 
  3127  000A                     	;# 
  3128  000B                     	;# 
  3129  000C                     	;# 
  3130  000D                     	;# 
  3131  000E                     	;# 
  3132  0010                     	;# 
  3133  0011                     	;# 
  3134  0012                     	;# 
  3135  0013                     	;# 
  3136  0014                     	;# 
  3137  0015                     	;# 
  3138  0015                     	;# 
  3139  0016                     	;# 
  3140  0016                     	;# 
  3141  0017                     	;# 
  3142  0018                     	;# 
  3143  0019                     	;# 
  3144  0019                     	;# 
  3145  001A                     	;# 
  3146  001B                     	;# 
  3147  001C                     	;# 
  3148  001D                     	;# 
  3149  001E                     	;# 
  3150  001F                     	;# 
  3151  008C                     	;# 
  3152  008D                     	;# 
  3153  008E                     	;# 
  3154  0090                     	;# 
  3155  0091                     	;# 
  3156  0092                     	;# 
  3157  0093                     	;# 
  3158  0094                     	;# 
  3159  0097                     	;# 
  3160  009B                     	;# 
  3161  009B                     	;# 
  3162  009C                     	;# 
  3163  009D                     	;# 
  3164  009E                     	;# 
  3165  009F                     	;# 
  3166  010C                     	;# 
  3167  010D                     	;# 
  3168  010E                     	;# 
  3169  0111                     	;# 
  3170  0112                     	;# 
  3171  0113                     	;# 
  3172  0114                     	;# 
  3173  0115                     	;# 
  3174  0116                     	;# 
  3175  0117                     	;# 
  3176  0118                     	;# 
  3177  0119                     	;# 
  3178  018C                     	;# 
  3179  018D                     	;# 
  3180  018E                     	;# 
  3181  0197                     	;# 
  3182  0199                     	;# 
  3183  0199                     	;# 
  3184  0199                     	;# 
  3185  019A                     	;# 
  3186  019A                     	;# 
  3187  019A                     	;# 
  3188  019B                     	;# 
  3189  019B                     	;# 
  3190  019B                     	;# 
  3191  019B                     	;# 
  3192  019B                     	;# 
  3193  019C                     	;# 
  3194  019C                     	;# 
  3195  019C                     	;# 
  3196  019D                     	;# 
  3197  019D                     	;# 
  3198  019D                     	;# 
  3199  019E                     	;# 
  3200  019E                     	;# 
  3201  019E                     	;# 
  3202  019F                     	;# 
  3203  019F                     	;# 
  3204  019F                     	;# 
  3205  019F                     	;# 
  3206  019F                     	;# 
  3207  020C                     	;# 
  3208  020D                     	;# 
  3209  020E                     	;# 
  3210  0211                     	;# 
  3211  0211                     	;# 
  3212  0212                     	;# 
  3213  0212                     	;# 
  3214  0213                     	;# 
  3215  0213                     	;# 
  3216  0214                     	;# 
  3217  0214                     	;# 
  3218  0215                     	;# 
  3219  0215                     	;# 
  3220  0215                     	;# 
  3221  0215                     	;# 
  3222  0216                     	;# 
  3223  0216                     	;# 
  3224  0217                     	;# 
  3225  0217                     	;# 
  3226  0219                     	;# 
  3227  021A                     	;# 
  3228  021B                     	;# 
  3229  021C                     	;# 
  3230  021D                     	;# 
  3231  021D                     	;# 
  3232  021E                     	;# 
  3233  021F                     	;# 
  3234  028C                     	;# 
  3235  028D                     	;# 
  3236  028E                     	;# 
  3237  0291                     	;# 
  3238  0291                     	;# 
  3239  0292                     	;# 
  3240  0293                     	;# 
  3241  0294                     	;# 
  3242  0295                     	;# 
  3243  0295                     	;# 
  3244  0296                     	;# 
  3245  0297                     	;# 
  3246  0298                     	;# 
  3247  029F                     	;# 
  3248  030C                     	;# 
  3249  030D                     	;# 
  3250  030E                     	;# 
  3251  0311                     	;# 
  3252  0311                     	;# 
  3253  0312                     	;# 
  3254  0313                     	;# 
  3255  0314                     	;# 
  3256  0315                     	;# 
  3257  0315                     	;# 
  3258  0316                     	;# 
  3259  0317                     	;# 
  3260  0318                     	;# 
  3261  038C                     	;# 
  3262  038D                     	;# 
  3263  038E                     	;# 
  3264  0391                     	;# 
  3265  0392                     	;# 
  3266  0393                     	;# 
  3267  0394                     	;# 
  3268  0395                     	;# 
  3269  0396                     	;# 
  3270  0397                     	;# 
  3271  0398                     	;# 
  3272  0399                     	;# 
  3273  039A                     	;# 
  3274  039C                     	;# 
  3275  039D                     	;# 
  3276  039E                     	;# 
  3277  039F                     	;# 
  3278  0411                     	;# 
  3279  0411                     	;# 
  3280  0412                     	;# 
  3281  0413                     	;# 
  3282  0414                     	;# 
  3283  0415                     	;# 
  3284  0416                     	;# 
  3285  0417                     	;# 
  3286  0418                     	;# 
  3287  0418                     	;# 
  3288  0419                     	;# 
  3289  041A                     	;# 
  3290  041B                     	;# 
  3291  041C                     	;# 
  3292  041D                     	;# 
  3293  041E                     	;# 
  3294  041F                     	;# 
  3295  0498                     	;# 
  3296  0498                     	;# 
  3297  0499                     	;# 
  3298  049A                     	;# 
  3299  049B                     	;# 
  3300  049B                     	;# 
  3301  049C                     	;# 
  3302  049D                     	;# 
  3303  049E                     	;# 
  3304  049F                     	;# 
  3305  0617                     	;# 
  3306  0618                     	;# 
  3307  0619                     	;# 
  3308  0619                     	;# 
  3309  061A                     	;# 
  3310  061B                     	;# 
  3311  061C                     	;# 
  3312  061C                     	;# 
  3313  061F                     	;# 
  3314  0691                     	;# 
  3315  0692                     	;# 
  3316  0693                     	;# 
  3317  0694                     	;# 
  3318  0695                     	;# 
  3319  0696                     	;# 
  3320  0697                     	;# 
  3321  0698                     	;# 
  3322  0699                     	;# 
  3323  0711                     	;# 
  3324  0712                     	;# 
  3325  0713                     	;# 
  3326  0714                     	;# 
  3327  0715                     	;# 
  3328  0716                     	;# 
  3329  0717                     	;# 
  3330  0718                     	;# 
  3331  0719                     	;# 
  3332  0891                     	;# 
  3333  0891                     	;# 
  3334  0891                     	;# 
  3335  0891                     	;# 
  3336  0891                     	;# 
  3337  0891                     	;# 
  3338  0892                     	;# 
  3339  0892                     	;# 
  3340  0892                     	;# 
  3341  0893                     	;# 
  3342  0893                     	;# 
  3343  0893                     	;# 
  3344  0893                     	;# 
  3345  0893                     	;# 
  3346  0893                     	;# 
  3347  0894                     	;# 
  3348  0894                     	;# 
  3349  0894                     	;# 
  3350  0895                     	;# 
  3351  0895                     	;# 
  3352  0895                     	;# 
  3353  0896                     	;# 
  3354  0896                     	;# 
  3355  0896                     	;# 
  3356  089B                     	;# 
  3357  0911                     	;# 
  3358  0912                     	;# 
  3359  0913                     	;# 
  3360  0914                     	;# 
  3361  0915                     	;# 
  3362  0916                     	;# 
  3363  0918                     	;# 
  3364  0919                     	;# 
  3365  091A                     	;# 
  3366  091B                     	;# 
  3367  091C                     	;# 
  3368  091D                     	;# 
  3369  091E                     	;# 
  3370  091F                     	;# 
  3371  0E0F                     	;# 
  3372  0E10                     	;# 
  3373  0E11                     	;# 
  3374  0E12                     	;# 
  3375  0E13                     	;# 
  3376  0E14                     	;# 
  3377  0E15                     	;# 
  3378  0E16                     	;# 
  3379  0E17                     	;# 
  3380  0E18                     	;# 
  3381  0E19                     	;# 
  3382  0E1A                     	;# 
  3383  0E1B                     	;# 
  3384  0E1C                     	;# 
  3385  0E1D                     	;# 
  3386  0E1E                     	;# 
  3387  0E1F                     	;# 
  3388  0E20                     	;# 
  3389  0E21                     	;# 
  3390  0E22                     	;# 
  3391  0E24                     	;# 
  3392  0E25                     	;# 
  3393  0E28                     	;# 
  3394  0E29                     	;# 
  3395  0E2A                     	;# 
  3396  0E2B                     	;# 
  3397  0E2C                     	;# 
  3398  0E2D                     	;# 
  3399  0E2E                     	;# 
  3400  0E2F                     	;# 
  3401  0E90                     	;# 
  3402  0E91                     	;# 
  3403  0E92                     	;# 
  3404  0E94                     	;# 
  3405  0E95                     	;# 
  3406  0E9C                     	;# 
  3407  0E9D                     	;# 
  3408  0E9E                     	;# 
  3409  0E9F                     	;# 
  3410  0EA0                     	;# 
  3411  0EA1                     	;# 
  3412  0EA2                     	;# 
  3413  0EA3                     	;# 
  3414  0EA4                     	;# 
  3415  0EA5                     	;# 
  3416  0EA6                     	;# 
  3417  0EA7                     	;# 
  3418  0F0F                     	;# 
  3419  0F10                     	;# 
  3420  0F11                     	;# 
  3421  0F12                     	;# 
  3422  0F13                     	;# 
  3423  0F14                     	;# 
  3424  0F15                     	;# 
  3425  0F16                     	;# 
  3426  0F17                     	;# 
  3427  0F18                     	;# 
  3428  0F19                     	;# 
  3429  0F1A                     	;# 
  3430  0F1B                     	;# 
  3431  0F1C                     	;# 
  3432  0F1D                     	;# 
  3433  0F1E                     	;# 
  3434  0F1F                     	;# 
  3435  0F20                     	;# 
  3436  0F21                     	;# 
  3437  0F22                     	;# 
  3438  0F23                     	;# 
  3439  0F24                     	;# 
  3440  0F25                     	;# 
  3441  0F26                     	;# 
  3442  0F27                     	;# 
  3443  0F28                     	;# 
  3444  0F29                     	;# 
  3445  0F2A                     	;# 
  3446  0F2B                     	;# 
  3447  0F2C                     	;# 
  3448  0F2D                     	;# 
  3449  0F2E                     	;# 
  3450  0F2F                     	;# 
  3451  0F30                     	;# 
  3452  0F31                     	;# 
  3453  0F32                     	;# 
  3454  0F33                     	;# 
  3455  0F34                     	;# 
  3456  0F35                     	;# 
  3457  0F36                     	;# 
  3458  0F37                     	;# 
  3459  0FE4                     	;# 
  3460  0FE5                     	;# 
  3461  0FE6                     	;# 
  3462  0FE7                     	;# 
  3463  0FE8                     	;# 
  3464  0FE9                     	;# 
  3465  0FEA                     	;# 
  3466  0FEB                     	;# 
  3467  0FED                     	;# 
  3468  0FEE                     	;# 
  3469  0FEF                     	;# 
  3470  0000                     	;# 
  3471  0001                     	;# 
  3472  0002                     	;# 
  3473  0003                     	;# 
  3474  0004                     	;# 
  3475  0005                     	;# 
  3476  0006                     	;# 
  3477  0007                     	;# 
  3478  0008                     	;# 
  3479  0009                     	;# 
  3480  000A                     	;# 
  3481  000B                     	;# 
  3482  000C                     	;# 
  3483  000D                     	;# 
  3484  000E                     	;# 
  3485  0010                     	;# 
  3486  0011                     	;# 
  3487  0012                     	;# 
  3488  0013                     	;# 
  3489  0014                     	;# 
  3490  0015                     	;# 
  3491  0015                     	;# 
  3492  0016                     	;# 
  3493  0016                     	;# 
  3494  0017                     	;# 
  3495  0018                     	;# 
  3496  0019                     	;# 
  3497  0019                     	;# 
  3498  001A                     	;# 
  3499  001B                     	;# 
  3500  001C                     	;# 
  3501  001D                     	;# 
  3502  001E                     	;# 
  3503  001F                     	;# 
  3504  008C                     	;# 
  3505  008D                     	;# 
  3506  008E                     	;# 
  3507  0090                     	;# 
  3508  0091                     	;# 
  3509  0092                     	;# 
  3510  0093                     	;# 
  3511  0094                     	;# 
  3512  0097                     	;# 
  3513  009B                     	;# 
  3514  009B                     	;# 
  3515  009C                     	;# 
  3516  009D                     	;# 
  3517  009E                     	;# 
  3518  009F                     	;# 
  3519  010C                     	;# 
  3520  010D                     	;# 
  3521  010E                     	;# 
  3522  0111                     	;# 
  3523  0112                     	;# 
  3524  0113                     	;# 
  3525  0114                     	;# 
  3526  0115                     	;# 
  3527  0116                     	;# 
  3528  0117                     	;# 
  3529  0118                     	;# 
  3530  0119                     	;# 
  3531  018C                     	;# 
  3532  018D                     	;# 
  3533  018E                     	;# 
  3534  0197                     	;# 
  3535  0199                     	;# 
  3536  0199                     	;# 
  3537  0199                     	;# 
  3538  019A                     	;# 
  3539  019A                     	;# 
  3540  019A                     	;# 
  3541  019B                     	;# 
  3542  019B                     	;# 
  3543  019B                     	;# 
  3544  019B                     	;# 
  3545  019B                     	;# 
  3546  019C                     	;# 
  3547  019C                     	;# 
  3548  019C                     	;# 
  3549  019D                     	;# 
  3550  019D                     	;# 
  3551  019D                     	;# 
  3552  019E                     	;# 
  3553  019E                     	;# 
  3554  019E                     	;# 
  3555  019F                     	;# 
  3556  019F                     	;# 
  3557  019F                     	;# 
  3558  019F                     	;# 
  3559  019F                     	;# 
  3560  020C                     	;# 
  3561  020D                     	;# 
  3562  020E                     	;# 
  3563  0211                     	;# 
  3564  0211                     	;# 
  3565  0212                     	;# 
  3566  0212                     	;# 
  3567  0213                     	;# 
  3568  0213                     	;# 
  3569  0214                     	;# 
  3570  0214                     	;# 
  3571  0215                     	;# 
  3572  0215                     	;# 
  3573  0215                     	;# 
  3574  0215                     	;# 
  3575  0216                     	;# 
  3576  0216                     	;# 
  3577  0217                     	;# 
  3578  0217                     	;# 
  3579  0219                     	;# 
  3580  021A                     	;# 
  3581  021B                     	;# 
  3582  021C                     	;# 
  3583  021D                     	;# 
  3584  021D                     	;# 
  3585  021E                     	;# 
  3586  021F                     	;# 
  3587  028C                     	;# 
  3588  028D                     	;# 
  3589  028E                     	;# 
  3590  0291                     	;# 
  3591  0291                     	;# 
  3592  0292                     	;# 
  3593  0293                     	;# 
  3594  0294                     	;# 
  3595  0295                     	;# 
  3596  0295                     	;# 
  3597  0296                     	;# 
  3598  0297                     	;# 
  3599  0298                     	;# 
  3600  029F                     	;# 
  3601  030C                     	;# 
  3602  030D                     	;# 
  3603  030E                     	;# 
  3604  0311                     	;# 
  3605  0311                     	;# 
  3606  0312                     	;# 
  3607  0313                     	;# 
  3608  0314                     	;# 
  3609  0315                     	;# 
  3610  0315                     	;# 
  3611  0316                     	;# 
  3612  0317                     	;# 
  3613  0318                     	;# 
  3614  038C                     	;# 
  3615  038D                     	;# 
  3616  038E                     	;# 
  3617  0391                     	;# 
  3618  0392                     	;# 
  3619  0393                     	;# 
  3620  0394                     	;# 
  3621  0395                     	;# 
  3622  0396                     	;# 
  3623  0397                     	;# 
  3624  0398                     	;# 
  3625  0399                     	;# 
  3626  039A                     	;# 
  3627  039C                     	;# 
  3628  039D                     	;# 
  3629  039E                     	;# 
  3630  039F                     	;# 
  3631  0411                     	;# 
  3632  0411                     	;# 
  3633  0412                     	;# 
  3634  0413                     	;# 
  3635  0414                     	;# 
  3636  0415                     	;# 
  3637  0416                     	;# 
  3638  0417                     	;# 
  3639  0418                     	;# 
  3640  0418                     	;# 
  3641  0419                     	;# 
  3642  041A                     	;# 
  3643  041B                     	;# 
  3644  041C                     	;# 
  3645  041D                     	;# 
  3646  041E                     	;# 
  3647  041F                     	;# 
  3648  0498                     	;# 
  3649  0498                     	;# 
  3650  0499                     	;# 
  3651  049A                     	;# 
  3652  049B                     	;# 
  3653  049B                     	;# 
  3654  049C                     	;# 
  3655  049D                     	;# 
  3656  049E                     	;# 
  3657  049F                     	;# 
  3658  0617                     	;# 
  3659  0618                     	;# 
  3660  0619                     	;# 
  3661  0619                     	;# 
  3662  061A                     	;# 
  3663  061B                     	;# 
  3664  061C                     	;# 
  3665  061C                     	;# 
  3666  061F                     	;# 
  3667  0691                     	;# 
  3668  0692                     	;# 
  3669  0693                     	;# 
  3670  0694                     	;# 
  3671  0695                     	;# 
  3672  0696                     	;# 
  3673  0697                     	;# 
  3674  0698                     	;# 
  3675  0699                     	;# 
  3676  0711                     	;# 
  3677  0712                     	;# 
  3678  0713                     	;# 
  3679  0714                     	;# 
  3680  0715                     	;# 
  3681  0716                     	;# 
  3682  0717                     	;# 
  3683  0718                     	;# 
  3684  0719                     	;# 
  3685  0891                     	;# 
  3686  0891                     	;# 
  3687  0891                     	;# 
  3688  0891                     	;# 
  3689  0891                     	;# 
  3690  0891                     	;# 
  3691  0892                     	;# 
  3692  0892                     	;# 
  3693  0892                     	;# 
  3694  0893                     	;# 
  3695  0893                     	;# 
  3696  0893                     	;# 
  3697  0893                     	;# 
  3698  0893                     	;# 
  3699  0893                     	;# 
  3700  0894                     	;# 
  3701  0894                     	;# 
  3702  0894                     	;# 
  3703  0895                     	;# 
  3704  0895                     	;# 
  3705  0895                     	;# 
  3706  0896                     	;# 
  3707  0896                     	;# 
  3708  0896                     	;# 
  3709  089B                     	;# 
  3710  0911                     	;# 
  3711  0912                     	;# 
  3712  0913                     	;# 
  3713  0914                     	;# 
  3714  0915                     	;# 
  3715  0916                     	;# 
  3716  0918                     	;# 
  3717  0919                     	;# 
  3718  091A                     	;# 
  3719  091B                     	;# 
  3720  091C                     	;# 
  3721  091D                     	;# 
  3722  091E                     	;# 
  3723  091F                     	;# 
  3724  0E0F                     	;# 
  3725  0E10                     	;# 
  3726  0E11                     	;# 
  3727  0E12                     	;# 
  3728  0E13                     	;# 
  3729  0E14                     	;# 
  3730  0E15                     	;# 
  3731  0E16                     	;# 
  3732  0E17                     	;# 
  3733  0E18                     	;# 
  3734  0E19                     	;# 
  3735  0E1A                     	;# 
  3736  0E1B                     	;# 
  3737  0E1C                     	;# 
  3738  0E1D                     	;# 
  3739  0E1E                     	;# 
  3740  0E1F                     	;# 
  3741  0E20                     	;# 
  3742  0E21                     	;# 
  3743  0E22                     	;# 
  3744  0E24                     	;# 
  3745  0E25                     	;# 
  3746  0E28                     	;# 
  3747  0E29                     	;# 
  3748  0E2A                     	;# 
  3749  0E2B                     	;# 
  3750  0E2C                     	;# 
  3751  0E2D                     	;# 
  3752  0E2E                     	;# 
  3753  0E2F                     	;# 
  3754  0E90                     	;# 
  3755  0E91                     	;# 
  3756  0E92                     	;# 
  3757  0E94                     	;# 
  3758  0E95                     	;# 
  3759  0E9C                     	;# 
  3760  0E9D                     	;# 
  3761  0E9E                     	;# 
  3762  0E9F                     	;# 
  3763  0EA0                     	;# 
  3764  0EA1                     	;# 
  3765  0EA2                     	;# 
  3766  0EA3                     	;# 
  3767  0EA4                     	;# 
  3768  0EA5                     	;# 
  3769  0EA6                     	;# 
  3770  0EA7                     	;# 
  3771  0F0F                     	;# 
  3772  0F10                     	;# 
  3773  0F11                     	;# 
  3774  0F12                     	;# 
  3775  0F13                     	;# 
  3776  0F14                     	;# 
  3777  0F15                     	;# 
  3778  0F16                     	;# 
  3779  0F17                     	;# 
  3780  0F18                     	;# 
  3781  0F19                     	;# 
  3782  0F1A                     	;# 
  3783  0F1B                     	;# 
  3784  0F1C                     	;# 
  3785  0F1D                     	;# 
  3786  0F1E                     	;# 
  3787  0F1F                     	;# 
  3788  0F20                     	;# 
  3789  0F21                     	;# 
  3790  0F22                     	;# 
  3791  0F23                     	;# 
  3792  0F24                     	;# 
  3793  0F25                     	;# 
  3794  0F26                     	;# 
  3795  0F27                     	;# 
  3796  0F28                     	;# 
  3797  0F29                     	;# 
  3798  0F2A                     	;# 
  3799  0F2B                     	;# 
  3800  0F2C                     	;# 
  3801  0F2D                     	;# 
  3802  0F2E                     	;# 
  3803  0F2F                     	;# 
  3804  0F30                     	;# 
  3805  0F31                     	;# 
  3806  0F32                     	;# 
  3807  0F33                     	;# 
  3808  0F34                     	;# 
  3809  0F35                     	;# 
  3810  0F36                     	;# 
  3811  0F37                     	;# 
  3812  0FE4                     	;# 
  3813  0FE5                     	;# 
  3814  0FE6                     	;# 
  3815  0FE7                     	;# 
  3816  0FE8                     	;# 
  3817  0FE9                     	;# 
  3818  0FEA                     	;# 
  3819  0FEB                     	;# 
  3820  0FED                     	;# 
  3821  0FEE                     	;# 
  3822  0FEF                     	;# 
  3823  0000                     	;# 
  3824  0001                     	;# 
  3825  0002                     	;# 
  3826  0003                     	;# 
  3827  0004                     	;# 
  3828  0005                     	;# 
  3829  0006                     	;# 
  3830  0007                     	;# 
  3831  0008                     	;# 
  3832  0009                     	;# 
  3833  000A                     	;# 
  3834  000B                     	;# 
  3835  000C                     	;# 
  3836  000D                     	;# 
  3837  000E                     	;# 
  3838  0010                     	;# 
  3839  0011                     	;# 
  3840  0012                     	;# 
  3841  0013                     	;# 
  3842  0014                     	;# 
  3843  0015                     	;# 
  3844  0015                     	;# 
  3845  0016                     	;# 
  3846  0016                     	;# 
  3847  0017                     	;# 
  3848  0018                     	;# 
  3849  0019                     	;# 
  3850  0019                     	;# 
  3851  001A                     	;# 
  3852  001B                     	;# 
  3853  001C                     	;# 
  3854  001D                     	;# 
  3855  001E                     	;# 
  3856  001F                     	;# 
  3857  008C                     	;# 
  3858  008D                     	;# 
  3859  008E                     	;# 
  3860  0090                     	;# 
  3861  0091                     	;# 
  3862  0092                     	;# 
  3863  0093                     	;# 
  3864  0094                     	;# 
  3865  0097                     	;# 
  3866  009B                     	;# 
  3867  009B                     	;# 
  3868  009C                     	;# 
  3869  009D                     	;# 
  3870  009E                     	;# 
  3871  009F                     	;# 
  3872  010C                     	;# 
  3873  010D                     	;# 
  3874  010E                     	;# 
  3875  0111                     	;# 
  3876  0112                     	;# 
  3877  0113                     	;# 
  3878  0114                     	;# 
  3879  0115                     	;# 
  3880  0116                     	;# 
  3881  0117                     	;# 
  3882  0118                     	;# 
  3883  0119                     	;# 
  3884  018C                     	;# 
  3885  018D                     	;# 
  3886  018E                     	;# 
  3887  0197                     	;# 
  3888  0199                     	;# 
  3889  0199                     	;# 
  3890  0199                     	;# 
  3891  019A                     	;# 
  3892  019A                     	;# 
  3893  019A                     	;# 
  3894  019B                     	;# 
  3895  019B                     	;# 
  3896  019B                     	;# 
  3897  019B                     	;# 
  3898  019B                     	;# 
  3899  019C                     	;# 
  3900  019C                     	;# 
  3901  019C                     	;# 
  3902  019D                     	;# 
  3903  019D                     	;# 
  3904  019D                     	;# 
  3905  019E                     	;# 
  3906  019E                     	;# 
  3907  019E                     	;# 
  3908  019F                     	;# 
  3909  019F                     	;# 
  3910  019F                     	;# 
  3911  019F                     	;# 
  3912  019F                     	;# 
  3913  020C                     	;# 
  3914  020D                     	;# 
  3915  020E                     	;# 
  3916  0211                     	;# 
  3917  0211                     	;# 
  3918  0212                     	;# 
  3919  0212                     	;# 
  3920  0213                     	;# 
  3921  0213                     	;# 
  3922  0214                     	;# 
  3923  0214                     	;# 
  3924  0215                     	;# 
  3925  0215                     	;# 
  3926  0215                     	;# 
  3927  0215                     	;# 
  3928  0216                     	;# 
  3929  0216                     	;# 
  3930  0217                     	;# 
  3931  0217                     	;# 
  3932  0219                     	;# 
  3933  021A                     	;# 
  3934  021B                     	;# 
  3935  021C                     	;# 
  3936  021D                     	;# 
  3937  021D                     	;# 
  3938  021E                     	;# 
  3939  021F                     	;# 
  3940  028C                     	;# 
  3941  028D                     	;# 
  3942  028E                     	;# 
  3943  0291                     	;# 
  3944  0291                     	;# 
  3945  0292                     	;# 
  3946  0293                     	;# 
  3947  0294                     	;# 
  3948  0295                     	;# 
  3949  0295                     	;# 
  3950  0296                     	;# 
  3951  0297                     	;# 
  3952  0298                     	;# 
  3953  029F                     	;# 
  3954  030C                     	;# 
  3955  030D                     	;# 
  3956  030E                     	;# 
  3957  0311                     	;# 
  3958  0311                     	;# 
  3959  0312                     	;# 
  3960  0313                     	;# 
  3961  0314                     	;# 
  3962  0315                     	;# 
  3963  0315                     	;# 
  3964  0316                     	;# 
  3965  0317                     	;# 
  3966  0318                     	;# 
  3967  038C                     	;# 
  3968  038D                     	;# 
  3969  038E                     	;# 
  3970  0391                     	;# 
  3971  0392                     	;# 
  3972  0393                     	;# 
  3973  0394                     	;# 
  3974  0395                     	;# 
  3975  0396                     	;# 
  3976  0397                     	;# 
  3977  0398                     	;# 
  3978  0399                     	;# 
  3979  039A                     	;# 
  3980  039C                     	;# 
  3981  039D                     	;# 
  3982  039E                     	;# 
  3983  039F                     	;# 
  3984  0411                     	;# 
  3985  0411                     	;# 
  3986  0412                     	;# 
  3987  0413                     	;# 
  3988  0414                     	;# 
  3989  0415                     	;# 
  3990  0416                     	;# 
  3991  0417                     	;# 
  3992  0418                     	;# 
  3993  0418                     	;# 
  3994  0419                     	;# 
  3995  041A                     	;# 
  3996  041B                     	;# 
  3997  041C                     	;# 
  3998  041D                     	;# 
  3999  041E                     	;# 
  4000  041F                     	;# 
  4001  0498                     	;# 
  4002  0498                     	;# 
  4003  0499                     	;# 
  4004  049A                     	;# 
  4005  049B                     	;# 
  4006  049B                     	;# 
  4007  049C                     	;# 
  4008  049D                     	;# 
  4009  049E                     	;# 
  4010  049F                     	;# 
  4011  0617                     	;# 
  4012  0618                     	;# 
  4013  0619                     	;# 
  4014  0619                     	;# 
  4015  061A                     	;# 
  4016  061B                     	;# 
  4017  061C                     	;# 
  4018  061C                     	;# 
  4019  061F                     	;# 
  4020  0691                     	;# 
  4021  0692                     	;# 
  4022  0693                     	;# 
  4023  0694                     	;# 
  4024  0695                     	;# 
  4025  0696                     	;# 
  4026  0697                     	;# 
  4027  0698                     	;# 
  4028  0699                     	;# 
  4029  0711                     	;# 
  4030  0712                     	;# 
  4031  0713                     	;# 
  4032  0714                     	;# 
  4033  0715                     	;# 
  4034  0716                     	;# 
  4035  0717                     	;# 
  4036  0718                     	;# 
  4037  0719                     	;# 
  4038  0891                     	;# 
  4039  0891                     	;# 
  4040  0891                     	;# 
  4041  0891                     	;# 
  4042  0891                     	;# 
  4043  0891                     	;# 
  4044  0892                     	;# 
  4045  0892                     	;# 
  4046  0892                     	;# 
  4047  0893                     	;# 
  4048  0893                     	;# 
  4049  0893                     	;# 
  4050  0893                     	;# 
  4051  0893                     	;# 
  4052  0893                     	;# 
  4053  0894                     	;# 
  4054  0894                     	;# 
  4055  0894                     	;# 
  4056  0895                     	;# 
  4057  0895                     	;# 
  4058  0895                     	;# 
  4059  0896                     	;# 
  4060  0896                     	;# 
  4061  0896                     	;# 
  4062  089B                     	;# 
  4063  0911                     	;# 
  4064  0912                     	;# 
  4065  0913                     	;# 
  4066  0914                     	;# 
  4067  0915                     	;# 
  4068  0916                     	;# 
  4069  0918                     	;# 
  4070  0919                     	;# 
  4071  091A                     	;# 
  4072  091B                     	;# 
  4073  091C                     	;# 
  4074  091D                     	;# 
  4075  091E                     	;# 
  4076  091F                     	;# 
  4077  0E0F                     	;# 
  4078  0E10                     	;# 
  4079  0E11                     	;# 
  4080  0E12                     	;# 
  4081  0E13                     	;# 
  4082  0E14                     	;# 
  4083  0E15                     	;# 
  4084  0E16                     	;# 
  4085  0E17                     	;# 
  4086  0E18                     	;# 
  4087  0E19                     	;# 
  4088  0E1A                     	;# 
  4089  0E1B                     	;# 
  4090  0E1C                     	;# 
  4091  0E1D                     	;# 
  4092  0E1E                     	;# 
  4093  0E1F                     	;# 
  4094  0E20                     	;# 
  4095  0E21                     	;# 
  4096  0E22                     	;# 
  4097  0E24                     	;# 
  4098  0E25                     	;# 
  4099  0E28                     	;# 
  4100  0E29                     	;# 
  4101  0E2A                     	;# 
  4102  0E2B                     	;# 
  4103  0E2C                     	;# 
  4104  0E2D                     	;# 
  4105  0E2E                     	;# 
  4106  0E2F                     	;# 
  4107  0E90                     	;# 
  4108  0E91                     	;# 
  4109  0E92                     	;# 
  4110  0E94                     	;# 
  4111  0E95                     	;# 
  4112  0E9C                     	;# 
  4113  0E9D                     	;# 
  4114  0E9E                     	;# 
  4115  0E9F                     	;# 
  4116  0EA0                     	;# 
  4117  0EA1                     	;# 
  4118  0EA2                     	;# 
  4119  0EA3                     	;# 
  4120  0EA4                     	;# 
  4121  0EA5                     	;# 
  4122  0EA6                     	;# 
  4123  0EA7                     	;# 
  4124  0F0F                     	;# 
  4125  0F10                     	;# 
  4126  0F11                     	;# 
  4127  0F12                     	;# 
  4128  0F13                     	;# 
  4129  0F14                     	;# 
  4130  0F15                     	;# 
  4131  0F16                     	;# 
  4132  0F17                     	;# 
  4133  0F18                     	;# 
  4134  0F19                     	;# 
  4135  0F1A                     	;# 
  4136  0F1B                     	;# 
  4137  0F1C                     	;# 
  4138  0F1D                     	;# 
  4139  0F1E                     	;# 
  4140  0F1F                     	;# 
  4141  0F20                     	;# 
  4142  0F21                     	;# 
  4143  0F22                     	;# 
  4144  0F23                     	;# 
  4145  0F24                     	;# 
  4146  0F25                     	;# 
  4147  0F26                     	;# 
  4148  0F27                     	;# 
  4149  0F28                     	;# 
  4150  0F29                     	;# 
  4151  0F2A                     	;# 
  4152  0F2B                     	;# 
  4153  0F2C                     	;# 
  4154  0F2D                     	;# 
  4155  0F2E                     	;# 
  4156  0F2F                     	;# 
  4157  0F30                     	;# 
  4158  0F31                     	;# 
  4159  0F32                     	;# 
  4160  0F33                     	;# 
  4161  0F34                     	;# 
  4162  0F35                     	;# 
  4163  0F36                     	;# 
  4164  0F37                     	;# 
  4165  0FE4                     	;# 
  4166  0FE5                     	;# 
  4167  0FE6                     	;# 
  4168  0FE7                     	;# 
  4169  0FE8                     	;# 
  4170  0FE9                     	;# 
  4171  0FEA                     	;# 
  4172  0FEB                     	;# 
  4173  0FED                     	;# 
  4174  0FEE                     	;# 
  4175  0FEF                     	;# 
  4176  0000                     	;# 
  4177  0001                     	;# 
  4178  0002                     	;# 
  4179  0003                     	;# 
  4180  0004                     	;# 
  4181  0005                     	;# 
  4182  0006                     	;# 
  4183  0007                     	;# 
  4184  0008                     	;# 
  4185  0009                     	;# 
  4186  000A                     	;# 
  4187  000B                     	;# 
  4188  000C                     	;# 
  4189  000D                     	;# 
  4190  000E                     	;# 
  4191  0010                     	;# 
  4192  0011                     	;# 
  4193  0012                     	;# 
  4194  0013                     	;# 
  4195  0014                     	;# 
  4196  0015                     	;# 
  4197  0015                     	;# 
  4198  0016                     	;# 
  4199  0016                     	;# 
  4200  0017                     	;# 
  4201  0018                     	;# 
  4202  0019                     	;# 
  4203  0019                     	;# 
  4204  001A                     	;# 
  4205  001B                     	;# 
  4206  001C                     	;# 
  4207  001D                     	;# 
  4208  001E                     	;# 
  4209  001F                     	;# 
  4210  008C                     	;# 
  4211  008D                     	;# 
  4212  008E                     	;# 
  4213  0090                     	;# 
  4214  0091                     	;# 
  4215  0092                     	;# 
  4216  0093                     	;# 
  4217  0094                     	;# 
  4218  0097                     	;# 
  4219  009B                     	;# 
  4220  009B                     	;# 
  4221  009C                     	;# 
  4222  009D                     	;# 
  4223  009E                     	;# 
  4224  009F                     	;# 
  4225  010C                     	;# 
  4226  010D                     	;# 
  4227  010E                     	;# 
  4228  0111                     	;# 
  4229  0112                     	;# 
  4230  0113                     	;# 
  4231  0114                     	;# 
  4232  0115                     	;# 
  4233  0116                     	;# 
  4234  0117                     	;# 
  4235  0118                     	;# 
  4236  0119                     	;# 
  4237  018C                     	;# 
  4238  018D                     	;# 
  4239  018E                     	;# 
  4240  0197                     	;# 
  4241  0199                     	;# 
  4242  0199                     	;# 
  4243  0199                     	;# 
  4244  019A                     	;# 
  4245  019A                     	;# 
  4246  019A                     	;# 
  4247  019B                     	;# 
  4248  019B                     	;# 
  4249  019B                     	;# 
  4250  019B                     	;# 
  4251  019B                     	;# 
  4252  019C                     	;# 
  4253  019C                     	;# 
  4254  019C                     	;# 
  4255  019D                     	;# 
  4256  019D                     	;# 
  4257  019D                     	;# 
  4258  019E                     	;# 
  4259  019E                     	;# 
  4260  019E                     	;# 
  4261  019F                     	;# 
  4262  019F                     	;# 
  4263  019F                     	;# 
  4264  019F                     	;# 
  4265  019F                     	;# 
  4266  020C                     	;# 
  4267  020D                     	;# 
  4268  020E                     	;# 
  4269  0211                     	;# 
  4270  0211                     	;# 
  4271  0212                     	;# 
  4272  0212                     	;# 
  4273  0213                     	;# 
  4274  0213                     	;# 
  4275  0214                     	;# 
  4276  0214                     	;# 
  4277  0215                     	;# 
  4278  0215                     	;# 
  4279  0215                     	;# 
  4280  0215                     	;# 
  4281  0216                     	;# 
  4282  0216                     	;# 
  4283  0217                     	;# 
  4284  0217                     	;# 
  4285  0219                     	;# 
  4286  021A                     	;# 
  4287  021B                     	;# 
  4288  021C                     	;# 
  4289  021D                     	;# 
  4290  021D                     	;# 
  4291  021E                     	;# 
  4292  021F                     	;# 
  4293  028C                     	;# 
  4294  028D                     	;# 
  4295  028E                     	;# 
  4296  0291                     	;# 
  4297  0291                     	;# 
  4298  0292                     	;# 
  4299  0293                     	;# 
  4300  0294                     	;# 
  4301  0295                     	;# 
  4302  0295                     	;# 
  4303  0296                     	;# 
  4304  0297                     	;# 
  4305  0298                     	;# 
  4306  029F                     	;# 
  4307  030C                     	;# 
  4308  030D                     	;# 
  4309  030E                     	;# 
  4310  0311                     	;# 
  4311  0311                     	;# 
  4312  0312                     	;# 
  4313  0313                     	;# 
  4314  0314                     	;# 
  4315  0315                     	;# 
  4316  0315                     	;# 
  4317  0316                     	;# 
  4318  0317                     	;# 
  4319  0318                     	;# 
  4320  038C                     	;# 
  4321  038D                     	;# 
  4322  038E                     	;# 
  4323  0391                     	;# 
  4324  0392                     	;# 
  4325  0393                     	;# 
  4326  0394                     	;# 
  4327  0395                     	;# 
  4328  0396                     	;# 
  4329  0397                     	;# 
  4330  0398                     	;# 
  4331  0399                     	;# 
  4332  039A                     	;# 
  4333  039C                     	;# 
  4334  039D                     	;# 
  4335  039E                     	;# 
  4336  039F                     	;# 
  4337  0411                     	;# 
  4338  0411                     	;# 
  4339  0412                     	;# 
  4340  0413                     	;# 
  4341  0414                     	;# 
  4342  0415                     	;# 
  4343  0416                     	;# 
  4344  0417                     	;# 
  4345  0418                     	;# 
  4346  0418                     	;# 
  4347  0419                     	;# 
  4348  041A                     	;# 
  4349  041B                     	;# 
  4350  041C                     	;# 
  4351  041D                     	;# 
  4352  041E                     	;# 
  4353  041F                     	;# 
  4354  0498                     	;# 
  4355  0498                     	;# 
  4356  0499                     	;# 
  4357  049A                     	;# 
  4358  049B                     	;# 
  4359  049B                     	;# 
  4360  049C                     	;# 
  4361  049D                     	;# 
  4362  049E                     	;# 
  4363  049F                     	;# 
  4364  0617                     	;# 
  4365  0618                     	;# 
  4366  0619                     	;# 
  4367  0619                     	;# 
  4368  061A                     	;# 
  4369  061B                     	;# 
  4370  061C                     	;# 
  4371  061C                     	;# 
  4372  061F                     	;# 
  4373  0691                     	;# 
  4374  0692                     	;# 
  4375  0693                     	;# 
  4376  0694                     	;# 
  4377  0695                     	;# 
  4378  0696                     	;# 
  4379  0697                     	;# 
  4380  0698                     	;# 
  4381  0699                     	;# 
  4382  0711                     	;# 
  4383  0712                     	;# 
  4384  0713                     	;# 
  4385  0714                     	;# 
  4386  0715                     	;# 
  4387  0716                     	;# 
  4388  0717                     	;# 
  4389  0718                     	;# 
  4390  0719                     	;# 
  4391  0891                     	;# 
  4392  0891                     	;# 
  4393  0891                     	;# 
  4394  0891                     	;# 
  4395  0891                     	;# 
  4396  0891                     	;# 
  4397  0892                     	;# 
  4398  0892                     	;# 
  4399  0892                     	;# 
  4400  0893                     	;# 
  4401  0893                     	;# 
  4402  0893                     	;# 
  4403  0893                     	;# 
  4404  0893                     	;# 
  4405  0893                     	;# 
  4406  0894                     	;# 
  4407  0894                     	;# 
  4408  0894                     	;# 
  4409  0895                     	;# 
  4410  0895                     	;# 
  4411  0895                     	;# 
  4412  0896                     	;# 
  4413  0896                     	;# 
  4414  0896                     	;# 
  4415  089B                     	;# 
  4416  0911                     	;# 
  4417  0912                     	;# 
  4418  0913                     	;# 
  4419  0914                     	;# 
  4420  0915                     	;# 
  4421  0916                     	;# 
  4422  0918                     	;# 
  4423  0919                     	;# 
  4424  091A                     	;# 
  4425  091B                     	;# 
  4426  091C                     	;# 
  4427  091D                     	;# 
  4428  091E                     	;# 
  4429  091F                     	;# 
  4430  0E0F                     	;# 
  4431  0E10                     	;# 
  4432  0E11                     	;# 
  4433  0E12                     	;# 
  4434  0E13                     	;# 
  4435  0E14                     	;# 
  4436  0E15                     	;# 
  4437  0E16                     	;# 
  4438  0E17                     	;# 
  4439  0E18                     	;# 
  4440  0E19                     	;# 
  4441  0E1A                     	;# 
  4442  0E1B                     	;# 
  4443  0E1C                     	;# 
  4444  0E1D                     	;# 
  4445  0E1E                     	;# 
  4446  0E1F                     	;# 
  4447  0E20                     	;# 
  4448  0E21                     	;# 
  4449  0E22                     	;# 
  4450  0E24                     	;# 
  4451  0E25                     	;# 
  4452  0E28                     	;# 
  4453  0E29                     	;# 
  4454  0E2A                     	;# 
  4455  0E2B                     	;# 
  4456  0E2C                     	;# 
  4457  0E2D                     	;# 
  4458  0E2E                     	;# 
  4459  0E2F                     	;# 
  4460  0E90                     	;# 
  4461  0E91                     	;# 
  4462  0E92                     	;# 
  4463  0E94                     	;# 
  4464  0E95                     	;# 
  4465  0E9C                     	;# 
  4466  0E9D                     	;# 
  4467  0E9E                     	;# 
  4468  0E9F                     	;# 
  4469  0EA0                     	;# 
  4470  0EA1                     	;# 
  4471  0EA2                     	;# 
  4472  0EA3                     	;# 
  4473  0EA4                     	;# 
  4474  0EA5                     	;# 
  4475  0EA6                     	;# 
  4476  0EA7                     	;# 
  4477  0F0F                     	;# 
  4478  0F10                     	;# 
  4479  0F11                     	;# 
  4480  0F12                     	;# 
  4481  0F13                     	;# 
  4482  0F14                     	;# 
  4483  0F15                     	;# 
  4484  0F16                     	;# 
  4485  0F17                     	;# 
  4486  0F18                     	;# 
  4487  0F19                     	;# 
  4488  0F1A                     	;# 
  4489  0F1B                     	;# 
  4490  0F1C                     	;# 
  4491  0F1D                     	;# 
  4492  0F1E                     	;# 
  4493  0F1F                     	;# 
  4494  0F20                     	;# 
  4495  0F21                     	;# 
  4496  0F22                     	;# 
  4497  0F23                     	;# 
  4498  0F24                     	;# 
  4499  0F25                     	;# 
  4500  0F26                     	;# 
  4501  0F27                     	;# 
  4502  0F28                     	;# 
  4503  0F29                     	;# 
  4504  0F2A                     	;# 
  4505  0F2B                     	;# 
  4506  0F2C                     	;# 
  4507  0F2D                     	;# 
  4508  0F2E                     	;# 
  4509  0F2F                     	;# 
  4510  0F30                     	;# 
  4511  0F31                     	;# 
  4512  0F32                     	;# 
  4513  0F33                     	;# 
  4514  0F34                     	;# 
  4515  0F35                     	;# 
  4516  0F36                     	;# 
  4517  0F37                     	;# 
  4518  0FE4                     	;# 
  4519  0FE5                     	;# 
  4520  0FE6                     	;# 
  4521  0FE7                     	;# 
  4522  0FE8                     	;# 
  4523  0FE9                     	;# 
  4524  0FEA                     	;# 
  4525  0FEB                     	;# 
  4526  0FED                     	;# 
  4527  0FEE                     	;# 
  4528  0FEF                     	;_currentPositions_steps
  4529                           
  4530                           	psect	idataBANK0
  4531  22D2                     __pidataBANK0:	
  4532                           
  4533                           ;initializer for _demoLong
  4534  22D2  3401               	retlw	1
  4535  22D3  3400               	retlw	0
  4536  22D4  3400               	retlw	0
  4537  22D5  3400               	retlw	0
  4538                           
  4539                           	psect	idataBANK1
  4540  2312                     __pidataBANK1:	
  4541                           
  4542                           ;initializer for _piezo_on_time_ms
  4543  2312  34E8               	retlw	232
  4544  2313  3403               	retlw	3
  4545                           
  4546                           ;initializer for _heater_post_time_ms
  4547  2314  340A               	retlw	10
  4548  2315  3400               	retlw	0
  4549                           
  4550                           ;initializer for _heater_pre_time_ms
  4551  2316  340A               	retlw	10
  4552  2317  3400               	retlw	0
  4553                           
  4554                           	psect	idataBANK2
  4555  07FE                     __pidataBANK2:	
  4556                           
  4557                           ;initializer for _drv_peak_val
  4558  07FE  347F               	retlw	127
  4559  07FF  3400               	retlw	0
  4560                           
  4561                           	psect	idataBANK4
  4562  2655                     __pidataBANK4:	
  4563                           
  4564                           ;initializer for _fsmStateTable
  4565  2655  3491               	retlw	low _do_I2C_IDLE
  4566  2656  3423               	retlw	high _do_I2C_IDLE
  4567  2657  3416               	retlw	low _do_I2C_SEND_ADR_READ
  4568  2658  3424               	retlw	high _do_I2C_SEND_ADR_READ
  4569  2659  34E9               	retlw	low _do_I2C_SEND_ADR_WRITE
  4570  265A  3423               	retlw	high _do_I2C_SEND_ADR_WRITE
  4571  265B  3433               	retlw	low _do_I2C_TX
  4572  265C  341E               	retlw	high _do_I2C_TX
  4573  265D  348C               	retlw	low _do_I2C_RX
  4574  265E  341A               	retlw	high _do_I2C_RX
  4575  265F  34B6               	retlw	low _do_I2C_RCEN
  4576  2660  3423               	retlw	high _do_I2C_RCEN
  4577  2661  3462               	retlw	low _do_I2C_TX_EMPTY
  4578  2662  3418               	retlw	high _do_I2C_TX_EMPTY
  4579  2663  3436               	retlw	low _do_I2C_SEND_RESTART_READ
  4580  2664  3423               	retlw	high _do_I2C_SEND_RESTART_READ
  4581  2665  343E               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4582  2666  3423               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4583  2667  3446               	retlw	low _do_I2C_SEND_RESTART
  4584  2668  3423               	retlw	high _do_I2C_SEND_RESTART
  4585  2669  344E               	retlw	low _do_I2C_SEND_STOP
  4586  266A  3423               	retlw	high _do_I2C_SEND_STOP
  4587  266B  3456               	retlw	low _do_I2C_DO_ACK
  4588  266C  3423               	retlw	high _do_I2C_DO_ACK
  4589  266D  345E               	retlw	low _do_I2C_DO_NACK_STOP
  4590  266E  3423               	retlw	high _do_I2C_DO_NACK_STOP
  4591  266F  3466               	retlw	low _do_I2C_DO_NACK_RESTART
  4592  2670  3423               	retlw	high _do_I2C_DO_NACK_RESTART
  4593  2671  34DE               	retlw	low _do_I2C_RESET
  4594  2672  3423               	retlw	high _do_I2C_RESET
  4595  2673  34D3               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4596  2674  3407               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4597                           
  4598                           	psect	stringtext1
  4599  1000                     __pstringtext1:	
  4600  1000                     _drv_fifo_sine:	
  4601  1000  340B               	retlw	11
  4602  1001  3400               	retlw	0
  4603  1002  3400               	retlw	0
  4604  1003  3400               	retlw	0
  4605  1004  3410               	retlw	16
  4606  1005  3400               	retlw	0
  4607  1006  3420               	retlw	32
  4608  1007  3400               	retlw	0
  4609  1008  342E               	retlw	46
  4610  1009  3400               	retlw	0
  4611  100A  343C               	retlw	60
  4612  100B  3400               	retlw	0
  4613  100C  3448               	retlw	72
  4614  100D  3400               	retlw	0
  4615  100E  3453               	retlw	83
  4616  100F  3400               	retlw	0
  4617  1010  345B               	retlw	91
  4618  1011  3400               	retlw	0
  4619  1012  3461               	retlw	97
  4620  1013  3400               	retlw	0
  4621  1014  3465               	retlw	101
  4622  1015  3400               	retlw	0
  4623  1016  3466               	retlw	102
  4624  1017  3400               	retlw	0
  4625  1018  3465               	retlw	101
  4626  1019  3400               	retlw	0
  4627  101A  3461               	retlw	97
  4628  101B  3400               	retlw	0
  4629  101C  345B               	retlw	91
  4630  101D  3400               	retlw	0
  4631  101E  3453               	retlw	83
  4632  101F  3400               	retlw	0
  4633  1020  3448               	retlw	72
  4634  1021  3400               	retlw	0
  4635  1022  343C               	retlw	60
  4636  1023  3400               	retlw	0
  4637  1024  342E               	retlw	46
  4638  1025  3400               	retlw	0
  4639  1026  3420               	retlw	32
  4640  1027  3400               	retlw	0
  4641  1028  3410               	retlw	16
  4642  1029  3400               	retlw	0
  4643  102A  3400               	retlw	0
  4644  102B  3400               	retlw	0
  4645  102C  34F0               	retlw	240
  4646  102D  3400               	retlw	0
  4647  102E  34E0               	retlw	224
  4648  102F  3400               	retlw	0
  4649  1030  34D2               	retlw	210
  4650  1031  3400               	retlw	0
  4651  1032  34C4               	retlw	196
  4652  1033  3400               	retlw	0
  4653  1034  34B8               	retlw	184
  4654  1035  3400               	retlw	0
  4655  1036  34AD               	retlw	173
  4656  1037  3400               	retlw	0
  4657  1038  34A5               	retlw	165
  4658  1039  3400               	retlw	0
  4659  103A  349F               	retlw	159
  4660  103B  3400               	retlw	0
  4661  103C  349B               	retlw	155
  4662  103D  3400               	retlw	0
  4663  103E  349A               	retlw	154
  4664  103F  3400               	retlw	0
  4665  1040  349B               	retlw	155
  4666  1041  3400               	retlw	0
  4667  1042  349F               	retlw	159
  4668  1043  3400               	retlw	0
  4669  1044  34A5               	retlw	165
  4670  1045  3400               	retlw	0
  4671  1046  34AD               	retlw	173
  4672  1047  3400               	retlw	0
  4673  1048  34B8               	retlw	184
  4674  1049  3400               	retlw	0
  4675  104A  34C4               	retlw	196
  4676  104B  3400               	retlw	0
  4677  104C  34D2               	retlw	210
  4678  104D  3400               	retlw	0
  4679  104E  34E0               	retlw	224
  4680  104F  3400               	retlw	0
  4681  1050  34F0               	retlw	240
  4682  1051  3400               	retlw	0
  4683  1052  3400               	retlw	0
  4684  1053  3400               	retlw	0
  4685  1054  3410               	retlw	16
  4686  1055  3400               	retlw	0
  4687  1056  3420               	retlw	32
  4688  1057  3400               	retlw	0
  4689  1058  342E               	retlw	46
  4690  1059  3400               	retlw	0
  4691  105A  343C               	retlw	60
  4692  105B  3400               	retlw	0
  4693  105C  3448               	retlw	72
  4694  105D  3400               	retlw	0
  4695  105E  3453               	retlw	83
  4696  105F  3400               	retlw	0
  4697  1060  345B               	retlw	91
  4698  1061  3400               	retlw	0
  4699  1062  3461               	retlw	97
  4700  1063  3400               	retlw	0
  4701  1064  3465               	retlw	101
  4702  1065  3400               	retlw	0
  4703  1066  3466               	retlw	102
  4704  1067  3400               	retlw	0
  4705  1068  3465               	retlw	101
  4706  1069  3400               	retlw	0
  4707  106A  3461               	retlw	97
  4708  106B  3400               	retlw	0
  4709  106C  345B               	retlw	91
  4710  106D  3400               	retlw	0
  4711  106E  3453               	retlw	83
  4712  106F  3400               	retlw	0
  4713  1070  3448               	retlw	72
  4714  1071  3400               	retlw	0
  4715  1072  343C               	retlw	60
  4716  1073  3400               	retlw	0
  4717  1074  342E               	retlw	46
  4718  1075  3400               	retlw	0
  4719  1076  3420               	retlw	32
  4720  1077  3400               	retlw	0
  4721  1078  3410               	retlw	16
  4722  1079  3400               	retlw	0
  4723  107A  3400               	retlw	0
  4724  107B  3400               	retlw	0
  4725  107C  34F0               	retlw	240
  4726  107D  3400               	retlw	0
  4727  107E  34E0               	retlw	224
  4728  107F  3400               	retlw	0
  4729  1080  34D2               	retlw	210
  4730  1081  3400               	retlw	0
  4731  1082  34C4               	retlw	196
  4732  1083  3400               	retlw	0
  4733  1084  34B8               	retlw	184
  4734  1085  3400               	retlw	0
  4735  1086  34AD               	retlw	173
  4736  1087  3400               	retlw	0
  4737  1088  34A5               	retlw	165
  4738  1089  3400               	retlw	0
  4739  108A  349F               	retlw	159
  4740  108B  3400               	retlw	0
  4741  108C  349B               	retlw	155
  4742  108D  3400               	retlw	0
  4743  108E  349A               	retlw	154
  4744  108F  3400               	retlw	0
  4745  1090  349B               	retlw	155
  4746  1091  3400               	retlw	0
  4747  1092  349F               	retlw	159
  4748  1093  3400               	retlw	0
  4749  1094  34A5               	retlw	165
  4750  1095  3400               	retlw	0
  4751  1096  34AD               	retlw	173
  4752  1097  3400               	retlw	0
  4753  1098  34B8               	retlw	184
  4754  1099  3400               	retlw	0
  4755  109A  34C4               	retlw	196
  4756  109B  3400               	retlw	0
  4757  109C  34D2               	retlw	210
  4758  109D  3400               	retlw	0
  4759  109E  34E0               	retlw	224
  4760  109F  3400               	retlw	0
  4761  10A0  34F0               	retlw	240
  4762  10A1  3400               	retlw	0
  4763  10A2  3400               	retlw	0
  4764  10A3  3400               	retlw	0
  4765  10A4  3410               	retlw	16
  4766  10A5  3400               	retlw	0
  4767  10A6  3420               	retlw	32
  4768  10A7  3400               	retlw	0
  4769  10A8  342E               	retlw	46
  4770  10A9  3400               	retlw	0
  4771  10AA  343C               	retlw	60
  4772  10AB  3400               	retlw	0
  4773  10AC  3448               	retlw	72
  4774  10AD  3400               	retlw	0
  4775  10AE  3453               	retlw	83
  4776  10AF  3400               	retlw	0
  4777  10B0  345B               	retlw	91
  4778  10B1  3400               	retlw	0
  4779  10B2  3461               	retlw	97
  4780  10B3  3400               	retlw	0
  4781  10B4  3465               	retlw	101
  4782  10B5  3400               	retlw	0
  4783  10B6  3466               	retlw	102
  4784  10B7  3400               	retlw	0
  4785  10B8  3465               	retlw	101
  4786  10B9  3400               	retlw	0
  4787  10BA  3461               	retlw	97
  4788  10BB  3400               	retlw	0
  4789  10BC  345B               	retlw	91
  4790  10BD  3400               	retlw	0
  4791  10BE  3453               	retlw	83
  4792  10BF  3400               	retlw	0
  4793  10C0  3448               	retlw	72
  4794  10C1  3400               	retlw	0
  4795  10C2  343C               	retlw	60
  4796  10C3  3400               	retlw	0
  4797  10C4  342E               	retlw	46
  4798  10C5  3400               	retlw	0
  4799  10C6  3420               	retlw	32
  4800  10C7  3400               	retlw	0
  4801  10C8  3410               	retlw	16
  4802  10C9  3400               	retlw	0
  4803  10CA  3400               	retlw	0
  4804  10CB  3400               	retlw	0
  4805  10CC  34F0               	retlw	240
  4806  10CD  3400               	retlw	0
  4807  10CE  34E0               	retlw	224
  4808  10CF  3400               	retlw	0
  4809  10D0  34D2               	retlw	210
  4810  10D1  3400               	retlw	0
  4811  10D2  34C4               	retlw	196
  4812  10D3  3400               	retlw	0
  4813  10D4  34B8               	retlw	184
  4814  10D5  3400               	retlw	0
  4815  10D6  34AD               	retlw	173
  4816  10D7  3400               	retlw	0
  4817  10D8  34A5               	retlw	165
  4818  10D9  3400               	retlw	0
  4819  10DA  349F               	retlw	159
  4820  10DB  3400               	retlw	0
  4821  10DC  349B               	retlw	155
  4822  10DD  3400               	retlw	0
  4823  10DE  349A               	retlw	154
  4824  10DF  3400               	retlw	0
  4825  10E0  349B               	retlw	155
  4826  10E1  3400               	retlw	0
  4827  10E2  349F               	retlw	159
  4828  10E3  3400               	retlw	0
  4829  10E4  34A5               	retlw	165
  4830  10E5  3400               	retlw	0
  4831  10E6  34AD               	retlw	173
  4832  10E7  3400               	retlw	0
  4833  10E8  34B8               	retlw	184
  4834  10E9  3400               	retlw	0
  4835  10EA  34C4               	retlw	196
  4836  10EB  3400               	retlw	0
  4837  10EC  34D2               	retlw	210
  4838  10ED  3400               	retlw	0
  4839  10EE  34E0               	retlw	224
  4840  10EF  3400               	retlw	0
  4841  10F0  34F0               	retlw	240
  4842  10F1  3400               	retlw	0
  4843  10F2  3400               	retlw	0
  4844  10F3  3400               	retlw	0
  4845  10F4                     __end_of_drv_fifo_sine:	
  4846                           
  4847                           	psect	stringtext2
  4848  11E8                     __pstringtext2:	
  4849  11E8                     drv2665@drv_sine:	
  4850  11E8  3400               	retlw	0
  4851  11E9  3400               	retlw	0
  4852  11EA  3410               	retlw	16
  4853  11EB  3400               	retlw	0
  4854  11EC  3420               	retlw	32
  4855  11ED  3400               	retlw	0
  4856  11EE  342E               	retlw	46
  4857  11EF  3400               	retlw	0
  4858  11F0  343C               	retlw	60
  4859  11F1  3400               	retlw	0
  4860  11F2  3448               	retlw	72
  4861  11F3  3400               	retlw	0
  4862  11F4  3453               	retlw	83
  4863  11F5  3400               	retlw	0
  4864  11F6  345B               	retlw	91
  4865  11F7  3400               	retlw	0
  4866  11F8  3461               	retlw	97
  4867  11F9  3400               	retlw	0
  4868  11FA  3465               	retlw	101
  4869  11FB  3400               	retlw	0
  4870  11FC  3466               	retlw	102
  4871  11FD  3400               	retlw	0
  4872  11FE  3465               	retlw	101
  4873  11FF  3400               	retlw	0
  4874  1200  3461               	retlw	97
  4875  1201  3400               	retlw	0
  4876  1202  345B               	retlw	91
  4877  1203  3400               	retlw	0
  4878  1204  3453               	retlw	83
  4879  1205  3400               	retlw	0
  4880  1206  3448               	retlw	72
  4881  1207  3400               	retlw	0
  4882  1208  343C               	retlw	60
  4883  1209  3400               	retlw	0
  4884  120A  342E               	retlw	46
  4885  120B  3400               	retlw	0
  4886  120C  3420               	retlw	32
  4887  120D  3400               	retlw	0
  4888  120E  3410               	retlw	16
  4889  120F  3400               	retlw	0
  4890  1210  3400               	retlw	0
  4891  1211  3400               	retlw	0
  4892  1212  34F0               	retlw	240
  4893  1213  3400               	retlw	0
  4894  1214  34E0               	retlw	224
  4895  1215  3400               	retlw	0
  4896  1216  34D2               	retlw	210
  4897  1217  3400               	retlw	0
  4898  1218  34C4               	retlw	196
  4899  1219  3400               	retlw	0
  4900  121A  34B8               	retlw	184
  4901  121B  3400               	retlw	0
  4902  121C  34AD               	retlw	173
  4903  121D  3400               	retlw	0
  4904  121E  34A5               	retlw	165
  4905  121F  3400               	retlw	0
  4906  1220  349F               	retlw	159
  4907  1221  3400               	retlw	0
  4908  1222  349B               	retlw	155
  4909  1223  3400               	retlw	0
  4910  1224  349A               	retlw	154
  4911  1225  3400               	retlw	0
  4912  1226  349B               	retlw	155
  4913  1227  3400               	retlw	0
  4914  1228  349F               	retlw	159
  4915  1229  3400               	retlw	0
  4916  122A  34A5               	retlw	165
  4917  122B  3400               	retlw	0
  4918  122C  34AD               	retlw	173
  4919  122D  3400               	retlw	0
  4920  122E  34B8               	retlw	184
  4921  122F  3400               	retlw	0
  4922  1230  34C4               	retlw	196
  4923  1231  3400               	retlw	0
  4924  1232  34D2               	retlw	210
  4925  1233  3400               	retlw	0
  4926  1234  34E0               	retlw	224
  4927  1235  3400               	retlw	0
  4928  1236  34F0               	retlw	240
  4929  1237  3400               	retlw	0
  4930  1238  3400               	retlw	0
  4931  1239  3400               	retlw	0
  4932  123A  3410               	retlw	16
  4933  123B  3400               	retlw	0
  4934  123C  3420               	retlw	32
  4935  123D  3400               	retlw	0
  4936  123E  342E               	retlw	46
  4937  123F  3400               	retlw	0
  4938  1240  343C               	retlw	60
  4939  1241  3400               	retlw	0
  4940  1242  3448               	retlw	72
  4941  1243  3400               	retlw	0
  4942  1244  3453               	retlw	83
  4943  1245  3400               	retlw	0
  4944  1246  345B               	retlw	91
  4945  1247  3400               	retlw	0
  4946  1248  3461               	retlw	97
  4947  1249  3400               	retlw	0
  4948  124A  3465               	retlw	101
  4949  124B  3400               	retlw	0
  4950  124C  3466               	retlw	102
  4951  124D  3400               	retlw	0
  4952  124E  3465               	retlw	101
  4953  124F  3400               	retlw	0
  4954  1250  3461               	retlw	97
  4955  1251  3400               	retlw	0
  4956  1252  345B               	retlw	91
  4957  1253  3400               	retlw	0
  4958  1254  3453               	retlw	83
  4959  1255  3400               	retlw	0
  4960  1256  3448               	retlw	72
  4961  1257  3400               	retlw	0
  4962  1258  343C               	retlw	60
  4963  1259  3400               	retlw	0
  4964  125A  342E               	retlw	46
  4965  125B  3400               	retlw	0
  4966  125C  3420               	retlw	32
  4967  125D  3400               	retlw	0
  4968  125E  3410               	retlw	16
  4969  125F  3400               	retlw	0
  4970  1260  3400               	retlw	0
  4971  1261  3400               	retlw	0
  4972  1262  34F0               	retlw	240
  4973  1263  3400               	retlw	0
  4974  1264  34E0               	retlw	224
  4975  1265  3400               	retlw	0
  4976  1266  34D2               	retlw	210
  4977  1267  3400               	retlw	0
  4978  1268  34C4               	retlw	196
  4979  1269  3400               	retlw	0
  4980  126A  34B8               	retlw	184
  4981  126B  3400               	retlw	0
  4982  126C  34AD               	retlw	173
  4983  126D  3400               	retlw	0
  4984  126E  34A5               	retlw	165
  4985  126F  3400               	retlw	0
  4986  1270  349F               	retlw	159
  4987  1271  3400               	retlw	0
  4988  1272  349B               	retlw	155
  4989  1273  3400               	retlw	0
  4990  1274  349A               	retlw	154
  4991  1275  3400               	retlw	0
  4992  1276  349B               	retlw	155
  4993  1277  3400               	retlw	0
  4994  1278  349F               	retlw	159
  4995  1279  3400               	retlw	0
  4996  127A  34A5               	retlw	165
  4997  127B  3400               	retlw	0
  4998  127C  34AD               	retlw	173
  4999  127D  3400               	retlw	0
  5000  127E  34B8               	retlw	184
  5001  127F  3400               	retlw	0
  5002  1280  34C4               	retlw	196
  5003  1281  3400               	retlw	0
  5004  1282  34D2               	retlw	210
  5005  1283  3400               	retlw	0
  5006  1284  34E0               	retlw	224
  5007  1285  3400               	retlw	0
  5008  1286  34F0               	retlw	240
  5009  1287  3400               	retlw	0
  5010  1288  3400               	retlw	0
  5011  1289  3400               	retlw	0
  5012  128A  3410               	retlw	16
  5013  128B  3400               	retlw	0
  5014  128C  3420               	retlw	32
  5015  128D  3400               	retlw	0
  5016  128E  342E               	retlw	46
  5017  128F  3400               	retlw	0
  5018  1290  343C               	retlw	60
  5019  1291  3400               	retlw	0
  5020  1292  3448               	retlw	72
  5021  1293  3400               	retlw	0
  5022  1294  3453               	retlw	83
  5023  1295  3400               	retlw	0
  5024  1296  345B               	retlw	91
  5025  1297  3400               	retlw	0
  5026  1298  3461               	retlw	97
  5027  1299  3400               	retlw	0
  5028  129A  3465               	retlw	101
  5029  129B  3400               	retlw	0
  5030  129C  3466               	retlw	102
  5031  129D  3400               	retlw	0
  5032  129E  3465               	retlw	101
  5033  129F  3400               	retlw	0
  5034  12A0  3461               	retlw	97
  5035  12A1  3400               	retlw	0
  5036  12A2  345B               	retlw	91
  5037  12A3  3400               	retlw	0
  5038  12A4  3453               	retlw	83
  5039  12A5  3400               	retlw	0
  5040  12A6  3448               	retlw	72
  5041  12A7  3400               	retlw	0
  5042  12A8  343C               	retlw	60
  5043  12A9  3400               	retlw	0
  5044  12AA  342E               	retlw	46
  5045  12AB  3400               	retlw	0
  5046  12AC  3420               	retlw	32
  5047  12AD  3400               	retlw	0
  5048  12AE  3410               	retlw	16
  5049  12AF  3400               	retlw	0
  5050  12B0  3400               	retlw	0
  5051  12B1  3400               	retlw	0
  5052  12B2  34F0               	retlw	240
  5053  12B3  3400               	retlw	0
  5054  12B4  34E0               	retlw	224
  5055  12B5  3400               	retlw	0
  5056  12B6  34D2               	retlw	210
  5057  12B7  3400               	retlw	0
  5058  12B8  34C4               	retlw	196
  5059  12B9  3400               	retlw	0
  5060  12BA  34B8               	retlw	184
  5061  12BB  3400               	retlw	0
  5062  12BC  34AD               	retlw	173
  5063  12BD  3400               	retlw	0
  5064  12BE  34A5               	retlw	165
  5065  12BF  3400               	retlw	0
  5066  12C0  349F               	retlw	159
  5067  12C1  3400               	retlw	0
  5068  12C2  349B               	retlw	155
  5069  12C3  3400               	retlw	0
  5070  12C4  349A               	retlw	154
  5071  12C5  3400               	retlw	0
  5072  12C6  349B               	retlw	155
  5073  12C7  3400               	retlw	0
  5074  12C8  349F               	retlw	159
  5075  12C9  3400               	retlw	0
  5076  12CA  34A5               	retlw	165
  5077  12CB  3400               	retlw	0
  5078  12CC  34AD               	retlw	173
  5079  12CD  3400               	retlw	0
  5080  12CE  34B8               	retlw	184
  5081  12CF  3400               	retlw	0
  5082  12D0  34C4               	retlw	196
  5083  12D1  3400               	retlw	0
  5084  12D2  34D2               	retlw	210
  5085  12D3  3400               	retlw	0
  5086  12D4  34E0               	retlw	224
  5087  12D5  3400               	retlw	0
  5088  12D6  34F0               	retlw	240
  5089  12D7  3400               	retlw	0
  5090  12D8  3400               	retlw	0
  5091  12D9  3400               	retlw	0
  5092  12DA                     __end_ofdrv2665@drv_sine:	
  5093                           
  5094                           	psect	stringtext3
  5095  12DA                     __pstringtext3:	
  5096  12DA                     _drv_sine:	
  5097  12DA  3400               	retlw	0
  5098  12DB  3400               	retlw	0
  5099  12DC  3410               	retlw	16
  5100  12DD  3400               	retlw	0
  5101  12DE  3420               	retlw	32
  5102  12DF  3400               	retlw	0
  5103  12E0  342E               	retlw	46
  5104  12E1  3400               	retlw	0
  5105  12E2  343C               	retlw	60
  5106  12E3  3400               	retlw	0
  5107  12E4  3448               	retlw	72
  5108  12E5  3400               	retlw	0
  5109  12E6  3453               	retlw	83
  5110  12E7  3400               	retlw	0
  5111  12E8  345B               	retlw	91
  5112  12E9  3400               	retlw	0
  5113  12EA  3461               	retlw	97
  5114  12EB  3400               	retlw	0
  5115  12EC  3465               	retlw	101
  5116  12ED  3400               	retlw	0
  5117  12EE  3466               	retlw	102
  5118  12EF  3400               	retlw	0
  5119  12F0  3465               	retlw	101
  5120  12F1  3400               	retlw	0
  5121  12F2  3461               	retlw	97
  5122  12F3  3400               	retlw	0
  5123  12F4  345B               	retlw	91
  5124  12F5  3400               	retlw	0
  5125  12F6  3453               	retlw	83
  5126  12F7  3400               	retlw	0
  5127  12F8  3448               	retlw	72
  5128  12F9  3400               	retlw	0
  5129  12FA  343C               	retlw	60
  5130  12FB  3400               	retlw	0
  5131  12FC  342E               	retlw	46
  5132  12FD  3400               	retlw	0
  5133  12FE  3420               	retlw	32
  5134  12FF  3400               	retlw	0
  5135  1300  3410               	retlw	16
  5136  1301  3400               	retlw	0
  5137  1302  3400               	retlw	0
  5138  1303  3400               	retlw	0
  5139  1304  34F0               	retlw	240
  5140  1305  3400               	retlw	0
  5141  1306  34E0               	retlw	224
  5142  1307  3400               	retlw	0
  5143  1308  34D2               	retlw	210
  5144  1309  3400               	retlw	0
  5145  130A  34C4               	retlw	196
  5146  130B  3400               	retlw	0
  5147  130C  34B8               	retlw	184
  5148  130D  3400               	retlw	0
  5149  130E  34AD               	retlw	173
  5150  130F  3400               	retlw	0
  5151  1310  34A5               	retlw	165
  5152  1311  3400               	retlw	0
  5153  1312  349F               	retlw	159
  5154  1313  3400               	retlw	0
  5155  1314  349B               	retlw	155
  5156  1315  3400               	retlw	0
  5157  1316  349A               	retlw	154
  5158  1317  3400               	retlw	0
  5159  1318  349B               	retlw	155
  5160  1319  3400               	retlw	0
  5161  131A  349F               	retlw	159
  5162  131B  3400               	retlw	0
  5163  131C  34A5               	retlw	165
  5164  131D  3400               	retlw	0
  5165  131E  34AD               	retlw	173
  5166  131F  3400               	retlw	0
  5167  1320  34B8               	retlw	184
  5168  1321  3400               	retlw	0
  5169  1322  34C4               	retlw	196
  5170  1323  3400               	retlw	0
  5171  1324  34D2               	retlw	210
  5172  1325  3400               	retlw	0
  5173  1326  34E0               	retlw	224
  5174  1327  3400               	retlw	0
  5175  1328  34F0               	retlw	240
  5176  1329  3400               	retlw	0
  5177  132A  3400               	retlw	0
  5178  132B  3400               	retlw	0
  5179  132C  3410               	retlw	16
  5180  132D  3400               	retlw	0
  5181  132E  3420               	retlw	32
  5182  132F  3400               	retlw	0
  5183  1330  342E               	retlw	46
  5184  1331  3400               	retlw	0
  5185  1332  343C               	retlw	60
  5186  1333  3400               	retlw	0
  5187  1334  3448               	retlw	72
  5188  1335  3400               	retlw	0
  5189  1336  3453               	retlw	83
  5190  1337  3400               	retlw	0
  5191  1338  345B               	retlw	91
  5192  1339  3400               	retlw	0
  5193  133A  3461               	retlw	97
  5194  133B  3400               	retlw	0
  5195  133C  3465               	retlw	101
  5196  133D  3400               	retlw	0
  5197  133E  3466               	retlw	102
  5198  133F  3400               	retlw	0
  5199  1340  3465               	retlw	101
  5200  1341  3400               	retlw	0
  5201  1342  3461               	retlw	97
  5202  1343  3400               	retlw	0
  5203  1344  345B               	retlw	91
  5204  1345  3400               	retlw	0
  5205  1346  3453               	retlw	83
  5206  1347  3400               	retlw	0
  5207  1348  3448               	retlw	72
  5208  1349  3400               	retlw	0
  5209  134A  343C               	retlw	60
  5210  134B  3400               	retlw	0
  5211  134C  342E               	retlw	46
  5212  134D  3400               	retlw	0
  5213  134E  3420               	retlw	32
  5214  134F  3400               	retlw	0
  5215  1350  3410               	retlw	16
  5216  1351  3400               	retlw	0
  5217  1352  3400               	retlw	0
  5218  1353  3400               	retlw	0
  5219  1354  34F0               	retlw	240
  5220  1355  3400               	retlw	0
  5221  1356  34E0               	retlw	224
  5222  1357  3400               	retlw	0
  5223  1358  34D2               	retlw	210
  5224  1359  3400               	retlw	0
  5225  135A  34C4               	retlw	196
  5226  135B  3400               	retlw	0
  5227  135C  34B8               	retlw	184
  5228  135D  3400               	retlw	0
  5229  135E  34AD               	retlw	173
  5230  135F  3400               	retlw	0
  5231  1360  34A5               	retlw	165
  5232  1361  3400               	retlw	0
  5233  1362  349F               	retlw	159
  5234  1363  3400               	retlw	0
  5235  1364  349B               	retlw	155
  5236  1365  3400               	retlw	0
  5237  1366  349A               	retlw	154
  5238  1367  3400               	retlw	0
  5239  1368  349B               	retlw	155
  5240  1369  3400               	retlw	0
  5241  136A  349F               	retlw	159
  5242  136B  3400               	retlw	0
  5243  136C  34A5               	retlw	165
  5244  136D  3400               	retlw	0
  5245  136E  34AD               	retlw	173
  5246  136F  3400               	retlw	0
  5247  1370  34B8               	retlw	184
  5248  1371  3400               	retlw	0
  5249  1372  34C4               	retlw	196
  5250  1373  3400               	retlw	0
  5251  1374  34D2               	retlw	210
  5252  1375  3400               	retlw	0
  5253  1376  34E0               	retlw	224
  5254  1377  3400               	retlw	0
  5255  1378  34F0               	retlw	240
  5256  1379  3400               	retlw	0
  5257  137A  3400               	retlw	0
  5258  137B  3400               	retlw	0
  5259  137C  3410               	retlw	16
  5260  137D  3400               	retlw	0
  5261  137E  3420               	retlw	32
  5262  137F  3400               	retlw	0
  5263  1380  342E               	retlw	46
  5264  1381  3400               	retlw	0
  5265  1382  343C               	retlw	60
  5266  1383  3400               	retlw	0
  5267  1384  3448               	retlw	72
  5268  1385  3400               	retlw	0
  5269  1386  3453               	retlw	83
  5270  1387  3400               	retlw	0
  5271  1388  345B               	retlw	91
  5272  1389  3400               	retlw	0
  5273  138A  3461               	retlw	97
  5274  138B  3400               	retlw	0
  5275  138C  3465               	retlw	101
  5276  138D  3400               	retlw	0
  5277  138E  3466               	retlw	102
  5278  138F  3400               	retlw	0
  5279  1390  3465               	retlw	101
  5280  1391  3400               	retlw	0
  5281  1392  3461               	retlw	97
  5282  1393  3400               	retlw	0
  5283  1394  345B               	retlw	91
  5284  1395  3400               	retlw	0
  5285  1396  3453               	retlw	83
  5286  1397  3400               	retlw	0
  5287  1398  3448               	retlw	72
  5288  1399  3400               	retlw	0
  5289  139A  343C               	retlw	60
  5290  139B  3400               	retlw	0
  5291  139C  342E               	retlw	46
  5292  139D  3400               	retlw	0
  5293  139E  3420               	retlw	32
  5294  139F  3400               	retlw	0
  5295  13A0  3410               	retlw	16
  5296  13A1  3400               	retlw	0
  5297  13A2  3400               	retlw	0
  5298  13A3  3400               	retlw	0
  5299  13A4  34F0               	retlw	240
  5300  13A5  3400               	retlw	0
  5301  13A6  34E0               	retlw	224
  5302  13A7  3400               	retlw	0
  5303  13A8  34D2               	retlw	210
  5304  13A9  3400               	retlw	0
  5305  13AA  34C4               	retlw	196
  5306  13AB  3400               	retlw	0
  5307  13AC  34B8               	retlw	184
  5308  13AD  3400               	retlw	0
  5309  13AE  34AD               	retlw	173
  5310  13AF  3400               	retlw	0
  5311  13B0  34A5               	retlw	165
  5312  13B1  3400               	retlw	0
  5313  13B2  349F               	retlw	159
  5314  13B3  3400               	retlw	0
  5315  13B4  349B               	retlw	155
  5316  13B5  3400               	retlw	0
  5317  13B6  349A               	retlw	154
  5318  13B7  3400               	retlw	0
  5319  13B8  349B               	retlw	155
  5320  13B9  3400               	retlw	0
  5321  13BA  349F               	retlw	159
  5322  13BB  3400               	retlw	0
  5323  13BC  34A5               	retlw	165
  5324  13BD  3400               	retlw	0
  5325  13BE  34AD               	retlw	173
  5326  13BF  3400               	retlw	0
  5327  13C0  34B8               	retlw	184
  5328  13C1  3400               	retlw	0
  5329  13C2  34C4               	retlw	196
  5330  13C3  3400               	retlw	0
  5331  13C4  34D2               	retlw	210
  5332  13C5  3400               	retlw	0
  5333  13C6  34E0               	retlw	224
  5334  13C7  3400               	retlw	0
  5335  13C8  34F0               	retlw	240
  5336  13C9  3400               	retlw	0
  5337  13CA  3400               	retlw	0
  5338  13CB  3400               	retlw	0
  5339  13CC                     __end_of_drv_sine:	
  5340                           
  5341                           	psect	stringtext4
  5342  2800                     __pstringtext4:	
  5343  2800                     _dpowers:	
  5344  2800  3401               	retlw	1
  5345  2801  3400               	retlw	0
  5346  2802  3400               	retlw	0
  5347  2803  3400               	retlw	0
  5348  2804  340A               	retlw	10
  5349  2805  3400               	retlw	0
  5350  2806  3400               	retlw	0
  5351  2807  3400               	retlw	0
  5352  2808  3464               	retlw	100
  5353  2809  3400               	retlw	0
  5354  280A  3400               	retlw	0
  5355  280B  3400               	retlw	0
  5356  280C  34E8               	retlw	232
  5357  280D  3403               	retlw	3
  5358  280E  3400               	retlw	0
  5359  280F  3400               	retlw	0
  5360  2810  3410               	retlw	16
  5361  2811  3427               	retlw	39
  5362  2812  3400               	retlw	0
  5363  2813  3400               	retlw	0
  5364  2814  34A0               	retlw	160
  5365  2815  3486               	retlw	134
  5366  2816  3401               	retlw	1
  5367  2817  3400               	retlw	0
  5368  2818  3440               	retlw	64
  5369  2819  3442               	retlw	66
  5370  281A  340F               	retlw	15
  5371  281B  3400               	retlw	0
  5372  281C  3480               	retlw	128
  5373  281D  3496               	retlw	150
  5374  281E  3498               	retlw	152
  5375  281F  3400               	retlw	0
  5376  2820  3400               	retlw	0
  5377  2821  34E1               	retlw	225
  5378  2822  34F5               	retlw	245
  5379  2823  3405               	retlw	5
  5380  2824  3400               	retlw	0
  5381  2825  34CA               	retlw	202
  5382  2826  349A               	retlw	154
  5383  2827  343B               	retlw	59
  5384  2828                     __end_of_dpowers:	
  5385                           
  5386                           	psect	stringtext5
  5387  2A63                     __pstringtext5:	
  5388  2A63                     _TMR2_RANGE:	
  5389  2A63  3400               	retlw	0
  5390  2A64  34C8               	retlw	200
  5391  2A65  343F               	retlw	63
  5392  2A66                     __end_of_TMR2_RANGE:	
  5393                           
  5394                           	psect	stringtext6
  5395  2A66                     __pstringtext6:	
  5396  2A66                     _TMR0_RANGE:	
  5397  2A66  3400               	retlw	0
  5398  2A67  34C8               	retlw	200
  5399  2A68  343D               	retlw	61
  5400  2A69                     __end_of_TMR0_RANGE:	
  5401                           
  5402                           	psect	stringtext7
  5403  2A6F                     __pstringtext7:	
  5404  2A6F                     _LEDpower:	
  5405  2A6F  343F               	retlw	63
  5406  2A70  3400               	retlw	0
  5407  2A71                     __end_of_LEDpower:	
  5408                           
  5409                           	psect	stringtext8
  5410  2A77                     __pstringtext8:	
  5411  2A77                     _drv_address:	
  5412  2A77  3459               	retlw	89
  5413  2A78                     __end_of_drv_address:	
  5414                           
  5415                           	psect	stringtext9
  5416  10F4                     __pstringtext9:	
  5417  10F4                     drv2665@drv_fifo_sine:	
  5418  10F4  340B               	retlw	11
  5419  10F5  3400               	retlw	0
  5420  10F6  3400               	retlw	0
  5421  10F7  3400               	retlw	0
  5422  10F8  3410               	retlw	16
  5423  10F9  3400               	retlw	0
  5424  10FA  3420               	retlw	32
  5425  10FB  3400               	retlw	0
  5426  10FC  342E               	retlw	46
  5427  10FD  3400               	retlw	0
  5428  10FE  343C               	retlw	60
  5429  10FF  3400               	retlw	0
  5430  1100  3448               	retlw	72
  5431  1101  3400               	retlw	0
  5432  1102  3453               	retlw	83
  5433  1103  3400               	retlw	0
  5434  1104  345B               	retlw	91
  5435  1105  3400               	retlw	0
  5436  1106  3461               	retlw	97
  5437  1107  3400               	retlw	0
  5438  1108  3465               	retlw	101
  5439  1109  3400               	retlw	0
  5440  110A  3466               	retlw	102
  5441  110B  3400               	retlw	0
  5442  110C  3465               	retlw	101
  5443  110D  3400               	retlw	0
  5444  110E  3461               	retlw	97
  5445  110F  3400               	retlw	0
  5446  1110  345B               	retlw	91
  5447  1111  3400               	retlw	0
  5448  1112  3453               	retlw	83
  5449  1113  3400               	retlw	0
  5450  1114  3448               	retlw	72
  5451  1115  3400               	retlw	0
  5452  1116  343C               	retlw	60
  5453  1117  3400               	retlw	0
  5454  1118  342E               	retlw	46
  5455  1119  3400               	retlw	0
  5456  111A  3420               	retlw	32
  5457  111B  3400               	retlw	0
  5458  111C  3410               	retlw	16
  5459  111D  3400               	retlw	0
  5460  111E  3400               	retlw	0
  5461  111F  3400               	retlw	0
  5462  1120  34F0               	retlw	240
  5463  1121  3400               	retlw	0
  5464  1122  34E0               	retlw	224
  5465  1123  3400               	retlw	0
  5466  1124  34D2               	retlw	210
  5467  1125  3400               	retlw	0
  5468  1126  34C4               	retlw	196
  5469  1127  3400               	retlw	0
  5470  1128  34B8               	retlw	184
  5471  1129  3400               	retlw	0
  5472  112A  34AD               	retlw	173
  5473  112B  3400               	retlw	0
  5474  112C  34A5               	retlw	165
  5475  112D  3400               	retlw	0
  5476  112E  349F               	retlw	159
  5477  112F  3400               	retlw	0
  5478  1130  349B               	retlw	155
  5479  1131  3400               	retlw	0
  5480  1132  349A               	retlw	154
  5481  1133  3400               	retlw	0
  5482  1134  349B               	retlw	155
  5483  1135  3400               	retlw	0
  5484  1136  349F               	retlw	159
  5485  1137  3400               	retlw	0
  5486  1138  34A5               	retlw	165
  5487  1139  3400               	retlw	0
  5488  113A  34AD               	retlw	173
  5489  113B  3400               	retlw	0
  5490  113C  34B8               	retlw	184
  5491  113D  3400               	retlw	0
  5492  113E  34C4               	retlw	196
  5493  113F  3400               	retlw	0
  5494  1140  34D2               	retlw	210
  5495  1141  3400               	retlw	0
  5496  1142  34E0               	retlw	224
  5497  1143  3400               	retlw	0
  5498  1144  34F0               	retlw	240
  5499  1145  3400               	retlw	0
  5500  1146  3400               	retlw	0
  5501  1147  3400               	retlw	0
  5502  1148  3410               	retlw	16
  5503  1149  3400               	retlw	0
  5504  114A  3420               	retlw	32
  5505  114B  3400               	retlw	0
  5506  114C  342E               	retlw	46
  5507  114D  3400               	retlw	0
  5508  114E  343C               	retlw	60
  5509  114F  3400               	retlw	0
  5510  1150  3448               	retlw	72
  5511  1151  3400               	retlw	0
  5512  1152  3453               	retlw	83
  5513  1153  3400               	retlw	0
  5514  1154  345B               	retlw	91
  5515  1155  3400               	retlw	0
  5516  1156  3461               	retlw	97
  5517  1157  3400               	retlw	0
  5518  1158  3465               	retlw	101
  5519  1159  3400               	retlw	0
  5520  115A  3466               	retlw	102
  5521  115B  3400               	retlw	0
  5522  115C  3465               	retlw	101
  5523  115D  3400               	retlw	0
  5524  115E  3461               	retlw	97
  5525  115F  3400               	retlw	0
  5526  1160  345B               	retlw	91
  5527  1161  3400               	retlw	0
  5528  1162  3453               	retlw	83
  5529  1163  3400               	retlw	0
  5530  1164  3448               	retlw	72
  5531  1165  3400               	retlw	0
  5532  1166  343C               	retlw	60
  5533  1167  3400               	retlw	0
  5534  1168  342E               	retlw	46
  5535  1169  3400               	retlw	0
  5536  116A  3420               	retlw	32
  5537  116B  3400               	retlw	0
  5538  116C  3410               	retlw	16
  5539  116D  3400               	retlw	0
  5540  116E  3400               	retlw	0
  5541  116F  3400               	retlw	0
  5542  1170  34F0               	retlw	240
  5543  1171  3400               	retlw	0
  5544  1172  34E0               	retlw	224
  5545  1173  3400               	retlw	0
  5546  1174  34D2               	retlw	210
  5547  1175  3400               	retlw	0
  5548  1176  34C4               	retlw	196
  5549  1177  3400               	retlw	0
  5550  1178  34B8               	retlw	184
  5551  1179  3400               	retlw	0
  5552  117A  34AD               	retlw	173
  5553  117B  3400               	retlw	0
  5554  117C  34A5               	retlw	165
  5555  117D  3400               	retlw	0
  5556  117E  349F               	retlw	159
  5557  117F  3400               	retlw	0
  5558  1180  349B               	retlw	155
  5559  1181  3400               	retlw	0
  5560  1182  349A               	retlw	154
  5561  1183  3400               	retlw	0
  5562  1184  349B               	retlw	155
  5563  1185  3400               	retlw	0
  5564  1186  349F               	retlw	159
  5565  1187  3400               	retlw	0
  5566  1188  34A5               	retlw	165
  5567  1189  3400               	retlw	0
  5568  118A  34AD               	retlw	173
  5569  118B  3400               	retlw	0
  5570  118C  34B8               	retlw	184
  5571  118D  3400               	retlw	0
  5572  118E  34C4               	retlw	196
  5573  118F  3400               	retlw	0
  5574  1190  34D2               	retlw	210
  5575  1191  3400               	retlw	0
  5576  1192  34E0               	retlw	224
  5577  1193  3400               	retlw	0
  5578  1194  34F0               	retlw	240
  5579  1195  3400               	retlw	0
  5580  1196  3400               	retlw	0
  5581  1197  3400               	retlw	0
  5582  1198  3410               	retlw	16
  5583  1199  3400               	retlw	0
  5584  119A  3420               	retlw	32
  5585  119B  3400               	retlw	0
  5586  119C  342E               	retlw	46
  5587  119D  3400               	retlw	0
  5588  119E  343C               	retlw	60
  5589  119F  3400               	retlw	0
  5590  11A0  3448               	retlw	72
  5591  11A1  3400               	retlw	0
  5592  11A2  3453               	retlw	83
  5593  11A3  3400               	retlw	0
  5594  11A4  345B               	retlw	91
  5595  11A5  3400               	retlw	0
  5596  11A6  3461               	retlw	97
  5597  11A7  3400               	retlw	0
  5598  11A8  3465               	retlw	101
  5599  11A9  3400               	retlw	0
  5600  11AA  3466               	retlw	102
  5601  11AB  3400               	retlw	0
  5602  11AC  3465               	retlw	101
  5603  11AD  3400               	retlw	0
  5604  11AE  3461               	retlw	97
  5605  11AF  3400               	retlw	0
  5606  11B0  345B               	retlw	91
  5607  11B1  3400               	retlw	0
  5608  11B2  3453               	retlw	83
  5609  11B3  3400               	retlw	0
  5610  11B4  3448               	retlw	72
  5611  11B5  3400               	retlw	0
  5612  11B6  343C               	retlw	60
  5613  11B7  3400               	retlw	0
  5614  11B8  342E               	retlw	46
  5615  11B9  3400               	retlw	0
  5616  11BA  3420               	retlw	32
  5617  11BB  3400               	retlw	0
  5618  11BC  3410               	retlw	16
  5619  11BD  3400               	retlw	0
  5620  11BE  3400               	retlw	0
  5621  11BF  3400               	retlw	0
  5622  11C0  34F0               	retlw	240
  5623  11C1  3400               	retlw	0
  5624  11C2  34E0               	retlw	224
  5625  11C3  3400               	retlw	0
  5626  11C4  34D2               	retlw	210
  5627  11C5  3400               	retlw	0
  5628  11C6  34C4               	retlw	196
  5629  11C7  3400               	retlw	0
  5630  11C8  34B8               	retlw	184
  5631  11C9  3400               	retlw	0
  5632  11CA  34AD               	retlw	173
  5633  11CB  3400               	retlw	0
  5634  11CC  34A5               	retlw	165
  5635  11CD  3400               	retlw	0
  5636  11CE  349F               	retlw	159
  5637  11CF  3400               	retlw	0
  5638  11D0  349B               	retlw	155
  5639  11D1  3400               	retlw	0
  5640  11D2  349A               	retlw	154
  5641  11D3  3400               	retlw	0
  5642  11D4  349B               	retlw	155
  5643  11D5  3400               	retlw	0
  5644  11D6  349F               	retlw	159
  5645  11D7  3400               	retlw	0
  5646  11D8  34A5               	retlw	165
  5647  11D9  3400               	retlw	0
  5648  11DA  34AD               	retlw	173
  5649  11DB  3400               	retlw	0
  5650  11DC  34B8               	retlw	184
  5651  11DD  3400               	retlw	0
  5652  11DE  34C4               	retlw	196
  5653  11DF  3400               	retlw	0
  5654  11E0  34D2               	retlw	210
  5655  11E1  3400               	retlw	0
  5656  11E2  34E0               	retlw	224
  5657  11E3  3400               	retlw	0
  5658  11E4  34F0               	retlw	240
  5659  11E5  3400               	retlw	0
  5660  11E6  3400               	retlw	0
  5661  11E7  3400               	retlw	0
  5662  11E8                     __end_ofdrv2665@drv_fifo_sine:	
  5663                           
  5664                           	psect	stringtext10
  5665  295B                     __pstringtext10:	
  5666  295B                     sin@coeff_a:	
  5667  295B  34F4               	retlw	244
  5668  295C  344A               	retlw	74
  5669  295D  3448               	retlw	72
  5670  295E  3495               	retlw	149
  5671  295F  3495               	retlw	149
  5672  2960  34C7               	retlw	199
  5673  2961  34C1               	retlw	193
  5674  2962  34DC               	retlw	220
  5675  2963  3445               	retlw	69
  5676  2964  34DC               	retlw	220
  5677  2965  346D               	retlw	109
  5678  2966  34C3               	retlw	195
  5679  2967  34B3               	retlw	179
  5680  2968  3433               	retlw	51
  5681  2969  3440               	retlw	64
  5682  296A                     __end_ofsin@coeff_a:	
  5683                           
  5684                           	psect	stringtext11
  5685  29A3                     __pstringtext11:	
  5686  29A3                     sin@coeff_b:	
  5687  29A3  3434               	retlw	52
  5688  29A4  3401               	retlw	1
  5689  29A5  3448               	retlw	72
  5690  29A6  349D               	retlw	157
  5691  29A7  34B0               	retlw	176
  5692  29A8  3445               	retlw	69
  5693  29A9  3400               	retlw	0
  5694  29AA  34DA               	retlw	218
  5695  29AB  3442               	retlw	66
  5696  29AC  3400               	retlw	0
  5697  29AD  3480               	retlw	128
  5698  29AE  343F               	retlw	63
  5699  29AF                     __end_ofsin@coeff_b:	
  5700                           
  5701                           	psect	nvBANK0
  5702  005E                     __pnvBANK0:	
  5703  005E                     _eusartTxBufferRemaining:	
  5704  005E                     	ds	1
  5705                           
  5706                           	psect	nvBANK2
  5707  016C                     __pnvBANK2:	
  5708  016C                     _TMR0_InterruptHandler:	
  5709  016C                     	ds	2
  5710                           
  5711                           	psect	nvBANK3
  5712  01D9                     __pnvBANK3:	
  5713  01D9                     _TMR2_InterruptHandler:	
  5714  01D9                     	ds	2
  5715  001F                     _T2CONbits	set	31
  5716  001F                     _T2CON	set	31
  5717  001D                     _TMR2	set	29
  5718  001E                     _PR2	set	30
  5719  0017                     _T0CON0bits	set	23
  5720  0017                     _T0CON0	set	23
  5721  0015                     _TMR0L	set	21
  5722  0016                     _TMR0H	set	22
  5723  0018                     _T0CON1	set	24
  5724  0011                     _PIR1bits	set	17
  5725  0010                     _PIR0bits	set	16
  5726  000E                     _PORTCbits	set	14
  5727  000B                     _INTCONbits	set	11
  5728  0091                     _PIE1bits	set	145
  5729  0090                     _PIE0bits	set	144
  5730  008E                     _TRISC	set	142
  5731  008D                     _TRISB	set	141
  5732  008C                     _TRISA	set	140
  5733  0097                     _WDTCON	set	151
  5734  010C                     _LATAbits	set	268
  5735  010E                     _LATCbits	set	270
  5736  010D                     _LATBbits	set	269
  5737  010E                     _LATC	set	270
  5738  010D                     _LATB	set	269
  5739  010C                     _LATA	set	268
  5740  0199                     _RC1REG	set	409
  5741  019D                     _RC1STAbits	set	413
  5742  019A                     _TX1REG	set	410
  5743  019C                     _SP1BRGH	set	412
  5744  019B                     _SP1BRGL	set	411
  5745  019E                     _TX1STA	set	414
  5746  019D                     _RC1STA	set	413
  5747  019F                     _BAUD1CON	set	415
  5748  018C                     _ANSELA	set	396
  5749  018D                     _ANSELB	set	397
  5750  018E                     _ANSELC	set	398
  5751  0214                     _SSP1STATbits	set	532
  5752  0213                     _SSP1MSK	set	531
  5753  0211                     _SSP1BUF	set	529
  5754  0216                     _SSP1CON2bits	set	534
  5755  0212                     _SSP1ADD	set	530
  5756  0216                     _SSP1CON2	set	534
  5757  0215                     _SSP1CON1	set	533
  5758  0214                     _SSP1STAT	set	532
  5759  0215                     _SSP1CON1bits	set	533
  5760  020E                     _WPUC	set	526
  5761  020C                     _WPUA	set	524
  5762  020D                     _WPUB	set	525
  5763  028E                     _ODCONC	set	654
  5764  028D                     _ODCONB	set	653
  5765  028C                     _ODCONA	set	652
  5766  0896                     _NVMCON2	set	2198
  5767  0893                     _NVMDATL	set	2195
  5768  0894                     _NVMDATH	set	2196
  5769  0895                     _NVMCON1bits	set	2197
  5770  0892                     _NVMADRH	set	2194
  5771  0891                     _NVMADRL	set	2193
  5772  0916                     _PMD5	set	2326
  5773  0915                     _PMD4	set	2325
  5774  0914                     _PMD3	set	2324
  5775  0913                     _PMD2	set	2323
  5776  0912                     _PMD1	set	2322
  5777  0911                     _PMD0	set	2321
  5778  091E                     _OSCTUNE	set	2334
  5779  091F                     _OSCFRQ	set	2335
  5780  091D                     _OSCEN	set	2333
  5781  091B                     _OSCCON3	set	2331
  5782  0919                     _OSCCON1	set	2329
  5783  0E24                     _RXPPSbits	set	3620
  5784  0E20                     _SSP1CLKPPSbits	set	3616
  5785  0E21                     _SSP1DATPPSbits	set	3617
  5786  0E9D                     _RB5PPSbits	set	3741
  5787  0E9E                     _RB6PPSbits	set	3742
  5788  0E9F                     _RB7PPSbits	set	3743
  5789                           
  5790                           	psect	stringtext12
  5791  2828                     __pstringtext12:	
  5792  2828                     STR_42:	
  5793  2828  340A               	retlw	10
  5794  2829  3474               	retlw	116	;'t'
  5795  282A  3465               	retlw	101	;'e'
  5796  282B  3473               	retlw	115	;'s'
  5797  282C  3474               	retlw	116	;'t'
  5798  282D  3469               	retlw	105	;'i'
  5799  282E  346E               	retlw	110	;'n'
  5800  282F  3467               	retlw	103	;'g'
  5801  2830  3420               	retlw	32	;' '
  5802  2831  3462               	retlw	98	;'b'
  5803  2832  346F               	retlw	111	;'o'
  5804  2833  3474               	retlw	116	;'t'
  5805  2834  3474               	retlw	116	;'t'
  5806  2835  346F               	retlw	111	;'o'
  5807  2836  346D               	retlw	109	;'m'
  5808  2837  3420               	retlw	32	;' '
  5809  2838  344C               	retlw	76	;'L'
  5810  2839  3445               	retlw	69	;'E'
  5811  283A  3444               	retlw	68	;'D'
  5812  283B  3420               	retlw	32	;' '
  5813  283C  3464               	retlw	100	;'d'
  5814  283D  3472               	retlw	114	;'r'
  5815  283E  3469               	retlw	105	;'i'
  5816  283F  3476               	retlw	118	;'v'
  5817  2840  3465               	retlw	101	;'e'
  5818  2841  3472               	retlw	114	;'r'
  5819  2842  342E               	retlw	46	;'.'
  5820  2843  342E               	retlw	46	;'.'
  5821  2844  342E               	retlw	46	;'.'
  5822  2845  340A               	retlw	10
  5823  2846  3400               	retlw	0
  5824                           
  5825                           	psect	stringtext13
  5826  2847                     __pstringtext13:	
  5827  2847                     STR_36:	
  5828  2847  340A               	retlw	10
  5829  2848  342D               	retlw	45	;'-'
  5830  2849  342D               	retlw	45	;'-'
  5831  284A  342D               	retlw	45	;'-'
  5832  284B  342D               	retlw	45	;'-'
  5833  284C  3473               	retlw	115	;'s'
  5834  284D  3474               	retlw	116	;'t'
  5835  284E  3461               	retlw	97	;'a'
  5836  284F  3472               	retlw	114	;'r'
  5837  2850  3474               	retlw	116	;'t'
  5838  2851  3469               	retlw	105	;'i'
  5839  2852  346E               	retlw	110	;'n'
  5840  2853  3467               	retlw	103	;'g'
  5841  2854  3420               	retlw	32	;' '
  5842  2855  3463               	retlw	99	;'c'
  5843  2856  346F               	retlw	111	;'o'
  5844  2857  346D               	retlw	109	;'m'
  5845  2858  346D               	retlw	109	;'m'
  5846  2859  3420               	retlw	32	;' '
  5847  285A  3474               	retlw	116	;'t'
  5848  285B  3465               	retlw	101	;'e'
  5849  285C  3473               	retlw	115	;'s'
  5850  285D  3474               	retlw	116	;'t'
  5851  285E  342D               	retlw	45	;'-'
  5852  285F  342D               	retlw	45	;'-'
  5853  2860  342D               	retlw	45	;'-'
  5854  2861  342D               	retlw	45	;'-'
  5855  2862  340A               	retlw	10
  5856  2863  340A               	retlw	10
  5857  2864  3400               	retlw	0
  5858                           
  5859                           	psect	stringtext14
  5860  2865                     __pstringtext14:	
  5861  2865                     STR_50:	
  5862  2865  342D               	retlw	45	;'-'
  5863  2866  342D               	retlw	45	;'-'
  5864  2867  342D               	retlw	45	;'-'
  5865  2868  342D               	retlw	45	;'-'
  5866  2869  3466               	retlw	102	;'f'
  5867  286A  3469               	retlw	105	;'i'
  5868  286B  346E               	retlw	110	;'n'
  5869  286C  3469               	retlw	105	;'i'
  5870  286D  3473               	retlw	115	;'s'
  5871  286E  3468               	retlw	104	;'h'
  5872  286F  3465               	retlw	101	;'e'
  5873  2870  3464               	retlw	100	;'d'
  5874  2871  3420               	retlw	32	;' '
  5875  2872  3463               	retlw	99	;'c'
  5876  2873  346F               	retlw	111	;'o'
  5877  2874  346D               	retlw	109	;'m'
  5878  2875  346D               	retlw	109	;'m'
  5879  2876  3420               	retlw	32	;' '
  5880  2877  3474               	retlw	116	;'t'
  5881  2878  3465               	retlw	101	;'e'
  5882  2879  3473               	retlw	115	;'s'
  5883  287A  3474               	retlw	116	;'t'
  5884  287B  342D               	retlw	45	;'-'
  5885  287C  342D               	retlw	45	;'-'
  5886  287D  342D               	retlw	45	;'-'
  5887  287E  342D               	retlw	45	;'-'
  5888  287F  340A               	retlw	10
  5889  2880  3400               	retlw	0
  5890                           
  5891                           	psect	stringtext15
  5892  2881                     __pstringtext15:	
  5893  2881                     STR_23:	
  5894  2881  3464               	retlw	100	;'d'
  5895  2882  3465               	retlw	101	;'e'
  5896  2883  346D               	retlw	109	;'m'
  5897  2884  346F               	retlw	111	;'o'
  5898  2885  3468               	retlw	104	;'h'
  5899  2886  3465               	retlw	101	;'e'
  5900  2887  3461               	retlw	97	;'a'
  5901  2888  3474               	retlw	116	;'t'
  5902  2889  3465               	retlw	101	;'e'
  5903  288A  3472               	retlw	114	;'r'
  5904  288B  3474               	retlw	116	;'t'
  5905  288C  346F               	retlw	111	;'o'
  5906  288D  3467               	retlw	103	;'g'
  5907  288E  3467               	retlw	103	;'g'
  5908  288F  346C               	retlw	108	;'l'
  5909  2890  3465               	retlw	101	;'e'
  5910  2891  345F               	retlw	95	;'_'
  5911  2892  3474               	retlw	116	;'t'
  5912  2893  346F               	retlw	111	;'o'
  5913  2894  3470               	retlw	112	;'p'
  5914  2895  343A               	retlw	58	;':'
  5915  2896  3420               	retlw	32	;' '
  5916  2897  3425               	retlw	37	;'%'
  5917  2898  346C               	retlw	108	;'l'
  5918  2899  3475               	retlw	117	;'u'
  5919  289A  340A               	retlw	10
  5920  289B  3400               	retlw	0
  5921                           
  5922                           	psect	stringtext16
  5923  289C                     __pstringtext16:	
  5924  289C                     STR_37:	
  5925  289C  3474               	retlw	116	;'t'
  5926  289D  3465               	retlw	101	;'e'
  5927  289E  3473               	retlw	115	;'s'
  5928  289F  3474               	retlw	116	;'t'
  5929  28A0  3469               	retlw	105	;'i'
  5930  28A1  346E               	retlw	110	;'n'
  5931  28A2  3467               	retlw	103	;'g'
  5932  28A3  3420               	retlw	32	;' '
  5933  28A4  3474               	retlw	116	;'t'
  5934  28A5  346F               	retlw	111	;'o'
  5935  28A6  3470               	retlw	112	;'p'
  5936  28A7  3420               	retlw	32	;' '
  5937  28A8  344C               	retlw	76	;'L'
  5938  28A9  3445               	retlw	69	;'E'
  5939  28AA  3444               	retlw	68	;'D'
  5940  28AB  3420               	retlw	32	;' '
  5941  28AC  3464               	retlw	100	;'d'
  5942  28AD  3472               	retlw	114	;'r'
  5943  28AE  3469               	retlw	105	;'i'
  5944  28AF  3476               	retlw	118	;'v'
  5945  28B0  3465               	retlw	101	;'e'
  5946  28B1  3472               	retlw	114	;'r'
  5947  28B2  342E               	retlw	46	;'.'
  5948  28B3  342E               	retlw	46	;'.'
  5949  28B4  342E               	retlw	46	;'.'
  5950  28B5  3400               	retlw	0
  5951                           
  5952                           	psect	stringtext17
  5953  28B6                     __pstringtext17:	
  5954  28B6                     STR_47:	
  5955  28B6  340A               	retlw	10
  5956  28B7  3474               	retlw	116	;'t'
  5957  28B8  3465               	retlw	101	;'e'
  5958  28B9  3473               	retlw	115	;'s'
  5959  28BA  3474               	retlw	116	;'t'
  5960  28BB  3469               	retlw	105	;'i'
  5961  28BC  346E               	retlw	110	;'n'
  5962  28BD  3467               	retlw	103	;'g'
  5963  28BE  3420               	retlw	32	;' '
  5964  28BF  3470               	retlw	112	;'p'
  5965  28C0  3469               	retlw	105	;'i'
  5966  28C1  3465               	retlw	101	;'e'
  5967  28C2  347A               	retlw	122	;'z'
  5968  28C3  346F               	retlw	111	;'o'
  5969  28C4  3420               	retlw	32	;' '
  5970  28C5  3464               	retlw	100	;'d'
  5971  28C6  3472               	retlw	114	;'r'
  5972  28C7  3469               	retlw	105	;'i'
  5973  28C8  3476               	retlw	118	;'v'
  5974  28C9  3465               	retlw	101	;'e'
  5975  28CA  3472               	retlw	114	;'r'
  5976  28CB  342E               	retlw	46	;'.'
  5977  28CC  342E               	retlw	46	;'.'
  5978  28CD  342E               	retlw	46	;'.'
  5979  28CE  3400               	retlw	0
  5980                           
  5981                           	psect	stringtext18
  5982  28CF                     __pstringtext18:	
  5983  28CF                     STR_80:	
  5984  28CF  3455               	retlw	85	;'U'
  5985  28D0  344E               	retlw	78	;'N'
  5986  28D1  3452               	retlw	82	;'R'
  5987  28D2  3445               	retlw	69	;'E'
  5988  28D3  3443               	retlw	67	;'C'
  5989  28D4  344F               	retlw	79	;'O'
  5990  28D5  3447               	retlw	71	;'G'
  5991  28D6  344E               	retlw	78	;'N'
  5992  28D7  3449               	retlw	73	;'I'
  5993  28D8  345A               	retlw	90	;'Z'
  5994  28D9  3445               	retlw	69	;'E'
  5995  28DA  3444               	retlw	68	;'D'
  5996  28DB  3420               	retlw	32	;' '
  5997  28DC  3443               	retlw	67	;'C'
  5998  28DD  344F               	retlw	79	;'O'
  5999  28DE  344D               	retlw	77	;'M'
  6000  28DF  344D               	retlw	77	;'M'
  6001  28E0  3441               	retlw	65	;'A'
  6002  28E1  344E               	retlw	78	;'N'
  6003  28E2  3444               	retlw	68	;'D'
  6004  28E3  3421               	retlw	33	;'!'
  6005  28E4  340A               	retlw	10
  6006  28E5  3400               	retlw	0
  6007                           
  6008                           	psect	stringtext19
  6009  28E6                     __pstringtext19:	
  6010  28E6                     STR_52:	
  6011  28E6  3464               	retlw	100	;'d'
  6012  28E7  3472               	retlw	114	;'r'
  6013  28E8  3476               	retlw	118	;'v'
  6014  28E9  345F               	retlw	95	;'_'
  6015  28EA  3477               	retlw	119	;'w'
  6016  28EB  3472               	retlw	114	;'r'
  6017  28EC  3469               	retlw	105	;'i'
  6018  28ED  3474               	retlw	116	;'t'
  6019  28EE  3465               	retlw	101	;'e'
  6020  28EF  3420               	retlw	32	;' '
  6021  28F0  3465               	retlw	101	;'e'
  6022  28F1  3472               	retlw	114	;'r'
  6023  28F2  3472               	retlw	114	;'r'
  6024  28F3  346F               	retlw	111	;'o'
  6025  28F4  3472               	retlw	114	;'r'
  6026  28F5  3421               	retlw	33	;'!'
  6027  28F6  340A               	retlw	10
  6028  28F7  3400               	retlw	0
  6029                           
  6030                           	psect	stringtext20
  6031  28F8                     __pstringtext20:	
  6032  28F8                     STR_54:	
  6033  28F8  3464               	retlw	100	;'d'
  6034  28F9  3472               	retlw	114	;'r'
  6035  28FA  3476               	retlw	118	;'v'
  6036  28FB  345F               	retlw	95	;'_'
  6037  28FC  3472               	retlw	114	;'r'
  6038  28FD  3465               	retlw	101	;'e'
  6039  28FE  3461               	retlw	97	;'a'
  6040  28FF  3464               	retlw	100	;'d'
  6041  2900  3420               	retlw	32	;' '
  6042  2901  3465               	retlw	101	;'e'
  6043  2902  3472               	retlw	114	;'r'
  6044  2903  3472               	retlw	114	;'r'
  6045  2904  346F               	retlw	111	;'o'
  6046  2905  3472               	retlw	114	;'r'
  6047  2906  3421               	retlw	33	;'!'
  6048  2907  340A               	retlw	10
  6049  2908  3400               	retlw	0
  6050                           
  6051                           	psect	stringtext21
  6052  2909                     __pstringtext21:	
  6053  2909                     STR_55:	
  6054  2909  3466               	retlw	102	;'f'
  6055  290A  3469               	retlw	105	;'i'
  6056  290B  3466               	retlw	102	;'f'
  6057  290C  346F               	retlw	111	;'o'
  6058  290D  3420               	retlw	32	;' '
  6059  290E  346E               	retlw	110	;'n'
  6060  290F  346F               	retlw	111	;'o'
  6061  2910  3474               	retlw	116	;'t'
  6062  2911  3420               	retlw	32	;' '
  6063  2912  3472               	retlw	114	;'r'
  6064  2913  3465               	retlw	101	;'e'
  6065  2914  3461               	retlw	97	;'a'
  6066  2915  3464               	retlw	100	;'d'
  6067  2916  3479               	retlw	121	;'y'
  6068  2917  3421               	retlw	33	;'!'
  6069  2918  340A               	retlw	10
  6070  2919  3400               	retlw	0
  6071                           
  6072                           	psect	stringtext22
  6073  291A                     __pstringtext22:	
  6074  291A                     STR_51:	
  6075  291A  3464               	retlw	100	;'d'
  6076  291B  3472               	retlw	114	;'r'
  6077  291C  3476               	retlw	118	;'v'
  6078  291D  3420               	retlw	32	;' '
  6079  291E  3469               	retlw	105	;'i'
  6080  291F  346E               	retlw	110	;'n'
  6081  2920  3469               	retlw	105	;'i'
  6082  2921  3474               	retlw	116	;'t'
  6083  2922  3469               	retlw	105	;'i'
  6084  2923  3461               	retlw	97	;'a'
  6085  2924  346C               	retlw	108	;'l'
  6086  2925  3469               	retlw	105	;'i'
  6087  2926  347A               	retlw	122	;'z'
  6088  2927  3465               	retlw	101	;'e'
  6089  2928  3464               	retlw	100	;'d'
  6090  2929  340A               	retlw	10
  6091  292A  3400               	retlw	0
  6092                           
  6093                           	psect	stringtext23
  6094  292B                     __pstringtext23:	
  6095  292B                     STR_12:	
  6096  292B  3472               	retlw	114	;'r'
  6097  292C  3465               	retlw	101	;'e'
  6098  292D  346C               	retlw	108	;'l'
  6099  292E  343A               	retlw	58	;':'
  6100  292F  3420               	retlw	32	;' '
  6101  2930  3461               	retlw	97	;'a'
  6102  2931  346C               	retlw	108	;'l'
  6103  2932  346C               	retlw	108	;'l'
  6104  2933  3420               	retlw	32	;' '
  6105  2934  3474               	retlw	116	;'t'
  6106  2935  3468               	retlw	104	;'h'
  6107  2936  3465               	retlw	101	;'e'
  6108  2937  3472               	retlw	114	;'r'
  6109  2938  3465               	retlw	101	;'e'
  6110  2939  340A               	retlw	10
  6111  293A  3400               	retlw	0
  6112                           
  6113                           	psect	stringtext24
  6114  293B                     __pstringtext24:	
  6115  293B                     STR_10:	
  6116  293B  3461               	retlw	97	;'a'
  6117  293C  3462               	retlw	98	;'b'
  6118  293D  3473               	retlw	115	;'s'
  6119  293E  343A               	retlw	58	;':'
  6120  293F  3420               	retlw	32	;' '
  6121  2940  3461               	retlw	97	;'a'
  6122  2941  346C               	retlw	108	;'l'
  6123  2942  346C               	retlw	108	;'l'
  6124  2943  3420               	retlw	32	;' '
  6125  2944  3474               	retlw	116	;'t'
  6126  2945  3468               	retlw	104	;'h'
  6127  2946  3465               	retlw	101	;'e'
  6128  2947  3472               	retlw	114	;'r'
  6129  2948  3465               	retlw	101	;'e'
  6130  2949  340A               	retlw	10
  6131  294A  3400               	retlw	0
  6132                           
  6133                           	psect	stringtext25
  6134  294B                     __pstringtext25:	
  6135  294B                     STR_3:	
  6136  294B  3472               	retlw	114	;'r'
  6137  294C  3465               	retlw	101	;'e'
  6138  294D  3461               	retlw	97	;'a'
  6139  294E  3464               	retlw	100	;'d'
  6140  294F  3420               	retlw	32	;' '
  6141  2950  3464               	retlw	100	;'d'
  6142  2951  3461               	retlw	97	;'a'
  6143  2952  3474               	retlw	116	;'t'
  6144  2953  3461               	retlw	97	;'a'
  6145  2954  343A               	retlw	58	;':'
  6146  2955  3420               	retlw	32	;' '
  6147  2956  3425               	retlw	37	;'%'
  6148  2957  346C               	retlw	108	;'l'
  6149  2958  3475               	retlw	117	;'u'
  6150  2959  340A               	retlw	10
  6151  295A  3400               	retlw	0
  6152                           
  6153                           	psect	stringtext26
  6154  296A                     __pstringtext26:	
  6155  296A                     STR_69:	
  6156  296A  3468               	retlw	104	;'h'
  6157  296B  3465               	retlw	101	;'e'
  6158  296C  3461               	retlw	97	;'a'
  6159  296D  3474               	retlw	116	;'t'
  6160  296E  3465               	retlw	101	;'e'
  6161  296F  3472               	retlw	114	;'r'
  6162  2970  3470               	retlw	112	;'p'
  6163  2971  346F               	retlw	111	;'o'
  6164  2972  3473               	retlw	115	;'s'
  6165  2973  3474               	retlw	116	;'t'
  6166  2974  3474               	retlw	116	;'t'
  6167  2975  3469               	retlw	105	;'i'
  6168  2976  346D               	retlw	109	;'m'
  6169  2977  3465               	retlw	101	;'e'
  6170  2978  3400               	retlw	0
  6171                           
  6172                           	psect	stringtext27
  6173  2979                     __pstringtext27:	
  6174  2979                     STR_4:	
  6175  2979  340A               	retlw	10
  6176  297A  340A               	retlw	10
  6177  297B  3473               	retlw	115	;'s'
  6178  297C  3479               	retlw	121	;'y'
  6179  297D  3473               	retlw	115	;'s'
  6180  297E  3474               	retlw	116	;'t'
  6181  297F  3465               	retlw	101	;'e'
  6182  2980  346D               	retlw	109	;'m'
  6183  2981  3420               	retlw	32	;' '
  6184  2982  3464               	retlw	100	;'d'
  6185  2983  346F               	retlw	111	;'o'
  6186  2984  346E               	retlw	110	;'n'
  6187  2985  3465               	retlw	101	;'e'
  6188  2986  340A               	retlw	10
  6189  2987  3400               	retlw	0
  6190                           
  6191                           	psect	stringtext28
  6192  2988                     __pstringtext28:	
  6193  2988                     STR_68:	
  6194  2988  3468               	retlw	104	;'h'
  6195  2989  3465               	retlw	101	;'e'
  6196  298A  3461               	retlw	97	;'a'
  6197  298B  3474               	retlw	116	;'t'
  6198  298C  3465               	retlw	101	;'e'
  6199  298D  3472               	retlw	114	;'r'
  6200  298E  3470               	retlw	112	;'p'
  6201  298F  3472               	retlw	114	;'r'
  6202  2990  3465               	retlw	101	;'e'
  6203  2991  3474               	retlw	116	;'t'
  6204  2992  3469               	retlw	105	;'i'
  6205  2993  346D               	retlw	109	;'m'
  6206  2994  3465               	retlw	101	;'e'
  6207  2995  3400               	retlw	0
  6208                           
  6209                           	psect	stringtext29
  6210  2996                     __pstringtext29:	
  6211  2996                     STR_72:	
  6212  2996  3474               	retlw	116	;'t'
  6213  2997  346F               	retlw	111	;'o'
  6214  2998  3467               	retlw	103	;'g'
  6215  2999  3467               	retlw	103	;'g'
  6216  299A  346C               	retlw	108	;'l'
  6217  299B  3465               	retlw	101	;'e'
  6218  299C  3468               	retlw	104	;'h'
  6219  299D  3465               	retlw	101	;'e'
  6220  299E  3461               	retlw	97	;'a'
  6221  299F  3474               	retlw	116	;'t'
  6222  29A0  3465               	retlw	101	;'e'
  6223  29A1  3472               	retlw	114	;'r'
  6224  29A2  3400               	retlw	0
  6225                           
  6226                           	psect	stringtext30
  6227  29AF                     __pstringtext30:	
  6228  29AF                     STR_67:	
  6229  29AF  3470               	retlw	112	;'p'
  6230  29B0  3469               	retlw	105	;'i'
  6231  29B1  3465               	retlw	101	;'e'
  6232  29B2  347A               	retlw	122	;'z'
  6233  29B3  346F               	retlw	111	;'o'
  6234  29B4  346F               	retlw	111	;'o'
  6235  29B5  346E               	retlw	110	;'n'
  6236  29B6  3474               	retlw	116	;'t'
  6237  29B7  3469               	retlw	105	;'i'
  6238  29B8  346D               	retlw	109	;'m'
  6239  29B9  3465               	retlw	101	;'e'
  6240  29BA  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext31
  6243  29BB                     __pstringtext31:	
  6244  29BB                     STR_11:	
  6245  29BB  3464               	retlw	100	;'d'
  6246  29BC  346F               	retlw	111	;'o'
  6247  29BD  3452               	retlw	82	;'R'
  6248  29BE  3465               	retlw	101	;'e'
  6249  29BF  346C               	retlw	108	;'l'
  6250  29C0  344D               	retlw	77	;'M'
  6251  29C1  346F               	retlw	111	;'o'
  6252  29C2  3476               	retlw	118	;'v'
  6253  29C3  3465               	retlw	101	;'e'
  6254  29C4  340A               	retlw	10
  6255  29C5  3400               	retlw	0
  6256                           
  6257                           	psect	stringtext32
  6258  29C6                     __pstringtext32:	
  6259  29C6                     STR_41:	
  6260  29C6  340A               	retlw	10
  6261  29C7  340A               	retlw	10
  6262  29C8  3473               	retlw	115	;'s'
  6263  29C9  3468               	retlw	104	;'h'
  6264  29CA  346F               	retlw	111	;'o'
  6265  29CB  3472               	retlw	114	;'r'
  6266  29CC  3474               	retlw	116	;'t'
  6267  29CD  3473               	retlw	115	;'s'
  6268  29CE  343A               	retlw	58	;':'
  6269  29CF  3420               	retlw	32	;' '
  6270  29D0  3400               	retlw	0
  6271                           
  6272                           	psect	stringtext33
  6273  29D1                     __pstringtext33:	
  6274  29D1                     STR_49:	
  6275  29D1  3446               	retlw	70	;'F'
  6276  29D2  3441               	retlw	65	;'A'
  6277  29D3  3449               	retlw	73	;'I'
  6278  29D4  344C               	retlw	76	;'L'
  6279  29D5  3445               	retlw	69	;'E'
  6280  29D6  3444               	retlw	68	;'D'
  6281  29D7  340A               	retlw	10
  6282  29D8  340A               	retlw	10
  6283  29D9  3400               	retlw	0
  6284                           
  6285                           	psect	stringtext34
  6286  29DA                     __pstringtext34:	
  6287  29DA                     STR_48:	
  6288  29DA  3470               	retlw	112	;'p'
  6289  29DB  3461               	retlw	97	;'a'
  6290  29DC  3473               	retlw	115	;'s'
  6291  29DD  3473               	retlw	115	;'s'
  6292  29DE  3465               	retlw	101	;'e'
  6293  29DF  3464               	retlw	100	;'d'
  6294  29E0  340A               	retlw	10
  6295  29E1  340A               	retlw	10
  6296  29E2  3400               	retlw	0
  6297                           
  6298                           	psect	stringtext35
  6299  29E3                     __pstringtext35:	
  6300  29E3                     STR_65:	
  6301  29E3  3464               	retlw	100	;'d'
  6302  29E4  3472               	retlw	114	;'r'
  6303  29E5  3476               	retlw	118	;'v'
  6304  29E6  3450               	retlw	80	;'P'
  6305  29E7  3465               	retlw	101	;'e'
  6306  29E8  3461               	retlw	97	;'a'
  6307  29E9  346B               	retlw	107	;'k'
  6308  29EA  3400               	retlw	0
  6309                           
  6310                           	psect	stringtext36
  6311  29EB                     __pstringtext36:	
  6312  29EB                     STR_66:	
  6313  29EB  3464               	retlw	100	;'d'
  6314  29EC  3472               	retlw	114	;'r'
  6315  29ED  3476               	retlw	118	;'v'
  6316  29EE  3447               	retlw	71	;'G'
  6317  29EF  3461               	retlw	97	;'a'
  6318  29F0  3469               	retlw	105	;'i'
  6319  29F1  346E               	retlw	110	;'n'
  6320  29F2  3400               	retlw	0
  6321                           
  6322                           	psect	stringtext37
  6323  29F3                     __pstringtext37:	
  6324  29F3                     STR_70:	
  6325  29F3  346C               	retlw	108	;'l'
  6326  29F4  3465               	retlw	101	;'e'
  6327  29F5  3464               	retlw	100	;'d'
  6328  29F6  3467               	retlw	103	;'g'
  6329  29F7  3461               	retlw	97	;'a'
  6330  29F8  3469               	retlw	105	;'i'
  6331  29F9  346E               	retlw	110	;'n'
  6332  29FA  3400               	retlw	0
  6333                           
  6334                           	psect	stringtext38
  6335  29FB                     __pstringtext38:	
  6336  29FB                     STR_75:	
  6337  29FB  346D               	retlw	109	;'m'
  6338  29FC  3473               	retlw	115	;'s'
  6339  29FD  3474               	retlw	116	;'t'
  6340  29FE  3461               	retlw	97	;'a'
  6341  29FF  3474               	retlw	116	;'t'
  6342  2A00  3475               	retlw	117	;'u'
  6343  2A01  3473               	retlw	115	;'s'
  6344  2A02  3400               	retlw	0
  6345                           
  6346                           	psect	stringtext39
  6347  2A03                     __pstringtext39:	
  6348  2A03                     STR_39:	
  6349  2A03  3446               	retlw	70	;'F'
  6350  2A04  3441               	retlw	65	;'A'
  6351  2A05  3449               	retlw	73	;'I'
  6352  2A06  344C               	retlw	76	;'L'
  6353  2A07  3445               	retlw	69	;'E'
  6354  2A08  3444               	retlw	68	;'D'
  6355  2A09  340A               	retlw	10
  6356  2A0A  3400               	retlw	0
  6357                           
  6358                           	psect	stringtext40
  6359  2A0B                     __pstringtext40:	
  6360  2A0B                     STR_38:	
  6361  2A0B  3470               	retlw	112	;'p'
  6362  2A0C  3461               	retlw	97	;'a'
  6363  2A0D  3473               	retlw	115	;'s'
  6364  2A0E  3473               	retlw	115	;'s'
  6365  2A0F  3465               	retlw	101	;'e'
  6366  2A10  3464               	retlw	100	;'d'
  6367  2A11  340A               	retlw	10
  6368  2A12  3400               	retlw	0
  6369                           
  6370                           	psect	stringtext41
  6371  2A13                     __pstringtext41:	
  6372  2A13                     STR_6:	
  6373  2A13  3464               	retlw	100	;'d'
  6374  2A14  346F               	retlw	111	;'o'
  6375  2A15  344D               	retlw	77	;'M'
  6376  2A16  346F               	retlw	111	;'o'
  6377  2A17  3476               	retlw	118	;'v'
  6378  2A18  3465               	retlw	101	;'e'
  6379  2A19  340A               	retlw	10
  6380  2A1A  3400               	retlw	0
  6381                           
  6382                           	psect	stringtext42
  6383  2A1B                     __pstringtext42:	
  6384  2A1B                     STR_40:	
  6385  2A1B  346F               	retlw	111	;'o'
  6386  2A1C  3470               	retlw	112	;'p'
  6387  2A1D  3465               	retlw	101	;'e'
  6388  2A1E  346E               	retlw	110	;'n'
  6389  2A1F  3473               	retlw	115	;'s'
  6390  2A20  343A               	retlw	58	;':'
  6391  2A21  3420               	retlw	32	;' '
  6392  2A22  3400               	retlw	0
  6393                           
  6394                           	psect	stringtext43
  6395  2A23                     __pstringtext43:	
  6396  2A23                     STR_76:	
  6397  2A23  3464               	retlw	100	;'d'
  6398  2A24  346F               	retlw	111	;'o'
  6399  2A25  346D               	retlw	109	;'m'
  6400  2A26  346F               	retlw	111	;'o'
  6401  2A27  3476               	retlw	118	;'v'
  6402  2A28  3465               	retlw	101	;'e'
  6403  2A29  3400               	retlw	0
  6404                           
  6405                           	psect	stringtext44
  6406  2A2A                     __pstringtext44:	
  6407  2A2A                     STR_71:	
  6408  2A2A  346C               	retlw	108	;'l'
  6409  2A2B  3465               	retlw	101	;'e'
  6410  2A2C  3464               	retlw	100	;'d'
  6411  2A2D  3470               	retlw	112	;'p'
  6412  2A2E  3477               	retlw	119	;'w'
  6413  2A2F  3472               	retlw	114	;'r'
  6414  2A30  3400               	retlw	0
  6415                           
  6416                           	psect	stringtext45
  6417  2A31                     __pstringtext45:	
  6418  2A31                     STR_73:	
  6419  2A31  3467               	retlw	103	;'g'
  6420  2A32  3465               	retlw	101	;'e'
  6421  2A33  3474               	retlw	116	;'t'
  6422  2A34  3441               	retlw	65	;'A'
  6423  2A35  3400               	retlw	0
  6424                           
  6425                           	psect	stringtext46
  6426  2A36                     __pstringtext46:	
  6427  2A36                     STR_62:	
  6428  2A36  3473               	retlw	115	;'s'
  6429  2A37  3465               	retlw	101	;'e'
  6430  2A38  3474               	retlw	116	;'t'
  6431  2A39  3441               	retlw	65	;'A'
  6432  2A3A  3400               	retlw	0
  6433                           
  6434                           	psect	stringtext47
  6435  2A3B                     __pstringtext47:	
  6436  2A3B                     STR_74:	
  6437  2A3B  3467               	retlw	103	;'g'
  6438  2A3C  3465               	retlw	101	;'e'
  6439  2A3D  3474               	retlw	116	;'t'
  6440  2A3E  344D               	retlw	77	;'M'
  6441  2A3F  3400               	retlw	0
  6442                           
  6443                           	psect	stringtext48
  6444  2A40                     __pstringtext48:	
  6445  2A40                     STR_63:	
  6446  2A40  3473               	retlw	115	;'s'
  6447  2A41  3465               	retlw	101	;'e'
  6448  2A42  3474               	retlw	116	;'t'
  6449  2A43  344D               	retlw	77	;'M'
  6450  2A44  3400               	retlw	0
  6451                           
  6452                           	psect	stringtext49
  6453  2A45                     __pstringtext49:	
  6454  2A45                     STR_78:	
  6455  2A45  3470               	retlw	112	;'p'
  6456  2A46  3469               	retlw	105	;'i'
  6457  2A47  346E               	retlw	110	;'n'
  6458  2A48  3467               	retlw	103	;'g'
  6459  2A49  3400               	retlw	0
  6460                           
  6461                           	psect	stringtext50
  6462  2A4A                     __pstringtext50:	
  6463  2A4A                     STR_77:	
  6464  2A4A  3463               	retlw	99	;'c'
  6465  2A4B  346F               	retlw	111	;'o'
  6466  2A4C  346D               	retlw	109	;'m'
  6467  2A4D  346D               	retlw	109	;'m'
  6468  2A4E  3400               	retlw	0
  6469                           
  6470                           	psect	stringtext51
  6471  2A4F                     __pstringtext51:	
  6472  2A4F                     STR_58:	
  6473  2A4F  3472               	retlw	114	;'r'
  6474  2A50  3465               	retlw	101	;'e'
  6475  2A51  346C               	retlw	108	;'l'
  6476  2A52  3400               	retlw	0
  6477                           
  6478                           	psect	stringtext52
  6479  2A53                     __pstringtext52:	
  6480  2A53                     STR_59:	
  6481  2A53  3461               	retlw	97	;'a'
  6482  2A54  3462               	retlw	98	;'b'
  6483  2A55  3473               	retlw	115	;'s'
  6484  2A56  3400               	retlw	0
  6485                           
  6486                           	psect	stringtext53
  6487  2A57                     __pstringtext53:	
  6488  2A57                     STR_60:	
  6489  2A57  3470               	retlw	112	;'p'
  6490  2A58  346F               	retlw	111	;'o'
  6491  2A59  3473               	retlw	115	;'s'
  6492  2A5A  3400               	retlw	0
  6493                           
  6494                           	psect	stringtext54
  6495  2A5B                     __pstringtext54:	
  6496  2A5B                     STR_14:	
  6497  2A5B  3425               	retlw	37	;'%'
  6498  2A5C  3464               	retlw	100	;'d'
  6499  2A5D  340A               	retlw	10
  6500  2A5E  3400               	retlw	0
  6501                           
  6502                           	psect	stringtext55
  6503  2A5F                     __pstringtext55:	
  6504  2A5F                     STR_1:	
  6505  2A5F  3425               	retlw	37	;'%'
  6506  2A60  3464               	retlw	100	;'d'
  6507  2A61  3420               	retlw	32	;' '
  6508  2A62  3400               	retlw	0
  6509                           
  6510                           	psect	stringtext56
  6511  2A69                     __pstringtext56:	
  6512  2A69                     STR_7:	
  6513  2A69  3441               	retlw	65	;'A'
  6514  2A6A  340A               	retlw	10
  6515  2A6B  3400               	retlw	0
  6516                           
  6517                           	psect	stringtext57
  6518  2A6C                     __pstringtext57:	
  6519  2A6C                     STR_16:	
  6520  2A6C  3445               	retlw	69	;'E'
  6521  2A6D  340A               	retlw	10
  6522  2A6E  3400               	retlw	0
  6523                           
  6524                           	psect	stringtext58
  6525  2A71                     __pstringtext58:	
  6526  2A71                     STR_64:	
  6527  2A71  347A               	retlw	122	;'z'
  6528  2A72  3400               	retlw	0
  6529                           
  6530                           	psect	stringtext59
  6531  2A73                     __pstringtext59:	
  6532  2A73                     STR_35:	
  6533  2A73  344E               	retlw	78	;'N'
  6534  2A74  3400               	retlw	0
  6535                           
  6536                           	psect	stringtext60
  6537  2A75                     __pstringtext60:	
  6538  2A75                     STR_33:	
  6539  2A75  3452               	retlw	82	;'R'
  6540  2A76  3400               	retlw	0
  6541                           
  6542                           	psect	stringtext61
  6543  0000                     __pstringtext61:	
  6544  2863                     
  6545                           ; #config settings
  6546  0000                     
  6547                           	psect	cinit
  6548  0052                     start_initialization:	
  6549  0052                     __initialization:		;BIGRAM
  6550                           
  6551                           ; Initialize objects allocated to BANK0
  6552  0052  30D2               	movlw	low __pidataBANK0
  6553  0053  0084               	movwf	4
  6554  0054  30A2               	movlw	(high __pidataBANK0)| (0+128)
  6555  0055  0085               	movwf	5
  6556  0056  305A               	movlw	low __pdataBANK0
  6557  0057  0086               	movwf	6
  6558  0058  3000               	movlw	high __pdataBANK0
  6559  0059  0087               	movwf	7
  6560  005A  3000               	movlw	0
  6561  005B  00FF               	movwf	btemp+1
  6562  005C  3004               	movlw	4
  6563  005D  31A4  242E  3180   	fcall	init_ram
  6564                           
  6565                           ; Initialize objects allocated to BANK1
  6566  0060  3012               	movlw	low __pidataBANK1
  6567  0061  0084               	movwf	4
  6568  0062  30A3               	movlw	(high __pidataBANK1)| (0+128)
  6569  0063  0085               	movwf	5
  6570  0064  30E9               	movlw	low __pdataBANK1
  6571  0065  0086               	movwf	6
  6572  0066  3000               	movlw	high __pdataBANK1
  6573  0067  0087               	movwf	7
  6574  0068  3000               	movlw	0
  6575  0069  00FF               	movwf	btemp+1
  6576  006A  3006               	movlw	6
  6577  006B  31A4  242E  3180   	fcall	init_ram
  6578                           
  6579                           ; Initialize objects allocated to BANK2
  6580  006E  0022               	movlb	2	; select bank2
  6581  006F  3187  27FE  3180   	fcall	__pidataBANK2	;fetch initializer
  6582  0072  00EE               	movwf	__pdataBANK2& (0+127)
  6583  0073  3187  27FF  3180   	fcall	__pidataBANK2+1	;fetch initializer
  6584  0076  00EF               	movwf	(__pdataBANK2+1)& (0+127)
  6585                           
  6586                           ; Initialize objects allocated to BANK4
  6587  0077  3055               	movlw	low __pidataBANK4
  6588  0078  0084               	movwf	4
  6589  0079  30A6               	movlw	(high __pidataBANK4)| (0+128)
  6590  007A  0085               	movwf	5
  6591  007B  3020               	movlw	low __pdataBANK4
  6592  007C  0086               	movwf	6
  6593  007D  3002               	movlw	high __pdataBANK4
  6594  007E  0087               	movwf	7
  6595  007F  3000               	movlw	0
  6596  0080  00FF               	movwf	btemp+1
  6597  0081  3020               	movlw	32
  6598  0082  31A4  242E  3180   	fcall	init_ram
  6599                           
  6600                           ; Clear objects allocated to BIGRAM
  6601  0085  3090               	movlw	low (0+10128)
  6602  0086  0084               	movwf	4
  6603  0087  3027               	movlw	high (0+10128)
  6604  0088  0085               	movwf	5
  6605  0089  3060               	movlw	96
  6606  008A  00FE               	movwf	btemp
  6607  008B  3000               	movlw	0
  6608  008C  00FF               	movwf	btemp+1
  6609  008D  31A4  2422  3180   	fcall	clear_ram0
  6610                           
  6611                           ; Clear objects allocated to COMMON
  6612  0090  01FD               	clrf	__pbssCOMMON& (0+127)
  6613                           
  6614                           ; Clear objects allocated to BANK0
  6615  0091  304E               	movlw	low __pbssBANK0
  6616  0092  0084               	movwf	4
  6617  0093  3000               	movlw	high __pbssBANK0
  6618  0094  0085               	movwf	5
  6619  0095  300C               	movlw	12
  6620  0096  00FE               	movwf	btemp
  6621  0097  3000               	movlw	0
  6622  0098  00FF               	movwf	btemp+1
  6623  0099  31A4  2422  3180   	fcall	clear_ram0
  6624                           
  6625                           ; Clear objects allocated to BANK1
  6626  009C  30D9               	movlw	low __pbssBANK1
  6627  009D  0084               	movwf	4
  6628  009E  3000               	movlw	high __pbssBANK1
  6629  009F  0085               	movwf	5
  6630  00A0  3010               	movlw	16
  6631  00A1  00FE               	movwf	btemp
  6632  00A2  3000               	movlw	0
  6633  00A3  00FF               	movwf	btemp+1
  6634  00A4  31A4  2422  3180   	fcall	clear_ram0
  6635                           
  6636                           ; Clear objects allocated to BANK2
  6637  00A7  3020               	movlw	low __pbssBANK2
  6638  00A8  0084               	movwf	4
  6639  00A9  3001               	movlw	high __pbssBANK2
  6640  00AA  0085               	movwf	5
  6641  00AB  304C               	movlw	76
  6642  00AC  00FE               	movwf	btemp
  6643  00AD  3000               	movlw	0
  6644  00AE  00FF               	movwf	btemp+1
  6645  00AF  31A4  2422  3180   	fcall	clear_ram0
  6646                           
  6647                           ; Clear objects allocated to BANK3
  6648  00B2  30A0               	movlw	low __pbssBANK3
  6649  00B3  0084               	movwf	4
  6650  00B4  3001               	movlw	high __pbssBANK3
  6651  00B5  0085               	movwf	5
  6652  00B6  3039               	movlw	57
  6653  00B7  00FE               	movwf	btemp
  6654  00B8  3000               	movlw	0
  6655  00B9  00FF               	movwf	btemp+1
  6656  00BA  31A4  2422         	fcall	clear_ram0
  6657  00BC                     end_of_initialization:	
  6658                           ;End of C runtime variable initialization code
  6659                           
  6660  00BC                     __end_of__initialization:	
  6661  00BC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6662  00BD  0020               	movlb	0
  6663  00BE  3195  2D49         	ljmp	_main	;jump to C main() function
  6664                           
  6665                           	psect	bssCOMMON
  6666  007D                     __pbssCOMMON:	
  6667  007D                     _eusartTxHead:	
  6668  007D                     	ds	1
  6669                           
  6670                           	psect	bssBANK0
  6671  004E                     __pbssBANK0:	
  6672  004E                     _absCommand:	
  6673  004E                     	ds	4
  6674  0052                     _readIdx:	
  6675  0052                     	ds	2
  6676  0054                     strtok@sp:	
  6677  0054                     	ds	1
  6678  0055                     _motionType:	
  6679  0055                     	ds	1
  6680  0056                     _eusartRxCount:	
  6681  0056                     	ds	1
  6682  0057                     _eusartRxTail:	
  6683  0057                     	ds	1
  6684  0058                     _eusartRxHead:	
  6685  0058                     	ds	1
  6686  0059                     _eusartTxTail:	
  6687  0059                     	ds	1
  6688                           
  6689                           	psect	dataBANK0
  6690  005A                     __pdataBANK0:	
  6691  005A                     _demoLong:	
  6692  005A                     	ds	4
  6693                           
  6694                           	psect	bssBANK1
  6695  00D9                     __pbssBANK1:	
  6696  00D9                     _moveMask:	
  6697  00D9                     	ds	4
  6698  00DD                     _activeMask:	
  6699  00DD                     	ds	4
  6700  00E1                     _moveVector_downs:	
  6701  00E1                     	ds	4
  6702  00E5                     _moveVector_ups:	
  6703  00E5                     	ds	4
  6704                           
  6705                           	psect	dataBANK1
  6706  00E9                     __pdataBANK1:	
  6707  00E9                     _piezo_on_time_ms:	
  6708  00E9                     	ds	2
  6709  00EB                     _heater_post_time_ms:	
  6710  00EB                     	ds	2
  6711  00ED                     _heater_pre_time_ms:	
  6712  00ED                     	ds	2
  6713                           
  6714                           	psect	bssBANK2
  6715  0120                     __pbssBANK2:	
  6716  0120                     _i2c_status:	
  6717  0120                     	ds	30
  6718  013E                     _remainingSteps:	
  6719  013E                     	ds	4
  6720  0142                     _demoHeaterToggle_bot:	
  6721  0142                     	ds	4
  6722  0146                     _demoHeaterToggle_top:	
  6723  0146                     	ds	4
  6724  014A                     _LED_configReg_bot:	
  6725  014A                     	ds	4
  6726  014E                     _LED_configReg_top:	
  6727  014E                     	ds	4
  6728  0152                     _second_bottom:	
  6729  0152                     	ds	4
  6730  0156                     _first_top:	
  6731  0156                     	ds	4
  6732  015A                     _first_bottom:	
  6733  015A                     	ds	4
  6734  015E                     _second_top:	
  6735  015E                     	ds	4
  6736  0162                     _errno:	
  6737  0162                     	ds	2
  6738  0164                     _cmdRead:	
  6739  0164                     	ds	2
  6740  0166                     _errorOut:	
  6741  0166                     	ds	2
  6742  0168                     _i2c1_driver_i2cISR:	
  6743  0168                     	ds	2
  6744  016A                     _i2c1_driver_busCollisionISR:	
  6745  016A                     	ds	2
  6746                           
  6747                           	psect	dataBANK2
  6748  016E                     __pdataBANK2:	
  6749  016E                     _drv_peak_val:	
  6750  016E                     	ds	2
  6751                           
  6752                           	psect	bssBANK3
  6753  01A0                     __pbssBANK3:	
  6754  01A0                     _eusartRxBuffer:	
  6755  01A0                     	ds	8
  6756  01A8                     _eusartTxBuffer:	
  6757  01A8                     	ds	8
  6758  01B0                     _cmd_struct:	
  6759  01B0                     	ds	21
  6760  01C5                     _readdata:	
  6761  01C5                     	ds	20
  6762                           
  6763                           	psect	dataBANK4
  6764  0220                     __pdataBANK4:	
  6765  0220                     _fsmStateTable:	
  6766  0220                     	ds	32
  6767                           
  6768                           	psect	inittext
  6769  242E                     init_ram:	
  6770  242E  00FE               	movwf	126
  6771  242F                     initloop:	
  6772  242F  0012               	moviw fsr0++
  6773  2430  001E               	movwi fsr1++
  6774  2431  3001               	movlw	1
  6775  2432  02FE               	subwf	126,f
  6776  2433  3000               	movlw	0
  6777  2434  3BFF               	subwfb	127,f
  6778  2435  087F               	movf	127,w
  6779  2436  047E               	iorwf	126,w
  6780  2437  1903               	btfsc	3,2
  6781  2438  3400               	retlw	0
  6782  2439  2C2F               	goto	initloop
  6783                           
  6784                           	psect	clrtext
  6785  2422                     clear_ram0:	
  6786                           ;	Called with FSR0 containing the base address, and
  6787                           ;	btemp/btemp+1 has the size to clear
  6788                           
  6789  2422  0064               	clrwdt	;clear the watchdog before getting into this loop
  6790  2423                     clrloop0:	
  6791  2423  0180               	clrf	0	;clear RAM location pointed to by FSR
  6792  2424  3101               	addfsr 0,1
  6793  2425  3001               	movlw	1
  6794  2426  02FE               	subwf	126,f
  6795  2427  3000               	movlw	0
  6796  2428  3BFF               	subwfb	127,f
  6797  2429  087F               	movf	127,w
  6798  242A  047E               	iorwf	126,w
  6799  242B  1903               	btfsc	3,2
  6800  242C  3400               	retlw	0	;all done for this memory range, return
  6801  242D  2C23               	goto	clrloop0	;have we reached the end yet?
  6802                           
  6803                           	psect	cstackBANK4
  6804  0240                     __pcstackBANK4:	
  6805  0240                     ??_doAbsMove:	
  6806                           
  6807                           ; 1 bytes @ 0x0
  6808  0240                     	ds	28
  6809                           
  6810                           	psect	cstackBANK1
  6811  00A0                     __pcstackBANK1:	
  6812  00A0                     ??_LED_setBrightnessRange:	
  6813  00A0                     ?_printf:	
  6814                           ; 1 bytes @ 0x0
  6815                           
  6816  00A0                     ___ftmul@exp:	
  6817                           ; 2 bytes @ 0x0
  6818                           
  6819  00A0                     printf@f:	
  6820                           ; 1 bytes @ 0x0
  6821                           
  6822  00A0                     LEDsPwr@pwrAll:	
  6823                           ; 2 bytes @ 0x0
  6824                           
  6825                           
  6826                           ; 4 bytes @ 0x0
  6827  00A0                     	ds	1
  6828  00A1                     ___ftmul@f3_as_product:	
  6829                           
  6830                           ; 3 bytes @ 0x1
  6831  00A1                     	ds	3
  6832  00A4                     ___ftmul@cntr:	
  6833                           
  6834                           ; 1 bytes @ 0x4
  6835  00A4                     	ds	1
  6836  00A5                     ___ftmul@sign:	
  6837                           
  6838                           ; 1 bytes @ 0x5
  6839  00A5                     	ds	1
  6840  00A6                     ??_printf:	
  6841  00A6                     ?___ftadd:	
  6842                           ; 1 bytes @ 0x6
  6843                           
  6844  00A6                     ___ftadd@f1:	
  6845                           ; 3 bytes @ 0x6
  6846                           
  6847                           
  6848                           ; 3 bytes @ 0x6
  6849  00A6                     	ds	3
  6850  00A9                     ___ftadd@f2:	
  6851                           
  6852                           ; 3 bytes @ 0x9
  6853  00A9                     	ds	3
  6854  00AC                     ___ftadd@sign:	
  6855  00AC                     printf@prec:	
  6856                           ; 1 bytes @ 0xC
  6857                           
  6858                           
  6859                           ; 2 bytes @ 0xC
  6860  00AC                     	ds	1
  6861  00AD                     ___ftadd@exp2:	
  6862                           
  6863                           ; 1 bytes @ 0xD
  6864  00AD                     	ds	1
  6865  00AE                     ___ftadd@exp1:	
  6866  00AE                     printf@val:	
  6867                           ; 1 bytes @ 0xE
  6868                           
  6869                           
  6870                           ; 4 bytes @ 0xE
  6871  00AE                     	ds	1
  6872  00AF                     ?___fttol:	
  6873  00AF                     ___fttol@f1:	
  6874                           ; 4 bytes @ 0xF
  6875                           
  6876                           
  6877                           ; 3 bytes @ 0xF
  6878  00AF                     	ds	3
  6879  00B2                     printf@flag:	
  6880                           
  6881                           ; 1 bytes @ 0x12
  6882  00B2                     	ds	1
  6883  00B3                     ??___fttol:	
  6884  00B3                     printf@ap:	
  6885                           ; 1 bytes @ 0x13
  6886                           
  6887                           
  6888                           ; 1 bytes @ 0x13
  6889  00B3                     	ds	1
  6890  00B4                     printf@c:	
  6891                           
  6892                           ; 1 bytes @ 0x14
  6893  00B4                     	ds	1
  6894  00B5                     ??_drv_reset:	
  6895  00B5                     ?_LED_test_openshort:	
  6896                           ; 1 bytes @ 0x15
  6897                           
  6898  00B5                     ?_drv_read:	
  6899                           ; 1 bytes @ 0x15
  6900                           
  6901  00B5                     ?_startRelMove:	
  6902                           ; 2 bytes @ 0x15
  6903                           
  6904  00B5                     ?_startAbsMove:	
  6905                           ; 2 bytes @ 0x15
  6906                           
  6907  00B5                     ?_zeroPosition:	
  6908                           ; 2 bytes @ 0x15
  6909                           
  6910  00B5                     ?_getPosition:	
  6911                           ; 2 bytes @ 0x15
  6912                           
  6913  00B5                     ?_setDrvPeak:	
  6914                           ; 2 bytes @ 0x15
  6915                           
  6916  00B5                     ?_setDrvGain:	
  6917                           ; 2 bytes @ 0x15
  6918                           
  6919  00B5                     ?_setLEDBrightnessRange:	
  6920                           ; 2 bytes @ 0x15
  6921                           
  6922  00B5                     ?_setLEDPwr:	
  6923                           ; 2 bytes @ 0x15
  6924                           
  6925  00B5                     ?_setHeaterToggle:	
  6926                           ; 2 bytes @ 0x15
  6927                           
  6928  00B5                     ?_setActive:	
  6929                           ; 2 bytes @ 0x15
  6930                           
  6931  00B5                     ?_setMoveMask:	
  6932                           ; 2 bytes @ 0x15
  6933                           
  6934  00B5                     ?_getActive:	
  6935                           ; 2 bytes @ 0x15
  6936                           
  6937  00B5                     ?_getMoveMask:	
  6938                           ; 2 bytes @ 0x15
  6939                           
  6940  00B5                     ?_getMotionStatus:	
  6941                           ; 2 bytes @ 0x15
  6942                           
  6943  00B5                     ?_LED_getData:	
  6944                           ; 2 bytes @ 0x15
  6945                           
  6946  00B5                     LED_test_openshort@type:	
  6947                           ; 4 bytes @ 0x15
  6948                           
  6949  00B5                     startRelMove@steps:	
  6950                           ; 2 bytes @ 0x15
  6951                           
  6952  00B5                     startAbsMove@steps:	
  6953                           ; 2 bytes @ 0x15
  6954                           
  6955  00B5                     getPosition@a:	
  6956                           ; 2 bytes @ 0x15
  6957                           
  6958  00B5                     setDrvPeak@pk:	
  6959                           ; 2 bytes @ 0x15
  6960                           
  6961  00B5                     setDrvGain@gain:	
  6962                           ; 2 bytes @ 0x15
  6963                           
  6964  00B5                     setLEDBrightnessRange@r:	
  6965                           ; 2 bytes @ 0x15
  6966                           
  6967  00B5                     setLEDPwr@pwr:	
  6968                           ; 2 bytes @ 0x15
  6969                           
  6970  00B5                     setHeaterToggle@num:	
  6971                           ; 2 bytes @ 0x15
  6972                           
  6973  00B5                     setActive@probeNum:	
  6974                           ; 2 bytes @ 0x15
  6975                           
  6976  00B5                     setMoveMask@probeNum:	
  6977                           ; 2 bytes @ 0x15
  6978                           
  6979                           
  6980                           ; 2 bytes @ 0x15
  6981  00B5                     	ds	1
  6982  00B6                     ?_drv_init:	
  6983  00B6                     drv_init@output_gain:	
  6984                           ; 1 bytes @ 0x16
  6985                           
  6986                           
  6987                           ; 2 bytes @ 0x16
  6988  00B6                     	ds	1
  6989  00B7                     ??_zeroPosition:	
  6990  00B7                     ??_setDrvGain:	
  6991                           ; 1 bytes @ 0x17
  6992                           
  6993  00B7                     fifo_check@reply:	
  6994                           ; 1 bytes @ 0x17
  6995                           
  6996  00B7                     ___fttol@sign1:	
  6997                           ; 1 bytes @ 0x17
  6998                           
  6999  00B7                     LED_test_openshort@topOrBottom:	
  7000                           ; 1 bytes @ 0x17
  7001                           
  7002  00B7                     setLEDBrightnessRange@tOB:	
  7003                           ; 2 bytes @ 0x17
  7004                           
  7005  00B7                     setLEDPwr@topOrBottom:	
  7006                           ; 2 bytes @ 0x17
  7007                           
  7008  00B7                     setHeaterToggle@topOrB:	
  7009                           ; 2 bytes @ 0x17
  7010                           
  7011  00B7                     setActive@onOff:	
  7012                           ; 2 bytes @ 0x17
  7013                           
  7014  00B7                     setMoveMask@onOff:	
  7015                           ; 2 bytes @ 0x17
  7016                           
  7017  00B7                     getActive@i:	
  7018                           ; 2 bytes @ 0x17
  7019                           
  7020  00B7                     getMoveMask@i:	
  7021                           ; 2 bytes @ 0x17
  7022                           
  7023                           
  7024                           ; 2 bytes @ 0x17
  7025  00B7                     	ds	1
  7026  00B8                     ?_drv_write_DC:	
  7027  00B8                     setDrvGain@setGain:	
  7028                           ; 1 bytes @ 0x18
  7029                           
  7030  00B8                     drv_init@idle_timeout:	
  7031                           ; 2 bytes @ 0x18
  7032                           
  7033  00B8                     drv_write_DC@val:	
  7034                           ; 2 bytes @ 0x18
  7035                           
  7036  00B8                     ___fttol@lval:	
  7037                           ; 2 bytes @ 0x18
  7038                           
  7039                           
  7040                           ; 4 bytes @ 0x18
  7041  00B8                     	ds	1
  7042  00B9                     ??_LED_getData:	
  7043  00B9                     ??_LED_test_openshort:	
  7044                           ; 1 bytes @ 0x19
  7045                           
  7046  00B9                     ??_setHeaterToggle:	
  7047                           ; 1 bytes @ 0x19
  7048                           
  7049  00B9                     ??_setActive:	
  7050                           ; 1 bytes @ 0x19
  7051                           
  7052                           
  7053                           ; 1 bytes @ 0x19
  7054  00B9                     	ds	1
  7055  00BA                     ??_drv_init:	
  7056  00BA                     drv_write_DC@duration_ms:	
  7057                           ; 1 bytes @ 0x1A
  7058                           
  7059  00BA                     LED_test_openshort@readData:	
  7060                           ; 2 bytes @ 0x1A
  7061                           
  7062                           
  7063                           ; 4 bytes @ 0x1A
  7064  00BA                     	ds	2
  7065  00BC                     ??_drv_write_DC:	
  7066  00BC                     ___fttol@exp1:	
  7067                           ; 1 bytes @ 0x1C
  7068                           
  7069                           
  7070                           ; 1 bytes @ 0x1C
  7071  00BC                     	ds	1
  7072  00BD                     ??_main_initialize:	
  7073  00BD                     ?_setDrvPiezoOnTime:	
  7074                           ; 1 bytes @ 0x1D
  7075                           
  7076  00BD                     ?_setHeaterPreTime:	
  7077                           ; 2 bytes @ 0x1D
  7078                           
  7079  00BD                     ?_setHeaterPostTime:	
  7080                           ; 2 bytes @ 0x1D
  7081                           
  7082  00BD                     setDrvPiezoOnTime@t:	
  7083                           ; 2 bytes @ 0x1D
  7084                           
  7085  00BD                     setHeaterPreTime@t:	
  7086                           ; 2 bytes @ 0x1D
  7087                           
  7088  00BD                     setHeaterPostTime@t:	
  7089                           ; 2 bytes @ 0x1D
  7090                           
  7091  00BD                     drv_write_DC@i:	
  7092                           ; 2 bytes @ 0x1D
  7093                           
  7094                           
  7095                           ; 2 bytes @ 0x1D
  7096  00BD                     	ds	1
  7097  00BE                     LED_test_openshort@j:	
  7098                           
  7099                           ; 2 bytes @ 0x1E
  7100  00BE                     	ds	1
  7101  00BF                     ??_setDrvPiezoOnTime:	
  7102  00BF                     ??_setHeaterPreTime:	
  7103                           ; 1 bytes @ 0x1F
  7104                           
  7105  00BF                     ?_doMove:	
  7106                           ; 1 bytes @ 0x1F
  7107                           
  7108  00BF                     LED_getData@readData:	
  7109                           ; 2 bytes @ 0x1F
  7110                           
  7111                           
  7112                           ; 4 bytes @ 0x1F
  7113  00BF                     	ds	2
  7114  00C1                     ??_doMove:	
  7115                           
  7116                           ; 1 bytes @ 0x21
  7117  00C1                     	ds	1
  7118  00C2                     doMove@t:	
  7119                           
  7120                           ; 2 bytes @ 0x22
  7121  00C2                     	ds	1
  7122  00C3                     LED_getData@j:	
  7123                           
  7124                           ; 2 bytes @ 0x23
  7125  00C3                     	ds	1
  7126  00C4                     doMove@t_1559:	
  7127                           
  7128                           ; 2 bytes @ 0x24
  7129  00C4                     	ds	1
  7130  00C5                     ?_LED_readConfig:	
  7131  00C5                     LED_readConfig@topOrBottom:	
  7132                           ; 4 bytes @ 0x25
  7133                           
  7134                           
  7135                           ; 2 bytes @ 0x25
  7136  00C5                     	ds	1
  7137  00C6                     ??_doRelMove:	
  7138  00C6                     doAbsMove@allThere:	
  7139                           ; 1 bytes @ 0x26
  7140                           
  7141                           
  7142                           ; 2 bytes @ 0x26
  7143  00C6                     	ds	2
  7144  00C8                     doAbsMove@i:	
  7145                           
  7146                           ; 2 bytes @ 0x28
  7147  00C8                     	ds	1
  7148  00C9                     ?_LED_testComm:	
  7149  00C9                     LED_testComm@topOrBottom:	
  7150                           ; 2 bytes @ 0x29
  7151                           
  7152                           
  7153                           ; 2 bytes @ 0x29
  7154  00C9                     	ds	1
  7155  00CA                     doAbsMove@i_1576:	
  7156                           
  7157                           ; 2 bytes @ 0x2A
  7158  00CA                     	ds	1
  7159  00CB                     LED_testComm@readResult:	
  7160                           
  7161                           ; 2 bytes @ 0x2B
  7162  00CB                     	ds	1
  7163  00CC                     doAbsMove@i_1574:	
  7164                           
  7165                           ; 2 bytes @ 0x2C
  7166  00CC                     	ds	1
  7167  00CD                     LED_testComm@oldConfigReg:	
  7168                           
  7169                           ; 4 bytes @ 0x2D
  7170  00CD                     	ds	4
  7171  00D1                     ?_commCheck:	
  7172                           
  7173                           ; 2 bytes @ 0x31
  7174  00D1                     	ds	2
  7175  00D3                     ??_commCheck:	
  7176                           
  7177                           ; 1 bytes @ 0x33
  7178  00D3                     	ds	1
  7179  00D4                     execCmd@s:	
  7180                           
  7181                           ; 1 bytes @ 0x34
  7182  00D4                     	ds	2
  7183  00D6                     doRelMove@j:	
  7184                           
  7185                           ; 2 bytes @ 0x36
  7186  00D6                     	ds	2
  7187  00D8                     ??_main:	
  7188                           
  7189                           ; 1 bytes @ 0x38
  7190  00D8                     	ds	1
  7191                           
  7192                           	psect	cstackCOMMON
  7193  0070                     __pcstackCOMMON:	
  7194  0070                     ?_fifo_check:	
  7195  0070                     ?_isdigit:	
  7196                           ; 1 bit 
  7197                           
  7198  0070                     ?_mssp1_IRQisEnabled:	
  7199                           ; 1 bit 
  7200                           
  7201  0070                     ?_i2c1_driver_open:	
  7202                           ; 1 bit 
  7203                           
  7204  0070                     ?_i2c1_driver_isNACK:	
  7205                           ; 1 bit 
  7206                           
  7207  0070                     ?i1_i2c1_driver_isNACK:	
  7208                           ; 1 bit 
  7209                           
  7210  0070                     ?_PMD_Initialize:	
  7211                           ; 1 bit 
  7212                           
  7213  0070                     ?_PIN_MANAGER_Initialize:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216  0070                     ?_OSCILLATOR_Initialize:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219  0070                     ?_WDT_Initialize:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222  0070                     ?_TMR2_Initialize:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225  0070                     ?_TMR0_Initialize:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228  0070                     ?_EUSART_Initialize:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231  0070                     ?_TMR0_ISR:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234  0070                     ?_TMR2_ISR:	
  7235                           ; 1 bytes @ 0x0
  7236                           
  7237  0070                     ?_EUSART_Receive_ISR:	
  7238                           ; 1 bytes @ 0x0
  7239                           
  7240  0070                     ??_EUSART_Receive_ISR:	
  7241                           ; 1 bytes @ 0x0
  7242                           
  7243  0070                     ?_EUSART_Transmit_ISR:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246  0070                     ??_EUSART_Transmit_ISR:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249  0070                     ?_i2c_busCollisionISR:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252  0070                     ??_i2c_busCollisionISR:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255  0070                     ?_i2c_ISR:	
  7256                           ; 1 bytes @ 0x0
  7257                           
  7258  0070                     ?_i2c_poller:	
  7259                           ; 1 bytes @ 0x0
  7260                           
  7261  0070                     ?_TMR0_DefaultInterruptHandler:	
  7262                           ; 1 bytes @ 0x0
  7263                           
  7264  0070                     ?_TMR2_DefaultInterruptHandler:	
  7265                           ; 1 bytes @ 0x0
  7266                           
  7267  0070                     ?_main_initialize:	
  7268                           ; 1 bytes @ 0x0
  7269                           
  7270  0070                     ?_doRelMove:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273  0070                     ?_doAbsMove:	
  7274                           ; 1 bytes @ 0x0
  7275                           
  7276  0070                     ?_calcHeaterPins:	
  7277                           ; 1 bytes @ 0x0
  7278                           
  7279  0070                     ?_drv_reset:	
  7280                           ; 1 bytes @ 0x0
  7281                           
  7282  0070                     ?_toupper:	
  7283                           ; 1 bytes @ 0x0
  7284                           
  7285  0070                     ?_SYSTEM_Initialize:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288  0070                     ?_INTERRUPT_InterruptManager:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291  0070                     ?_EUSART_Read:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294  0070                     ?_EUSART_Write:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297  0070                     ?_putch:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300  0070                     ?_mssp1_clearIRQ:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303  0070                     ?_mssp1_setIRQ:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ?_mssp1_waitForEvent:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ?_i2c1_driver_resetBus:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?_i2c1_driver_start:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ?_i2c1_driver_restart:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?_i2c1_driver_stop:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ?_i2c1_driver_startRX:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?_i2c1_driver_getRXData:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?_i2c1_driver_TXData:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     ?_i2c1_driver_sendACK:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     ?_i2c1_driver_sendNACK:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     ?_i2c1_driver_clearBusCollision:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0070                     ??_i2c1_driver_clearBusCollision:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0070                     ?_i2c_open:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0070                     ?_i2c_setAddress:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0070                     ?_i2c_masterOperation:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0070                     ?_do_I2C_RESET:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0070                     ?_do_I2C_IDLE:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0070                     ?_do_I2C_SEND_RESTART:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0070                     ?_do_I2C_SEND_STOP:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0070                     ?_do_I2C_SEND_ADR_READ:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0070                     ?_do_I2C_RCEN:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0070                     ?_do_I2C_DO_ACK:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0070                     ?_do_I2C_DO_NACK_STOP:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390  0070                     ?_do_I2C_TX:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393  0070                     ?_do_I2C_RX:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396  0070                     ?_do_I2C_TX_EMPTY:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399  0070                     ?_TMR0_StartTimer:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402  0070                     ?_TMR0_StopTimer:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405  0070                     ??_TMR0_StopTimer:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408  0070                     ?_TMR0_Write8bitTimer:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411  0070                     ??_TMR0_Write8bitTimer:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414  0070                     ?_TMR0_Load8bitPeriod:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417  0070                     ?_TMR2_StartTimer:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420  0070                     ?_TMR2_StopTimer:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423  0070                     ??_TMR2_StopTimer:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426  0070                     ?_TMR2_WriteTimer:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429  0070                     ??_TMR2_WriteTimer:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432  0070                     ?_TMR2_LoadPeriodRegister:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0070                     ?_main:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0070                     ?i1_send_last_2bytes_IK:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0070                     ?i1_send_2bytes_latchless_IK:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0070                     ?i1_mssp1_clearIRQ:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0070                     ??i1_mssp1_clearIRQ:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0070                     ?i1_mssp1_setIRQ:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0070                     ??i1_mssp1_setIRQ:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0070                     ?i1_i2c1_driver_resetBus:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0070                     ??i1_i2c1_driver_resetBus:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0070                     ?i1_i2c1_driver_restart:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0070                     ??i1_i2c1_driver_restart:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468  0070                     ?i1_i2c1_driver_stop:	
  7469                           ; 1 bytes @ 0x0
  7470                           
  7471  0070                     ??i1_i2c1_driver_stop:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0070                     ??i1_i2c1_driver_isNACK:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0070                     ?i1_i2c1_driver_startRX:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0070                     ??i1_i2c1_driver_startRX:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0070                     ?i1_i2c1_driver_getRXData:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0070                     ??i1_i2c1_driver_getRXData:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0070                     ?i1_i2c1_driver_TXData:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0070                     ??i1_i2c1_driver_TXData:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0070                     ?i1_i2c1_driver_sendACK:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0070                     ??i1_i2c1_driver_sendACK:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0070                     ?i1_i2c1_driver_sendNACK:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0070                     ??i1_i2c1_driver_sendNACK:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0070                     ?i1_do_I2C_RESET:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0070                     ??i1_do_I2C_RESET:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0070                     ?i1_do_I2C_IDLE:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0070                     ??i1_do_I2C_IDLE:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0070                     ?i1_do_I2C_SEND_RESTART:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0070                     ??i1_do_I2C_SEND_RESTART:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  0070                     ?i1_do_I2C_SEND_STOP:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  0070                     ??i1_do_I2C_SEND_STOP:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549  0070                     ?i1_do_I2C_RCEN:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  0070                     ??i1_do_I2C_RCEN:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0070                     ?i1_do_I2C_DO_ACK:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0070                     ??i1_do_I2C_DO_ACK:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0070                     ?i1_do_I2C_TX:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0070                     ?i1_do_I2C_RX:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0070                     ??i1_do_I2C_RX:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0070                     ?i1_do_I2C_TX_EMPTY:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0070                     ??i1_do_I2C_TX_EMPTY:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0070                     ?i1_i2c_ISR:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0070                     ?i1_returnStop:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0070                     ?i1_returnReset:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  0070                     ?_execCmd:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  0070                     TMR0_Write8bitTimer@timerVal:	
  7607                           ; 2 bytes @ 0x0
  7608                           
  7609  0070                     TMR2_WriteTimer@timerVal:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  0070                     i1i2c1_driver_TXData@d:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  0070                     i1returnStop@p:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  0070                     i1returnReset@p:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  0070                     i1send_last_2bytes_IK@data:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  0070                     i1send_2bytes_latchless_IK@data:	
  7625                           ; 2 bytes @ 0x0
  7626                           
  7627                           
  7628                           ; 2 bytes @ 0x0
  7629  0070                     	ds	1
  7630  0071                     ??_TMR2_ISR:	
  7631  0071                     ??_TMR2_DefaultInterruptHandler:	
  7632                           ; 1 bytes @ 0x1
  7633                           
  7634  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7635                           ; 1 bytes @ 0x1
  7636                           
  7637  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7638                           ; 1 bytes @ 0x1
  7639                           
  7640  0071                     ??i1_do_I2C_TX:	
  7641                           ; 1 bytes @ 0x1
  7642                           
  7643  0071                     ??i1_returnStop:	
  7644                           ; 1 bytes @ 0x1
  7645                           
  7646  0071                     ??i1_returnReset:	
  7647                           ; 1 bytes @ 0x1
  7648                           
  7649                           
  7650                           ; 1 bytes @ 0x1
  7651  0071                     	ds	1
  7652  0072                     ??i1_send_2bytes_latchless_IK:	
  7653  0072                     i1send_last_2bytes_IK@latch_start:	
  7654                           ; 1 bytes @ 0x2
  7655                           
  7656                           
  7657                           ; 1 bytes @ 0x2
  7658  0072                     	ds	1
  7659  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7660  0073                     i1_do_I2C_TX$1132:	
  7661                           ; 2 bytes @ 0x3
  7662                           
  7663                           
  7664                           ; 2 bytes @ 0x3
  7665  0073                     	ds	2
  7666  0075                     ??i1_send_last_2bytes_IK:	
  7667  0075                     ??i1_i2c_ISR:	
  7668                           ; 1 bytes @ 0x5
  7669                           
  7670                           
  7671                           ; 1 bytes @ 0x5
  7672  0075                     	ds	1
  7673  0076                     i1send_2bytes_latchless_IK@j:	
  7674                           
  7675                           ; 2 bytes @ 0x6
  7676  0076                     	ds	3
  7677  0079                     i1send_last_2bytes_IK@j:	
  7678                           
  7679                           ; 2 bytes @ 0x9
  7680  0079                     	ds	2
  7681  007B                     ??i1_send_2length_2bytes_IK:	
  7682                           
  7683                           ; 1 bytes @ 0xB
  7684  007B                     	ds	1
  7685  007C                     ??_TMR0_ISR:	
  7686  007C                     ??_TMR0_DefaultInterruptHandler:	
  7687                           ; 1 bytes @ 0xC
  7688                           
  7689  007C                     ??_INTERRUPT_InterruptManager:	
  7690                           ; 1 bytes @ 0xC
  7691                           
  7692                           
  7693                           ; 1 bytes @ 0xC
  7694  007C                     	ds	1
  7695                           
  7696                           	psect	cstackBANK0
  7697  0020                     __pcstackBANK0:	
  7698  0020                     ?i1_send_2length_2bytes_IK:	
  7699  0020                     i1send_2length_2bytes_IK@data1:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702                           
  7703                           ; 2 bytes @ 0x0
  7704  0020                     	ds	2
  7705  0022                     i1send_2length_2bytes_IK@data2:	
  7706                           
  7707                           ; 2 bytes @ 0x2
  7708  0022                     	ds	2
  7709  0024                     i1send_2length_2bytes_IK@latch_start:	
  7710                           
  7711                           ; 1 bytes @ 0x4
  7712  0024                     	ds	1
  7713  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7714                           
  7715                           ; 2 bytes @ 0x5
  7716  0025                     	ds	2
  7717  0027                     ?i1_LEDsOn:	
  7718  0027                     i1LEDsOn@LEDpins:	
  7719                           ; 1 bytes @ 0x7
  7720                           
  7721                           
  7722                           ; 4 bytes @ 0x7
  7723  0027                     	ds	4
  7724  002B                     i1LEDsOn@topOrBottom:	
  7725                           
  7726                           ; 2 bytes @ 0xB
  7727  002B                     	ds	2
  7728  002D                     ??i1_LEDsOn:	
  7729                           
  7730                           ; 1 bytes @ 0xD
  7731  002D                     	ds	4
  7732  0031                     ??_PMD_Initialize:	
  7733  0031                     ??_PIN_MANAGER_Initialize:	
  7734                           ; 1 bytes @ 0x11
  7735                           
  7736  0031                     ??_OSCILLATOR_Initialize:	
  7737                           ; 1 bytes @ 0x11
  7738                           
  7739  0031                     ??_WDT_Initialize:	
  7740                           ; 1 bytes @ 0x11
  7741                           
  7742  0031                     ??_EUSART_Initialize:	
  7743                           ; 1 bytes @ 0x11
  7744                           
  7745  0031                     ?_returnStop:	
  7746                           ; 1 bytes @ 0x11
  7747                           
  7748  0031                     ?_returnReset:	
  7749                           ; 1 bytes @ 0x11
  7750                           
  7751  0031                     ?_TMR0_SetInterruptHandler:	
  7752                           ; 1 bytes @ 0x11
  7753                           
  7754  0031                     ?_TMR2_SetInterruptHandler:	
  7755                           ; 1 bytes @ 0x11
  7756                           
  7757  0031                     ??_calcHeaterPins:	
  7758                           ; 1 bytes @ 0x11
  7759                           
  7760  0031                     ??_isdigit:	
  7761                           ; 1 bytes @ 0x11
  7762                           
  7763  0031                     ??_toupper:	
  7764                           ; 1 bytes @ 0x11
  7765                           
  7766  0031                     ?_send_last_2bytes_IK:	
  7767                           ; 1 bytes @ 0x11
  7768                           
  7769  0031                     ?_send_2bytes_latchless_IK:	
  7770                           ; 1 bytes @ 0x11
  7771                           
  7772  0031                     ??_EUSART_Read:	
  7773                           ; 1 bytes @ 0x11
  7774                           
  7775  0031                     ??_EUSART_Write:	
  7776                           ; 1 bytes @ 0x11
  7777                           
  7778  0031                     ??_mssp1_IRQisEnabled:	
  7779                           ; 1 bytes @ 0x11
  7780                           
  7781  0031                     ??_mssp1_clearIRQ:	
  7782                           ; 1 bytes @ 0x11
  7783                           
  7784  0031                     ??_mssp1_setIRQ:	
  7785                           ; 1 bytes @ 0x11
  7786                           
  7787  0031                     ??_mssp1_waitForEvent:	
  7788                           ; 1 bytes @ 0x11
  7789                           
  7790  0031                     ??_i2c1_driver_open:	
  7791                           ; 1 bytes @ 0x11
  7792                           
  7793  0031                     ??_i2c1_driver_resetBus:	
  7794                           ; 1 bytes @ 0x11
  7795                           
  7796  0031                     ??_i2c1_driver_start:	
  7797                           ; 1 bytes @ 0x11
  7798                           
  7799  0031                     ??_i2c1_driver_restart:	
  7800                           ; 1 bytes @ 0x11
  7801                           
  7802  0031                     ??_i2c1_driver_stop:	
  7803                           ; 1 bytes @ 0x11
  7804                           
  7805  0031                     ??_i2c1_driver_isNACK:	
  7806                           ; 1 bytes @ 0x11
  7807                           
  7808  0031                     ??_i2c1_driver_startRX:	
  7809                           ; 1 bytes @ 0x11
  7810                           
  7811  0031                     ??_i2c1_driver_getRXData:	
  7812                           ; 1 bytes @ 0x11
  7813                           
  7814  0031                     ??_i2c1_driver_TXData:	
  7815                           ; 1 bytes @ 0x11
  7816                           
  7817  0031                     ??_i2c1_driver_sendACK:	
  7818                           ; 1 bytes @ 0x11
  7819                           
  7820  0031                     ??_i2c1_driver_sendNACK:	
  7821                           ; 1 bytes @ 0x11
  7822                           
  7823  0031                     ?_i2c1_driver_setBusCollisionISR:	
  7824                           ; 1 bytes @ 0x11
  7825                           
  7826  0031                     ?_i2c1_driver_setI2cISR:	
  7827                           ; 1 bytes @ 0x11
  7828                           
  7829  0031                     ??_i2c_setAddress:	
  7830                           ; 1 bytes @ 0x11
  7831                           
  7832  0031                     ?_i2c_setBuffer:	
  7833                           ; 1 bytes @ 0x11
  7834                           
  7835  0031                     ??_do_I2C_RESET:	
  7836                           ; 1 bytes @ 0x11
  7837                           
  7838  0031                     ??_do_I2C_IDLE:	
  7839                           ; 1 bytes @ 0x11
  7840                           
  7841  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7842                           ; 1 bytes @ 0x11
  7843                           
  7844  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7845                           ; 1 bytes @ 0x11
  7846                           
  7847  0031                     ??_do_I2C_SEND_RESTART:	
  7848                           ; 1 bytes @ 0x11
  7849                           
  7850  0031                     ??_do_I2C_SEND_STOP:	
  7851                           ; 1 bytes @ 0x11
  7852                           
  7853  0031                     ??_do_I2C_RCEN:	
  7854                           ; 1 bytes @ 0x11
  7855                           
  7856  0031                     ??_do_I2C_DO_ACK:	
  7857                           ; 1 bytes @ 0x11
  7858                           
  7859  0031                     ??_do_I2C_DO_NACK_STOP:	
  7860                           ; 1 bytes @ 0x11
  7861                           
  7862  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7863                           ; 1 bytes @ 0x11
  7864                           
  7865  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7866                           ; 1 bytes @ 0x11
  7867                           
  7868  0031                     ??_do_I2C_RX:	
  7869                           ; 1 bytes @ 0x11
  7870                           
  7871  0031                     ??_do_I2C_TX_EMPTY:	
  7872                           ; 1 bytes @ 0x11
  7873                           
  7874  0031                     ??_TMR0_StartTimer:	
  7875                           ; 1 bytes @ 0x11
  7876                           
  7877  0031                     ??_TMR0_Load8bitPeriod:	
  7878                           ; 1 bytes @ 0x11
  7879                           
  7880  0031                     ??_TMR2_StartTimer:	
  7881                           ; 1 bytes @ 0x11
  7882                           
  7883  0031                     ??_TMR2_LoadPeriodRegister:	
  7884                           ; 1 bytes @ 0x11
  7885                           
  7886  0031                     ?_strchr:	
  7887                           ; 1 bytes @ 0x11
  7888                           
  7889  0031                     ?___wmul:	
  7890                           ; 2 bytes @ 0x11
  7891                           
  7892  0031                     ?___awdiv:	
  7893                           ; 2 bytes @ 0x11
  7894                           
  7895  0031                     ?___ftpack:	
  7896                           ; 2 bytes @ 0x11
  7897                           
  7898  0031                     ?___lldiv:	
  7899                           ; 3 bytes @ 0x11
  7900                           
  7901  0031                     mssp1_waitForEvent@timeout:	
  7902                           ; 4 bytes @ 0x11
  7903                           
  7904  0031                     i2c1_driver_TXData@d:	
  7905                           ; 1 bytes @ 0x11
  7906                           
  7907  0031                     returnStop@p:	
  7908                           ; 1 bytes @ 0x11
  7909                           
  7910  0031                     returnReset@p:	
  7911                           ; 1 bytes @ 0x11
  7912                           
  7913  0031                     TMR0_Load8bitPeriod@periodVal:	
  7914                           ; 1 bytes @ 0x11
  7915                           
  7916  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7917                           ; 1 bytes @ 0x11
  7918                           
  7919  0031                     _isdigit$2134:	
  7920                           ; 1 bytes @ 0x11
  7921                           
  7922  0031                     send_last_2bytes_IK@data:	
  7923                           ; 1 bytes @ 0x11
  7924                           
  7925  0031                     send_2bytes_latchless_IK@data:	
  7926                           ; 2 bytes @ 0x11
  7927                           
  7928  0031                     i2c1_driver_setBusCollisionISR@f:	
  7929                           ; 2 bytes @ 0x11
  7930                           
  7931  0031                     i2c1_driver_setI2cISR@f:	
  7932                           ; 2 bytes @ 0x11
  7933                           
  7934  0031                     i2c_setBuffer@buffer:	
  7935                           ; 2 bytes @ 0x11
  7936                           
  7937  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7938                           ; 2 bytes @ 0x11
  7939                           
  7940  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7941                           ; 2 bytes @ 0x11
  7942                           
  7943  0031                     ___wmul@multiplier:	
  7944                           ; 2 bytes @ 0x11
  7945                           
  7946  0031                     ___awdiv@divisor:	
  7947                           ; 2 bytes @ 0x11
  7948                           
  7949  0031                     strchr@ptr:	
  7950                           ; 2 bytes @ 0x11
  7951                           
  7952  0031                     ___ftpack@arg:	
  7953                           ; 2 bytes @ 0x11
  7954                           
  7955  0031                     ___lldiv@divisor:	
  7956                           ; 3 bytes @ 0x11
  7957                           
  7958                           
  7959                           ; 4 bytes @ 0x11
  7960  0031                     	ds	1
  7961  0032                     ??_returnStop:	
  7962  0032                     ??_returnReset:	
  7963                           ; 1 bytes @ 0x12
  7964                           
  7965  0032                     ??_do_I2C_SEND_ADR_READ:	
  7966                           ; 1 bytes @ 0x12
  7967                           
  7968  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7969                           ; 1 bytes @ 0x12
  7970                           
  7971  0032                     ??_do_I2C_TX:	
  7972                           ; 1 bytes @ 0x12
  7973                           
  7974  0032                     EUSART_Read@readValue:	
  7975                           ; 1 bytes @ 0x12
  7976                           
  7977  0032                     EUSART_Write@txData:	
  7978                           ; 1 bytes @ 0x12
  7979                           
  7980  0032                     i2c_setAddress@address:	
  7981                           ; 1 bytes @ 0x12
  7982                           
  7983  0032                     isdigit@c:	
  7984                           ; 1 bytes @ 0x12
  7985                           
  7986  0032                     toupper@c:	
  7987                           ; 1 bytes @ 0x12
  7988                           
  7989                           
  7990                           ; 1 bytes @ 0x12
  7991  0032                     	ds	1
  7992  0033                     ??_TMR2_Initialize:	
  7993  0033                     ??_TMR0_Initialize:	
  7994                           ; 1 bytes @ 0x13
  7995                           
  7996  0033                     ??_TMR0_SetInterruptHandler:	
  7997                           ; 1 bytes @ 0x13
  7998                           
  7999  0033                     ??_TMR2_SetInterruptHandler:	
  8000                           ; 1 bytes @ 0x13
  8001                           
  8002  0033                     ??_SYSTEM_Initialize:	
  8003                           ; 1 bytes @ 0x13
  8004                           
  8005  0033                     ??_send_2bytes_latchless_IK:	
  8006                           ; 1 bytes @ 0x13
  8007                           
  8008  0033                     ??_putch:	
  8009                           ; 1 bytes @ 0x13
  8010                           
  8011  0033                     ??_i2c1_driver_setBusCollisionISR:	
  8012                           ; 1 bytes @ 0x13
  8013                           
  8014  0033                     ??_i2c1_driver_setI2cISR:	
  8015                           ; 1 bytes @ 0x13
  8016                           
  8017  0033                     ??_i2c_open:	
  8018                           ; 1 bytes @ 0x13
  8019                           
  8020  0033                     ?_stricmp:	
  8021                           ; 1 bytes @ 0x13
  8022                           
  8023  0033                     send_last_2bytes_IK@latch_start:	
  8024                           ; 2 bytes @ 0x13
  8025                           
  8026  0033                     putch@txData:	
  8027                           ; 1 bytes @ 0x13
  8028                           
  8029  0033                     i2c_setBuffer@bufferSize:	
  8030                           ; 1 bytes @ 0x13
  8031                           
  8032  0033                     ___wmul@multiplicand:	
  8033                           ; 2 bytes @ 0x13
  8034                           
  8035  0033                     ___awdiv@dividend:	
  8036                           ; 2 bytes @ 0x13
  8037                           
  8038  0033                     stricmp@s2:	
  8039                           ; 2 bytes @ 0x13
  8040                           
  8041  0033                     strchr@chr:	
  8042                           ; 2 bytes @ 0x13
  8043                           
  8044                           
  8045                           ; 2 bytes @ 0x13
  8046  0033                     	ds	1
  8047  0034                     i2c_open@ret:	
  8048  0034                     ___ftpack@exp:	
  8049                           ; 1 bytes @ 0x14
  8050                           
  8051  0034                     send_last_2bytes_IK@topOrBottom:	
  8052                           ; 1 bytes @ 0x14
  8053                           
  8054  0034                     _do_I2C_TX$1132:	
  8055                           ; 2 bytes @ 0x14
  8056                           
  8057                           
  8058                           ; 2 bytes @ 0x14
  8059  0034                     	ds	1
  8060  0035                     ??_stricmp:	
  8061  0035                     ??_strchr:	
  8062                           ; 1 bytes @ 0x15
  8063                           
  8064  0035                     ??_i2c_setBuffer:	
  8065                           ; 1 bytes @ 0x15
  8066                           
  8067  0035                     ??___wmul:	
  8068                           ; 1 bytes @ 0x15
  8069                           
  8070  0035                     ??___awdiv:	
  8071                           ; 1 bytes @ 0x15
  8072                           
  8073  0035                     i2c_open@address:	
  8074                           ; 1 bytes @ 0x15
  8075                           
  8076  0035                     ___ftpack@sign:	
  8077                           ; 1 bytes @ 0x15
  8078                           
  8079  0035                     ___wmul@product:	
  8080                           ; 1 bytes @ 0x15
  8081                           
  8082  0035                     ___lldiv@dividend:	
  8083                           ; 2 bytes @ 0x15
  8084                           
  8085                           
  8086                           ; 4 bytes @ 0x15
  8087  0035                     	ds	1
  8088  0036                     ??_i2c_ISR:	
  8089  0036                     ??___ftpack:	
  8090                           ; 1 bytes @ 0x16
  8091                           
  8092  0036                     ??_send_last_2bytes_IK:	
  8093                           ; 1 bytes @ 0x16
  8094                           
  8095  0036                     ___awdiv@counter:	
  8096                           ; 1 bytes @ 0x16
  8097                           
  8098                           
  8099                           ; 1 bytes @ 0x16
  8100  0036                     	ds	1
  8101  0037                     ??_i2c_poller:	
  8102  0037                     ??_i2c_masterOperation:	
  8103                           ; 1 bytes @ 0x17
  8104                           
  8105  0037                     ?_atoi:	
  8106                           ; 1 bytes @ 0x17
  8107                           
  8108  0037                     ___awdiv@sign:	
  8109                           ; 2 bytes @ 0x17
  8110                           
  8111  0037                     stricmp@r:	
  8112                           ; 1 bytes @ 0x17
  8113                           
  8114  0037                     send_2bytes_latchless_IK@j:	
  8115                           ; 1 bytes @ 0x17
  8116                           
  8117                           
  8118                           ; 2 bytes @ 0x17
  8119  0037                     	ds	1
  8120  0038                     ?_strspn:	
  8121  0038                     ?_strcspn:	
  8122                           ; 2 bytes @ 0x18
  8123                           
  8124  0038                     i2c_masterOperation@read:	
  8125                           ; 2 bytes @ 0x18
  8126                           
  8127  0038                     stricmp@s1:	
  8128                           ; 1 bytes @ 0x18
  8129                           
  8130  0038                     ___awdiv@quotient:	
  8131                           ; 1 bytes @ 0x18
  8132                           
  8133  0038                     strcspn@s2:	
  8134                           ; 2 bytes @ 0x18
  8135                           
  8136  0038                     strspn@s2:	
  8137                           ; 2 bytes @ 0x18
  8138                           
  8139                           
  8140                           ; 2 bytes @ 0x18
  8141  0038                     	ds	1
  8142  0039                     ??_atoi:	
  8143  0039                     ??___lldiv:	
  8144                           ; 1 bytes @ 0x19
  8145                           
  8146  0039                     ?___awtoft:	
  8147                           ; 1 bytes @ 0x19
  8148                           
  8149  0039                     i2c_masterOperation@ret:	
  8150                           ; 3 bytes @ 0x19
  8151                           
  8152  0039                     ___awtoft@c:	
  8153                           ; 1 bytes @ 0x19
  8154                           
  8155                           
  8156                           ; 2 bytes @ 0x19
  8157  0039                     	ds	1
  8158  003A                     ??_strspn:	
  8159  003A                     ??_strcspn:	
  8160                           ; 1 bytes @ 0x1A
  8161                           
  8162  003A                     send_last_2bytes_IK@j:	
  8163                           ; 1 bytes @ 0x1A
  8164                           
  8165  003A                     ___lldiv@quotient:	
  8166                           ; 2 bytes @ 0x1A
  8167                           
  8168                           
  8169                           ; 4 bytes @ 0x1A
  8170  003A                     	ds	1
  8171  003B                     atoi@sign:	
  8172                           
  8173                           ; 1 bytes @ 0x1B
  8174  003B                     	ds	1
  8175  003C                     ?_send_2length_2bytes_IK:	
  8176  003C                     ??___awtoft:	
  8177                           ; 1 bytes @ 0x1C
  8178                           
  8179  003C                     send_2length_2bytes_IK@data1:	
  8180                           ; 1 bytes @ 0x1C
  8181                           
  8182  003C                     atoi@a:	
  8183                           ; 2 bytes @ 0x1C
  8184                           
  8185  003C                     strcspn@i:	
  8186                           ; 2 bytes @ 0x1C
  8187                           
  8188  003C                     strspn@i:	
  8189                           ; 2 bytes @ 0x1C
  8190                           
  8191                           
  8192                           ; 2 bytes @ 0x1C
  8193  003C                     	ds	2
  8194  003E                     atoi@s:	
  8195  003E                     ___awtoft@sign:	
  8196                           ; 1 bytes @ 0x1E
  8197                           
  8198  003E                     ___lldiv@counter:	
  8199                           ; 1 bytes @ 0x1E
  8200                           
  8201  003E                     strcspn@s1:	
  8202                           ; 1 bytes @ 0x1E
  8203                           
  8204  003E                     strspn@s1:	
  8205                           ; 1 bytes @ 0x1E
  8206                           
  8207  003E                     send_2length_2bytes_IK@data2:	
  8208                           ; 1 bytes @ 0x1E
  8209                           
  8210                           
  8211                           ; 2 bytes @ 0x1E
  8212  003E                     	ds	1
  8213  003F                     ?_strtok:	
  8214  003F                     ?___ftmul:	
  8215                           ; 1 bytes @ 0x1F
  8216                           
  8217  003F                     ?___llmod:	
  8218                           ; 3 bytes @ 0x1F
  8219                           
  8220  003F                     strtok@s2:	
  8221                           ; 4 bytes @ 0x1F
  8222                           
  8223  003F                     ___ftmul@f1:	
  8224                           ; 2 bytes @ 0x1F
  8225                           
  8226  003F                     ___llmod@divisor:	
  8227                           ; 3 bytes @ 0x1F
  8228                           
  8229                           
  8230                           ; 4 bytes @ 0x1F
  8231  003F                     	ds	1
  8232  0040                     send_2length_2bytes_IK@latch_start:	
  8233                           
  8234                           ; 1 bytes @ 0x20
  8235  0040                     	ds	1
  8236  0041                     ??_strtok:	
  8237  0041                     send_2length_2bytes_IK@topOrBottom:	
  8238                           ; 1 bytes @ 0x21
  8239                           
  8240                           
  8241                           ; 2 bytes @ 0x21
  8242  0041                     	ds	1
  8243  0042                     ___ftmul@f2:	
  8244                           
  8245                           ; 3 bytes @ 0x22
  8246  0042                     	ds	1
  8247  0043                     ??_send_2length_2bytes_IK:	
  8248  0043                     ___llmod@dividend:	
  8249                           ; 1 bytes @ 0x23
  8250                           
  8251                           
  8252                           ; 4 bytes @ 0x23
  8253  0043                     	ds	1
  8254  0044                     ?_LEDsOn:	
  8255  0044                     ?_LEDsPwr:	
  8256                           ; 1 bytes @ 0x24
  8257                           
  8258  0044                     ?_LED_setBrightnessRange:	
  8259                           ; 1 bytes @ 0x24
  8260                           
  8261  0044                     strtok@s1:	
  8262                           ; 1 bytes @ 0x24
  8263                           
  8264  0044                     LEDsPwr@pwr:	
  8265                           ; 1 bytes @ 0x24
  8266                           
  8267  0044                     LED_setBrightnessRange@range:	
  8268                           ; 2 bytes @ 0x24
  8269                           
  8270  0044                     LEDsOn@LEDpins:	
  8271                           ; 2 bytes @ 0x24
  8272                           
  8273                           
  8274                           ; 4 bytes @ 0x24
  8275  0044                     	ds	1
  8276  0045                     ?_parseCmd:	
  8277  0045                     ??___ftmul:	
  8278                           ; 1 bytes @ 0x25
  8279                           
  8280  0045                     parseCmd@s:	
  8281                           ; 1 bytes @ 0x25
  8282                           
  8283                           
  8284                           ; 1 bytes @ 0x25
  8285  0045                     	ds	1
  8286  0046                     ??_parseCmd:	
  8287  0046                     LEDsPwr@topOrBottom:	
  8288                           ; 1 bytes @ 0x26
  8289                           
  8290  0046                     LED_setBrightnessRange@topOrBottom:	
  8291                           ; 2 bytes @ 0x26
  8292                           
  8293                           
  8294                           ; 2 bytes @ 0x26
  8295  0046                     	ds	1
  8296  0047                     ??___llmod:	
  8297  0047                     parseCmd@cmdString:	
  8298                           ; 1 bytes @ 0x27
  8299                           
  8300                           
  8301                           ; 1 bytes @ 0x27
  8302  0047                     	ds	1
  8303  0048                     ??_LEDsPwr:	
  8304  0048                     ___llmod@counter:	
  8305                           ; 1 bytes @ 0x28
  8306                           
  8307  0048                     LEDsOn@topOrBottom:	
  8308                           ; 1 bytes @ 0x28
  8309                           
  8310  0048                     parseCmd@paramIter:	
  8311                           ; 2 bytes @ 0x28
  8312                           
  8313  0048                     LED_setBrightnessRange@LED_configReg:	
  8314                           ; 2 bytes @ 0x28
  8315                           
  8316                           
  8317                           ; 4 bytes @ 0x28
  8318  0048                     	ds	1
  8319  0049                     ?_drv_write:	
  8320  0049                     ??_drv_read:	
  8321                           ; 1 bytes @ 0x29
  8322                           
  8323  0049                     ??_LED_readConfig:	
  8324                           ; 1 bytes @ 0x29
  8325                           
  8326  0049                     ??_startRelMove:	
  8327                           ; 1 bytes @ 0x29
  8328                           
  8329  0049                     ??_startAbsMove:	
  8330                           ; 1 bytes @ 0x29
  8331                           
  8332  0049                     ??_getPosition:	
  8333                           ; 1 bytes @ 0x29
  8334                           
  8335  0049                     ??_setDrvPeak:	
  8336                           ; 1 bytes @ 0x29
  8337                           
  8338  0049                     ??_setMoveMask:	
  8339                           ; 1 bytes @ 0x29
  8340                           
  8341  0049                     ??_getActive:	
  8342                           ; 1 bytes @ 0x29
  8343                           
  8344  0049                     ??_getMoveMask:	
  8345                           ; 1 bytes @ 0x29
  8346                           
  8347  0049                     ??_getMotionStatus:	
  8348                           ; 1 bytes @ 0x29
  8349                           
  8350  0049                     ??___ftadd:	
  8351                           ; 1 bytes @ 0x29
  8352                           
  8353  0049                     drv_write@data:	
  8354                           ; 1 bytes @ 0x29
  8355                           
  8356  0049                     zeroPosition@i:	
  8357                           ; 1 bytes @ 0x29
  8358                           
  8359                           
  8360                           ; 2 bytes @ 0x29
  8361  0049                     	ds	1
  8362  004A                     ??_drv_write:	
  8363  004A                     ??_LEDsOn:	
  8364                           ; 1 bytes @ 0x2A
  8365                           
  8366  004A                     parseCmd@p:	
  8367                           ; 1 bytes @ 0x2A
  8368                           
  8369                           
  8370                           ; 1 bytes @ 0x2A
  8371  004A                     	ds	1
  8372  004B                     drv_write@reg:	
  8373  004B                     drv_read@reg:	
  8374                           ; 1 bytes @ 0x2B
  8375                           
  8376                           
  8377                           ; 1 bytes @ 0x2B
  8378  004B                     	ds	1
  8379  004C                     ??_LED_testComm:	
  8380  004C                     ??_setLEDBrightnessRange:	
  8381                           ; 1 bytes @ 0x2C
  8382                           
  8383  004C                     drv_read@buff:	
  8384                           ; 1 bytes @ 0x2C
  8385                           
  8386  004C                     drv_write@buff:	
  8387                           ; 1 bytes @ 0x2C
  8388                           
  8389                           
  8390                           ; 2 bytes @ 0x2C
  8391  004C                     	ds	1
  8392  004D                     ??_fifo_check:	
  8393  004D                     ??_setHeaterPostTime:	
  8394                           ; 1 bytes @ 0x2D
  8395                           
  8396                           
  8397                           ; 1 bytes @ 0x2D
  8398  004D                     	ds	1
  8399  004E                     ??_execCmd:	
  8400  004E                     ??_setLEDPwr:	
  8401                           ; 1 bytes @ 0x2E
  8402                           
  8403                           
  8404                           	psect	maintext
  8405  1549                     __pmaintext:	
  8406                           ; 1 bytes @ 0x2E
  8407 ;;
  8408 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8409 ;;
  8410 ;; *************** function _main *****************
  8411 ;; Defined at:
  8412 ;;		line 130 in file "main.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;		None
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : B1F/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8428 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8429 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8430 ;;Total ram usage:        1 bytes
  8431 ;; Hardware stack levels required when called:   17
  8432 ;; This function calls:
  8433 ;;		_EUSART_Read
  8434 ;;		_SYSTEM_Initialize
  8435 ;;		_doAbsMove
  8436 ;;		_doRelMove
  8437 ;;		_execCmd
  8438 ;;		_main_initialize
  8439 ;;		_parseCmd
  8440 ;;		_printf
  8441 ;; This function is called by:
  8442 ;;		Startup code after reset
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function _main
  8448  1549                     _main:	
  8449                           
  8450                           ;main.c: 133: SYSTEM_Initialize();
  8451                           
  8452                           ;incstack = 0
  8453 ;; hardware stack exceeded
  8454                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8455  1549  31A4  24BD  3195   	fcall	_SYSTEM_Initialize
  8456                           
  8457                           ;main.c: 134: _delay((unsigned long)((500)*(1000000/4000.0)));
  8458  154C  30A3               	movlw	163
  8459  154D  0021               	movlb	1	; select bank1
  8460  154E  00D8               	movwf	??_main^(0+128)
  8461  154F  3055               	movlw	85
  8462  1550                     u8787:	
  8463  1550  0B89               	decfsz	9,f
  8464  1551  2D50               	goto	u8787
  8465  1552  0BD8               	decfsz	??_main^(0+128),f
  8466  1553  2D50               	goto	u8787
  8467                           
  8468                           ;main.c: 140: (INTCONbits.GIE = 1);
  8469  1554  178B               	bsf	11,7	;volatile
  8470                           
  8471                           ;main.c: 143: (INTCONbits.PEIE = 1);
  8472  1555  170B               	bsf	11,6	;volatile
  8473                           
  8474                           ;main.c: 144: printf("\n\nsystem done\n");
  8475  1556  3079               	movlw	low (STR_4| (0+32768))
  8476  1557  0021               	movlb	1	; select bank1
  8477  1558  00A0               	movwf	printf@f^(0+128)
  8478  1559  30A9               	movlw	high (STR_4| (0+32768))
  8479  155A  00A1               	movwf	(printf@f^(0+128)+1)
  8480  155B  3186  26A1  3195   	fcall	_printf
  8481                           
  8482                           ;main.c: 150: main_initialize();
  8483  155E  318B  231B  3195   	fcall	_main_initialize
  8484                           
  8485                           ;main.c: 173: }
  8486                           ;main.c: 176: switch(motionType){
  8487  1561  2D69               	goto	l8470
  8488  1562                     l8490:	
  8489                           ;main.c: 177: case REL_MOVE: doRelMove(); break;
  8490                           
  8491  1562  318E  26CF  3195   	fcall	_doRelMove
  8492  1565  2D69               	goto	l8470
  8493  1566                     l8492:	
  8494                           ;main.c: 178: case ABS_MOVE: doAbsMove(); break;
  8495                           
  8496  1566  3180  20C0  3195   	fcall	_doAbsMove
  8497  1569                     l8470:	
  8498                           ;main.c: 152: while (1)
  8499                           
  8500                           ;main.c: 180: }
  8501                           
  8502                           ;main.c: 179: default: break;
  8503                           
  8504                           
  8505                           ;main.c: 153: {
  8506                           ;main.c: 155: if (eusartRxCount!=0) {
  8507  1569  0020               	movlb	0	; select bank0
  8508  156A  0856               	movf	_eusartRxCount,w	;volatile
  8509  156B  1903               	btfsc	3,2
  8510  156C  2D95               	goto	l8482
  8511                           
  8512                           ;main.c: 156: readdata[readIdx] = EUSART_Read();
  8513  156D  31A6  2635  3195   	fcall	_EUSART_Read
  8514  1570  0021               	movlb	1	; select bank1
  8515  1571  00D8               	movwf	??_main^(0+128)
  8516  1572  0020               	movlb	0	; select bank0
  8517  1573  0852               	movf	_readIdx,w
  8518  1574  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8519  1575  0086               	movwf	6
  8520  1576  3001               	movlw	1	; select bank3/4
  8521  1577  0087               	movwf	7
  8522  1578  0021               	movlb	1	; select bank1
  8523  1579  0858               	movf	??_main^(0+128),w
  8524  157A  0081               	movwf	1
  8525                           
  8526                           ;main.c: 157: if(readdata[readIdx] == '\n'){
  8527  157B  0020               	movlb	0	; select bank0
  8528  157C  0852               	movf	_readIdx,w
  8529  157D  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8530  157E  0086               	movwf	6
  8531  157F  3001               	movlw	1	; select bank3/4
  8532  1580  0087               	movwf	7
  8533  1581  300A               	movlw	10
  8534  1582  0601               	xorwf	1,w
  8535  1583  1D03               	btfss	3,2
  8536  1584  2D90               	goto	l8480
  8537                           
  8538                           ;main.c: 158: readdata[readIdx] = 0;
  8539  1585  0852               	movf	_readIdx,w
  8540  1586  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8541  1587  0086               	movwf	6
  8542  1588  3001               	movlw	1	; select bank3/4
  8543  1589  0087               	movwf	7
  8544  158A  0181               	clrf	1
  8545                           
  8546                           ;main.c: 159: cmdRead = 1;
  8547  158B  3001               	movlw	1
  8548  158C  0022               	movlb	2	; select bank2
  8549  158D  00E4               	movwf	_cmdRead^(0+256)
  8550  158E  3000               	movlw	0
  8551  158F  00E5               	movwf	(_cmdRead^(0+256)+1)
  8552  1590                     l8480:	
  8553                           
  8554                           ;main.c: 160: }
  8555                           ;main.c: 161: readIdx++;
  8556  1590  3001               	movlw	1
  8557  1591  0020               	movlb	0	; select bank0
  8558  1592  07D2               	addwf	_readIdx,f
  8559  1593  3000               	movlw	0
  8560  1594  3DD3               	addwfc	_readIdx+1,f
  8561  1595                     l8482:	
  8562                           
  8563                           ;main.c: 162: }
  8564                           ;main.c: 165: if(cmdRead){
  8565  1595  0022               	movlb	2	; select bank2
  8566  1596  0864               	movf	_cmdRead^(0+256),w
  8567  1597  0465               	iorwf	(_cmdRead+1)^(0+256),w
  8568  1598  1903               	btfsc	3,2
  8569  1599  2DAE               	goto	l8496
  8570                           
  8571                           ;main.c: 167: parseCmd(readdata, &cmd_struct);
  8572  159A  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8573  159B  0021               	movlb	1	; select bank1
  8574  159C  00D8               	movwf	??_main^(0+128)
  8575  159D  0858               	movf	??_main^(0+128),w
  8576  159E  0020               	movlb	0	; select bank0
  8577  159F  00C5               	movwf	parseCmd@s
  8578  15A0  30C5               	movlw	(low (_readdata| (0+256)))& (0+255)
  8579  15A1  3185  250E  3195   	fcall	_parseCmd
  8580                           
  8581                           ;main.c: 169: cmdRead = 0;
  8582  15A4  0022               	movlb	2	; select bank2
  8583  15A5  01E4               	clrf	_cmdRead^(0+256)
  8584  15A6  01E5               	clrf	(_cmdRead+1)^(0+256)
  8585                           
  8586                           ;main.c: 170: readIdx=0;
  8587  15A7  0020               	movlb	0	; select bank0
  8588  15A8  01D2               	clrf	_readIdx
  8589  15A9  01D3               	clrf	_readIdx+1
  8590                           
  8591                           ;main.c: 171: execCmd(&cmd_struct);
  8592  15AA  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8593  15AB  3183  2370  3195   	fcall	_execCmd
  8594  15AE                     l8496:	
  8595  15AE  0020               	movlb	0	; select bank0
  8596  15AF  0855               	movf	_motionType,w
  8597                           
  8598                           ; Switch size 1, requested type "space"
  8599                           ; Number of cases is 2, Range of values is 1 to 2
  8600                           ; switch strategies available:
  8601                           ; Name         Instructions Cycles
  8602                           ; simple_byte            7     4 (average)
  8603                           ; direct_byte           13     9 (fixed)
  8604                           ; jumptable            263     9 (fixed)
  8605                           ;	Chosen strategy is simple_byte
  8606  15B0  3A01               	xorlw	1	; case 1
  8607  15B1  1903               	skipnz
  8608  15B2  2D62               	goto	l8490
  8609  15B3  3A03               	xorlw	3	; case 2
  8610  15B4  1903               	skipnz
  8611  15B5  2D66               	goto	l8492
  8612  15B6  2D69               	goto	l8470
  8613  15B7  2D69               	goto	l8470
  8614  15B8                     __end_of_main:	
  8615                           
  8616                           	psect	text1
  8617  050E                     __ptext1:	
  8618 ;; *************** function _parseCmd *****************
  8619 ;; Defined at:
  8620 ;;		line 5 in file "cmd_parser.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  cmdString       1    wreg     PTR unsigned char 
  8623 ;;		 -> readdata(20), 
  8624 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8625 ;;		 -> cmd_struct(21), 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8628 ;;		 -> readdata(20), 
  8629 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8630 ;;		 -> readdata(20), NULL(0), 
  8631 ;;  paramIter       2   40[BANK0 ] int 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8641 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8642 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8643 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8644 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8645 ;;Total ram usage:        6 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    9
  8648 ;; This function calls:
  8649 ;;		_atoi
  8650 ;;		_stricmp
  8651 ;;		_strtok
  8652 ;; This function is called by:
  8653 ;;		_main
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           
  8658                           ;psect for function _parseCmd
  8659  050E                     _parseCmd:	
  8660                           
  8661                           ;incstack = 0
  8662                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8663                           ;parseCmd@cmdString stored from wreg
  8664  050E  0020               	movlb	0	; select bank0
  8665  050F  00C7               	movwf	parseCmd@cmdString
  8666                           
  8667                           ;cmd_parser.c: 6: int paramIter = 0;
  8668  0510  01C8               	clrf	parseCmd@paramIter
  8669  0511  01C9               	clrf	parseCmd@paramIter+1
  8670                           
  8671                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8672  0512  3021               	movlw	low ((STR_40+6)| (0+32768))
  8673  0513  00BF               	movwf	strtok@s2
  8674  0514  30AA               	movlw	high ((STR_40+6)| (0+32768))
  8675  0515  00C0               	movwf	strtok@s2+1
  8676  0516  0847               	movf	parseCmd@cmdString,w
  8677  0517                     L20:	
  8678  0517  3193  23CC  3185   	fcall	_strtok
  8679  051A  0020               	movlb	0	; select bank0
  8680  051B  00C6               	movwf	??_parseCmd
  8681  051C  0846               	movf	??_parseCmd,w
  8682  051D  00CA               	movwf	parseCmd@p
  8683  051E  084A               	movf	parseCmd@p,w
  8684  051F  1903               	btfsc	3,2
  8685  0520  0008               	return
  8686                           
  8687                           ;cmd_parser.c: 9: if (paramIter == 0){
  8688  0521  0848               	movf	parseCmd@paramIter,w
  8689  0522  0449               	iorwf	parseCmd@paramIter+1,w
  8690  0523  1D03               	btfss	3,2
  8691  0524  2E72               	goto	l6544
  8692                           
  8693                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8694  0525  304F               	movlw	low (STR_58| (0+32768))
  8695  0526  00B3               	movwf	stricmp@s2
  8696  0527  30AA               	movlw	high (STR_58| (0+32768))
  8697  0528  00B4               	movwf	stricmp@s2+1
  8698  0529  084A               	movf	parseCmd@p,w
  8699  052A  3199  2154  3185   	fcall	_stricmp
  8700  052D  0020               	movlb	0	; select bank0
  8701  052E  0833               	movf	?_stricmp,w
  8702  052F  0434               	iorwf	?_stricmp+1,w
  8703  0530  1D03               	btfss	3,2
  8704  0531  2D34               	goto	l6462
  8705                           
  8706                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8707  0532  3002               	movlw	2
  8708  0533  2E64               	goto	L19
  8709  0534                     l6462:	
  8710                           
  8711                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8712  0534  3053               	movlw	low (STR_59| (0+32768))
  8713  0535  00B3               	movwf	stricmp@s2
  8714  0536  30AA               	movlw	high (STR_59| (0+32768))
  8715  0537  00B4               	movwf	stricmp@s2+1
  8716  0538  084A               	movf	parseCmd@p,w
  8717  0539  3199  2154  3185   	fcall	_stricmp
  8718  053C  0020               	movlb	0	; select bank0
  8719  053D  0833               	movf	?_stricmp,w
  8720  053E  0434               	iorwf	?_stricmp+1,w
  8721  053F  1D03               	btfss	3,2
  8722  0540  2D48               	goto	l6466
  8723                           
  8724                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8725  0541  0845               	movf	parseCmd@s,w
  8726  0542  0086               	movwf	6
  8727  0543  3001               	movlw	1	; select bank2/3
  8728  0544  0087               	movwf	7
  8729  0545  0181               	clrf	1
  8730  0546  0A81               	incf	1,f
  8731  0547  2E97               	goto	l6552
  8732  0548                     l6466:	
  8733                           
  8734                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8735  0548  3057               	movlw	low (STR_60| (0+32768))
  8736  0549  00B3               	movwf	stricmp@s2
  8737  054A  30AA               	movlw	high (STR_60| (0+32768))
  8738  054B  00B4               	movwf	stricmp@s2+1
  8739  054C  084A               	movf	parseCmd@p,w
  8740  054D  3199  2154  3185   	fcall	_stricmp
  8741  0550  0020               	movlb	0	; select bank0
  8742  0551  0833               	movf	?_stricmp,w
  8743  0552  0434               	iorwf	?_stricmp+1,w
  8744  0553  1D03               	btfss	3,2
  8745  0554  2D57               	goto	l6470
  8746                           
  8747                           ;cmd_parser.c: 15: s->c = CMD_P;
  8748  0555  3003               	movlw	3
  8749  0556  2E64               	goto	L19
  8750  0557                     l6470:	
  8751                           
  8752                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8753  0557  3055               	movlw	low ((STR_59+2)| (0+32768))
  8754  0558  00B3               	movwf	stricmp@s2
  8755  0559  30AA               	movlw	high ((STR_59+2)| (0+32768))
  8756  055A  00B4               	movwf	stricmp@s2+1
  8757  055B  084A               	movf	parseCmd@p,w
  8758  055C  3199  2154  3185   	fcall	_stricmp
  8759  055F  0020               	movlb	0	; select bank0
  8760  0560  0833               	movf	?_stricmp,w
  8761  0561  0434               	iorwf	?_stricmp+1,w
  8762  0562  1D03               	btfss	3,2
  8763  0563  2D66               	goto	l6474
  8764                           
  8765                           ;cmd_parser.c: 17: s->c = CMD_S;
  8766  0564  3004               	movlw	4
  8767  0565  2E64               	goto	L19
  8768  0566                     l6474:	
  8769                           
  8770                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8771  0566  3036               	movlw	low (STR_62| (0+32768))
  8772  0567  00B3               	movwf	stricmp@s2
  8773  0568  30AA               	movlw	high (STR_62| (0+32768))
  8774  0569  00B4               	movwf	stricmp@s2+1
  8775  056A  084A               	movf	parseCmd@p,w
  8776  056B  3199  2154  3185   	fcall	_stricmp
  8777  056E  0020               	movlb	0	; select bank0
  8778  056F  0833               	movf	?_stricmp,w
  8779  0570  0434               	iorwf	?_stricmp+1,w
  8780  0571  1D03               	btfss	3,2
  8781  0572  2D75               	goto	l6478
  8782                           
  8783                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8784  0573  3005               	movlw	5
  8785  0574  2E64               	goto	L19
  8786  0575                     l6478:	
  8787                           
  8788                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8789  0575  3040               	movlw	low (STR_63| (0+32768))
  8790  0576  00B3               	movwf	stricmp@s2
  8791  0577  30AA               	movlw	high (STR_63| (0+32768))
  8792  0578  00B4               	movwf	stricmp@s2+1
  8793  0579  084A               	movf	parseCmd@p,w
  8794  057A  3199  2154  3185   	fcall	_stricmp
  8795  057D  0020               	movlb	0	; select bank0
  8796  057E  0833               	movf	?_stricmp,w
  8797  057F  0434               	iorwf	?_stricmp+1,w
  8798  0580  1D03               	btfss	3,2
  8799  0581  2D84               	goto	l6482
  8800                           
  8801                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8802  0582  3006               	movlw	6
  8803  0583  2E64               	goto	L19
  8804  0584                     l6482:	
  8805                           
  8806                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8807  0584  3071               	movlw	low (STR_64| (0+32768))
  8808  0585  00B3               	movwf	stricmp@s2
  8809  0586  30AA               	movlw	high (STR_64| (0+32768))
  8810  0587  00B4               	movwf	stricmp@s2+1
  8811  0588  084A               	movf	parseCmd@p,w
  8812  0589  3199  2154  3185   	fcall	_stricmp
  8813  058C  0020               	movlb	0	; select bank0
  8814  058D  0833               	movf	?_stricmp,w
  8815  058E  0434               	iorwf	?_stricmp+1,w
  8816  058F  1D03               	btfss	3,2
  8817  0590  2D93               	goto	l6486
  8818                           
  8819                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8820  0591  3007               	movlw	7
  8821  0592  2E64               	goto	L19
  8822  0593                     l6486:	
  8823                           
  8824                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8825  0593  30E3               	movlw	low (STR_65| (0+32768))
  8826  0594  00B3               	movwf	stricmp@s2
  8827  0595  30A9               	movlw	high (STR_65| (0+32768))
  8828  0596  00B4               	movwf	stricmp@s2+1
  8829  0597  084A               	movf	parseCmd@p,w
  8830  0598  3199  2154  3185   	fcall	_stricmp
  8831  059B  0020               	movlb	0	; select bank0
  8832  059C  0833               	movf	?_stricmp,w
  8833  059D  0434               	iorwf	?_stricmp+1,w
  8834  059E  1D03               	btfss	3,2
  8835  059F  2DA2               	goto	l6490
  8836                           
  8837                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8838  05A0  3008               	movlw	8
  8839  05A1  2E64               	goto	L19
  8840  05A2                     l6490:	
  8841                           
  8842                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8843  05A2  30EB               	movlw	low (STR_66| (0+32768))
  8844  05A3  00B3               	movwf	stricmp@s2
  8845  05A4  30A9               	movlw	high (STR_66| (0+32768))
  8846  05A5  00B4               	movwf	stricmp@s2+1
  8847  05A6  084A               	movf	parseCmd@p,w
  8848  05A7  3199  2154  3185   	fcall	_stricmp
  8849  05AA  0020               	movlb	0	; select bank0
  8850  05AB  0833               	movf	?_stricmp,w
  8851  05AC  0434               	iorwf	?_stricmp+1,w
  8852  05AD  1D03               	btfss	3,2
  8853  05AE  2DB1               	goto	l6494
  8854                           
  8855                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8856  05AF  3009               	movlw	9
  8857  05B0  2E64               	goto	L19
  8858  05B1                     l6494:	
  8859                           
  8860                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8861  05B1  30AF               	movlw	low (STR_67| (0+32768))
  8862  05B2  00B3               	movwf	stricmp@s2
  8863  05B3  30A9               	movlw	high (STR_67| (0+32768))
  8864  05B4  00B4               	movwf	stricmp@s2+1
  8865  05B5  084A               	movf	parseCmd@p,w
  8866  05B6  3199  2154  3185   	fcall	_stricmp
  8867  05B9  0020               	movlb	0	; select bank0
  8868  05BA  0833               	movf	?_stricmp,w
  8869  05BB  0434               	iorwf	?_stricmp+1,w
  8870  05BC  1D03               	btfss	3,2
  8871  05BD  2DC0               	goto	l6498
  8872                           
  8873                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8874  05BE  300A               	movlw	10
  8875  05BF  2E64               	goto	L19
  8876  05C0                     l6498:	
  8877                           
  8878                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8879  05C0  3088               	movlw	low (STR_68| (0+32768))
  8880  05C1  00B3               	movwf	stricmp@s2
  8881  05C2  30A9               	movlw	high (STR_68| (0+32768))
  8882  05C3  00B4               	movwf	stricmp@s2+1
  8883  05C4  084A               	movf	parseCmd@p,w
  8884  05C5  3199  2154  3185   	fcall	_stricmp
  8885  05C8  0020               	movlb	0	; select bank0
  8886  05C9  0833               	movf	?_stricmp,w
  8887  05CA  0434               	iorwf	?_stricmp+1,w
  8888  05CB  1D03               	btfss	3,2
  8889  05CC  2DCF               	goto	l6502
  8890                           
  8891                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8892  05CD  300B               	movlw	11
  8893  05CE  2E64               	goto	L19
  8894  05CF                     l6502:	
  8895                           
  8896                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8897  05CF  306A               	movlw	low (STR_69| (0+32768))
  8898  05D0  00B3               	movwf	stricmp@s2
  8899  05D1  30A9               	movlw	high (STR_69| (0+32768))
  8900  05D2  00B4               	movwf	stricmp@s2+1
  8901  05D3  084A               	movf	parseCmd@p,w
  8902  05D4  3199  2154  3185   	fcall	_stricmp
  8903  05D7  0020               	movlb	0	; select bank0
  8904  05D8  0833               	movf	?_stricmp,w
  8905  05D9  0434               	iorwf	?_stricmp+1,w
  8906  05DA  1D03               	btfss	3,2
  8907  05DB  2DDE               	goto	l6506
  8908                           
  8909                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8910  05DC  300C               	movlw	12
  8911  05DD  2E64               	goto	L19
  8912  05DE                     l6506:	
  8913                           
  8914                           ;cmd_parser.c: 34: else if(stricmp(p,"ledgain") == 0)
  8915  05DE  30F3               	movlw	low (STR_70| (0+32768))
  8916  05DF  00B3               	movwf	stricmp@s2
  8917  05E0  30A9               	movlw	high (STR_70| (0+32768))
  8918  05E1  00B4               	movwf	stricmp@s2+1
  8919  05E2  084A               	movf	parseCmd@p,w
  8920  05E3  3199  2154  3185   	fcall	_stricmp
  8921  05E6  0020               	movlb	0	; select bank0
  8922  05E7  0833               	movf	?_stricmp,w
  8923  05E8  0434               	iorwf	?_stricmp+1,w
  8924  05E9  1D03               	btfss	3,2
  8925  05EA  2DED               	goto	l6510
  8926                           
  8927                           ;cmd_parser.c: 35: s->c = CMD_HEATER_GAIN;
  8928  05EB  300D               	movlw	13
  8929  05EC  2E64               	goto	L19
  8930  05ED                     l6510:	
  8931                           
  8932                           ;cmd_parser.c: 36: else if(stricmp(p,"ledpwr") == 0)
  8933  05ED  302A               	movlw	low (STR_71| (0+32768))
  8934  05EE  00B3               	movwf	stricmp@s2
  8935  05EF  30AA               	movlw	high (STR_71| (0+32768))
  8936  05F0  00B4               	movwf	stricmp@s2+1
  8937  05F1  084A               	movf	parseCmd@p,w
  8938  05F2  3199  2154  3185   	fcall	_stricmp
  8939  05F5  0020               	movlb	0	; select bank0
  8940  05F6  0833               	movf	?_stricmp,w
  8941  05F7  0434               	iorwf	?_stricmp+1,w
  8942  05F8  1D03               	btfss	3,2
  8943  05F9  2DFC               	goto	l6514
  8944                           
  8945                           ;cmd_parser.c: 37: s->c = CMD_HEATER_PWR;
  8946  05FA  300E               	movlw	14
  8947  05FB  2E64               	goto	L19
  8948  05FC                     l6514:	
  8949                           
  8950                           ;cmd_parser.c: 38: else if(stricmp(p,"toggleheater") == 0)
  8951  05FC  3096               	movlw	low (STR_72| (0+32768))
  8952  05FD  00B3               	movwf	stricmp@s2
  8953  05FE  30A9               	movlw	high (STR_72| (0+32768))
  8954  05FF  00B4               	movwf	stricmp@s2+1
  8955  0600  084A               	movf	parseCmd@p,w
  8956  0601  3199  2154  3185   	fcall	_stricmp
  8957  0604  0020               	movlb	0	; select bank0
  8958  0605  0833               	movf	?_stricmp,w
  8959  0606  0434               	iorwf	?_stricmp+1,w
  8960  0607  1D03               	btfss	3,2
  8961  0608  2E0B               	goto	l6518
  8962                           
  8963                           ;cmd_parser.c: 39: s->c = CMD_HEATER_TOGGLE;
  8964  0609  300F               	movlw	15
  8965  060A  2E64               	goto	L19
  8966  060B                     l6518:	
  8967                           
  8968                           ;cmd_parser.c: 40: else if(stricmp(p,"getA") == 0)
  8969  060B  3031               	movlw	low (STR_73| (0+32768))
  8970  060C  00B3               	movwf	stricmp@s2
  8971  060D  30AA               	movlw	high (STR_73| (0+32768))
  8972  060E  00B4               	movwf	stricmp@s2+1
  8973  060F  084A               	movf	parseCmd@p,w
  8974  0610  3199  2154  3185   	fcall	_stricmp
  8975  0613  0020               	movlb	0	; select bank0
  8976  0614  0833               	movf	?_stricmp,w
  8977  0615  0434               	iorwf	?_stricmp+1,w
  8978  0616  1D03               	btfss	3,2
  8979  0617  2E1A               	goto	l6522
  8980                           
  8981                           ;cmd_parser.c: 41: s->c = CMD_GET_ACTIVE;
  8982  0618  3010               	movlw	16
  8983  0619  2E64               	goto	L19
  8984  061A                     l6522:	
  8985                           
  8986                           ;cmd_parser.c: 42: else if(stricmp(p,"getM") == 0)
  8987  061A  303B               	movlw	low (STR_74| (0+32768))
  8988  061B  00B3               	movwf	stricmp@s2
  8989  061C  30AA               	movlw	high (STR_74| (0+32768))
  8990  061D  00B4               	movwf	stricmp@s2+1
  8991  061E  084A               	movf	parseCmd@p,w
  8992  061F  3199  2154  3185   	fcall	_stricmp
  8993  0622  0020               	movlb	0	; select bank0
  8994  0623  0833               	movf	?_stricmp,w
  8995  0624  0434               	iorwf	?_stricmp+1,w
  8996  0625  1D03               	btfss	3,2
  8997  0626  2E29               	goto	l6526
  8998                           
  8999                           ;cmd_parser.c: 43: s->c = CMD_GET_MOVABLE;
  9000  0627  3011               	movlw	17
  9001  0628  2E64               	goto	L19
  9002  0629                     l6526:	
  9003                           
  9004                           ;cmd_parser.c: 44: else if(stricmp(p,"mstatus") == 0)
  9005  0629  30FB               	movlw	low (STR_75| (0+32768))
  9006  062A  00B3               	movwf	stricmp@s2
  9007  062B  30A9               	movlw	high (STR_75| (0+32768))
  9008  062C  00B4               	movwf	stricmp@s2+1
  9009  062D  084A               	movf	parseCmd@p,w
  9010  062E  3199  2154  3185   	fcall	_stricmp
  9011  0631  0020               	movlb	0	; select bank0
  9012  0632  0833               	movf	?_stricmp,w
  9013  0633  0434               	iorwf	?_stricmp+1,w
  9014  0634  1D03               	btfss	3,2
  9015  0635  2E38               	goto	l6530
  9016                           
  9017                           ;cmd_parser.c: 45: s->c = CMD_MOTION_STATUS;
  9018  0636  3012               	movlw	18
  9019  0637  2E64               	goto	L19
  9020  0638                     l6530:	
  9021                           
  9022                           ;cmd_parser.c: 46: else if(stricmp(p,"domove") == 0)
  9023  0638  3023               	movlw	low (STR_76| (0+32768))
  9024  0639  00B3               	movwf	stricmp@s2
  9025  063A  30AA               	movlw	high (STR_76| (0+32768))
  9026  063B  00B4               	movwf	stricmp@s2+1
  9027  063C  084A               	movf	parseCmd@p,w
  9028  063D  3199  2154  3185   	fcall	_stricmp
  9029  0640  0020               	movlb	0	; select bank0
  9030  0641  0833               	movf	?_stricmp,w
  9031  0642  0434               	iorwf	?_stricmp+1,w
  9032  0643  1D03               	btfss	3,2
  9033  0644  2E47               	goto	l6534
  9034                           
  9035                           ;cmd_parser.c: 47: s->c = CMD_DOMOVE;
  9036  0645  3013               	movlw	19
  9037  0646  2E64               	goto	L19
  9038  0647                     l6534:	
  9039                           
  9040                           ;cmd_parser.c: 48: else if(stricmp(p,"comm") == 0)
  9041  0647  304A               	movlw	low (STR_77| (0+32768))
  9042  0648  00B3               	movwf	stricmp@s2
  9043  0649  30AA               	movlw	high (STR_77| (0+32768))
  9044  064A  00B4               	movwf	stricmp@s2+1
  9045  064B  084A               	movf	parseCmd@p,w
  9046  064C  3199  2154  3185   	fcall	_stricmp
  9047  064F  0020               	movlb	0	; select bank0
  9048  0650  0833               	movf	?_stricmp,w
  9049  0651  0434               	iorwf	?_stricmp+1,w
  9050  0652  1D03               	btfss	3,2
  9051  0653  2E56               	goto	l6538
  9052                           
  9053                           ;cmd_parser.c: 49: s->c = CMD_COMM_CHECK;
  9054  0654  3014               	movlw	20
  9055  0655  2E64               	goto	L19
  9056  0656                     l6538:	
  9057                           
  9058                           ;cmd_parser.c: 50: else if(stricmp(p,"ping") == 0)
  9059  0656  3045               	movlw	low (STR_78| (0+32768))
  9060  0657  00B3               	movwf	stricmp@s2
  9061  0658  30AA               	movlw	high (STR_78| (0+32768))
  9062  0659  00B4               	movwf	stricmp@s2+1
  9063  065A  084A               	movf	parseCmd@p,w
  9064  065B  3199  2154  3185   	fcall	_stricmp
  9065  065E  0020               	movlb	0	; select bank0
  9066  065F  0833               	movf	?_stricmp,w
  9067  0660  0434               	iorwf	?_stricmp+1,w
  9068  0661  1D03               	btfss	3,2
  9069  0662  2E6C               	goto	l6542
  9070                           
  9071                           ;cmd_parser.c: 51: s->c = CMD_PING;
  9072  0663  3015               	movlw	21
  9073  0664                     L19:	
  9074  0664  00C6               	movwf	??_parseCmd
  9075  0665  0845               	movf	parseCmd@s,w
  9076  0666  0086               	movwf	6
  9077  0667  3001               	movlw	1	; select bank2/3
  9078  0668  0087               	movwf	7
  9079  0669  0846               	movf	??_parseCmd,w
  9080  066A  0081               	movwf	1
  9081  066B  2E97               	goto	l6552
  9082  066C                     l6542:	
  9083                           
  9084                           ;cmd_parser.c: 54: else
  9085                           ;cmd_parser.c: 55: s->c = CMD_NONE;
  9086  066C  0845               	movf	parseCmd@s,w
  9087  066D  0086               	movwf	6
  9088  066E  3001               	movlw	1	; select bank2/3
  9089  066F  0087               	movwf	7
  9090  0670  0181               	clrf	1
  9091                           
  9092                           ;cmd_parser.c: 56: }
  9093  0671  2E97               	goto	l6552
  9094  0672                     l6544:	
  9095                           
  9096                           ;cmd_parser.c: 57: else if(paramIter == 1){
  9097  0672  0348               	decf	parseCmd@paramIter,w
  9098  0673  0449               	iorwf	parseCmd@paramIter+1,w
  9099  0674  1D03               	btfss	3,2
  9100  0675  2E84               	goto	l6548
  9101                           
  9102                           ;cmd_parser.c: 58: s->p1.paramI = atoi(p);
  9103  0676  084A               	movf	parseCmd@p,w
  9104  0677  3195  25B8  3185   	fcall	_atoi
  9105  067A  0020               	movlb	0	; select bank0
  9106  067B  0A45               	incf	parseCmd@s,w
  9107  067C  0086               	movwf	6
  9108  067D  3001               	movlw	1	; select bank2/3
  9109  067E  0087               	movwf	7
  9110  067F  0837               	movf	?_atoi,w
  9111  0680  3FC0               	movwi [0]fsr1
  9112  0681  0838               	movf	?_atoi+1,w
  9113  0682  3FC1               	movwi [1]fsr1
  9114                           
  9115                           ;cmd_parser.c: 59: }
  9116  0683  2E97               	goto	l6552
  9117  0684                     l6548:	
  9118                           
  9119                           ;cmd_parser.c: 60: else if(paramIter == 2){
  9120  0684  3002               	movlw	2
  9121  0685  0648               	xorwf	parseCmd@paramIter,w
  9122  0686  0449               	iorwf	parseCmd@paramIter+1,w
  9123  0687  1D03               	btfss	3,2
  9124  0688  2E97               	goto	l6552
  9125                           
  9126                           ;cmd_parser.c: 62: s->p2.paramI = atoi(p);
  9127  0689  084A               	movf	parseCmd@p,w
  9128  068A  3195  25B8  3185   	fcall	_atoi
  9129  068D  0020               	movlb	0	; select bank0
  9130  068E  0845               	movf	parseCmd@s,w
  9131  068F  3E0B               	addlw	11
  9132  0690  0086               	movwf	6
  9133  0691  3001               	movlw	1	; select bank2/3
  9134  0692  0087               	movwf	7
  9135  0693  0837               	movf	?_atoi,w
  9136  0694  3FC0               	movwi [0]fsr1
  9137  0695  0838               	movf	?_atoi+1,w
  9138  0696  3FC1               	movwi [1]fsr1
  9139  0697                     l6552:	
  9140                           
  9141                           ;cmd_parser.c: 63: }
  9142                           ;cmd_parser.c: 65: paramIter++;
  9143  0697  3001               	movlw	1
  9144  0698  07C8               	addwf	parseCmd@paramIter,f
  9145  0699  3000               	movlw	0
  9146  069A  3DC9               	addwfc	parseCmd@paramIter+1,f
  9147  069B  3021               	movlw	low ((STR_40+6)| (0+32768))
  9148  069C  00BF               	movwf	strtok@s2
  9149  069D  30AA               	movlw	high ((STR_40+6)| (0+32768))
  9150  069E  00C0               	movwf	strtok@s2+1
  9151  069F  3000               	movlw	0
  9152  06A0  2D17               	goto	L20
  9153  06A1                     __end_of_parseCmd:	
  9154                           
  9155                           	psect	text2
  9156  13CC                     __ptext2:	
  9157 ;; *************** function _strtok *****************
  9158 ;; Defined at:
  9159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;  s1              1    wreg     PTR unsigned char 
  9162 ;;		 -> readdata(20), NULL(0), 
  9163 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  9164 ;;		 -> STR_57(2), STR_56(2), 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  9167 ;;		 -> readdata(20), NULL(0), 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      PTR unsigned char 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9179 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9180 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9181 ;;Total ram usage:        6 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    8
  9184 ;; This function calls:
  9185 ;;		_strcspn
  9186 ;;		_strspn
  9187 ;; This function is called by:
  9188 ;;		_parseCmd
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function _strtok
  9194  13CC                     _strtok:	
  9195                           
  9196                           ;incstack = 0
  9197                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9198                           ;strtok@s1 stored from wreg
  9199  13CC  0020               	movlb	0	; select bank0
  9200  13CD  00C4               	movwf	strtok@s1
  9201  13CE  0844               	movf	strtok@s1,w
  9202  13CF  1D03               	btfss	3,2
  9203  13D0  2BD5               	goto	l6142
  9204  13D1  0854               	movf	strtok@sp,w
  9205  13D2  00C1               	movwf	??_strtok
  9206  13D3  0841               	movf	??_strtok,w
  9207  13D4  00C4               	movwf	strtok@s1
  9208  13D5                     l6142:	
  9209  13D5  0844               	movf	strtok@s1,w
  9210  13D6  1D03               	btfss	3,2
  9211  13D7  2BDA               	goto	l6148
  9212  13D8  3000               	movlw	0
  9213  13D9  0008               	return
  9214  13DA                     l6148:	
  9215  13DA  0840               	movf	strtok@s2+1,w
  9216  13DB  00B9               	movwf	strspn@s2+1
  9217  13DC  083F               	movf	strtok@s2,w
  9218  13DD  00B8               	movwf	strspn@s2
  9219  13DE  0844               	movf	strtok@s1,w
  9220  13DF  3198  20F1  3193   	fcall	_strspn
  9221  13E2  0020               	movlb	0	; select bank0
  9222  13E3  0838               	movf	?_strspn,w
  9223  13E4  00C1               	movwf	??_strtok
  9224  13E5  0841               	movf	??_strtok,w
  9225  13E6  07C4               	addwf	strtok@s1,f
  9226  13E7  0844               	movf	strtok@s1,w
  9227  13E8  0086               	movwf	6
  9228  13E9  3001               	movlw	1	; select bank2/3
  9229  13EA  0087               	movwf	7
  9230  13EB  0801               	movf	1,w
  9231  13EC  1D03               	btfss	3,2
  9232  13ED  2BF1               	goto	l6156
  9233  13EE  01D4               	clrf	strtok@sp
  9234  13EF  3000               	movlw	0
  9235  13F0  0008               	return
  9236  13F1                     l6156:	
  9237  13F1  0840               	movf	strtok@s2+1,w
  9238  13F2  00B9               	movwf	strcspn@s2+1
  9239  13F3  083F               	movf	strtok@s2,w
  9240  13F4  00B8               	movwf	strcspn@s2
  9241  13F5  0844               	movf	strtok@s1,w
  9242  13F6  3198  20C1  3193   	fcall	_strcspn
  9243  13F9  0020               	movlb	0	; select bank0
  9244  13FA  0838               	movf	?_strcspn,w
  9245  13FB  00C1               	movwf	??_strtok
  9246  13FC  0839               	movf	?_strcspn+1,w
  9247  13FD  00C2               	movwf	??_strtok+1
  9248  13FE  0844               	movf	strtok@s1,w
  9249  13FF  0741               	addwf	??_strtok,w
  9250  1400  00C3               	movwf	??_strtok+2
  9251  1401  0843               	movf	??_strtok+2,w
  9252  1402  00D4               	movwf	strtok@sp
  9253  1403  0854               	movf	strtok@sp,w
  9254  1404  0086               	movwf	6
  9255  1405  3001               	movlw	1	; select bank2/3
  9256  1406  0087               	movwf	7
  9257  1407  0801               	movf	1,w
  9258  1408  1903               	btfsc	3,2
  9259  1409  2C14               	goto	l6164
  9260  140A  0854               	movf	strtok@sp,w
  9261  140B  0086               	movwf	6
  9262  140C  3001               	movlw	1	; select bank2/3
  9263  140D  0087               	movwf	7
  9264  140E  0181               	clrf	1
  9265  140F  3001               	movlw	1
  9266  1410  00C1               	movwf	??_strtok
  9267  1411  0841               	movf	??_strtok,w
  9268  1412  07D4               	addwf	strtok@sp,f
  9269  1413  2C15               	goto	l6166
  9270  1414                     l6164:	
  9271  1414  01D4               	clrf	strtok@sp
  9272  1415                     l6166:	
  9273  1415  0844               	movf	strtok@s1,w
  9274  1416  0008               	return
  9275  1417                     __end_of_strtok:	
  9276                           
  9277                           	psect	text3
  9278  18F1                     __ptext3:	
  9279 ;; *************** function _strspn *****************
  9280 ;; Defined at:
  9281 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;  s1              1    wreg     PTR const unsigned char 
  9284 ;;		 -> readdata(20), NULL(0), 
  9285 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9286 ;;		 -> STR_57(2), STR_56(2), 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9289 ;;		 -> readdata(20), NULL(0), 
  9290 ;;  i               2   28[BANK0 ] unsigned int 
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  2   24[BANK0 ] unsigned int 
  9293 ;; Registers used:
  9294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9300 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9301 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9302 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9303 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9304 ;;Total ram usage:        7 bytes
  9305 ;; Hardware stack levels used:    1
  9306 ;; Hardware stack levels required when called:    7
  9307 ;; This function calls:
  9308 ;;		_strchr
  9309 ;; This function is called by:
  9310 ;;		_strtok
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           
  9315                           ;psect for function _strspn
  9316  18F1                     _strspn:	
  9317                           
  9318                           ;incstack = 0
  9319                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9320                           ;strspn@s1 stored from wreg
  9321  18F1  0020               	movlb	0	; select bank0
  9322  18F2  00BE               	movwf	strspn@s1
  9323  18F3  01BC               	clrf	strspn@i
  9324  18F4  01BD               	clrf	strspn@i+1
  9325  18F5  28FE               	goto	l5650
  9326  18F6                     l5648:	
  9327  18F6  3001               	movlw	1
  9328  18F7  00BA               	movwf	??_strspn
  9329  18F8  083A               	movf	??_strspn,w
  9330  18F9  07BE               	addwf	strspn@s1,f
  9331  18FA  3001               	movlw	1
  9332  18FB  07BC               	addwf	strspn@i,f
  9333  18FC  3000               	movlw	0
  9334  18FD  3DBD               	addwfc	strspn@i+1,f
  9335  18FE                     l5650:	
  9336  18FE  083E               	movf	strspn@s1,w
  9337  18FF  0086               	movwf	6
  9338  1900  3001               	movlw	1	; select bank2/3
  9339  1901  0087               	movwf	7
  9340  1902  0801               	movf	1,w
  9341  1903  1903               	btfsc	3,2
  9342  1904  291C               	goto	l5654
  9343  1905  0839               	movf	strspn@s2+1,w
  9344  1906  00B2               	movwf	strchr@ptr+1
  9345  1907  0838               	movf	strspn@s2,w
  9346  1908  00B1               	movwf	strchr@ptr
  9347  1909  083E               	movf	strspn@s1,w
  9348  190A  0086               	movwf	6
  9349  190B  3001               	movlw	1	; select bank2/3
  9350  190C  0087               	movwf	7
  9351  190D  0801               	movf	1,w
  9352  190E  00BA               	movwf	??_strspn
  9353  190F  01BB               	clrf	??_strspn+1
  9354  1910  083A               	movf	??_strspn,w
  9355  1911  00B3               	movwf	strchr@chr
  9356  1912  083B               	movf	??_strspn+1,w
  9357  1913  00B4               	movwf	strchr@chr+1
  9358  1914  31A5  2531  3198   	fcall	_strchr
  9359  1917  0020               	movlb	0	; select bank0
  9360  1918  0831               	movf	?_strchr,w
  9361  1919  0432               	iorwf	?_strchr+1,w
  9362  191A  1D03               	btfss	3,2
  9363  191B  28F6               	goto	l5648
  9364  191C                     l5654:	
  9365  191C  083D               	movf	strspn@i+1,w
  9366  191D  00B9               	movwf	?_strspn+1
  9367  191E  083C               	movf	strspn@i,w
  9368  191F  00B8               	movwf	?_strspn
  9369  1920  0008               	return
  9370  1921                     __end_of_strspn:	
  9371                           
  9372                           	psect	text4
  9373  18C1                     __ptext4:	
  9374 ;; *************** function _strcspn *****************
  9375 ;; Defined at:
  9376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  s1              1    wreg     PTR const unsigned char 
  9379 ;;		 -> readdata(20), NULL(0), 
  9380 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9381 ;;		 -> STR_57(2), STR_56(2), 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9384 ;;		 -> readdata(20), NULL(0), 
  9385 ;;  i               2   28[BANK0 ] unsigned int 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  2   24[BANK0 ] unsigned int 
  9388 ;; Registers used:
  9389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:        7 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    7
  9402 ;; This function calls:
  9403 ;;		_strchr
  9404 ;; This function is called by:
  9405 ;;		_strtok
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           
  9410                           ;psect for function _strcspn
  9411  18C1                     _strcspn:	
  9412                           
  9413                           ;incstack = 0
  9414                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9415                           ;strcspn@s1 stored from wreg
  9416  18C1  0020               	movlb	0	; select bank0
  9417  18C2  00BE               	movwf	strcspn@s1
  9418  18C3  01BC               	clrf	strcspn@i
  9419  18C4  01BD               	clrf	strcspn@i+1
  9420  18C5  28CE               	goto	l5662
  9421  18C6                     l5660:	
  9422  18C6  3001               	movlw	1
  9423  18C7  00BA               	movwf	??_strcspn
  9424  18C8  083A               	movf	??_strcspn,w
  9425  18C9  07BE               	addwf	strcspn@s1,f
  9426  18CA  3001               	movlw	1
  9427  18CB  07BC               	addwf	strcspn@i,f
  9428  18CC  3000               	movlw	0
  9429  18CD  3DBD               	addwfc	strcspn@i+1,f
  9430  18CE                     l5662:	
  9431  18CE  083E               	movf	strcspn@s1,w
  9432  18CF  0086               	movwf	6
  9433  18D0  3001               	movlw	1	; select bank2/3
  9434  18D1  0087               	movwf	7
  9435  18D2  0801               	movf	1,w
  9436  18D3  1903               	btfsc	3,2
  9437  18D4  28EC               	goto	l5666
  9438  18D5  0839               	movf	strcspn@s2+1,w
  9439  18D6  00B2               	movwf	strchr@ptr+1
  9440  18D7  0838               	movf	strcspn@s2,w
  9441  18D8  00B1               	movwf	strchr@ptr
  9442  18D9  083E               	movf	strcspn@s1,w
  9443  18DA  0086               	movwf	6
  9444  18DB  3001               	movlw	1	; select bank2/3
  9445  18DC  0087               	movwf	7
  9446  18DD  0801               	movf	1,w
  9447  18DE  00BA               	movwf	??_strcspn
  9448  18DF  01BB               	clrf	??_strcspn+1
  9449  18E0  083A               	movf	??_strcspn,w
  9450  18E1  00B3               	movwf	strchr@chr
  9451  18E2  083B               	movf	??_strcspn+1,w
  9452  18E3  00B4               	movwf	strchr@chr+1
  9453  18E4  31A5  2531  3198   	fcall	_strchr
  9454  18E7  0020               	movlb	0	; select bank0
  9455  18E8  0831               	movf	?_strchr,w
  9456  18E9  0432               	iorwf	?_strchr+1,w
  9457  18EA  1903               	btfsc	3,2
  9458  18EB  28C6               	goto	l5660
  9459  18EC                     l5666:	
  9460  18EC  083D               	movf	strcspn@i+1,w
  9461  18ED  00B9               	movwf	?_strcspn+1
  9462  18EE  083C               	movf	strcspn@i,w
  9463  18EF  00B8               	movwf	?_strcspn
  9464  18F0  0008               	return
  9465  18F1                     __end_of_strcspn:	
  9466                           
  9467                           	psect	text5
  9468  2531                     __ptext5:	
  9469 ;; *************** function _strchr *****************
  9470 ;; Defined at:
  9471 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9474 ;;		 -> STR_57(2), STR_56(2), 
  9475 ;;  chr             2   19[BANK0 ] int 
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  2   17[BANK0 ] PTR unsigned char 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9489 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9490 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9491 ;;Total ram usage:        7 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; Hardware stack levels required when called:    6
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_strcspn
  9498 ;;		_strspn
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           
  9503                           ;psect for function _strchr
  9504  2531                     _strchr:	
  9505  2531                     l2031:	
  9506                           ;incstack = 0
  9507                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9508                           
  9509  2531  0020               	movlb	0	; select bank0
  9510  2532  0831               	movf	strchr@ptr,w
  9511  2533  0084               	movwf	4
  9512  2534  0832               	movf	strchr@ptr+1,w
  9513  2535  0085               	movwf	5
  9514  2536  0800               	movf	0,w	;code access
  9515  2537  0633               	xorwf	strchr@chr,w
  9516  2538  1903               	btfsc	3,2
  9517  2539  0008               	return
  9518  253A  0832               	movf	strchr@ptr+1,w
  9519  253B  00B6               	movwf	??_strchr+1
  9520  253C  0831               	movf	strchr@ptr,w
  9521  253D  00B5               	movwf	??_strchr
  9522  253E  0AB1               	incf	strchr@ptr,f
  9523  253F  1903               	skipnz
  9524  2540  0AB2               	incf	strchr@ptr+1,f
  9525  2541  0835               	movf	??_strchr,w
  9526  2542  0084               	movwf	4
  9527  2543  0836               	movf	??_strchr+1,w
  9528  2544  0085               	movwf	5
  9529  2545  0012               	moviw fsr0++
  9530  2546  1D03               	btfss	3,2
  9531  2547  2D31               	goto	l2031
  9532  2548  01B1               	clrf	?_strchr
  9533  2549  01B2               	clrf	?_strchr+1
  9534  254A  0008               	return
  9535  254B                     __end_of_strchr:	
  9536                           
  9537                           	psect	text6
  9538  1954                     __ptext6:	
  9539 ;; *************** function _stricmp *****************
  9540 ;; Defined at:
  9541 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  s1              1    wreg     PTR const unsigned char 
  9544 ;;		 -> readdata(20), NULL(0), 
  9545 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9546 ;;		 -> STR_78(5), STR_77(5), STR_76(7), STR_75(8), 
  9547 ;;		 -> STR_74(5), STR_73(5), STR_72(13), STR_71(7), 
  9548 ;;		 -> STR_70(8), STR_69(15), STR_68(14), STR_67(12), 
  9549 ;;		 -> STR_66(8), STR_65(8), STR_64(2), STR_63(5), 
  9550 ;;		 -> STR_62(5), STR_61(2), STR_60(4), STR_59(4), 
  9551 ;;		 -> STR_58(4), 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9554 ;;		 -> readdata(20), NULL(0), 
  9555 ;;  r               1   23[BANK0 ] char 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  2   19[BANK0 ] int 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9567 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9568 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9569 ;;Total ram usage:        6 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    7
  9572 ;; This function calls:
  9573 ;;		_toupper
  9574 ;; This function is called by:
  9575 ;;		_parseCmd
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           
  9580                           ;psect for function _stricmp
  9581  1954                     _stricmp:	
  9582                           
  9583                           ;incstack = 0
  9584                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9585                           ;stricmp@s1 stored from wreg
  9586  1954  0020               	movlb	0	; select bank0
  9587  1955  00B8               	movwf	stricmp@s1
  9588  1956  295F               	goto	l6174
  9589  1957                     l6172:	
  9590  1957  3001               	movlw	1
  9591  1958  00B5               	movwf	??_stricmp
  9592  1959  0835               	movf	??_stricmp,w
  9593  195A  07B8               	addwf	stricmp@s1,f
  9594  195B  3001               	movlw	1
  9595  195C  07B3               	addwf	stricmp@s2,f
  9596  195D  3000               	movlw	0
  9597  195E  3DB4               	addwfc	stricmp@s2+1,f
  9598  195F                     l6174:	
  9599  195F  0833               	movf	stricmp@s2,w
  9600  1960  0084               	movwf	4
  9601  1961  0834               	movf	stricmp@s2+1,w
  9602  1962  0085               	movwf	5
  9603  1963  0800               	movf	0,w	;code access
  9604  1964  31A4  2463  3199   	fcall	_toupper
  9605  1967  3AFF               	xorlw	255
  9606  1968  3E01               	addlw	1
  9607  1969  0020               	movlb	0	; select bank0
  9608  196A  00B5               	movwf	??_stricmp
  9609  196B  0838               	movf	stricmp@s1,w
  9610  196C  0086               	movwf	6
  9611  196D  3001               	movlw	1	; select bank2/3
  9612  196E  0087               	movwf	7
  9613  196F  0801               	movf	1,w
  9614  1970  31A4  2463  3199   	fcall	_toupper
  9615  1973  0020               	movlb	0	; select bank0
  9616  1974  0735               	addwf	??_stricmp,w
  9617  1975  00B6               	movwf	??_stricmp+1
  9618  1976  0836               	movf	??_stricmp+1,w
  9619  1977  00B7               	movwf	stricmp@r
  9620  1978  0837               	movf	stricmp@r,w
  9621  1979  1D03               	btfss	3,2
  9622  197A  2982               	goto	l6178
  9623  197B  0838               	movf	stricmp@s1,w
  9624  197C  0086               	movwf	6
  9625  197D  3001               	movlw	1	; select bank2/3
  9626  197E  0087               	movwf	7
  9627  197F  0801               	movf	1,w
  9628  1980  1D03               	btfss	3,2
  9629  1981  2957               	goto	l6172
  9630  1982                     l6178:	
  9631  1982  0837               	movf	stricmp@r,w
  9632  1983  00B3               	movwf	?_stricmp
  9633  1984  01B4               	clrf	?_stricmp+1
  9634  1985  1BB3               	btfsc	?_stricmp,7
  9635  1986  03B4               	decf	?_stricmp+1,f
  9636  1987  0008               	return
  9637  1988                     __end_of_stricmp:	
  9638                           
  9639                           	psect	text7
  9640  2463                     __ptext7:	
  9641 ;; *************** function _toupper *****************
  9642 ;; Defined at:
  9643 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  c               1    wreg     unsigned char 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  c               1   18[BANK0 ] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      unsigned char 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2, status,0
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9661 ;;Total ram usage:        2 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    6
  9664 ;; This function calls:
  9665 ;;		Nothing
  9666 ;; This function is called by:
  9667 ;;		_stricmp
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           
  9672                           ;psect for function _toupper
  9673  2463                     _toupper:	
  9674                           
  9675                           ;incstack = 0
  9676                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9677                           ;toupper@c stored from wreg
  9678  2463  0020               	movlb	0	; select bank0
  9679  2464  00B2               	movwf	toupper@c
  9680  2465  307B               	movlw	123
  9681  2466  0232               	subwf	toupper@c,w
  9682  2467  1803               	skipnc
  9683  2468  2C71               	goto	l5642
  9684  2469  3061               	movlw	97
  9685  246A  0232               	subwf	toupper@c,w
  9686  246B  1C03               	skipc
  9687  246C  2C71               	goto	l5642
  9688  246D  30DF               	movlw	223
  9689  246E  00B1               	movwf	??_toupper
  9690  246F  0831               	movf	??_toupper,w
  9691  2470  05B2               	andwf	toupper@c,f
  9692  2471                     l5642:	
  9693  2471  0832               	movf	toupper@c,w
  9694  2472  0008               	return
  9695  2473                     __end_of_toupper:	
  9696                           
  9697                           	psect	text8
  9698  15B8                     __ptext8:	
  9699 ;; *************** function _atoi *****************
  9700 ;; Defined at:
  9701 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  s               1    wreg     PTR const unsigned char 
  9704 ;;		 -> readdata(20), NULL(0), 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9707 ;;		 -> readdata(20), NULL(0), 
  9708 ;;  a               2   28[BANK0 ] int 
  9709 ;;  sign            1   27[BANK0 ] unsigned char 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  2   23[BANK0 ] int 
  9712 ;; Registers used:
  9713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9720 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9721 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9722 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9723 ;;Total ram usage:        8 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:    7
  9726 ;; This function calls:
  9727 ;;		___wmul
  9728 ;;		_isdigit
  9729 ;; This function is called by:
  9730 ;;		_parseCmd
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           
  9735                           ;psect for function _atoi
  9736  15B8                     _atoi:	
  9737                           
  9738                           ;incstack = 0
  9739                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9740                           ;atoi@s stored from wreg
  9741  15B8  0020               	movlb	0	; select bank0
  9742  15B9  00BE               	movwf	atoi@s
  9743  15BA                     l6186:	
  9744  15BA  083E               	movf	atoi@s,w
  9745  15BB  0086               	movwf	6
  9746  15BC  3001               	movlw	1	; select bank2/3
  9747  15BD  0087               	movwf	7
  9748  15BE  3020               	movlw	32
  9749  15BF  0601               	xorwf	1,w
  9750  15C0  1D03               	btfss	3,2
  9751  15C1  2DC7               	goto	l6188
  9752  15C2                     l6184:	
  9753  15C2  3001               	movlw	1
  9754  15C3  00B9               	movwf	??_atoi
  9755  15C4  0839               	movf	??_atoi,w
  9756  15C5  07BE               	addwf	atoi@s,f
  9757  15C6  2DBA               	goto	l6186
  9758  15C7                     l6188:	
  9759  15C7  083E               	movf	atoi@s,w
  9760  15C8  0086               	movwf	6
  9761  15C9  3001               	movlw	1	; select bank2/3
  9762  15CA  0087               	movwf	7
  9763  15CB  3009               	movlw	9
  9764  15CC  0601               	xorwf	1,w
  9765  15CD  1903               	btfsc	3,2
  9766  15CE  2DC2               	goto	l6184
  9767  15CF  01BC               	clrf	atoi@a
  9768  15D0  01BD               	clrf	atoi@a+1
  9769  15D1  01BB               	clrf	atoi@sign
  9770  15D2  083E               	movf	atoi@s,w
  9771  15D3  0086               	movwf	6
  9772  15D4  3001               	movlw	1	; select bank2/3
  9773  15D5  0087               	movwf	7
  9774  15D6  302D               	movlw	45
  9775  15D7  0601               	xorwf	1,w
  9776  15D8  1D03               	btfss	3,2
  9777  15D9  2DDF               	goto	l6196
  9778  15DA  3001               	movlw	1
  9779  15DB  00B9               	movwf	??_atoi
  9780  15DC  0839               	movf	??_atoi,w
  9781  15DD  07BB               	addwf	atoi@sign,f
  9782  15DE  2DE7               	goto	l6202
  9783  15DF                     l6196:	
  9784  15DF  083E               	movf	atoi@s,w
  9785  15E0  0086               	movwf	6
  9786  15E1  3001               	movlw	1	; select bank2/3
  9787  15E2  0087               	movwf	7
  9788  15E3  302B               	movlw	43
  9789  15E4  0601               	xorwf	1,w
  9790  15E5  1D03               	btfss	3,2
  9791  15E6  2DEB               	goto	l6204
  9792  15E7                     l6202:	
  9793  15E7  3001               	movlw	1
  9794  15E8  00B9               	movwf	??_atoi
  9795  15E9  0839               	movf	??_atoi,w
  9796  15EA  07BE               	addwf	atoi@s,f
  9797  15EB                     l6204:	
  9798  15EB  083E               	movf	atoi@s,w
  9799  15EC  0086               	movwf	6
  9800  15ED  3001               	movlw	1	; select bank2/3
  9801  15EE  0087               	movwf	7
  9802  15EF  0801               	movf	1,w
  9803  15F0  31A4  2454  3195   	fcall	_isdigit
  9804  15F3  1C03               	btfss	3,0
  9805  15F4  2E14               	goto	l6206
  9806  15F5  0020               	movlb	0	; select bank0
  9807  15F6  083D               	movf	atoi@a+1,w
  9808  15F7  00B2               	movwf	___wmul@multiplier+1
  9809  15F8  083C               	movf	atoi@a,w
  9810  15F9  00B1               	movwf	___wmul@multiplier
  9811  15FA  300A               	movlw	10
  9812  15FB  00B3               	movwf	___wmul@multiplicand
  9813  15FC  3000               	movlw	0
  9814  15FD  00B4               	movwf	___wmul@multiplicand+1
  9815  15FE  31A5  2582  3195   	fcall	___wmul
  9816  1601  0020               	movlb	0	; select bank0
  9817  1602  083E               	movf	atoi@s,w
  9818  1603  0086               	movwf	6
  9819  1604  3001               	movlw	1	; select bank2/3
  9820  1605  0087               	movwf	7
  9821  1606  0801               	movf	1,w
  9822  1607  0731               	addwf	?___wmul,w
  9823  1608  00B9               	movwf	??_atoi
  9824  1609  0832               	movf	?___wmul+1,w
  9825  160A  1803               	skipnc
  9826  160B  0A32               	incf	?___wmul+1,w
  9827  160C  00BA               	movwf	??_atoi+1
  9828  160D  0839               	movf	??_atoi,w
  9829  160E  3ED0               	addlw	208
  9830  160F  00BC               	movwf	atoi@a
  9831  1610  30FF               	movlw	255
  9832  1611  3D3A               	addwfc	??_atoi+1,w
  9833  1612  00BD               	movwf	atoi@a+1
  9834  1613  2DE7               	goto	l6202
  9835  1614                     l6206:	
  9836  1614  0020               	movlb	0	; select bank0
  9837  1615  083B               	movf	atoi@sign,w
  9838  1616  1903               	btfsc	3,2
  9839  1617  2E24               	goto	l6212
  9840  1618  093C               	comf	atoi@a,w
  9841  1619  00B9               	movwf	??_atoi
  9842  161A  093D               	comf	atoi@a+1,w
  9843  161B  00BA               	movwf	??_atoi+1
  9844  161C  0AB9               	incf	??_atoi,f
  9845  161D  1903               	skipnz
  9846  161E  0ABA               	incf	??_atoi+1,f
  9847  161F  0839               	movf	??_atoi,w
  9848  1620  00B7               	movwf	?_atoi
  9849  1621  083A               	movf	??_atoi+1,w
  9850  1622  00B8               	movwf	?_atoi+1
  9851  1623  0008               	return
  9852  1624                     l6212:	
  9853  1624  083D               	movf	atoi@a+1,w
  9854  1625  00B8               	movwf	?_atoi+1
  9855  1626  083C               	movf	atoi@a,w
  9856  1627  00B7               	movwf	?_atoi
  9857  1628  0008               	return
  9858  1629                     __end_of_atoi:	
  9859                           
  9860                           	psect	text9
  9861  2454                     __ptext9:	
  9862 ;; *************** function _isdigit *****************
  9863 ;; Defined at:
  9864 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;  c               1    wreg     unsigned char 
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;  c               1   18[BANK0 ] unsigned char 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;		None               void
  9871 ;; Registers used:
  9872 ;;		wreg, status,2, status,0
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9881 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9882 ;;Total ram usage:        2 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:    6
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_atoi
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           
  9893                           ;psect for function _isdigit
  9894  2454                     _isdigit:	
  9895                           
  9896                           ;incstack = 0
  9897                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9898                           ;isdigit@c stored from wreg
  9899  2454  0020               	movlb	0	; select bank0
  9900  2455  00B2               	movwf	isdigit@c
  9901  2456  01B1               	clrf	_isdigit$2134
  9902  2457  303A               	movlw	58
  9903  2458  0232               	subwf	isdigit@c,w
  9904  2459  1803               	skipnc
  9905  245A  2C61               	goto	l5458
  9906  245B  3030               	movlw	48
  9907  245C  0232               	subwf	isdigit@c,w
  9908  245D  1C03               	skipc
  9909  245E  2C61               	goto	l5458
  9910  245F  01B1               	clrf	_isdigit$2134
  9911  2460  0AB1               	incf	_isdigit$2134,f
  9912  2461                     l5458:	
  9913  2461  0C31               	rrf	_isdigit$2134,w
  9914  2462  0008               	return
  9915  2463                     __end_of_isdigit:	
  9916                           
  9917                           	psect	text10
  9918  2582                     __ptext10:	
  9919 ;; *************** function ___wmul *****************
  9920 ;; Defined at:
  9921 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  multiplier      2   17[BANK0 ] unsigned int 
  9924 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  product         2   21[BANK0 ] unsigned int 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  2   17[BANK0 ] unsigned int 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2, status,0
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9939 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9940 ;;Total ram usage:        6 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    6
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_atoi
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           
  9951                           ;psect for function ___wmul
  9952  2582                     ___wmul:	
  9953                           
  9954                           ;incstack = 0
  9955                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9956  2582  0020               	movlb	0	; select bank0
  9957  2583  01B5               	clrf	___wmul@product
  9958  2584  01B6               	clrf	___wmul@product+1
  9959  2585                     l5438:	
  9960  2585  1C31               	btfss	___wmul@multiplier,0
  9961  2586  2D8B               	goto	l1558
  9962  2587  0833               	movf	___wmul@multiplicand,w
  9963  2588  07B5               	addwf	___wmul@product,f
  9964  2589  0834               	movf	___wmul@multiplicand+1,w
  9965  258A  3DB6               	addwfc	___wmul@product+1,f
  9966  258B                     l1558:	
  9967  258B  3001               	movlw	1
  9968  258C                     u4515:	
  9969  258C  35B3               	lslf	___wmul@multiplicand,f
  9970  258D  0DB4               	rlf	___wmul@multiplicand+1,f
  9971  258E  0B89               	decfsz	9,f
  9972  258F  2D8C               	goto	u4515
  9973  2590  3001               	movlw	1
  9974  2591                     u4525:	
  9975  2591  36B2               	lsrf	___wmul@multiplier+1,f
  9976  2592  0CB1               	rrf	___wmul@multiplier,f
  9977  2593  0B89               	decfsz	9,f
  9978  2594  2D91               	goto	u4525
  9979  2595  0831               	movf	___wmul@multiplier,w
  9980  2596  0432               	iorwf	___wmul@multiplier+1,w
  9981  2597  1D03               	btfss	3,2
  9982  2598  2D85               	goto	l5438
  9983  2599  0836               	movf	___wmul@product+1,w
  9984  259A  00B2               	movwf	?___wmul+1
  9985  259B  0835               	movf	___wmul@product,w
  9986  259C  00B1               	movwf	?___wmul
  9987  259D  0008               	return
  9988  259E                     __end_of___wmul:	
  9989                           
  9990                           	psect	text11
  9991  0B1B                     __ptext11:	
  9992 ;; *************** function _main_initialize *****************
  9993 ;; Defined at:
  9994 ;;		line 185 in file "main.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;		None
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;		None
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10010 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10011 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10012 ;;Total ram usage:        2 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:   15
 10015 ;; This function calls:
 10016 ;;		_LED_setBrightnessRange
 10017 ;;		_LEDsPwr
 10018 ;;		_TMR0_Load8bitPeriod
 10019 ;;		_TMR2_LoadPeriodRegister
 10020 ;;		___awtoft
 10021 ;;		___ftadd
 10022 ;;		___ftmul
 10023 ;;		___fttol
 10024 ;;		_drv_init
 10025 ;;		_printf
 10026 ;; This function is called by:
 10027 ;;		_main
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           
 10032                           ;psect for function _main_initialize
 10033  0B1B                     _main_initialize:	
 10034                           
 10035                           ;main.c: 187: LEDsPwr(LEDpower, 1);
 10036                           
 10037                           ;incstack = 0
 10038                           ; Regs used in _main_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10039  0B1B  306F               	movlw	low (_LEDpower| (0+32768))
 10040  0B1C  0084               	movwf	4
 10041  0B1D  30AA               	movlw	high (_LEDpower| (0+32768))
 10042  0B1E  0085               	movwf	5
 10043  0B1F  3F00               	moviw [0]fsr0
 10044  0B20  0020               	movlb	0	; select bank0
 10045  0B21  00C4               	movwf	LEDsPwr@pwr
 10046  0B22  3F01               	moviw [1]fsr0
 10047  0B23  00C5               	movwf	LEDsPwr@pwr+1
 10048  0B24  3001               	movlw	1
 10049  0B25  00C6               	movwf	LEDsPwr@topOrBottom
 10050  0B26  3000               	movlw	0
 10051  0B27  00C7               	movwf	LEDsPwr@topOrBottom+1
 10052  0B28  3194  2417  318B   	fcall	_LEDsPwr
 10053                           
 10054                           ;main.c: 188: LEDsPwr(LEDpower, 2);
 10055  0B2B  306F               	movlw	low (_LEDpower| (0+32768))
 10056  0B2C  0084               	movwf	4
 10057  0B2D  30AA               	movlw	high (_LEDpower| (0+32768))
 10058  0B2E  0085               	movwf	5
 10059  0B2F  3F00               	moviw [0]fsr0
 10060  0B30  0020               	movlb	0	; select bank0
 10061  0B31  00C4               	movwf	LEDsPwr@pwr
 10062  0B32  3F01               	moviw [1]fsr0
 10063  0B33  00C5               	movwf	LEDsPwr@pwr+1
 10064  0B34  3002               	movlw	2
 10065  0B35  00C6               	movwf	LEDsPwr@topOrBottom
 10066  0B36  3000               	movlw	0
 10067  0B37  00C7               	movwf	LEDsPwr@topOrBottom+1
 10068  0B38  3194  2417  318B   	fcall	_LEDsPwr
 10069                           
 10070                           ;main.c: 190: LED_setBrightnessRange(1, 1);
 10071  0B3B  3001               	movlw	1
 10072  0B3C  0020               	movlb	0	; select bank0
 10073  0B3D  00C4               	movwf	LED_setBrightnessRange@range
 10074  0B3E  3000               	movlw	0
 10075  0B3F  00C5               	movwf	LED_setBrightnessRange@range+1
 10076  0B40  3001               	movlw	1
 10077  0B41  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10078  0B42  3000               	movlw	0
 10079  0B43  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10080  0B44  318B  23F6  318B   	fcall	_LED_setBrightnessRange
 10081                           
 10082                           ;main.c: 191: LED_setBrightnessRange(1, 2);
 10083  0B47  3001               	movlw	1
 10084  0B48  0020               	movlb	0	; select bank0
 10085  0B49  00C4               	movwf	LED_setBrightnessRange@range
 10086  0B4A  3000               	movlw	0
 10087  0B4B  00C5               	movwf	LED_setBrightnessRange@range+1
 10088  0B4C  3002               	movlw	2
 10089  0B4D  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10090  0B4E  3000               	movlw	0
 10091  0B4F  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10092  0B50  318B  23F6  318B   	fcall	_LED_setBrightnessRange
 10093                           
 10094                           ;main.c: 194: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 10095  0B53  0021               	movlb	1	; select bank1
 10096  0B54  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 10097  0B55  0020               	movlb	0	; select bank0
 10098  0B56  00BA               	movwf	___awtoft@c+1
 10099  0B57  0021               	movlb	1	; select bank1
 10100  0B58  086B               	movf	_heater_post_time_ms^(0+128),w
 10101  0B59  0020               	movlb	0	; select bank0
 10102  0B5A  00B9               	movwf	___awtoft@c
 10103  0B5B  31A6  26B7  318B   	fcall	___awtoft
 10104  0B5E  0020               	movlb	0	; select bank0
 10105  0B5F  0839               	movf	?___awtoft,w
 10106  0B60  00C2               	movwf	___ftmul@f2
 10107  0B61  083A               	movf	?___awtoft+1,w
 10108  0B62  00C3               	movwf	___ftmul@f2+1
 10109  0B63  083B               	movf	?___awtoft+2,w
 10110  0B64  00C4               	movwf	___ftmul@f2+2
 10111  0B65  3063               	movlw	low (_TMR2_RANGE| (0+32768))
 10112  0B66  0084               	movwf	4
 10113  0B67  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 10114  0B68  0085               	movwf	5
 10115  0B69  3F00               	moviw [0]fsr0
 10116  0B6A  00BF               	movwf	___ftmul@f1
 10117  0B6B  3F01               	moviw [1]fsr0
 10118  0B6C  00C0               	movwf	___ftmul@f1+1
 10119  0B6D  3F02               	moviw [2]fsr0
 10120  0B6E  00C1               	movwf	___ftmul@f1+2
 10121  0B6F  318C  24D4  318B   	fcall	___ftmul
 10122  0B72  0020               	movlb	0	; select bank0
 10123  0B73  083F               	movf	?___ftmul,w
 10124  0B74  0021               	movlb	1	; select bank1
 10125  0B75  00A9               	movwf	___ftadd@f2^(0+128)
 10126  0B76  0020               	movlb	0	; select bank0
 10127  0B77  0840               	movf	?___ftmul+1,w
 10128  0B78  0021               	movlb	1	; select bank1
 10129  0B79  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10130  0B7A  0020               	movlb	0	; select bank0
 10131  0B7B  0841               	movf	?___ftmul+2,w
 10132  0B7C  0021               	movlb	1	; select bank1
 10133  0B7D  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10134  0B7E  3000               	movlw	0
 10135  0B7F  00A6               	movwf	___ftadd@f1^(0+128)
 10136  0B80  3080               	movlw	128
 10137  0B81  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10138  0B82  30BF               	movlw	191
 10139  0B83  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10140  0B84  318D  25B5  318B   	fcall	___ftadd
 10141  0B87  0021               	movlb	1	; select bank1
 10142  0B88  0826               	movf	?___ftadd^(0+128),w
 10143  0B89  00AF               	movwf	___fttol@f1^(0+128)
 10144  0B8A  0827               	movf	(?___ftadd+1)^(0+128),w
 10145  0B8B  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10146  0B8C  0828               	movf	(?___ftadd+2)^(0+128),w
 10147  0B8D  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10148  0B8E  3188  20B1  318B   	fcall	___fttol
 10149  0B91  0021               	movlb	1	; select bank1
 10150  0B92  082F               	movf	?___fttol^(0+128),w
 10151  0B93  31A2  22EF  318B   	fcall	_TMR2_LoadPeriodRegister
 10152                           
 10153                           ;main.c: 195: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 10154  0B96  0021               	movlb	1	; select bank1
 10155  0B97  096D               	comf	_heater_pre_time_ms^(0+128),w
 10156  0B98  00BD               	movwf	??_main_initialize^(0+128)
 10157  0B99  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 10158  0B9A  00BE               	movwf	(??_main_initialize^(0+128)+1)
 10159  0B9B  0ABD               	incf	??_main_initialize^(0+128),f
 10160  0B9C  1903               	skipnz
 10161  0B9D  0ABE               	incf	(??_main_initialize^(0+128)+1),f
 10162  0B9E  0869               	movf	_piezo_on_time_ms^(0+128),w
 10163  0B9F  073D               	addwf	??_main_initialize^(0+128),w
 10164  0BA0  0020               	movlb	0	; select bank0
 10165  0BA1  00B9               	movwf	___awtoft@c
 10166  0BA2  0021               	movlb	1	; select bank1
 10167  0BA3  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 10168  0BA4  3D3E               	addwfc	(??_main_initialize+1)^(0+128),w
 10169  0BA5  0020               	movlb	0	; select bank0
 10170  0BA6  00BA               	movwf	___awtoft@c+1
 10171  0BA7  31A6  26B7  318B   	fcall	___awtoft
 10172  0BAA  0020               	movlb	0	; select bank0
 10173  0BAB  0839               	movf	?___awtoft,w
 10174  0BAC  00C2               	movwf	___ftmul@f2
 10175  0BAD  083A               	movf	?___awtoft+1,w
 10176  0BAE  00C3               	movwf	___ftmul@f2+1
 10177  0BAF  083B               	movf	?___awtoft+2,w
 10178  0BB0  00C4               	movwf	___ftmul@f2+2
 10179  0BB1  3066               	movlw	low (_TMR0_RANGE| (0+32768))
 10180  0BB2  0084               	movwf	4
 10181  0BB3  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 10182  0BB4  0085               	movwf	5
 10183  0BB5  3F00               	moviw [0]fsr0
 10184  0BB6  00BF               	movwf	___ftmul@f1
 10185  0BB7  3F01               	moviw [1]fsr0
 10186  0BB8  00C0               	movwf	___ftmul@f1+1
 10187  0BB9  3F02               	moviw [2]fsr0
 10188  0BBA  00C1               	movwf	___ftmul@f1+2
 10189  0BBB  318C  24D4  318B   	fcall	___ftmul
 10190  0BBE  0020               	movlb	0	; select bank0
 10191  0BBF  083F               	movf	?___ftmul,w
 10192  0BC0  0021               	movlb	1	; select bank1
 10193  0BC1  00A9               	movwf	___ftadd@f2^(0+128)
 10194  0BC2  0020               	movlb	0	; select bank0
 10195  0BC3  0840               	movf	?___ftmul+1,w
 10196  0BC4  0021               	movlb	1	; select bank1
 10197  0BC5  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10198  0BC6  0020               	movlb	0	; select bank0
 10199  0BC7  0841               	movf	?___ftmul+2,w
 10200  0BC8  0021               	movlb	1	; select bank1
 10201  0BC9  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10202  0BCA  3000               	movlw	0
 10203  0BCB  00A6               	movwf	___ftadd@f1^(0+128)
 10204  0BCC  3080               	movlw	128
 10205  0BCD  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10206  0BCE  30BF               	movlw	191
 10207  0BCF  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10208  0BD0  318D  25B5  318B   	fcall	___ftadd
 10209  0BD3  0021               	movlb	1	; select bank1
 10210  0BD4  0826               	movf	?___ftadd^(0+128),w
 10211  0BD5  00AF               	movwf	___fttol@f1^(0+128)
 10212  0BD6  0827               	movf	(?___ftadd+1)^(0+128),w
 10213  0BD7  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10214  0BD8  0828               	movf	(?___ftadd+2)^(0+128),w
 10215  0BD9  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10216  0BDA  3188  20B1  318B   	fcall	___fttol
 10217  0BDD  0021               	movlb	1	; select bank1
 10218  0BDE  082F               	movf	?___fttol^(0+128),w
 10219  0BDF  31A2  22EA  318B   	fcall	_TMR0_Load8bitPeriod
 10220                           
 10221                           ;main.c: 198: drv_init(0x03, 0x0c);
 10222  0BE2  3003               	movlw	3
 10223  0BE3  0021               	movlb	1	; select bank1
 10224  0BE4  00B6               	movwf	drv_init@output_gain^(0+128)
 10225  0BE5  3000               	movlw	0
 10226  0BE6  00B7               	movwf	(drv_init@output_gain^(0+128)+1)
 10227  0BE7  300C               	movlw	12
 10228  0BE8  00B8               	movwf	drv_init@idle_timeout^(0+128)
 10229  0BE9  3000               	movlw	0
 10230  0BEA  00B9               	movwf	(drv_init@idle_timeout^(0+128)+1)
 10231  0BEB  319F  279D  318B   	fcall	_drv_init
 10232                           
 10233                           ;main.c: 199: printf("initialized\n");
 10234  0BEE  301E               	movlw	low ((STR_51+4)| (0+32768))
 10235  0BEF  0021               	movlb	1	; select bank1
 10236  0BF0  00A0               	movwf	printf@f^(0+128)
 10237  0BF1  30A9               	movlw	high ((STR_51+4)| (0+32768))
 10238  0BF2  00A1               	movwf	(printf@f^(0+128)+1)
 10239  0BF3  3186  26A1         	fcall	_printf
 10240  0BF5  0008               	return
 10241  0BF6                     __end_of_main_initialize:	
 10242                           
 10243                           	psect	text12
 10244  1F9D                     __ptext12:	
 10245 ;; *************** function _drv_init *****************
 10246 ;; Defined at:
 10247 ;;		line 3 in file "drv2665.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  output_gain     2   22[BANK1 ] int 
 10250 ;;  idle_timeout    2   24[BANK1 ] int 
 10251 ;; Auto vars:     Size  Location     Type
 10252 ;;		None
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  1    wreg      void 
 10255 ;; Registers used:
 10256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10262 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10264 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10265 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10266 ;;Total ram usage:        5 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; Hardware stack levels required when called:   14
 10269 ;; This function calls:
 10270 ;;		_drv_reset
 10271 ;;		_drv_write
 10272 ;;		_i2c_open
 10273 ;;		_i2c_setAddress
 10274 ;;		_printf
 10275 ;; This function is called by:
 10276 ;;		_main_initialize
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function _drv_init
 10282  1F9D                     _drv_init:	
 10283                           
 10284                           ;drv2665.c: 5: i2c_setAddress(drv_address);
 10285                           
 10286                           ;incstack = 0
 10287                           ; Regs used in _drv_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10288  1F9D  3077               	movlw	low (_drv_address| (0+32768))
 10289  1F9E  0084               	movwf	4
 10290  1F9F  30AA               	movlw	high (_drv_address| (0+32768))
 10291  1FA0  0085               	movwf	5
 10292  1FA1  0800               	movf	0,w	;code access
 10293  1FA2  31A3  236E  319F   	fcall	_i2c_setAddress
 10294                           
 10295                           ;drv2665.c: 6: i2c_open(drv_address);
 10296  1FA5  3077               	movlw	low (_drv_address| (0+32768))
 10297  1FA6  0084               	movwf	4
 10298  1FA7  30AA               	movlw	high (_drv_address| (0+32768))
 10299  1FA8  0085               	movwf	5
 10300  1FA9  0800               	movf	0,w	;code access
 10301  1FAA  319B  2360  319F   	fcall	_i2c_open
 10302                           
 10303                           ;drv2665.c: 7: _delay((unsigned long)((10)*(1000000/4000.0)));
 10304  1FAD  3004               	movlw	4
 10305  1FAE  0021               	movlb	1	; select bank1
 10306  1FAF  00BA               	movwf	??_drv_init^(0+128)
 10307  1FB0  303D               	movlw	61
 10308  1FB1                     u8797:	
 10309  1FB1  0B89               	decfsz	9,f
 10310  1FB2  2FB1               	goto	u8797
 10311  1FB3  0BBA               	decfsz	??_drv_init^(0+128),f
 10312  1FB4  2FB1               	goto	u8797
 10313  1FB5  3200               	nop2
 10314                           
 10315                           ;drv2665.c: 9: drv_reset();
 10316  1FB6  31A3  23CA  319F   	fcall	_drv_reset
 10317                           
 10318                           ;drv2665.c: 10: _delay((unsigned long)((10)*(1000000/4000.0)));
 10319  1FB9  3004               	movlw	4
 10320  1FBA  0021               	movlb	1	; select bank1
 10321  1FBB  00BA               	movwf	??_drv_init^(0+128)
 10322  1FBC  303D               	movlw	61
 10323  1FBD                     u8807:	
 10324  1FBD  0B89               	decfsz	9,f
 10325  1FBE  2FBD               	goto	u8807
 10326  1FBF  0BBA               	decfsz	??_drv_init^(0+128),f
 10327  1FC0  2FBD               	goto	u8807
 10328  1FC1  3200               	nop2
 10329                           
 10330                           ;drv2665.c: 11: drv_write(0x02, 0);
 10331  1FC2  0020               	movlb	0	; select bank0
 10332  1FC3  01C9               	clrf	drv_write@data
 10333  1FC4  3002               	movlw	2
 10334  1FC5  31A7  2744  319F   	fcall	_drv_write
 10335                           
 10336                           ;drv2665.c: 12: _delay((unsigned long)((10)*(1000000/4000.0)));
 10337  1FC8  3004               	movlw	4
 10338  1FC9  0021               	movlb	1	; select bank1
 10339  1FCA  00BA               	movwf	??_drv_init^(0+128)
 10340  1FCB  303D               	movlw	61
 10341  1FCC                     u8817:	
 10342  1FCC  0B89               	decfsz	9,f
 10343  1FCD  2FCC               	goto	u8817
 10344  1FCE  0BBA               	decfsz	??_drv_init^(0+128),f
 10345  1FCF  2FCC               	goto	u8817
 10346  1FD0  3200               	nop2
 10347                           
 10348                           ;drv2665.c: 13: drv_write(0x01, 0x38 | output_gain);
 10349  1FD1  0021               	movlb	1	; select bank1
 10350  1FD2  0836               	movf	drv_init@output_gain^(0+128),w
 10351  1FD3  3838               	iorlw	56
 10352  1FD4  00BA               	movwf	??_drv_init^(0+128)
 10353  1FD5  083A               	movf	??_drv_init^(0+128),w
 10354  1FD6  0020               	movlb	0	; select bank0
 10355  1FD7  00C9               	movwf	drv_write@data
 10356  1FD8  3001               	movlw	1
 10357  1FD9  31A7  2744  319F   	fcall	_drv_write
 10358                           
 10359                           ;drv2665.c: 15: _delay((unsigned long)((10)*(1000000/4000.0)));
 10360  1FDC  3004               	movlw	4
 10361  1FDD  0021               	movlb	1	; select bank1
 10362  1FDE  00BA               	movwf	??_drv_init^(0+128)
 10363  1FDF  303D               	movlw	61
 10364  1FE0                     u8827:	
 10365  1FE0  0B89               	decfsz	9,f
 10366  1FE1  2FE0               	goto	u8827
 10367  1FE2  0BBA               	decfsz	??_drv_init^(0+128),f
 10368  1FE3  2FE0               	goto	u8827
 10369  1FE4  3200               	nop2
 10370                           
 10371                           ;drv2665.c: 16: drv_write(0x02, idle_timeout);
 10372  1FE5  0021               	movlb	1	; select bank1
 10373  1FE6  0838               	movf	drv_init@idle_timeout^(0+128),w
 10374  1FE7  00BA               	movwf	??_drv_init^(0+128)
 10375  1FE8  083A               	movf	??_drv_init^(0+128),w
 10376  1FE9  0020               	movlb	0	; select bank0
 10377  1FEA  00C9               	movwf	drv_write@data
 10378  1FEB  3002               	movlw	2
 10379  1FEC  31A7  2744  319F   	fcall	_drv_write
 10380                           
 10381                           ;drv2665.c: 18: _delay((unsigned long)((10)*(1000000/4000.0)));
 10382  1FEF  3004               	movlw	4
 10383  1FF0  0021               	movlb	1	; select bank1
 10384  1FF1  00BA               	movwf	??_drv_init^(0+128)
 10385  1FF2  303D               	movlw	61
 10386  1FF3                     u8837:	
 10387  1FF3  0B89               	decfsz	9,f
 10388  1FF4  2FF3               	goto	u8837
 10389  1FF5  0BBA               	decfsz	??_drv_init^(0+128),f
 10390  1FF6  2FF3               	goto	u8837
 10391  1FF7  3200               	nop2
 10392                           
 10393                           ;drv2665.c: 20: printf("drv initialized\n");
 10394  1FF8  301A               	movlw	low (STR_51| (0+32768))
 10395  1FF9  0021               	movlb	1	; select bank1
 10396  1FFA  00A0               	movwf	printf@f^(0+128)
 10397  1FFB  30A9               	movlw	high (STR_51| (0+32768))
 10398  1FFC  00A1               	movwf	(printf@f^(0+128)+1)
 10399  1FFD  3186  26A1         	fcall	_printf
 10400  1FFF  0008               	return
 10401  2000                     __end_of_drv_init:	
 10402                           
 10403                           	psect	text13
 10404  236E                     __ptext13:	
 10405 ;; *************** function _i2c_setAddress *****************
 10406 ;; Defined at:
 10407 ;;		line 156 in file "mcc_generated_files/drivers/i2c_master.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;  address         1    wreg     unsigned char 
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;  address         1   18[BANK0 ] unsigned char 
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      void 
 10414 ;; Registers used:
 10415 ;;		wreg
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10424 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10425 ;;Total ram usage:        2 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    6
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_drv_init
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           
 10436                           ;psect for function _i2c_setAddress
 10437  236E                     _i2c_setAddress:	
 10438                           
 10439                           ;incstack = 0
 10440                           ; Regs used in _i2c_setAddress: [wreg]
 10441                           ;i2c_setAddress@address stored from wreg
 10442  236E  0020               	movlb	0	; select bank0
 10443  236F  00B2               	movwf	i2c_setAddress@address
 10444                           
 10445                           ;i2c_master.c: 158: i2c_status.address = address;
 10446  2370  0832               	movf	i2c_setAddress@address,w
 10447  2371  00B1               	movwf	??_i2c_setAddress
 10448  2372  0831               	movf	??_i2c_setAddress,w
 10449  2373  0022               	movlb	2	; select bank2
 10450  2374  00A1               	movwf	(_i2c_status^(0+256)+1)
 10451  2375  0008               	return
 10452  2376                     __end_of_i2c_setAddress:	
 10453                           
 10454                           	psect	text14
 10455  1B60                     __ptext14:	
 10456 ;; *************** function _i2c_open *****************
 10457 ;; Defined at:
 10458 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  address         1    wreg     unsigned char 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;  address         1   21[BANK0 ] unsigned char 
 10463 ;;  ret             1   20[BANK0 ] enum E8193
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      enum E8193
 10466 ;; Registers used:
 10467 ;;		wreg, status,2, status,0, pclath, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10474 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10476 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10477 ;;Total ram usage:        3 bytes
 10478 ;; Hardware stack levels used:    1
 10479 ;; Hardware stack levels required when called:    7
 10480 ;; This function calls:
 10481 ;;		_i2c1_driver_open
 10482 ;;		_i2c1_driver_setBusCollisionISR
 10483 ;;		_i2c1_driver_setI2cISR
 10484 ;;		_mssp1_clearIRQ
 10485 ;; This function is called by:
 10486 ;;		_drv_init
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           
 10491                           ;psect for function _i2c_open
 10492  1B60                     _i2c_open:	
 10493                           
 10494                           ;incstack = 0
 10495                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 10496                           ;i2c_open@address stored from wreg
 10497  1B60  0020               	movlb	0	; select bank0
 10498  1B61  00B5               	movwf	i2c_open@address
 10499                           
 10500                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 10501  1B62  01B4               	clrf	i2c_open@ret
 10502  1B63  0AB4               	incf	i2c_open@ret,f
 10503                           
 10504                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 10505  1B64  0022               	movlb	2	; select bank2
 10506  1B65  18A0               	btfsc	_i2c_status^(0+256),1
 10507  1B66  0008               	return
 10508                           
 10509                           ;i2c_master.c: 121: {
 10510                           ;i2c_master.c: 122: i2c_status.address = address;
 10511  1B67  0020               	movlb	0	; select bank0
 10512  1B68  0835               	movf	i2c_open@address,w
 10513  1B69  00B3               	movwf	??_i2c_open
 10514  1B6A  0833               	movf	??_i2c_open,w
 10515  1B6B  0022               	movlb	2	; select bank2
 10516  1B6C  00A1               	movwf	(_i2c_status^(0+256)+1)
 10517                           
 10518                           ;i2c_master.c: 123: i2c_status.busy = 0;
 10519  1B6D  1020               	bcf	_i2c_status^(0+256),0
 10520                           
 10521                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 10522  1B6E  14A0               	bsf	_i2c_status^(0+256),1
 10523                           
 10524                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 10525  1B6F  11A0               	bcf	_i2c_status^(0+256),3
 10526                           
 10527                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 10528  1B70  300E               	movlw	14
 10529  1B71  0020               	movlb	0	; select bank0
 10530  1B72  00B3               	movwf	??_i2c_open
 10531  1B73  0833               	movf	??_i2c_open,w
 10532  1B74  0022               	movlb	2	; select bank2
 10533  1B75  00AA               	movwf	(_i2c_status^(0+256)+10)
 10534                           
 10535                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 10536  1B76  30F4               	movlw	244
 10537  1B77  00A8               	movwf	(_i2c_status^(0+256)+8)
 10538  1B78  3001               	movlw	1
 10539  1B79  00A9               	movwf	(_i2c_status^(0+256)+9)
 10540                           
 10541                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 10542  1B7A  1520               	bsf	_i2c_status^(0+256),2
 10543                           
 10544                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 10545  1B7B  30FA               	movlw	low _returnStop
 10546  1B7C  00AC               	movwf	(low ((_i2c_status| (0+256)+12)))^0
 10547  1B7D  3022               	movlw	high _returnStop
 10548  1B7E  00AD               	movwf	((low ((_i2c_status| (0+256)+12)))^0+1)
 10549                           
 10550                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 10551  1B7F  01B8               	clrf	(low ((_i2c_status| (0+256)+24)))^0
 10552                           
 10553                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 10554  1B80  30FA               	movlw	low _returnStop
 10555  1B81  00AE               	movwf	(low ((_i2c_status| (0+256)+14)))^0
 10556  1B82  3022               	movlw	high _returnStop
 10557  1B83  00AF               	movwf	((low ((_i2c_status| (0+256)+14)))^0+1)
 10558                           
 10559                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 10560  1B84  01B9               	clrf	(low ((_i2c_status| (0+256)+25)))^0
 10561                           
 10562                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 10563  1B85  30FA               	movlw	low _returnStop
 10564  1B86  00B0               	movwf	(low ((_i2c_status| (0+256)+16)))^0
 10565  1B87  3022               	movlw	high _returnStop
 10566  1B88  00B1               	movwf	((low ((_i2c_status| (0+256)+16)))^0+1)
 10567                           
 10568                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 10569  1B89  01BA               	clrf	(low ((_i2c_status| (0+256)+26)))^0
 10570                           
 10571                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 10572  1B8A  30FA               	movlw	low _returnStop
 10573  1B8B  00B2               	movwf	(low ((_i2c_status| (0+256)+18)))^0
 10574  1B8C  3022               	movlw	high _returnStop
 10575  1B8D  00B3               	movwf	((low ((_i2c_status| (0+256)+18)))^0+1)
 10576                           
 10577                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 10578  1B8E  01BB               	clrf	(low ((_i2c_status| (0+256)+27)))^0
 10579                           
 10580                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 10581  1B8F  3000               	movlw	low _returnReset
 10582  1B90  00B4               	movwf	(low ((_i2c_status| (0+256)+20)))^0
 10583  1B91  3023               	movlw	high _returnReset
 10584  1B92  00B5               	movwf	((low ((_i2c_status| (0+256)+20)))^0+1)
 10585                           
 10586                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 10587  1B93  01BC               	clrf	(low ((_i2c_status| (0+256)+28)))^0
 10588                           
 10589                           ;i2c_master.c: 142: i2c1_driver_open();
 10590  1B94  31A3  23D4  319B   	fcall	_i2c1_driver_open
 10591                           
 10592                           ;i2c_master.c: 143: mssp1_clearIRQ();
 10593  1B97  31A2  229F  319B   	fcall	_mssp1_clearIRQ
 10594                           
 10595                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 10596  1B9A  3072               	movlw	low _i2c_busCollisionISR
 10597  1B9B  0020               	movlb	0	; select bank0
 10598  1B9C  00B1               	movwf	i2c1_driver_setBusCollisionISR@f
 10599  1B9D  3022               	movlw	high _i2c_busCollisionISR
 10600  1B9E  00B2               	movwf	i2c1_driver_setBusCollisionISR@f+1
 10601  1B9F  31A3  239A  319B   	fcall	_i2c1_driver_setBusCollisionISR
 10602                           
 10603                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 10604  1BA2  30B1               	movlw	low _i2c_ISR
 10605  1BA3  0020               	movlb	0	; select bank0
 10606  1BA4  00B1               	movwf	i2c1_driver_setI2cISR@f
 10607  1BA5  3027               	movlw	high _i2c_ISR
 10608  1BA6  00B2               	movwf	i2c1_driver_setI2cISR@f+1
 10609  1BA7  31A3  23A3         	fcall	_i2c1_driver_setI2cISR
 10610                           
 10611                           ;i2c_master.c: 151: ret = I2C_NOERR;
 10612  1BA9  0020               	movlb	0	; select bank0
 10613  1BAA  01B4               	clrf	i2c_open@ret
 10614  1BAB  0008               	return
 10615  1BAC                     __end_of_i2c_open:	
 10616                           ;i2c_master.c: 152: }
 10617                           ;i2c_master.c: 153: return ret;
 10618                           ;	Return value of _i2c_open is never used
 10619                           
 10620                           
 10621                           	psect	text15
 10622  23A3                     __ptext15:	
 10623 ;; *************** function _i2c1_driver_setI2cISR *****************
 10624 ;; Defined at:
 10625 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;  f               2   17[BANK0 ] PTR void 
 10628 ;;		 -> i2c_ISR(1), 
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        2 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    6
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_i2c_open
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           
 10655                           ;psect for function _i2c1_driver_setI2cISR
 10656  23A3                     _i2c1_driver_setI2cISR:	
 10657                           
 10658                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 10659                           
 10660                           ;incstack = 0
 10661                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 10662  23A3  0020               	movlb	0	; select bank0
 10663  23A4  0832               	movf	i2c1_driver_setI2cISR@f+1,w
 10664  23A5  0022               	movlb	2	; select bank2
 10665  23A6  00E9               	movwf	(_i2c1_driver_i2cISR+1)^(0+256)
 10666  23A7  0020               	movlb	0	; select bank0
 10667  23A8  0831               	movf	i2c1_driver_setI2cISR@f,w
 10668  23A9  0022               	movlb	2	; select bank2
 10669  23AA  00E8               	movwf	_i2c1_driver_i2cISR^(0+256)
 10670  23AB  0008               	return
 10671  23AC                     __end_of_i2c1_driver_setI2cISR:	
 10672                           
 10673                           	psect	text16
 10674  239A                     __ptext16:	
 10675 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 10676 ;; Defined at:
 10677 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  f               2   17[BANK0 ] PTR void 
 10680 ;;		 -> i2c_busCollisionISR(1), 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10695 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10696 ;;Total ram usage:        2 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    6
 10699 ;; This function calls:
 10700 ;;		Nothing
 10701 ;; This function is called by:
 10702 ;;		_i2c_open
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           
 10707                           ;psect for function _i2c1_driver_setBusCollisionISR
 10708  239A                     _i2c1_driver_setBusCollisionISR:	
 10709                           
 10710                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 10711                           
 10712                           ;incstack = 0
 10713                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 10714  239A  0020               	movlb	0	; select bank0
 10715  239B  0832               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 10716  239C  0022               	movlb	2	; select bank2
 10717  239D  00EB               	movwf	(_i2c1_driver_busCollisionISR+1)^(0+256)
 10718  239E  0020               	movlb	0	; select bank0
 10719  239F  0831               	movf	i2c1_driver_setBusCollisionISR@f,w
 10720  23A0  0022               	movlb	2	; select bank2
 10721  23A1  00EA               	movwf	_i2c1_driver_busCollisionISR^(0+256)
 10722  23A2  0008               	return
 10723  23A3                     __end_of_i2c1_driver_setBusCollisionISR:	
 10724                           
 10725                           	psect	text17
 10726  23D4                     __ptext17:	
 10727 ;; *************** function _i2c1_driver_open *****************
 10728 ;; Defined at:
 10729 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;		None
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;		None
 10734 ;; Return value:  Size  Location     Type
 10735 ;;		None               void
 10736 ;; Registers used:
 10737 ;;		wreg, status,2
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10747 ;;Total ram usage:        0 bytes
 10748 ;; Hardware stack levels used:    1
 10749 ;; Hardware stack levels required when called:    6
 10750 ;; This function calls:
 10751 ;;		Nothing
 10752 ;; This function is called by:
 10753 ;;		_i2c_open
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           
 10758                           ;psect for function _i2c1_driver_open
 10759  23D4                     _i2c1_driver_open:	
 10760                           
 10761                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10762                           
 10763                           ;incstack = 0
 10764                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10765  23D4  0024               	movlb	4	; select bank4
 10766  23D5  1A95               	btfsc	21,5	;volatile
 10767  23D6  0008               	return
 10768                           
 10769                           ;i2c1_driver.c: 86: {
 10770                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10771  23D7  0194               	clrf	20	;volatile
 10772                           
 10773                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10774  23D8  3028               	movlw	40
 10775  23D9  0095               	movwf	21	;volatile
 10776                           
 10777                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10778  23DA  0196               	clrf	22	;volatile
 10779                           
 10780                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10781  23DB  3003               	movlw	3
 10782  23DC  0092               	movwf	18	;volatile
 10783                           
 10784                           ;i2c1_driver.c: 93: else
 10785                           ;i2c1_driver.c: 94: return 0;
 10786                           ;	Return value of _i2c1_driver_open is never used
 10787                           
 10788                           ;i2c1_driver.c: 92: }
 10789                           
 10790                           ;i2c1_driver.c: 91: return 1;
 10791                           ;	Return value of _i2c1_driver_open is never used
 10792  23DD  0008               	return
 10793  23DE                     __end_of_i2c1_driver_open:	
 10794                           
 10795                           	psect	text18
 10796  23CA                     __ptext18:	
 10797 ;; *************** function _drv_reset *****************
 10798 ;; Defined at:
 10799 ;;		line 23 in file "drv2665.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;		None
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10815 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10816 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10817 ;;Total ram usage:        1 bytes
 10818 ;; Hardware stack levels used:    1
 10819 ;; Hardware stack levels required when called:   13
 10820 ;; This function calls:
 10821 ;;		_drv_write
 10822 ;; This function is called by:
 10823 ;;		_drv_init
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           
 10828                           ;psect for function _drv_reset
 10829  23CA                     _drv_reset:	
 10830                           
 10831                           ;drv2665.c: 24: drv_write(0x02, 0x80);
 10832                           
 10833                           ;incstack = 0
 10834                           ; Regs used in _drv_reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10835  23CA  3080               	movlw	128
 10836  23CB  0021               	movlb	1	; select bank1
 10837  23CC  00B5               	movwf	??_drv_reset^(0+128)
 10838  23CD  0835               	movf	??_drv_reset^(0+128),w
 10839  23CE  0020               	movlb	0	; select bank0
 10840  23CF  00C9               	movwf	drv_write@data
 10841  23D0  3002               	movlw	2
 10842  23D1  31A7  2744         	fcall	_drv_write
 10843  23D3  0008               	return
 10844  23D4                     __end_of_drv_reset:	
 10845                           
 10846                           	psect	text19
 10847  0370                     __ptext19:	
 10848 ;; *************** function _execCmd *****************
 10849 ;; Defined at:
 10850 ;;		line 70 in file "cmd_parser.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10853 ;;		 -> cmd_struct(21), 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  s               1   52[BANK1 ] PTR struct CMD_STRUCT
 10856 ;;		 -> cmd_struct(21), 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  2  958[None  ] int 
 10859 ;; Registers used:
 10860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10867 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10869 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10870 ;;Total ram usage:        1 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:   16
 10873 ;; This function calls:
 10874 ;;		_commCheck
 10875 ;;		_doMove
 10876 ;;		_getActive
 10877 ;;		_getMotionStatus
 10878 ;;		_getMoveMask
 10879 ;;		_getPosition
 10880 ;;		_printf
 10881 ;;		_setActive
 10882 ;;		_setDrvGain
 10883 ;;		_setDrvPeak
 10884 ;;		_setDrvPiezoOnTime
 10885 ;;		_setHeaterPostTime
 10886 ;;		_setHeaterPreTime
 10887 ;;		_setHeaterToggle
 10888 ;;		_setLEDBrightnessRange
 10889 ;;		_setLEDPwr
 10890 ;;		_setMoveMask
 10891 ;;		_startAbsMove
 10892 ;;		_startRelMove
 10893 ;;		_zeroPosition
 10894 ;; This function is called by:
 10895 ;;		_main
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           
 10900                           ;psect for function _execCmd
 10901  0370                     _execCmd:	
 10902                           
 10903                           ;incstack = 0
 10904 ;; hardware stack exceeded
 10905                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10906                           ;execCmd@s stored from wreg
 10907  0370  0021               	movlb	1	; select bank1
 10908  0371  00D4               	movwf	execCmd@s^(0+128)
 10909                           
 10910                           ;cmd_parser.c: 71: errorOut = 1;
 10911  0372  3001               	movlw	1
 10912  0373  0022               	movlb	2	; select bank2
 10913  0374  00E6               	movwf	_errorOut^(0+256)
 10914  0375  3000               	movlw	0
 10915  0376  00E7               	movwf	(_errorOut^(0+256)+1)
 10916                           
 10917                           ;cmd_parser.c: 73: switch(s->c){
 10918  0377  2CFB               	goto	l8268
 10919  0378                     l8226:	
 10920                           ;cmd_parser.c: 74: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 10921                           
 10922  0378  0021               	movlb	1	; select bank1
 10923  0379  0A54               	incf	execCmd@s^(0+128),w
 10924  037A  0086               	movwf	6
 10925  037B  3001               	movlw	1	; select bank2/3
 10926  037C  0087               	movwf	7
 10927  037D  3F40               	moviw [0]fsr1
 10928  037E  00B5               	movwf	startRelMove@steps^(0+128)
 10929  037F  3F41               	moviw [1]fsr1
 10930  0380  00B6               	movwf	(startRelMove@steps+1)^(0+128)
 10931  0381  31A5  254B         	fcall	_startRelMove
 10932  0383  0021               	movlb	1	; select bank1
 10933  0384  0836               	movf	(?_startRelMove+1)^(0+128),w
 10934  0385  0022               	movlb	2	; select bank2
 10935  0386  00E7               	movwf	(_errorOut+1)^(0+256)
 10936  0387  0021               	movlb	1	; select bank1
 10937  0388  0835               	movf	?_startRelMove^(0+128),w
 10938  0389  0022               	movlb	2	; select bank2
 10939  038A  00E6               	movwf	_errorOut^(0+256)
 10940  038B  0008               	return
 10941  038C                     l8228:	
 10942                           ;cmd_parser.c: 75: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 10943                           
 10944  038C  0021               	movlb	1	; select bank1
 10945  038D  0A54               	incf	execCmd@s^(0+128),w
 10946  038E  0086               	movwf	6
 10947  038F  3001               	movlw	1	; select bank2/3
 10948  0390  0087               	movwf	7
 10949  0391  3F40               	moviw [0]fsr1
 10950  0392  00B5               	movwf	startAbsMove@steps^(0+128)
 10951  0393  3F41               	moviw [1]fsr1
 10952  0394  00B6               	movwf	(startAbsMove@steps+1)^(0+128)
 10953  0395  31A5  259E         	fcall	_startAbsMove
 10954  0397  0021               	movlb	1	; select bank1
 10955  0398  0836               	movf	(?_startAbsMove+1)^(0+128),w
 10956  0399  0022               	movlb	2	; select bank2
 10957  039A  00E7               	movwf	(_errorOut+1)^(0+256)
 10958  039B  0021               	movlb	1	; select bank1
 10959  039C  0835               	movf	?_startAbsMove^(0+128),w
 10960  039D  0022               	movlb	2	; select bank2
 10961  039E  00E6               	movwf	_errorOut^(0+256)
 10962  039F  0008               	return
 10963  03A0                     l8230:	
 10964                           ;cmd_parser.c: 76: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 10965                           
 10966  03A0  0021               	movlb	1	; select bank1
 10967  03A1  0A54               	incf	execCmd@s^(0+128),w
 10968  03A2  0086               	movwf	6
 10969  03A3  3001               	movlw	1	; select bank2/3
 10970  03A4  0087               	movwf	7
 10971  03A5  3F40               	moviw [0]fsr1
 10972  03A6  00B5               	movwf	getPosition@a^(0+128)
 10973  03A7  3F41               	moviw [1]fsr1
 10974  03A8  00B6               	movwf	(getPosition@a+1)^(0+128)
 10975  03A9  3199  21C7         	fcall	_getPosition
 10976  03AB  0021               	movlb	1	; select bank1
 10977  03AC  0836               	movf	(?_getPosition+1)^(0+128),w
 10978  03AD  0022               	movlb	2	; select bank2
 10979  03AE  00E7               	movwf	(_errorOut+1)^(0+256)
 10980  03AF  0021               	movlb	1	; select bank1
 10981  03B0  0835               	movf	?_getPosition^(0+128),w
 10982  03B1  0022               	movlb	2	; select bank2
 10983  03B2  00E6               	movwf	_errorOut^(0+256)
 10984  03B3  0008               	return
 10985  03B4                     l8232:	
 10986                           ;cmd_parser.c: 77: case CMD_ZERO: errorOut = zeroPosition(); break;
 10987                           
 10988  03B4  3196  269C         	fcall	_zeroPosition
 10989  03B6  0021               	movlb	1	; select bank1
 10990  03B7  0836               	movf	(?_zeroPosition+1)^(0+128),w
 10991  03B8  0022               	movlb	2	; select bank2
 10992  03B9  00E7               	movwf	(_errorOut+1)^(0+256)
 10993  03BA  0021               	movlb	1	; select bank1
 10994  03BB  0835               	movf	?_zeroPosition^(0+128),w
 10995  03BC  0022               	movlb	2	; select bank2
 10996  03BD  00E6               	movwf	_errorOut^(0+256)
 10997  03BE  0008               	return
 10998  03BF                     l8234:	
 10999                           ;cmd_parser.c: 80: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 11000                           
 11001  03BF  0021               	movlb	1	; select bank1
 11002  03C0  0A54               	incf	execCmd@s^(0+128),w
 11003  03C1  0086               	movwf	6
 11004  03C2  3001               	movlw	1	; select bank2/3
 11005  03C3  0087               	movwf	7
 11006  03C4  3F40               	moviw [0]fsr1
 11007  03C5  00B5               	movwf	setDrvPeak@pk^(0+128)
 11008  03C6  3F41               	moviw [1]fsr1
 11009  03C7  00B6               	movwf	(setDrvPeak@pk+1)^(0+128)
 11010  03C8  31A4  2496         	fcall	_setDrvPeak
 11011  03CA  0021               	movlb	1	; select bank1
 11012  03CB  0836               	movf	(?_setDrvPeak+1)^(0+128),w
 11013  03CC  0022               	movlb	2	; select bank2
 11014  03CD  00E7               	movwf	(_errorOut+1)^(0+256)
 11015  03CE  0021               	movlb	1	; select bank1
 11016  03CF  0835               	movf	?_setDrvPeak^(0+128),w
 11017  03D0  0022               	movlb	2	; select bank2
 11018  03D1  00E6               	movwf	_errorOut^(0+256)
 11019  03D2  0008               	return
 11020  03D3                     l8236:	
 11021                           ;cmd_parser.c: 81: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 11022                           
 11023  03D3  0021               	movlb	1	; select bank1
 11024  03D4  0A54               	incf	execCmd@s^(0+128),w
 11025  03D5  0086               	movwf	6
 11026  03D6  3001               	movlw	1	; select bank2/3
 11027  03D7  0087               	movwf	7
 11028  03D8  3F40               	moviw [0]fsr1
 11029  03D9  00B5               	movwf	setDrvGain@gain^(0+128)
 11030  03DA  3F41               	moviw [1]fsr1
 11031  03DB  00B6               	movwf	(setDrvGain@gain+1)^(0+128)
 11032  03DC  319A  2249         	fcall	_setDrvGain
 11033  03DE  0021               	movlb	1	; select bank1
 11034  03DF  0836               	movf	(?_setDrvGain+1)^(0+128),w
 11035  03E0  0022               	movlb	2	; select bank2
 11036  03E1  00E7               	movwf	(_errorOut+1)^(0+256)
 11037  03E2  0021               	movlb	1	; select bank1
 11038  03E3  0835               	movf	?_setDrvGain^(0+128),w
 11039  03E4  0022               	movlb	2	; select bank2
 11040  03E5  00E6               	movwf	_errorOut^(0+256)
 11041  03E6  0008               	return
 11042  03E7                     l8238:	
 11043                           ;cmd_parser.c: 82: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 11044                           
 11045  03E7  0021               	movlb	1	; select bank1
 11046  03E8  0A54               	incf	execCmd@s^(0+128),w
 11047  03E9  0086               	movwf	6
 11048  03EA  3001               	movlw	1	; select bank2/3
 11049  03EB  0087               	movwf	7
 11050  03EC  3F40               	moviw [0]fsr1
 11051  03ED  00BD               	movwf	setDrvPiezoOnTime@t^(0+128)
 11052  03EE  3F41               	moviw [1]fsr1
 11053  03EF  00BE               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 11054  03F0  319E  26E7         	fcall	_setDrvPiezoOnTime
 11055  03F2  0021               	movlb	1	; select bank1
 11056  03F3  083E               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 11057  03F4  0022               	movlb	2	; select bank2
 11058  03F5  00E7               	movwf	(_errorOut+1)^(0+256)
 11059  03F6  0021               	movlb	1	; select bank1
 11060  03F7  083D               	movf	?_setDrvPiezoOnTime^(0+128),w
 11061  03F8  0022               	movlb	2	; select bank2
 11062  03F9  00E6               	movwf	_errorOut^(0+256)
 11063  03FA  0008               	return
 11064  03FB                     l8240:	
 11065                           ;cmd_parser.c: 85: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 11066                           
 11067  03FB  0021               	movlb	1	; select bank1
 11068  03FC  0A54               	incf	execCmd@s^(0+128),w
 11069  03FD  0086               	movwf	6
 11070  03FE  3001               	movlw	1	; select bank2/3
 11071  03FF  0087               	movwf	7
 11072  0400  3F40               	moviw [0]fsr1
 11073  0401  00BD               	movwf	setHeaterPreTime@t^(0+128)
 11074  0402  3F41               	moviw [1]fsr1
 11075  0403  00BE               	movwf	(setHeaterPreTime@t+1)^(0+128)
 11076  0404  319F  2742         	fcall	_setHeaterPreTime
 11077  0406  0021               	movlb	1	; select bank1
 11078  0407  083E               	movf	(?_setHeaterPreTime+1)^(0+128),w
 11079  0408  0022               	movlb	2	; select bank2
 11080  0409  00E7               	movwf	(_errorOut+1)^(0+256)
 11081  040A  0021               	movlb	1	; select bank1
 11082  040B  083D               	movf	?_setHeaterPreTime^(0+128),w
 11083  040C  0022               	movlb	2	; select bank2
 11084  040D  00E6               	movwf	_errorOut^(0+256)
 11085  040E  0008               	return
 11086  040F                     l8242:	
 11087                           ;cmd_parser.c: 86: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 11088                           
 11089  040F  0021               	movlb	1	; select bank1
 11090  0410  0A54               	incf	execCmd@s^(0+128),w
 11091  0411  0086               	movwf	6
 11092  0412  3001               	movlw	1	; select bank2/3
 11093  0413  0087               	movwf	7
 11094  0414  3F40               	moviw [0]fsr1
 11095  0415  00BD               	movwf	setHeaterPostTime@t^(0+128)
 11096  0416  3F41               	moviw [1]fsr1
 11097  0417  00BE               	movwf	(setHeaterPostTime@t+1)^(0+128)
 11098  0418  319D  2536         	fcall	_setHeaterPostTime
 11099  041A  0021               	movlb	1	; select bank1
 11100  041B  083E               	movf	(?_setHeaterPostTime+1)^(0+128),w
 11101  041C  0022               	movlb	2	; select bank2
 11102  041D  00E7               	movwf	(_errorOut+1)^(0+256)
 11103  041E  0021               	movlb	1	; select bank1
 11104  041F  083D               	movf	?_setHeaterPostTime^(0+128),w
 11105  0420  0022               	movlb	2	; select bank2
 11106  0421  00E6               	movwf	_errorOut^(0+256)
 11107  0422  0008               	return
 11108  0423                     l8244:	
 11109                           ;cmd_parser.c: 87: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 11110                           
 11111  0423  0021               	movlb	1	; select bank1
 11112  0424  0A54               	incf	execCmd@s^(0+128),w
 11113  0425  0086               	movwf	6
 11114  0426  3001               	movlw	1	; select bank2/3
 11115  0427  0087               	movwf	7
 11116  0428  3F40               	moviw [0]fsr1
 11117  0429  00B5               	movwf	setLEDBrightnessRange@r^(0+128)
 11118  042A  3F41               	moviw [1]fsr1
 11119  042B  00B6               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 11120  042C  0854               	movf	execCmd@s^(0+128),w
 11121  042D  3E0B               	addlw	11
 11122  042E  0086               	movwf	6
 11123  042F  3001               	movlw	1	; select bank2/3
 11124  0430  0087               	movwf	7
 11125  0431  3F40               	moviw [0]fsr1
 11126  0432  00B7               	movwf	setLEDBrightnessRange@tOB^(0+128)
 11127  0433  3F41               	moviw [1]fsr1
 11128  0434  00B8               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 11129  0435  31A5  25D9         	fcall	_setLEDBrightnessRange
 11130  0437  0021               	movlb	1	; select bank1
 11131  0438  0836               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 11132  0439  0022               	movlb	2	; select bank2
 11133  043A  00E7               	movwf	(_errorOut+1)^(0+256)
 11134  043B  0021               	movlb	1	; select bank1
 11135  043C  0835               	movf	?_setLEDBrightnessRange^(0+128),w
 11136  043D  0022               	movlb	2	; select bank2
 11137  043E  00E6               	movwf	_errorOut^(0+256)
 11138  043F  0008               	return
 11139  0440                     l8246:	
 11140                           ;cmd_parser.c: 88: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 11141                           
 11142  0440  0021               	movlb	1	; select bank1
 11143  0441  0A54               	incf	execCmd@s^(0+128),w
 11144  0442  0086               	movwf	6
 11145  0443  3001               	movlw	1	; select bank2/3
 11146  0444  0087               	movwf	7
 11147  0445  3F40               	moviw [0]fsr1
 11148  0446  00B5               	movwf	setLEDPwr@pwr^(0+128)
 11149  0447  3F41               	moviw [1]fsr1
 11150  0448  00B6               	movwf	(setLEDPwr@pwr+1)^(0+128)
 11151  0449  0854               	movf	execCmd@s^(0+128),w
 11152  044A  3E0B               	addlw	11
 11153  044B  0086               	movwf	6
 11154  044C  3001               	movlw	1	; select bank2/3
 11155  044D  0087               	movwf	7
 11156  044E  3F40               	moviw [0]fsr1
 11157  044F  00B7               	movwf	setLEDPwr@topOrBottom^(0+128)
 11158  0450  3F41               	moviw [1]fsr1
 11159  0451  00B8               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 11160  0452  31A5  25F7         	fcall	_setLEDPwr
 11161  0454  0021               	movlb	1	; select bank1
 11162  0455  0836               	movf	(?_setLEDPwr+1)^(0+128),w
 11163  0456  0022               	movlb	2	; select bank2
 11164  0457  00E7               	movwf	(_errorOut+1)^(0+256)
 11165  0458  0021               	movlb	1	; select bank1
 11166  0459  0835               	movf	?_setLEDPwr^(0+128),w
 11167  045A  0022               	movlb	2	; select bank2
 11168  045B  00E6               	movwf	_errorOut^(0+256)
 11169  045C  0008               	return
 11170  045D                     l8248:	
 11171                           ;cmd_parser.c: 89: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 11172                           
 11173  045D  0021               	movlb	1	; select bank1
 11174  045E  0A54               	incf	execCmd@s^(0+128),w
 11175  045F  0086               	movwf	6
 11176  0460  3001               	movlw	1	; select bank2/3
 11177  0461  0087               	movwf	7
 11178  0462  3F40               	moviw [0]fsr1
 11179  0463  00B5               	movwf	setHeaterToggle@num^(0+128)
 11180  0464  3F41               	moviw [1]fsr1
 11181  0465  00B6               	movwf	(setHeaterToggle@num+1)^(0+128)
 11182  0466  0854               	movf	execCmd@s^(0+128),w
 11183  0467  3E0B               	addlw	11
 11184  0468  0086               	movwf	6
 11185  0469  3001               	movlw	1	; select bank2/3
 11186  046A  0087               	movwf	7
 11187  046B  3F40               	moviw [0]fsr1
 11188  046C  00B7               	movwf	setHeaterToggle@topOrB^(0+128)
 11189  046D  3F41               	moviw [1]fsr1
 11190  046E  00B8               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 11191  046F  3189  21C1         	fcall	_setHeaterToggle
 11192  0471  0021               	movlb	1	; select bank1
 11193  0472  0836               	movf	(?_setHeaterToggle+1)^(0+128),w
 11194  0473  0022               	movlb	2	; select bank2
 11195  0474  00E7               	movwf	(_errorOut+1)^(0+256)
 11196  0475  0021               	movlb	1	; select bank1
 11197  0476  0835               	movf	?_setHeaterToggle^(0+128),w
 11198  0477  0022               	movlb	2	; select bank2
 11199  0478  00E6               	movwf	_errorOut^(0+256)
 11200  0479  0008               	return
 11201  047A                     l8250:	
 11202                           ;cmd_parser.c: 91: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); brea
      +                          k;
 11203                           
 11204  047A  0021               	movlb	1	; select bank1
 11205  047B  0A54               	incf	execCmd@s^(0+128),w
 11206  047C  0086               	movwf	6
 11207  047D  3001               	movlw	1	; select bank2/3
 11208  047E  0087               	movwf	7
 11209  047F  3F40               	moviw [0]fsr1
 11210  0480  00B5               	movwf	setActive@probeNum^(0+128)
 11211  0481  3F41               	moviw [1]fsr1
 11212  0482  00B6               	movwf	(setActive@probeNum+1)^(0+128)
 11213  0483  0854               	movf	execCmd@s^(0+128),w
 11214  0484  3E0B               	addlw	11
 11215  0485  0086               	movwf	6
 11216  0486  3001               	movlw	1	; select bank2/3
 11217  0487  0087               	movwf	7
 11218  0488  3F40               	moviw [0]fsr1
 11219  0489  00B7               	movwf	setActive@onOff^(0+128)
 11220  048A  3F41               	moviw [1]fsr1
 11221  048B  00B8               	movwf	(setActive@onOff+1)^(0+128)
 11222  048C  3197  2711         	fcall	_setActive
 11223  048E  0021               	movlb	1	; select bank1
 11224  048F  0836               	movf	(?_setActive+1)^(0+128),w
 11225  0490  0022               	movlb	2	; select bank2
 11226  0491  00E7               	movwf	(_errorOut+1)^(0+256)
 11227  0492  0021               	movlb	1	; select bank1
 11228  0493  0835               	movf	?_setActive^(0+128),w
 11229  0494  0022               	movlb	2	; select bank2
 11230  0495  00E6               	movwf	_errorOut^(0+256)
 11231  0496  0008               	return
 11232  0497                     l8252:	
 11233                           ;cmd_parser.c: 92: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); br
      +                          eak;
 11234                           
 11235  0497  0021               	movlb	1	; select bank1
 11236  0498  0A54               	incf	execCmd@s^(0+128),w
 11237  0499  0086               	movwf	6
 11238  049A  3001               	movlw	1	; select bank2/3
 11239  049B  0087               	movwf	7
 11240  049C  3F40               	moviw [0]fsr1
 11241  049D  00B5               	movwf	setMoveMask@probeNum^(0+128)
 11242  049E  3F41               	moviw [1]fsr1
 11243  049F  00B6               	movwf	(setMoveMask@probeNum+1)^(0+128)
 11244  04A0  0854               	movf	execCmd@s^(0+128),w
 11245  04A1  3E0B               	addlw	11
 11246  04A2  0086               	movwf	6
 11247  04A3  3001               	movlw	1	; select bank2/3
 11248  04A4  0087               	movwf	7
 11249  04A5  3F40               	moviw [0]fsr1
 11250  04A6  00B7               	movwf	setMoveMask@onOff^(0+128)
 11251  04A7  3F41               	moviw [1]fsr1
 11252  04A8  00B8               	movwf	(setMoveMask@onOff+1)^(0+128)
 11253  04A9  3196  2629         	fcall	_setMoveMask
 11254  04AB  0021               	movlb	1	; select bank1
 11255  04AC  0836               	movf	(?_setMoveMask+1)^(0+128),w
 11256  04AD  0022               	movlb	2	; select bank2
 11257  04AE  00E7               	movwf	(_errorOut+1)^(0+256)
 11258  04AF  0021               	movlb	1	; select bank1
 11259  04B0  0835               	movf	?_setMoveMask^(0+128),w
 11260  04B1  0022               	movlb	2	; select bank2
 11261  04B2  00E6               	movwf	_errorOut^(0+256)
 11262  04B3  0008               	return
 11263  04B4                     l8254:	
 11264                           ;cmd_parser.c: 93: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 11265                           
 11266  04B4  319B  23AC         	fcall	_getActive
 11267  04B6  0021               	movlb	1	; select bank1
 11268  04B7  0836               	movf	(?_getActive+1)^(0+128),w
 11269  04B8  0022               	movlb	2	; select bank2
 11270  04B9  00E7               	movwf	(_errorOut+1)^(0+256)
 11271  04BA  0021               	movlb	1	; select bank1
 11272  04BB  0835               	movf	?_getActive^(0+128),w
 11273  04BC  0022               	movlb	2	; select bank2
 11274  04BD  00E6               	movwf	_errorOut^(0+256)
 11275  04BE  0008               	return
 11276  04BF                     l8256:	
 11277                           ;cmd_parser.c: 94: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 11278                           
 11279  04BF  319B  23F9         	fcall	_getMoveMask
 11280  04C1  0021               	movlb	1	; select bank1
 11281  04C2  0836               	movf	(?_getMoveMask+1)^(0+128),w
 11282  04C3  0022               	movlb	2	; select bank2
 11283  04C4  00E7               	movwf	(_errorOut+1)^(0+256)
 11284  04C5  0021               	movlb	1	; select bank1
 11285  04C6  0835               	movf	?_getMoveMask^(0+128),w
 11286  04C7  0022               	movlb	2	; select bank2
 11287  04C8  00E6               	movwf	_errorOut^(0+256)
 11288  04C9  0008               	return
 11289  04CA                     l8258:	
 11290                           ;cmd_parser.c: 95: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 11291                           
 11292  04CA  31A6  26D9         	fcall	_getMotionStatus
 11293  04CC  0021               	movlb	1	; select bank1
 11294  04CD  0836               	movf	(?_getMotionStatus+1)^(0+128),w
 11295  04CE  0022               	movlb	2	; select bank2
 11296  04CF  00E7               	movwf	(_errorOut+1)^(0+256)
 11297  04D0  0021               	movlb	1	; select bank1
 11298  04D1  0835               	movf	?_getMotionStatus^(0+128),w
 11299  04D2  0022               	movlb	2	; select bank2
 11300  04D3  00E6               	movwf	_errorOut^(0+256)
 11301  04D4  0008               	return
 11302  04D5                     l8260:	
 11303                           ;cmd_parser.c: 96: case CMD_DOMOVE: errorOut = doMove(); break;
 11304                           
 11305  04D5  3189  2138         	fcall	_doMove
 11306  04D7  0021               	movlb	1	; select bank1
 11307  04D8  0840               	movf	(?_doMove+1)^(0+128),w
 11308  04D9  0022               	movlb	2	; select bank2
 11309  04DA  00E7               	movwf	(_errorOut+1)^(0+256)
 11310  04DB  0021               	movlb	1	; select bank1
 11311  04DC  083F               	movf	?_doMove^(0+128),w
 11312  04DD  0022               	movlb	2	; select bank2
 11313  04DE  00E6               	movwf	_errorOut^(0+256)
 11314  04DF  0008               	return
 11315  04E0                     l8262:	
 11316                           ;cmd_parser.c: 97: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 11317                           
 11318  04E0  318A  2254         	fcall	_commCheck
 11319  04E2  0021               	movlb	1	; select bank1
 11320  04E3  0852               	movf	(?_commCheck+1)^(0+128),w
 11321  04E4  0022               	movlb	2	; select bank2
 11322  04E5  00E7               	movwf	(_errorOut+1)^(0+256)
 11323  04E6  0021               	movlb	1	; select bank1
 11324  04E7  0851               	movf	?_commCheck^(0+128),w
 11325  04E8  0022               	movlb	2	; select bank2
 11326  04E9  00E6               	movwf	_errorOut^(0+256)
 11327  04EA  0008               	return
 11328  04EB                     l8264:	
 11329                           ;cmd_parser.c: 98: case CMD_PING: printf("!\n"); break;
 11330                           
 11331  04EB  30E3               	movlw	low ((STR_80+20)| (0+32768))
 11332  04EC  0021               	movlb	1	; select bank1
 11333  04ED  00A0               	movwf	printf@f^(0+128)
 11334  04EE  30A8               	movlw	high ((STR_80+20)| (0+32768))
 11335  04EF  00A1               	movwf	(printf@f^(0+128)+1)
 11336  04F0  3186  26A1         	fcall	_printf
 11337  04F2  0008               	return
 11338  04F3                     l8266:	
 11339                           ;cmd_parser.c: 99: default: printf("UNRECOGNIZED COMMAND!\n");
 11340                           
 11341  04F3  30CF               	movlw	low (STR_80| (0+32768))
 11342  04F4  0021               	movlb	1	; select bank1
 11343  04F5  00A0               	movwf	printf@f^(0+128)
 11344  04F6  30A8               	movlw	high (STR_80| (0+32768))
 11345  04F7  00A1               	movwf	(printf@f^(0+128)+1)
 11346  04F8  3186  26A1         	fcall	_printf
 11347                           
 11348                           ;cmd_parser.c: 106: }
 11349  04FA  0008               	return
 11350  04FB                     l8268:	
 11351  04FB  0021               	movlb	1	; select bank1
 11352  04FC  0854               	movf	execCmd@s^(0+128),w
 11353  04FD  0086               	movwf	6
 11354  04FE  3001               	movlw	1	; select bank2/3
 11355  04FF  0087               	movwf	7
 11356  0500  0801               	movf	1,w
 11357                           
 11358                           ; Switch size 1, requested type "space"
 11359                           ; Number of cases is 20, Range of values is 1 to 21
 11360                           ; switch strategies available:
 11361                           ; Name         Instructions Cycles
 11362                           ; direct_byte           51     9 (fixed)
 11363                           ; simple_byte           61    31 (average)
 11364                           ; jumptable            263     9 (fixed)
 11365                           ;	Chosen strategy is direct_byte
 11366  0501  3EFF               	addlw	-1
 11367  0502  1C03               	skipc
 11368  0503  2CF3               	goto	l8266
 11369  0504  0084               	movwf	4
 11370  0505  3015               	movlw	21
 11371  0506  0204               	subwf	4,w
 11372  0507  1803               	skipnc
 11373  0508  2CF3               	goto	l8266
 11374  0509  3198               	movlp	high S8608
 11375  050A  3504               	lslf	4,w
 11376  050B  3E00               	addlw	low S8608
 11377  050C  0082               	movwf	2
 11378                           
 11379                           ;cmd_parser.c: 108: return errorOut;
 11380                           ;	Return value of _execCmd is never used
 11381  050D  0008               	return
 11382  050E                     __end_of_execCmd:	
 11383                           
 11384                           	psect	swtext1
 11385  1800                     __pswtext1:	
 11386  1800                     S8608:	
 11387  1800  3183  2B8C         	ljmp	l8228
 11388  1802  3183  2B78         	ljmp	l8226
 11389  1804  3183  2BA0         	ljmp	l8230
 11390  1806  3184  2CF3         	ljmp	l8266
 11391  1808  3184  2C7A         	ljmp	l8250
 11392  180A  3184  2C97         	ljmp	l8252
 11393  180C  3183  2BB4         	ljmp	l8232
 11394  180E  3183  2BBF         	ljmp	l8234
 11395  1810  3183  2BD3         	ljmp	l8236
 11396  1812  3183  2BE7         	ljmp	l8238
 11397  1814  3183  2BFB         	ljmp	l8240
 11398  1816  3184  2C0F         	ljmp	l8242
 11399  1818  3184  2C23         	ljmp	l8244
 11400  181A  3184  2C40         	ljmp	l8246
 11401  181C  3184  2C5D         	ljmp	l8248
 11402  181E  3184  2CB4         	ljmp	l8254
 11403  1820  3184  2CBF         	ljmp	l8256
 11404  1822  3184  2CCA         	ljmp	l8258
 11405  1824  3184  2CD5         	ljmp	l8260
 11406  1826  3184  2CE0         	ljmp	l8262
 11407  1828  3184  2CEB         	ljmp	l8264
 11408                           
 11409                           	psect	text20
 11410  169C                     __ptext20:	
 11411 ;; *************** function _zeroPosition *****************
 11412 ;; Defined at:
 11413 ;;		line 372 in file "main.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;		None
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;  i               2   41[BANK0 ] int 
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  2   21[BANK1 ] int 
 11420 ;; Registers used:
 11421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11427 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11429 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11430 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11431 ;;Total ram usage:       12 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:    9
 11434 ;; This function calls:
 11435 ;;		_printf
 11436 ;; This function is called by:
 11437 ;;		_execCmd
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           
 11442                           ;psect for function _zeroPosition
 11443  169C                     _zeroPosition:	
 11444                           
 11445                           ;main.c: 373: for(int i = 0; i<24; i++){
 11446                           
 11447                           ;incstack = 0
 11448                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11449  169C  0020               	movlb	0	; select bank0
 11450  169D  01C9               	clrf	zeroPosition@i
 11451  169E  01CA               	clrf	zeroPosition@i+1
 11452  169F  084A               	movf	zeroPosition@i+1,w
 11453  16A0  3A80               	xorlw	128
 11454  16A1  0021               	movlb	1	; select bank1
 11455  16A2  00B7               	movwf	??_zeroPosition^(0+128)
 11456  16A3  3080               	movlw	128
 11457  16A4  0237               	subwf	??_zeroPosition^(0+128),w
 11458  16A5  1D03               	skipz
 11459  16A6  2EAA               	goto	u7845
 11460  16A7  3018               	movlw	24
 11461  16A8  0020               	movlb	0	; select bank0
 11462  16A9  0249               	subwf	zeroPosition@i,w
 11463  16AA                     u7845:	
 11464  16AA  1803               	btfsc	3,0
 11465  16AB  2F06               	goto	l7874
 11466  16AC                     l7866:	
 11467                           
 11468                           ;main.c: 374: if((activeMask & (1UL << i)) > 0)
 11469  16AC  0021               	movlb	1	; select bank1
 11470  16AD  085D               	movf	_activeMask^(0+128),w
 11471  16AE  00B7               	movwf	??_zeroPosition^(0+128)
 11472  16AF  085E               	movf	(_activeMask+1)^(0+128),w
 11473  16B0  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11474  16B1  085F               	movf	(_activeMask+2)^(0+128),w
 11475  16B2  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 11476  16B3  0860               	movf	(_activeMask+3)^(0+128),w
 11477  16B4  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 11478  16B5  3001               	movlw	1
 11479  16B6  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11480  16B7  3000               	movlw	0
 11481  16B8  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 11482  16B9  3000               	movlw	0
 11483  16BA  00BD               	movwf	((??_zeroPosition+4)^(0+128)+2)
 11484  16BB  3000               	movlw	0
 11485  16BC  00BE               	movwf	((??_zeroPosition+4)^(0+128)+3)
 11486  16BD  0020               	movlb	0	; select bank0
 11487  16BE  0A49               	incf	zeroPosition@i,w
 11488  16BF  0021               	movlb	1	; select bank1
 11489  16C0  2EC5               	goto	u7850
 11490  16C1                     u7855:	
 11491  16C1  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 11492  16C2  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 11493  16C3  0DBD               	rlf	((??_zeroPosition+4)^(0+128)+2),f
 11494  16C4  0DBE               	rlf	((??_zeroPosition+4)^(0+128)+3),f
 11495  16C5                     u7850:	
 11496  16C5  0B89               	decfsz	9,f
 11497  16C6  2EC1               	goto	u7855
 11498  16C7  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11499  16C8  05B7               	andwf	??_zeroPosition^(0+128),f
 11500  16C9  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11501  16CA  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 11502  16CB  083D               	movf	(??_zeroPosition+6)^(0+128),w
 11503  16CC  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 11504  16CD  083E               	movf	(??_zeroPosition+7)^(0+128),w
 11505  16CE  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 11506  16CF  083A               	movf	(??_zeroPosition+3)^(0+128),w
 11507  16D0  0439               	iorwf	(??_zeroPosition+2)^(0+128),w
 11508  16D1  0438               	iorwf	(??_zeroPosition+1)^(0+128),w
 11509  16D2  0437               	iorwf	??_zeroPosition^(0+128),w
 11510  16D3  1903               	skipnz
 11511  16D4  2EF4               	goto	l7870
 11512                           
 11513                           ;main.c: 375: currentPositions_steps[i]=0;
 11514  16D5  0020               	movlb	0	; select bank0
 11515  16D6  084A               	movf	zeroPosition@i+1,w
 11516  16D7  0021               	movlb	1	; select bank1
 11517  16D8  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11518  16D9  0020               	movlb	0	; select bank0
 11519  16DA  0849               	movf	zeroPosition@i,w
 11520  16DB  0021               	movlb	1	; select bank1
 11521  16DC  00B7               	movwf	??_zeroPosition^(0+128)
 11522  16DD  35B7               	lslf	??_zeroPosition^(0+128),f
 11523  16DE  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11524  16DF  35B7               	lslf	??_zeroPosition^(0+128),f
 11525  16E0  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11526  16E1  3090               	movlw	144
 11527  16E2  00B9               	movwf	(??_zeroPosition+2)^(0+128)
 11528  16E3  3027               	movlw	39
 11529  16E4  00BA               	movwf	((??_zeroPosition+2)^(0+128)+1)
 11530  16E5  0837               	movf	??_zeroPosition^(0+128),w
 11531  16E6  0739               	addwf	(??_zeroPosition+2)^(0+128),w
 11532  16E7  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11533  16E8  0838               	movf	(??_zeroPosition+1)^(0+128),w
 11534  16E9  3D3A               	addwfc	(??_zeroPosition+3)^(0+128),w
 11535  16EA  00BC               	movwf	(??_zeroPosition+5)^(0+128)
 11536  16EB  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11537  16EC  0086               	movwf	6
 11538  16ED  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11539  16EE  0087               	movwf	7
 11540  16EF  3000               	movlw	0
 11541  16F0  3FC0               	movwi [0]fsr1
 11542  16F1  3FC1               	movwi [1]fsr1
 11543  16F2  3FC2               	movwi [2]fsr1
 11544  16F3  3FC3               	movwi [3]fsr1
 11545  16F4                     l7870:	
 11546  16F4  3001               	movlw	1
 11547  16F5  0020               	movlb	0	; select bank0
 11548  16F6  07C9               	addwf	zeroPosition@i,f
 11549  16F7  3000               	movlw	0
 11550  16F8  3DCA               	addwfc	zeroPosition@i+1,f
 11551  16F9  084A               	movf	zeroPosition@i+1,w
 11552  16FA  3A80               	xorlw	128
 11553  16FB  0021               	movlb	1	; select bank1
 11554  16FC  00B7               	movwf	??_zeroPosition^(0+128)
 11555  16FD  3080               	movlw	128
 11556  16FE  0237               	subwf	??_zeroPosition^(0+128),w
 11557  16FF  1D03               	skipz
 11558  1700  2F04               	goto	u7875
 11559  1701  3018               	movlw	24
 11560  1702  0020               	movlb	0	; select bank0
 11561  1703  0249               	subwf	zeroPosition@i,w
 11562  1704                     u7875:	
 11563  1704  1C03               	skipc
 11564  1705  2EAC               	goto	l7866
 11565  1706                     l7874:	
 11566                           
 11567                           ;main.c: 376: }
 11568                           ;main.c: 377: printf("A\n");
 11569  1706  3069               	movlw	low (STR_7| (0+32768))
 11570  1707  0021               	movlb	1	; select bank1
 11571  1708  00A0               	movwf	printf@f^(0+128)
 11572  1709  30AA               	movlw	high (STR_7| (0+32768))
 11573  170A  00A1               	movwf	(printf@f^(0+128)+1)
 11574  170B  3186  26A1         	fcall	_printf
 11575                           
 11576                           ;main.c: 378: return 0;
 11577  170D  0021               	movlb	1	; select bank1
 11578  170E  01B5               	clrf	?_zeroPosition^(0+128)
 11579  170F  01B6               	clrf	(?_zeroPosition+1)^(0+128)
 11580  1710  0008               	return
 11581  1711                     __end_of_zeroPosition:	
 11582                           
 11583                           	psect	text21
 11584  254B                     __ptext21:	
 11585 ;; *************** function _startRelMove *****************
 11586 ;; Defined at:
 11587 ;;		line 279 in file "main.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  steps           2   21[BANK1 ] int 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;		None
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  2   21[BANK1 ] int 
 11594 ;; Registers used:
 11595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11601 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11604 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11605 ;;Total ram usage:        2 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:    9
 11608 ;; This function calls:
 11609 ;;		_printf
 11610 ;; This function is called by:
 11611 ;;		_execCmd
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           
 11616                           ;psect for function _startRelMove
 11617  254B                     _startRelMove:	
 11618                           
 11619                           ;main.c: 280: motionType = REL_MOVE;
 11620                           
 11621                           ;incstack = 0
 11622                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11623  254B  0020               	movlb	0	; select bank0
 11624  254C  01D5               	clrf	_motionType
 11625  254D  0AD5               	incf	_motionType,f
 11626                           
 11627                           ;main.c: 281: remainingSteps = steps;
 11628  254E  0021               	movlb	1	; select bank1
 11629  254F  0835               	movf	startRelMove@steps^(0+128),w
 11630  2550  0022               	movlb	2	; select bank2
 11631  2551  00BE               	movwf	_remainingSteps^(0+256)
 11632  2552  0021               	movlb	1	; select bank1
 11633  2553  0836               	movf	(startRelMove@steps+1)^(0+128),w
 11634  2554  0022               	movlb	2	; select bank2
 11635  2555  00BF               	movwf	(_remainingSteps+1)^(0+256)
 11636  2556  0D89               	rlf	9,f
 11637  2557  3B89               	subwfb	9,f
 11638  2558  0989               	comf	9,f
 11639  2559  00C0               	movwf	(_remainingSteps+2)^(0+256)
 11640  255A  00C1               	movwf	(_remainingSteps+3)^(0+256)
 11641                           
 11642                           ;main.c: 282: printf("A\n");
 11643  255B  3069               	movlw	low (STR_7| (0+32768))
 11644  255C  0021               	movlb	1	; select bank1
 11645  255D  00A0               	movwf	printf@f^(0+128)
 11646  255E  30AA               	movlw	high (STR_7| (0+32768))
 11647  255F  00A1               	movwf	(printf@f^(0+128)+1)
 11648  2560  3186  26A1         	fcall	_printf
 11649                           
 11650                           ;main.c: 283: return 0;
 11651  2562  0021               	movlb	1	; select bank1
 11652  2563  01B5               	clrf	?_startRelMove^(0+128)
 11653  2564  01B6               	clrf	(?_startRelMove+1)^(0+128)
 11654  2565  0008               	return
 11655  2566                     __end_of_startRelMove:	
 11656                           
 11657                           	psect	text22
 11658  259E                     __ptext22:	
 11659 ;; *************** function _startAbsMove *****************
 11660 ;; Defined at:
 11661 ;;		line 285 in file "main.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;  steps           2   21[BANK1 ] int 
 11664 ;; Auto vars:     Size  Location     Type
 11665 ;;		None
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  2   21[BANK1 ] int 
 11668 ;; Registers used:
 11669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11670 ;; Tracked objects:
 11671 ;;		On entry : 0/0
 11672 ;;		On exit  : 0/0
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11675 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11678 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11679 ;;Total ram usage:        3 bytes
 11680 ;; Hardware stack levels used:    1
 11681 ;; Hardware stack levels required when called:    9
 11682 ;; This function calls:
 11683 ;;		_printf
 11684 ;; This function is called by:
 11685 ;;		_execCmd
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           
 11689                           
 11690                           ;psect for function _startAbsMove
 11691  259E                     _startAbsMove:	
 11692                           
 11693                           ;main.c: 286: motionType = ABS_MOVE;
 11694                           
 11695                           ;incstack = 0
 11696                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11697  259E  3002               	movlw	2
 11698  259F  0020               	movlb	0	; select bank0
 11699  25A0  00C9               	movwf	??_startAbsMove
 11700  25A1  0849               	movf	??_startAbsMove,w
 11701  25A2  00D5               	movwf	_motionType
 11702                           
 11703                           ;main.c: 287: absCommand = steps;
 11704  25A3  0021               	movlb	1	; select bank1
 11705  25A4  0835               	movf	startAbsMove@steps^(0+128),w
 11706  25A5  0020               	movlb	0	; select bank0
 11707  25A6  00CE               	movwf	_absCommand
 11708  25A7  0021               	movlb	1	; select bank1
 11709  25A8  0836               	movf	(startAbsMove@steps+1)^(0+128),w
 11710  25A9  0020               	movlb	0	; select bank0
 11711  25AA  00CF               	movwf	_absCommand+1
 11712  25AB  0D89               	rlf	9,f
 11713  25AC  3B89               	subwfb	9,f
 11714  25AD  0989               	comf	9,f
 11715  25AE  00D0               	movwf	_absCommand+2
 11716  25AF  00D1               	movwf	_absCommand+3
 11717                           
 11718                           ;main.c: 288: printf("A\n");
 11719  25B0  3069               	movlw	low (STR_7| (0+32768))
 11720  25B1  0021               	movlb	1	; select bank1
 11721  25B2  00A0               	movwf	printf@f^(0+128)
 11722  25B3  30AA               	movlw	high (STR_7| (0+32768))
 11723  25B4  00A1               	movwf	(printf@f^(0+128)+1)
 11724  25B5  3186  26A1         	fcall	_printf
 11725                           
 11726                           ;main.c: 289: return 0;
 11727  25B7  0021               	movlb	1	; select bank1
 11728  25B8  01B5               	clrf	?_startAbsMove^(0+128)
 11729  25B9  01B6               	clrf	(?_startAbsMove+1)^(0+128)
 11730  25BA  0008               	return
 11731  25BB                     __end_of_startAbsMove:	
 11732                           
 11733                           	psect	text23
 11734  1629                     __ptext23:	
 11735 ;; *************** function _setMoveMask *****************
 11736 ;; Defined at:
 11737 ;;		line 494 in file "main.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;  probeNum        2   21[BANK1 ] int 
 11740 ;;  onOff           2   23[BANK1 ] int 
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  2   21[BANK1 ] int 
 11745 ;; Registers used:
 11746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11752 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11755 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11756 ;;Total ram usage:        8 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    9
 11759 ;; This function calls:
 11760 ;;		_printf
 11761 ;; This function is called by:
 11762 ;;		_execCmd
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766                           
 11767                           ;psect for function _setMoveMask
 11768  1629                     _setMoveMask:	
 11769                           
 11770                           ;main.c: 498: if (probeNum < 24){
 11771                           
 11772                           ;incstack = 0
 11773                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11774  1629  0021               	movlb	1	; select bank1
 11775  162A  0836               	movf	(setMoveMask@probeNum+1)^(0+128),w
 11776  162B  3A80               	xorlw	128
 11777  162C  0020               	movlb	0	; select bank0
 11778  162D  00C9               	movwf	??_setMoveMask
 11779  162E  3080               	movlw	128
 11780  162F  0249               	subwf	??_setMoveMask,w
 11781  1630  1D03               	skipz
 11782  1631  2E35               	goto	u7995
 11783  1632  3018               	movlw	24
 11784  1633  0021               	movlb	1	; select bank1
 11785  1634  0235               	subwf	setMoveMask@probeNum^(0+128),w
 11786  1635                     u7995:	
 11787  1635  1803               	skipnc
 11788  1636  2E8F               	goto	l8032
 11789                           
 11790                           ;main.c: 499: if (onOff)
 11791  1637  0021               	movlb	1	; select bank1
 11792  1638  0837               	movf	setMoveMask@onOff^(0+128),w
 11793  1639  0438               	iorwf	(setMoveMask@onOff+1)^(0+128),w
 11794  163A  1903               	btfsc	3,2
 11795  163B  2E5F               	goto	l8024
 11796                           
 11797                           ;main.c: 500: moveMask |= (1UL<<probeNum);
 11798  163C  3001               	movlw	1
 11799  163D  0020               	movlb	0	; select bank0
 11800  163E  00C9               	movwf	??_setMoveMask
 11801  163F  3000               	movlw	0
 11802  1640  00CA               	movwf	??_setMoveMask+1
 11803  1641  3000               	movlw	0
 11804  1642  00CB               	movwf	??_setMoveMask+2
 11805  1643  3000               	movlw	0
 11806  1644  00CC               	movwf	??_setMoveMask+3
 11807  1645  0021               	movlb	1	; select bank1
 11808  1646  0A35               	incf	setMoveMask@probeNum^(0+128),w
 11809  1647  0020               	movlb	0	; select bank0
 11810  1648  2E4D               	goto	u8010
 11811  1649                     u8015:	
 11812  1649  35C9               	lslf	??_setMoveMask,f
 11813  164A  0DCA               	rlf	??_setMoveMask+1,f
 11814  164B  0DCB               	rlf	??_setMoveMask+2,f
 11815  164C  0DCC               	rlf	??_setMoveMask+3,f
 11816  164D                     u8010:	
 11817  164D  0B89               	decfsz	9,f
 11818  164E  2E49               	goto	u8015
 11819  164F  0849               	movf	??_setMoveMask,w
 11820  1650  0021               	movlb	1	; select bank1
 11821  1651  04D9               	iorwf	_moveMask^(0+128),f
 11822  1652  0020               	movlb	0	; select bank0
 11823  1653  084A               	movf	??_setMoveMask+1,w
 11824  1654  0021               	movlb	1	; select bank1
 11825  1655  04DA               	iorwf	(_moveMask+1)^(0+128),f
 11826  1656  0020               	movlb	0	; select bank0
 11827  1657  084B               	movf	??_setMoveMask+2,w
 11828  1658  0021               	movlb	1	; select bank1
 11829  1659  04DB               	iorwf	(_moveMask+2)^(0+128),f
 11830  165A  0020               	movlb	0	; select bank0
 11831  165B  084C               	movf	??_setMoveMask+3,w
 11832  165C  0021               	movlb	1	; select bank1
 11833  165D  04DC               	iorwf	(_moveMask+3)^(0+128),f
 11834  165E  2E85               	goto	l8026
 11835  165F                     l8024:	
 11836                           
 11837                           ;main.c: 501: else
 11838                           ;main.c: 502: moveMask &= ~(1UL<< probeNum);
 11839  165F  3001               	movlw	1
 11840  1660  0020               	movlb	0	; select bank0
 11841  1661  00C9               	movwf	??_setMoveMask
 11842  1662  3000               	movlw	0
 11843  1663  00CA               	movwf	??_setMoveMask+1
 11844  1664  3000               	movlw	0
 11845  1665  00CB               	movwf	??_setMoveMask+2
 11846  1666  3000               	movlw	0
 11847  1667  00CC               	movwf	??_setMoveMask+3
 11848  1668  0021               	movlb	1	; select bank1
 11849  1669  0A35               	incf	setMoveMask@probeNum^(0+128),w
 11850  166A  0020               	movlb	0	; select bank0
 11851  166B  2E70               	goto	u8020
 11852  166C                     u8025:	
 11853  166C  35C9               	lslf	??_setMoveMask,f
 11854  166D  0DCA               	rlf	??_setMoveMask+1,f
 11855  166E  0DCB               	rlf	??_setMoveMask+2,f
 11856  166F  0DCC               	rlf	??_setMoveMask+3,f
 11857  1670                     u8020:	
 11858  1670  0B89               	decfsz	9,f
 11859  1671  2E6C               	goto	u8025
 11860  1672  09C9               	comf	??_setMoveMask,f
 11861  1673  09CA               	comf	??_setMoveMask+1,f
 11862  1674  09CB               	comf	??_setMoveMask+2,f
 11863  1675  09CC               	comf	??_setMoveMask+3,f
 11864  1676  0849               	movf	??_setMoveMask,w
 11865  1677  0021               	movlb	1	; select bank1
 11866  1678  05D9               	andwf	_moveMask^(0+128),f
 11867  1679  0020               	movlb	0	; select bank0
 11868  167A  084A               	movf	??_setMoveMask+1,w
 11869  167B  0021               	movlb	1	; select bank1
 11870  167C  05DA               	andwf	(_moveMask+1)^(0+128),f
 11871  167D  0020               	movlb	0	; select bank0
 11872  167E  084B               	movf	??_setMoveMask+2,w
 11873  167F  0021               	movlb	1	; select bank1
 11874  1680  05DB               	andwf	(_moveMask+2)^(0+128),f
 11875  1681  0020               	movlb	0	; select bank0
 11876  1682  084C               	movf	??_setMoveMask+3,w
 11877  1683  0021               	movlb	1	; select bank1
 11878  1684  05DC               	andwf	(_moveMask+3)^(0+128),f
 11879  1685                     l8026:	
 11880                           
 11881                           ;main.c: 503: printf("A\n");
 11882  1685  3069               	movlw	low (STR_7| (0+32768))
 11883  1686  00A0               	movwf	printf@f^(0+128)
 11884  1687  30AA               	movlw	high (STR_7| (0+32768))
 11885  1688  00A1               	movwf	(printf@f^(0+128)+1)
 11886  1689  3186  26A1         	fcall	_printf
 11887                           
 11888                           ;main.c: 504: return 0;
 11889  168B  0021               	movlb	1	; select bank1
 11890  168C  01B5               	clrf	?_setMoveMask^(0+128)
 11891  168D  01B6               	clrf	(?_setMoveMask+1)^(0+128)
 11892  168E  0008               	return
 11893  168F                     l8032:	
 11894                           
 11895                           ;main.c: 505: }
 11896                           ;main.c: 506: printf("E\n");
 11897  168F  306C               	movlw	low (STR_16| (0+32768))
 11898  1690  0021               	movlb	1	; select bank1
 11899  1691  00A0               	movwf	printf@f^(0+128)
 11900  1692  30AA               	movlw	high (STR_16| (0+32768))
 11901  1693  00A1               	movwf	(printf@f^(0+128)+1)
 11902  1694  3186  26A1         	fcall	_printf
 11903                           
 11904                           ;main.c: 507: return 1;
 11905  1696  3001               	movlw	1
 11906  1697  0021               	movlb	1	; select bank1
 11907  1698  00B5               	movwf	?_setMoveMask^(0+128)
 11908  1699  3000               	movlw	0
 11909  169A  00B6               	movwf	(?_setMoveMask^(0+128)+1)
 11910  169B  0008               	return
 11911  169C                     __end_of_setMoveMask:	
 11912                           
 11913                           	psect	text24
 11914  25F7                     __ptext24:	
 11915 ;; *************** function _setLEDPwr *****************
 11916 ;; Defined at:
 11917 ;;		line 449 in file "main.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;  pwr             2   21[BANK1 ] int 
 11920 ;;  topOrBottom     2   23[BANK1 ] int 
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  2   21[BANK1 ] int 
 11925 ;; Registers used:
 11926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11932 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11935 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11936 ;;Total ram usage:        4 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; Hardware stack levels required when called:    9
 11939 ;; This function calls:
 11940 ;;		_LEDsPwr
 11941 ;;		_printf
 11942 ;; This function is called by:
 11943 ;;		_execCmd
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           
 11948                           ;psect for function _setLEDPwr
 11949  25F7                     _setLEDPwr:	
 11950                           
 11951                           ;main.c: 450: LEDsPwr(pwr, topOrBottom);
 11952                           
 11953                           ;incstack = 0
 11954                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11955  25F7  0021               	movlb	1	; select bank1
 11956  25F8  0836               	movf	(setLEDPwr@pwr+1)^(0+128),w
 11957  25F9  0020               	movlb	0	; select bank0
 11958  25FA  00C5               	movwf	LEDsPwr@pwr+1
 11959  25FB  0021               	movlb	1	; select bank1
 11960  25FC  0835               	movf	setLEDPwr@pwr^(0+128),w
 11961  25FD  0020               	movlb	0	; select bank0
 11962  25FE  00C4               	movwf	LEDsPwr@pwr
 11963  25FF  0021               	movlb	1	; select bank1
 11964  2600  0838               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 11965  2601  0020               	movlb	0	; select bank0
 11966  2602  00C7               	movwf	LEDsPwr@topOrBottom+1
 11967  2603  0021               	movlb	1	; select bank1
 11968  2604  0837               	movf	setLEDPwr@topOrBottom^(0+128),w
 11969  2605  0020               	movlb	0	; select bank0
 11970  2606  00C6               	movwf	LEDsPwr@topOrBottom
 11971  2607  3194  2417  31A5   	fcall	_LEDsPwr
 11972                           
 11973                           ;main.c: 451: printf("A\n");
 11974  260A  3069               	movlw	low (STR_7| (0+32768))
 11975  260B  0021               	movlb	1	; select bank1
 11976  260C  00A0               	movwf	printf@f^(0+128)
 11977  260D  30AA               	movlw	high (STR_7| (0+32768))
 11978  260E  00A1               	movwf	(printf@f^(0+128)+1)
 11979  260F  3186  26A1         	fcall	_printf
 11980                           
 11981                           ;main.c: 452: return 0;
 11982  2611  0021               	movlb	1	; select bank1
 11983  2612  01B5               	clrf	?_setLEDPwr^(0+128)
 11984  2613  01B6               	clrf	(?_setLEDPwr+1)^(0+128)
 11985  2614  0008               	return
 11986  2615                     __end_of_setLEDPwr:	
 11987                           
 11988                           	psect	text25
 11989  1417                     __ptext25:	
 11990 ;; *************** function _LEDsPwr *****************
 11991 ;; Defined at:
 11992 ;;		line 12 in file "LEDcomm.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  pwr             2   36[BANK0 ] int 
 11995 ;;  topOrBottom     2   38[BANK0 ] int 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 11998 ;; Return value:  Size  Location     Type
 11999 ;;                  1    wreg      void 
 12000 ;; Registers used:
 12001 ;;		wreg, status,2, status,0, pclath, cstack
 12002 ;; Tracked objects:
 12003 ;;		On entry : 0/0
 12004 ;;		On exit  : 0/0
 12005 ;;		Unchanged: 0/0
 12006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12007 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12008 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12010 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12011 ;;Total ram usage:       14 bytes
 12012 ;; Hardware stack levels used:    1
 12013 ;; Hardware stack levels required when called:    8
 12014 ;; This function calls:
 12015 ;;		_send_2length_2bytes_IK
 12016 ;; This function is called by:
 12017 ;;		_main_initialize
 12018 ;;		_setLEDPwr
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           
 12023                           ;psect for function _LEDsPwr
 12024  1417                     _LEDsPwr:	
 12025                           
 12026                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 12027                           
 12028                           ;incstack = 0
 12029                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 12030  1417  0020               	movlb	0	; select bank0
 12031  1418  0845               	movf	LEDsPwr@pwr+1,w
 12032  1419  3A80               	xorlw	128
 12033  141A  00C8               	movwf	??_LEDsPwr
 12034  141B  3080               	movlw	128
 12035  141C  0248               	subwf	??_LEDsPwr,w
 12036  141D  1D03               	skipz
 12037  141E  2C21               	goto	u7315
 12038  141F  3040               	movlw	64
 12039  1420  0244               	subwf	LEDsPwr@pwr,w
 12040  1421                     u7315:	
 12041  1421  1C03               	btfss	3,0
 12042  1422  2C28               	goto	l202
 12043  1423  303F               	movlw	63
 12044  1424  0020               	movlb	0	; select bank0
 12045  1425  00C4               	movwf	LEDsPwr@pwr
 12046  1426  3000               	movlw	0
 12047  1427  00C5               	movwf	LEDsPwr@pwr+1
 12048  1428                     l202:	
 12049                           
 12050                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 12051  1428  0020               	movlb	0	; select bank0
 12052  1429  0845               	movf	LEDsPwr@pwr+1,w
 12053  142A  00C9               	movwf	??_LEDsPwr+1
 12054  142B  0844               	movf	LEDsPwr@pwr,w
 12055  142C  00C8               	movwf	??_LEDsPwr
 12056  142D  0E48               	swapf	??_LEDsPwr,w
 12057  142E  39F0               	andlw	240
 12058  142F  00C9               	movwf	??_LEDsPwr+1
 12059  1430  01C8               	clrf	??_LEDsPwr
 12060  1431  0845               	movf	LEDsPwr@pwr+1,w
 12061  1432  00CB               	movwf	??_LEDsPwr+3
 12062  1433  0844               	movf	LEDsPwr@pwr,w
 12063  1434  00CA               	movwf	??_LEDsPwr+2
 12064  1435  3006               	movlw	6
 12065  1436                     u7325:	
 12066  1436  35CA               	lslf	??_LEDsPwr+2,f
 12067  1437  0DCB               	rlf	??_LEDsPwr+3,f
 12068  1438  0B89               	decfsz	9,f
 12069  1439  2C36               	goto	u7325
 12070  143A  0848               	movf	??_LEDsPwr,w
 12071  143B  044A               	iorwf	??_LEDsPwr+2,w
 12072  143C  00CC               	movwf	??_LEDsPwr+4
 12073  143D  0849               	movf	??_LEDsPwr+1,w
 12074  143E  044B               	iorwf	??_LEDsPwr+3,w
 12075  143F  00CD               	movwf	??_LEDsPwr+5
 12076  1440  0844               	movf	LEDsPwr@pwr,w
 12077  1441  044C               	iorwf	??_LEDsPwr+4,w
 12078  1442  0021               	movlb	1	; select bank1
 12079  1443  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 12080  1444  0020               	movlb	0	; select bank0
 12081  1445  0845               	movf	LEDsPwr@pwr+1,w
 12082  1446  044D               	iorwf	??_LEDsPwr+5,w
 12083  1447  0021               	movlb	1	; select bank1
 12084  1448  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 12085  1449  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 12086  144A  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 12087  144B  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 12088  144C  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 12089  144D  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 12090                           
 12091                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 12092  144E  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12093  144F  0020               	movlb	0	; select bank0
 12094  1450  00C8               	movwf	??_LEDsPwr
 12095  1451  0021               	movlb	1	; select bank1
 12096  1452  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12097  1453  0020               	movlb	0	; select bank0
 12098  1454  00C9               	movwf	??_LEDsPwr+1
 12099  1455  0021               	movlb	1	; select bank1
 12100  1456  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 12101  1457  0020               	movlb	0	; select bank0
 12102  1458  00CA               	movwf	??_LEDsPwr+2
 12103  1459  0021               	movlb	1	; select bank1
 12104  145A  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 12105  145B  0020               	movlb	0	; select bank0
 12106  145C  00CB               	movwf	??_LEDsPwr+3
 12107  145D  3010               	movlw	16
 12108  145E                     u7335:	
 12109  145E  36CB               	lsrf	??_LEDsPwr+3,f
 12110  145F  0CCA               	rrf	??_LEDsPwr+2,f
 12111  1460  0CC9               	rrf	??_LEDsPwr+1,f
 12112  1461  0CC8               	rrf	??_LEDsPwr,f
 12113  1462  0B89               	decfsz	9,f
 12114  1463  2C5E               	goto	u7335
 12115  1464  0849               	movf	??_LEDsPwr+1,w
 12116  1465  00BD               	movwf	send_2length_2bytes_IK@data1+1
 12117  1466  0848               	movf	??_LEDsPwr,w
 12118  1467  00BC               	movwf	send_2length_2bytes_IK@data1
 12119  1468  0021               	movlb	1	; select bank1
 12120  1469  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12121  146A  0020               	movlb	0	; select bank0
 12122  146B  00BF               	movwf	send_2length_2bytes_IK@data2+1
 12123  146C  0021               	movlb	1	; select bank1
 12124  146D  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12125  146E  0020               	movlb	0	; select bank0
 12126  146F  00BE               	movwf	send_2length_2bytes_IK@data2
 12127  1470  3007               	movlw	7
 12128  1471  00CC               	movwf	??_LEDsPwr+4
 12129  1472  084C               	movf	??_LEDsPwr+4,w
 12130  1473  00C0               	movwf	send_2length_2bytes_IK@latch_start
 12131  1474  0847               	movf	LEDsPwr@topOrBottom+1,w
 12132  1475  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 12133  1476  0846               	movf	LEDsPwr@topOrBottom,w
 12134  1477  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 12135  1478  31A4  24FF         	fcall	_send_2length_2bytes_IK
 12136  147A  0008               	return
 12137  147B                     __end_of_LEDsPwr:	
 12138                           
 12139                           	psect	text26
 12140  25D9                     __ptext26:	
 12141 ;; *************** function _setLEDBrightnessRange *****************
 12142 ;; Defined at:
 12143 ;;		line 441 in file "main.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;  r               2   21[BANK1 ] int 
 12146 ;;  tOB             2   23[BANK1 ] int 
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;		None
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  2   21[BANK1 ] int 
 12151 ;; Registers used:
 12152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12158 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12161 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12162 ;;Total ram usage:        4 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; Hardware stack levels required when called:    9
 12165 ;; This function calls:
 12166 ;;		_LED_setBrightnessRange
 12167 ;;		_printf
 12168 ;; This function is called by:
 12169 ;;		_execCmd
 12170 ;; This function uses a non-reentrant model
 12171 ;;
 12172                           
 12173                           
 12174                           ;psect for function _setLEDBrightnessRange
 12175  25D9                     _setLEDBrightnessRange:	
 12176                           
 12177                           ;main.c: 442: LED_setBrightnessRange(r, tOB);
 12178                           
 12179                           ;incstack = 0
 12180                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12181  25D9  0021               	movlb	1	; select bank1
 12182  25DA  0836               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 12183  25DB  0020               	movlb	0	; select bank0
 12184  25DC  00C5               	movwf	LED_setBrightnessRange@range+1
 12185  25DD  0021               	movlb	1	; select bank1
 12186  25DE  0835               	movf	setLEDBrightnessRange@r^(0+128),w
 12187  25DF  0020               	movlb	0	; select bank0
 12188  25E0  00C4               	movwf	LED_setBrightnessRange@range
 12189  25E1  0021               	movlb	1	; select bank1
 12190  25E2  0838               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 12191  25E3  0020               	movlb	0	; select bank0
 12192  25E4  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 12193  25E5  0021               	movlb	1	; select bank1
 12194  25E6  0837               	movf	setLEDBrightnessRange@tOB^(0+128),w
 12195  25E7  0020               	movlb	0	; select bank0
 12196  25E8  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 12197  25E9  318B  23F6  31A5   	fcall	_LED_setBrightnessRange
 12198                           
 12199                           ;main.c: 443: printf("A\n");
 12200  25EC  3069               	movlw	low (STR_7| (0+32768))
 12201  25ED  0021               	movlb	1	; select bank1
 12202  25EE  00A0               	movwf	printf@f^(0+128)
 12203  25EF  30AA               	movlw	high (STR_7| (0+32768))
 12204  25F0  00A1               	movwf	(printf@f^(0+128)+1)
 12205  25F1  3186  26A1         	fcall	_printf
 12206                           
 12207                           ;main.c: 444: return 0;
 12208  25F3  0021               	movlb	1	; select bank1
 12209  25F4  01B5               	clrf	?_setLEDBrightnessRange^(0+128)
 12210  25F5  01B6               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 12211  25F6  0008               	return
 12212  25F7                     __end_of_setLEDBrightnessRange:	
 12213                           
 12214                           	psect	text27
 12215  09C1                     __ptext27:	
 12216 ;; *************** function _setHeaterToggle *****************
 12217 ;; Defined at:
 12218 ;;		line 458 in file "main.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;  num             2   21[BANK1 ] int 
 12221 ;;  topOrB          2   23[BANK1 ] int 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;		None
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  2   21[BANK1 ] int 
 12226 ;; Registers used:
 12227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12233 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12235 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12236 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12237 ;;Total ram usage:        8 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; Hardware stack levels required when called:    9
 12240 ;; This function calls:
 12241 ;;		_LEDsOn
 12242 ;;		_printf
 12243 ;; This function is called by:
 12244 ;;		_execCmd
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248                           
 12249                           ;psect for function _setHeaterToggle
 12250  09C1                     _setHeaterToggle:	
 12251                           
 12252                           ;main.c: 460: if(topOrB == 1){
 12253                           
 12254                           ;incstack = 0
 12255                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12256  09C1  0021               	movlb	1	; select bank1
 12257  09C2  0337               	decf	setHeaterToggle@topOrB^(0+128),w
 12258  09C3  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12259  09C4  1D03               	btfss	3,2
 12260  09C5  29F6               	goto	l7984
 12261                           
 12262                           ;main.c: 461: demoHeaterToggle_top ^= 1UL << num;
 12263  09C6  3001               	movlw	1
 12264  09C7  00B9               	movwf	??_setHeaterToggle^(0+128)
 12265  09C8  3000               	movlw	0
 12266  09C9  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12267  09CA  3000               	movlw	0
 12268  09CB  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12269  09CC  3000               	movlw	0
 12270  09CD  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12271  09CE  0A35               	incf	setHeaterToggle@num^(0+128),w
 12272  09CF  29D4               	goto	u7910
 12273  09D0                     u7915:	
 12274  09D0  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12275  09D1  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12276  09D2  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12277  09D3  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12278  09D4                     u7910:	
 12279  09D4  0B89               	decfsz	9,f
 12280  09D5  29D0               	goto	u7915
 12281  09D6  0839               	movf	??_setHeaterToggle^(0+128),w
 12282  09D7  0022               	movlb	2	; select bank2
 12283  09D8  06C6               	xorwf	_demoHeaterToggle_top^(0+256),f
 12284  09D9  0021               	movlb	1	; select bank1
 12285  09DA  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12286  09DB  0022               	movlb	2	; select bank2
 12287  09DC  06C7               	xorwf	(_demoHeaterToggle_top+1)^(0+256),f
 12288  09DD  0021               	movlb	1	; select bank1
 12289  09DE  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12290  09DF  0022               	movlb	2	; select bank2
 12291  09E0  06C8               	xorwf	(_demoHeaterToggle_top+2)^(0+256),f
 12292  09E1  0021               	movlb	1	; select bank1
 12293  09E2  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12294  09E3  0022               	movlb	2	; select bank2
 12295  09E4  06C9               	xorwf	(_demoHeaterToggle_top+3)^(0+256),f
 12296                           
 12297                           ;main.c: 462: LEDsOn(demoHeaterToggle_top, 1);
 12298  09E5  0849               	movf	(_demoHeaterToggle_top+3)^(0+256),w
 12299  09E6  0020               	movlb	0	; select bank0
 12300  09E7  00C7               	movwf	LEDsOn@LEDpins+3
 12301  09E8  0022               	movlb	2	; select bank2
 12302  09E9  0848               	movf	(_demoHeaterToggle_top+2)^(0+256),w
 12303  09EA  0020               	movlb	0	; select bank0
 12304  09EB  00C6               	movwf	LEDsOn@LEDpins+2
 12305  09EC  0022               	movlb	2	; select bank2
 12306  09ED  0847               	movf	(_demoHeaterToggle_top+1)^(0+256),w
 12307  09EE  0020               	movlb	0	; select bank0
 12308  09EF  00C5               	movwf	LEDsOn@LEDpins+1
 12309  09F0  0022               	movlb	2	; select bank2
 12310  09F1  0846               	movf	_demoHeaterToggle_top^(0+256),w
 12311  09F2  0020               	movlb	0	; select bank0
 12312  09F3  00C4               	movwf	LEDsOn@LEDpins
 12313  09F4  3001               	movlw	1
 12314  09F5  2A2B               	goto	L21
 12315  09F6                     l7984:	
 12316                           ;main.c: 463: }
 12317                           
 12318                           
 12319                           ;main.c: 464: else if (topOrB == 2){
 12320  09F6  3002               	movlw	2
 12321  09F7  0021               	movlb	1	; select bank1
 12322  09F8  0637               	xorwf	setHeaterToggle@topOrB^(0+128),w
 12323  09F9  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12324  09FA  1D03               	btfss	3,2
 12325  09FB  2A31               	goto	l7990
 12326                           
 12327                           ;main.c: 465: demoHeaterToggle_bot ^= 1UL << num;
 12328  09FC  3001               	movlw	1
 12329  09FD  00B9               	movwf	??_setHeaterToggle^(0+128)
 12330  09FE  3000               	movlw	0
 12331  09FF  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12332  0A00  3000               	movlw	0
 12333  0A01  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12334  0A02  3000               	movlw	0
 12335  0A03  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12336  0A04  0A35               	incf	setHeaterToggle@num^(0+128),w
 12337  0A05  2A0A               	goto	u7930
 12338  0A06                     u7935:	
 12339  0A06  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12340  0A07  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12341  0A08  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12342  0A09  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12343  0A0A                     u7930:	
 12344  0A0A  0B89               	decfsz	9,f
 12345  0A0B  2A06               	goto	u7935
 12346  0A0C  0839               	movf	??_setHeaterToggle^(0+128),w
 12347  0A0D  0022               	movlb	2	; select bank2
 12348  0A0E  06C2               	xorwf	_demoHeaterToggle_bot^(0+256),f
 12349  0A0F  0021               	movlb	1	; select bank1
 12350  0A10  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12351  0A11  0022               	movlb	2	; select bank2
 12352  0A12  06C3               	xorwf	(_demoHeaterToggle_bot+1)^(0+256),f
 12353  0A13  0021               	movlb	1	; select bank1
 12354  0A14  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12355  0A15  0022               	movlb	2	; select bank2
 12356  0A16  06C4               	xorwf	(_demoHeaterToggle_bot+2)^(0+256),f
 12357  0A17  0021               	movlb	1	; select bank1
 12358  0A18  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12359  0A19  0022               	movlb	2	; select bank2
 12360  0A1A  06C5               	xorwf	(_demoHeaterToggle_bot+3)^(0+256),f
 12361                           
 12362                           ;main.c: 466: LEDsOn(demoHeaterToggle_bot, 2);
 12363  0A1B  0845               	movf	(_demoHeaterToggle_bot+3)^(0+256),w
 12364  0A1C  0020               	movlb	0	; select bank0
 12365  0A1D  00C7               	movwf	LEDsOn@LEDpins+3
 12366  0A1E  0022               	movlb	2	; select bank2
 12367  0A1F  0844               	movf	(_demoHeaterToggle_bot+2)^(0+256),w
 12368  0A20  0020               	movlb	0	; select bank0
 12369  0A21  00C6               	movwf	LEDsOn@LEDpins+2
 12370  0A22  0022               	movlb	2	; select bank2
 12371  0A23  0843               	movf	(_demoHeaterToggle_bot+1)^(0+256),w
 12372  0A24  0020               	movlb	0	; select bank0
 12373  0A25  00C5               	movwf	LEDsOn@LEDpins+1
 12374  0A26  0022               	movlb	2	; select bank2
 12375  0A27  0842               	movf	_demoHeaterToggle_bot^(0+256),w
 12376  0A28  0020               	movlb	0	; select bank0
 12377  0A29  00C4               	movwf	LEDsOn@LEDpins
 12378  0A2A  3002               	movlw	2
 12379  0A2B                     L21:	
 12380  0A2B  00C8               	movwf	LEDsOn@topOrBottom
 12381  0A2C  3000               	movlw	0
 12382  0A2D  00C9               	movwf	LEDsOn@topOrBottom+1
 12383  0A2E  31A6  2696  3189   	fcall	_LEDsOn
 12384  0A31                     l7990:	
 12385                           
 12386                           ;main.c: 467: }
 12387                           ;main.c: 469: printf("demoheatertoggle_top: %lu\n", demoHeaterToggle_top);
 12388  0A31  3081               	movlw	low (STR_23| (0+32768))
 12389  0A32  0021               	movlb	1	; select bank1
 12390  0A33  00A0               	movwf	printf@f^(0+128)
 12391  0A34  30A8               	movlw	high (STR_23| (0+32768))
 12392  0A35  00A1               	movwf	(printf@f^(0+128)+1)
 12393  0A36  0022               	movlb	2	; select bank2
 12394  0A37  0849               	movf	(_demoHeaterToggle_top+3)^(0+256),w
 12395  0A38  0021               	movlb	1	; select bank1
 12396  0A39  00A5               	movwf	((?_printf+3)^(0+128)+2)
 12397  0A3A  0022               	movlb	2	; select bank2
 12398  0A3B  0848               	movf	(_demoHeaterToggle_top+2)^(0+256),w
 12399  0A3C  0021               	movlb	1	; select bank1
 12400  0A3D  00A4               	movwf	((?_printf+2)^(0+128)+2)
 12401  0A3E  0022               	movlb	2	; select bank2
 12402  0A3F  0847               	movf	(_demoHeaterToggle_top+1)^(0+256),w
 12403  0A40  0021               	movlb	1	; select bank1
 12404  0A41  00A3               	movwf	((?_printf+1)^(0+128)+2)
 12405  0A42  0022               	movlb	2	; select bank2
 12406  0A43  0846               	movf	_demoHeaterToggle_top^(0+256),w
 12407  0A44  0021               	movlb	1	; select bank1
 12408  0A45  00A2               	movwf	(?_printf^(0+128)+2)
 12409  0A46  3186  26A1  3189   	fcall	_printf
 12410                           
 12411                           ;main.c: 470: printf("A\n");
 12412  0A49  3069               	movlw	low (STR_7| (0+32768))
 12413  0A4A  0021               	movlb	1	; select bank1
 12414  0A4B  00A0               	movwf	printf@f^(0+128)
 12415  0A4C  30AA               	movlw	high (STR_7| (0+32768))
 12416  0A4D  00A1               	movwf	(printf@f^(0+128)+1)
 12417  0A4E  3186  26A1         	fcall	_printf
 12418                           
 12419                           ;main.c: 471: return 0;
 12420  0A50  0021               	movlb	1	; select bank1
 12421  0A51  01B5               	clrf	?_setHeaterToggle^(0+128)
 12422  0A52  01B6               	clrf	(?_setHeaterToggle+1)^(0+128)
 12423  0A53  0008               	return
 12424  0A54                     __end_of_setHeaterToggle:	
 12425                           
 12426                           	psect	text28
 12427  1F42                     __ptext28:	
 12428 ;; *************** function _setHeaterPreTime *****************
 12429 ;; Defined at:
 12430 ;;		line 425 in file "main.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  t               2   29[BANK1 ] int 
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;		None
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  2   29[BANK1 ] int 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12444 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12446 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12447 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12448 ;;Total ram usage:        4 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    9
 12451 ;; This function calls:
 12452 ;;		_TMR0_Load8bitPeriod
 12453 ;;		___awtoft
 12454 ;;		___ftadd
 12455 ;;		___ftmul
 12456 ;;		___fttol
 12457 ;;		_printf
 12458 ;; This function is called by:
 12459 ;;		_execCmd
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           
 12464                           ;psect for function _setHeaterPreTime
 12465  1F42                     _setHeaterPreTime:	
 12466                           
 12467                           ;main.c: 426: heater_pre_time_ms = t;
 12468                           
 12469                           ;incstack = 0
 12470                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12471  1F42  0021               	movlb	1	; select bank1
 12472  1F43  083E               	movf	(setHeaterPreTime@t+1)^(0+128),w
 12473  1F44  00EE               	movwf	(_heater_pre_time_ms+1)^(0+128)
 12474  1F45  083D               	movf	setHeaterPreTime@t^(0+128),w
 12475  1F46  00ED               	movwf	_heater_pre_time_ms^(0+128)
 12476                           
 12477                           ;main.c: 427: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 12478  1F47  096D               	comf	_heater_pre_time_ms^(0+128),w
 12479  1F48  00BF               	movwf	??_setHeaterPreTime^(0+128)
 12480  1F49  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 12481  1F4A  00C0               	movwf	(??_setHeaterPreTime^(0+128)+1)
 12482  1F4B  0ABF               	incf	??_setHeaterPreTime^(0+128),f
 12483  1F4C  1903               	skipnz
 12484  1F4D  0AC0               	incf	(??_setHeaterPreTime^(0+128)+1),f
 12485  1F4E  0869               	movf	_piezo_on_time_ms^(0+128),w
 12486  1F4F  073F               	addwf	??_setHeaterPreTime^(0+128),w
 12487  1F50  0020               	movlb	0	; select bank0
 12488  1F51  00B9               	movwf	___awtoft@c
 12489  1F52  0021               	movlb	1	; select bank1
 12490  1F53  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 12491  1F54  3D40               	addwfc	(??_setHeaterPreTime+1)^(0+128),w
 12492  1F55  0020               	movlb	0	; select bank0
 12493  1F56  00BA               	movwf	___awtoft@c+1
 12494  1F57  31A6  26B7  319F   	fcall	___awtoft
 12495  1F5A  0020               	movlb	0	; select bank0
 12496  1F5B  0839               	movf	?___awtoft,w
 12497  1F5C  00C2               	movwf	___ftmul@f2
 12498  1F5D  083A               	movf	?___awtoft+1,w
 12499  1F5E  00C3               	movwf	___ftmul@f2+1
 12500  1F5F  083B               	movf	?___awtoft+2,w
 12501  1F60  00C4               	movwf	___ftmul@f2+2
 12502  1F61  3066               	movlw	low (_TMR0_RANGE| (0+32768))
 12503  1F62  0084               	movwf	4
 12504  1F63  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 12505  1F64  0085               	movwf	5
 12506  1F65  3F00               	moviw [0]fsr0
 12507  1F66  00BF               	movwf	___ftmul@f1
 12508  1F67  3F01               	moviw [1]fsr0
 12509  1F68  00C0               	movwf	___ftmul@f1+1
 12510  1F69  3F02               	moviw [2]fsr0
 12511  1F6A  00C1               	movwf	___ftmul@f1+2
 12512  1F6B  318C  24D4  319F   	fcall	___ftmul
 12513  1F6E  0020               	movlb	0	; select bank0
 12514  1F6F  083F               	movf	?___ftmul,w
 12515  1F70  0021               	movlb	1	; select bank1
 12516  1F71  00A9               	movwf	___ftadd@f2^(0+128)
 12517  1F72  0020               	movlb	0	; select bank0
 12518  1F73  0840               	movf	?___ftmul+1,w
 12519  1F74  0021               	movlb	1	; select bank1
 12520  1F75  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12521  1F76  0020               	movlb	0	; select bank0
 12522  1F77  0841               	movf	?___ftmul+2,w
 12523  1F78  0021               	movlb	1	; select bank1
 12524  1F79  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12525  1F7A  3000               	movlw	0
 12526  1F7B  00A6               	movwf	___ftadd@f1^(0+128)
 12527  1F7C  3080               	movlw	128
 12528  1F7D  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12529  1F7E  30BF               	movlw	191
 12530  1F7F  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12531  1F80  318D  25B5  319F   	fcall	___ftadd
 12532  1F83  0021               	movlb	1	; select bank1
 12533  1F84  0826               	movf	?___ftadd^(0+128),w
 12534  1F85  00AF               	movwf	___fttol@f1^(0+128)
 12535  1F86  0827               	movf	(?___ftadd+1)^(0+128),w
 12536  1F87  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12537  1F88  0828               	movf	(?___ftadd+2)^(0+128),w
 12538  1F89  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12539  1F8A  3188  20B1  319F   	fcall	___fttol
 12540  1F8D  0021               	movlb	1	; select bank1
 12541  1F8E  082F               	movf	?___fttol^(0+128),w
 12542  1F8F  31A2  22EA  319F   	fcall	_TMR0_Load8bitPeriod
 12543                           
 12544                           ;main.c: 428: printf("A\n");
 12545  1F92  3069               	movlw	low (STR_7| (0+32768))
 12546  1F93  0021               	movlb	1	; select bank1
 12547  1F94  00A0               	movwf	printf@f^(0+128)
 12548  1F95  30AA               	movlw	high (STR_7| (0+32768))
 12549  1F96  00A1               	movwf	(printf@f^(0+128)+1)
 12550  1F97  3186  26A1         	fcall	_printf
 12551                           
 12552                           ;main.c: 429: return 0;
 12553  1F99  0021               	movlb	1	; select bank1
 12554  1F9A  01BD               	clrf	?_setHeaterPreTime^(0+128)
 12555  1F9B  01BE               	clrf	(?_setHeaterPreTime+1)^(0+128)
 12556  1F9C  0008               	return
 12557  1F9D                     __end_of_setHeaterPreTime:	
 12558                           
 12559                           	psect	text29
 12560  1D36                     __ptext29:	
 12561 ;; *************** function _setHeaterPostTime *****************
 12562 ;; Defined at:
 12563 ;;		line 431 in file "main.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  t               2   29[BANK1 ] int 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;		None
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  2   29[BANK1 ] int 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12577 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12580 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12581 ;;Total ram usage:        2 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    9
 12584 ;; This function calls:
 12585 ;;		_TMR2_LoadPeriodRegister
 12586 ;;		___awtoft
 12587 ;;		___ftadd
 12588 ;;		___ftmul
 12589 ;;		___fttol
 12590 ;;		_printf
 12591 ;; This function is called by:
 12592 ;;		_execCmd
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           
 12597                           ;psect for function _setHeaterPostTime
 12598  1D36                     _setHeaterPostTime:	
 12599                           
 12600                           ;main.c: 432: heater_post_time_ms = t;
 12601                           
 12602                           ;incstack = 0
 12603                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12604  1D36  0021               	movlb	1	; select bank1
 12605  1D37  083E               	movf	(setHeaterPostTime@t+1)^(0+128),w
 12606  1D38  00EC               	movwf	(_heater_post_time_ms+1)^(0+128)
 12607  1D39  083D               	movf	setHeaterPostTime@t^(0+128),w
 12608  1D3A  00EB               	movwf	_heater_post_time_ms^(0+128)
 12609                           
 12610                           ;main.c: 433: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 12611  1D3B  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 12612  1D3C  0020               	movlb	0	; select bank0
 12613  1D3D  00BA               	movwf	___awtoft@c+1
 12614  1D3E  0021               	movlb	1	; select bank1
 12615  1D3F  086B               	movf	_heater_post_time_ms^(0+128),w
 12616  1D40  0020               	movlb	0	; select bank0
 12617  1D41  00B9               	movwf	___awtoft@c
 12618  1D42  31A6  26B7  319D   	fcall	___awtoft
 12619  1D45  0020               	movlb	0	; select bank0
 12620  1D46  0839               	movf	?___awtoft,w
 12621  1D47  00C2               	movwf	___ftmul@f2
 12622  1D48  083A               	movf	?___awtoft+1,w
 12623  1D49  00C3               	movwf	___ftmul@f2+1
 12624  1D4A  083B               	movf	?___awtoft+2,w
 12625  1D4B  00C4               	movwf	___ftmul@f2+2
 12626  1D4C  3063               	movlw	low (_TMR2_RANGE| (0+32768))
 12627  1D4D  0084               	movwf	4
 12628  1D4E  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 12629  1D4F  0085               	movwf	5
 12630  1D50  3F00               	moviw [0]fsr0
 12631  1D51  00BF               	movwf	___ftmul@f1
 12632  1D52  3F01               	moviw [1]fsr0
 12633  1D53  00C0               	movwf	___ftmul@f1+1
 12634  1D54  3F02               	moviw [2]fsr0
 12635  1D55  00C1               	movwf	___ftmul@f1+2
 12636  1D56  318C  24D4  319D   	fcall	___ftmul
 12637  1D59  0020               	movlb	0	; select bank0
 12638  1D5A  083F               	movf	?___ftmul,w
 12639  1D5B  0021               	movlb	1	; select bank1
 12640  1D5C  00A9               	movwf	___ftadd@f2^(0+128)
 12641  1D5D  0020               	movlb	0	; select bank0
 12642  1D5E  0840               	movf	?___ftmul+1,w
 12643  1D5F  0021               	movlb	1	; select bank1
 12644  1D60  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12645  1D61  0020               	movlb	0	; select bank0
 12646  1D62  0841               	movf	?___ftmul+2,w
 12647  1D63  0021               	movlb	1	; select bank1
 12648  1D64  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12649  1D65  3000               	movlw	0
 12650  1D66  00A6               	movwf	___ftadd@f1^(0+128)
 12651  1D67  3080               	movlw	128
 12652  1D68  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12653  1D69  30BF               	movlw	191
 12654  1D6A  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12655  1D6B  318D  25B5  319D   	fcall	___ftadd
 12656  1D6E  0021               	movlb	1	; select bank1
 12657  1D6F  0826               	movf	?___ftadd^(0+128),w
 12658  1D70  00AF               	movwf	___fttol@f1^(0+128)
 12659  1D71  0827               	movf	(?___ftadd+1)^(0+128),w
 12660  1D72  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12661  1D73  0828               	movf	(?___ftadd+2)^(0+128),w
 12662  1D74  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12663  1D75  3188  20B1  319D   	fcall	___fttol
 12664  1D78  0021               	movlb	1	; select bank1
 12665  1D79  082F               	movf	?___fttol^(0+128),w
 12666  1D7A  31A2  22EF  319D   	fcall	_TMR2_LoadPeriodRegister
 12667                           
 12668                           ;main.c: 434: printf("A\n");
 12669  1D7D  3069               	movlw	low (STR_7| (0+32768))
 12670  1D7E  0021               	movlb	1	; select bank1
 12671  1D7F  00A0               	movwf	printf@f^(0+128)
 12672  1D80  30AA               	movlw	high (STR_7| (0+32768))
 12673  1D81  00A1               	movwf	(printf@f^(0+128)+1)
 12674  1D82  3186  26A1         	fcall	_printf
 12675                           
 12676                           ;main.c: 435: return 0;
 12677  1D84  0021               	movlb	1	; select bank1
 12678  1D85  01BD               	clrf	?_setHeaterPostTime^(0+128)
 12679  1D86  01BE               	clrf	(?_setHeaterPostTime+1)^(0+128)
 12680  1D87  0008               	return
 12681  1D88                     __end_of_setHeaterPostTime:	
 12682                           
 12683                           	psect	text30
 12684  22EF                     __ptext30:	
 12685 ;; *************** function _TMR2_LoadPeriodRegister *****************
 12686 ;; Defined at:
 12687 ;;		line 112 in file "mcc_generated_files/tmr2.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  periodVal       1    wreg     unsigned char 
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;  periodVal       1   17[BANK0 ] unsigned char 
 12692 ;; Return value:  Size  Location     Type
 12693 ;;                  1    wreg      void 
 12694 ;; Registers used:
 12695 ;;		wreg
 12696 ;; Tracked objects:
 12697 ;;		On entry : 0/0
 12698 ;;		On exit  : 0/0
 12699 ;;		Unchanged: 0/0
 12700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12705 ;;Total ram usage:        1 bytes
 12706 ;; Hardware stack levels used:    1
 12707 ;; Hardware stack levels required when called:    6
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_main_initialize
 12712 ;;		_setHeaterPostTime
 12713 ;; This function uses a non-reentrant model
 12714 ;;
 12715                           
 12716                           
 12717                           ;psect for function _TMR2_LoadPeriodRegister
 12718  22EF                     _TMR2_LoadPeriodRegister:	
 12719                           
 12720                           ;incstack = 0
 12721                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 12722                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 12723  22EF  0020               	movlb	0	; select bank0
 12724  22F0  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 12725                           
 12726                           ;tmr2.c: 114: PR2 = periodVal;
 12727  22F1  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 12728  22F2  009E               	movwf	30	;volatile
 12729  22F3  0008               	return
 12730  22F4                     __end_of_TMR2_LoadPeriodRegister:	
 12731                           
 12732                           	psect	text31
 12733  1EE7                     __ptext31:	
 12734 ;; *************** function _setDrvPiezoOnTime *****************
 12735 ;; Defined at:
 12736 ;;		line 414 in file "main.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;  t               2   29[BANK1 ] int 
 12739 ;; Auto vars:     Size  Location     Type
 12740 ;;		None
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  2   29[BANK1 ] int 
 12743 ;; Registers used:
 12744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12750 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12752 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12753 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12754 ;;Total ram usage:        4 bytes
 12755 ;; Hardware stack levels used:    1
 12756 ;; Hardware stack levels required when called:    9
 12757 ;; This function calls:
 12758 ;;		_TMR0_Load8bitPeriod
 12759 ;;		___awtoft
 12760 ;;		___ftadd
 12761 ;;		___ftmul
 12762 ;;		___fttol
 12763 ;;		_printf
 12764 ;; This function is called by:
 12765 ;;		_execCmd
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           
 12770                           ;psect for function _setDrvPiezoOnTime
 12771  1EE7                     _setDrvPiezoOnTime:	
 12772                           
 12773                           ;main.c: 415: piezo_on_time_ms = t;
 12774                           
 12775                           ;incstack = 0
 12776                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12777  1EE7  0021               	movlb	1	; select bank1
 12778  1EE8  083E               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 12779  1EE9  00EA               	movwf	(_piezo_on_time_ms+1)^(0+128)
 12780  1EEA  083D               	movf	setDrvPiezoOnTime@t^(0+128),w
 12781  1EEB  00E9               	movwf	_piezo_on_time_ms^(0+128)
 12782                           
 12783                           ;main.c: 416: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 12784  1EEC  096D               	comf	_heater_pre_time_ms^(0+128),w
 12785  1EED  00BF               	movwf	??_setDrvPiezoOnTime^(0+128)
 12786  1EEE  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 12787  1EEF  00C0               	movwf	(??_setDrvPiezoOnTime^(0+128)+1)
 12788  1EF0  0ABF               	incf	??_setDrvPiezoOnTime^(0+128),f
 12789  1EF1  1903               	skipnz
 12790  1EF2  0AC0               	incf	(??_setDrvPiezoOnTime^(0+128)+1),f
 12791  1EF3  0869               	movf	_piezo_on_time_ms^(0+128),w
 12792  1EF4  073F               	addwf	??_setDrvPiezoOnTime^(0+128),w
 12793  1EF5  0020               	movlb	0	; select bank0
 12794  1EF6  00B9               	movwf	___awtoft@c
 12795  1EF7  0021               	movlb	1	; select bank1
 12796  1EF8  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 12797  1EF9  3D40               	addwfc	(??_setDrvPiezoOnTime+1)^(0+128),w
 12798  1EFA  0020               	movlb	0	; select bank0
 12799  1EFB  00BA               	movwf	___awtoft@c+1
 12800  1EFC  31A6  26B7  319E   	fcall	___awtoft
 12801  1EFF  0020               	movlb	0	; select bank0
 12802  1F00  0839               	movf	?___awtoft,w
 12803  1F01  00C2               	movwf	___ftmul@f2
 12804  1F02  083A               	movf	?___awtoft+1,w
 12805  1F03  00C3               	movwf	___ftmul@f2+1
 12806  1F04  083B               	movf	?___awtoft+2,w
 12807  1F05  00C4               	movwf	___ftmul@f2+2
 12808  1F06  3066               	movlw	low (_TMR0_RANGE| (0+32768))
 12809  1F07  0084               	movwf	4
 12810  1F08  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 12811  1F09  0085               	movwf	5
 12812  1F0A  3F00               	moviw [0]fsr0
 12813  1F0B  00BF               	movwf	___ftmul@f1
 12814  1F0C  3F01               	moviw [1]fsr0
 12815  1F0D  00C0               	movwf	___ftmul@f1+1
 12816  1F0E  3F02               	moviw [2]fsr0
 12817  1F0F  00C1               	movwf	___ftmul@f1+2
 12818  1F10  318C  24D4  319E   	fcall	___ftmul
 12819  1F13  0020               	movlb	0	; select bank0
 12820  1F14  083F               	movf	?___ftmul,w
 12821  1F15  0021               	movlb	1	; select bank1
 12822  1F16  00A9               	movwf	___ftadd@f2^(0+128)
 12823  1F17  0020               	movlb	0	; select bank0
 12824  1F18  0840               	movf	?___ftmul+1,w
 12825  1F19  0021               	movlb	1	; select bank1
 12826  1F1A  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12827  1F1B  0020               	movlb	0	; select bank0
 12828  1F1C  0841               	movf	?___ftmul+2,w
 12829  1F1D  0021               	movlb	1	; select bank1
 12830  1F1E  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12831  1F1F  3000               	movlw	0
 12832  1F20  00A6               	movwf	___ftadd@f1^(0+128)
 12833  1F21  3080               	movlw	128
 12834  1F22  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12835  1F23  30BF               	movlw	191
 12836  1F24  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12837  1F25  318D  25B5  319E   	fcall	___ftadd
 12838  1F28  0021               	movlb	1	; select bank1
 12839  1F29  0826               	movf	?___ftadd^(0+128),w
 12840  1F2A  00AF               	movwf	___fttol@f1^(0+128)
 12841  1F2B  0827               	movf	(?___ftadd+1)^(0+128),w
 12842  1F2C  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12843  1F2D  0828               	movf	(?___ftadd+2)^(0+128),w
 12844  1F2E  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12845  1F2F  3188  20B1  319E   	fcall	___fttol
 12846  1F32  0021               	movlb	1	; select bank1
 12847  1F33  082F               	movf	?___fttol^(0+128),w
 12848  1F34  31A2  22EA  319E   	fcall	_TMR0_Load8bitPeriod
 12849                           
 12850                           ;main.c: 417: printf("A\n");
 12851  1F37  3069               	movlw	low (STR_7| (0+32768))
 12852  1F38  0021               	movlb	1	; select bank1
 12853  1F39  00A0               	movwf	printf@f^(0+128)
 12854  1F3A  30AA               	movlw	high (STR_7| (0+32768))
 12855  1F3B  00A1               	movwf	(printf@f^(0+128)+1)
 12856  1F3C  3186  26A1         	fcall	_printf
 12857                           
 12858                           ;main.c: 418: return 0;
 12859  1F3E  0021               	movlb	1	; select bank1
 12860  1F3F  01BD               	clrf	?_setDrvPiezoOnTime^(0+128)
 12861  1F40  01BE               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 12862  1F41  0008               	return
 12863  1F42                     __end_of_setDrvPiezoOnTime:	
 12864                           
 12865                           	psect	text32
 12866  08B1                     __ptext32:	
 12867 ;; *************** function ___fttol *****************
 12868 ;; Defined at:
 12869 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  f1              3   15[BANK1 ] float 
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;  lval            4   24[BANK1 ] unsigned long 
 12874 ;;  exp1            1   28[BANK1 ] unsigned char 
 12875 ;;  sign1           1   23[BANK1 ] unsigned char 
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  4   15[BANK1 ] long 
 12878 ;; Registers used:
 12879 ;;		wreg, status,2, status,0
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12885 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12886 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12887 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12888 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12889 ;;Total ram usage:       14 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; Hardware stack levels required when called:    6
 12892 ;; This function calls:
 12893 ;;		Nothing
 12894 ;; This function is called by:
 12895 ;;		_main_initialize
 12896 ;;		_setDrvPiezoOnTime
 12897 ;;		_setHeaterPreTime
 12898 ;;		_setHeaterPostTime
 12899 ;;		_drv_outputSine
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           
 12904                           ;psect for function ___fttol
 12905  08B1                     ___fttol:	
 12906                           
 12907                           ;incstack = 0
 12908                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 12909  08B1  0021               	movlb	1	; select bank1
 12910  08B2  082F               	movf	___fttol@f1^(0+128),w
 12911  08B3  00B3               	movwf	??___fttol^(0+128)
 12912  08B4  0830               	movf	(___fttol@f1+1)^(0+128),w
 12913  08B5  00B4               	movwf	(??___fttol^(0+128)+1)
 12914  08B6  0831               	movf	(___fttol@f1+2)^(0+128),w
 12915  08B7  00B5               	movwf	(??___fttol^(0+128)+2)
 12916  08B8  1003               	clrc
 12917  08B9  0D34               	rlf	(??___fttol^(0+128)+1),w
 12918  08BA  0D35               	rlf	(??___fttol^(0+128)+2),w
 12919  08BB  00B6               	movwf	(??___fttol+3)^(0+128)
 12920  08BC  0836               	movf	(??___fttol+3)^(0+128),w
 12921  08BD  00BC               	movwf	___fttol@exp1^(0+128)
 12922  08BE  083C               	movf	___fttol@exp1^(0+128),w
 12923  08BF  1D03               	btfss	3,2
 12924  08C0  28CA               	goto	l5600
 12925  08C1  3000               	movlw	0
 12926  08C2  00B2               	movwf	(?___fttol+3)^(0+128)
 12927  08C3  3000               	movlw	0
 12928  08C4  00B1               	movwf	(?___fttol+2)^(0+128)
 12929  08C5  3000               	movlw	0
 12930  08C6  00B0               	movwf	(?___fttol+1)^(0+128)
 12931  08C7  3000               	movlw	0
 12932  08C8  00AF               	movwf	?___fttol^(0+128)
 12933  08C9  0008               	return
 12934  08CA                     l5600:	
 12935  08CA  082F               	movf	___fttol@f1^(0+128),w
 12936  08CB  00B3               	movwf	??___fttol^(0+128)
 12937  08CC  0830               	movf	(___fttol@f1+1)^(0+128),w
 12938  08CD  00B4               	movwf	(??___fttol^(0+128)+1)
 12939  08CE  0831               	movf	(___fttol@f1+2)^(0+128),w
 12940  08CF  00B5               	movwf	(??___fttol^(0+128)+2)
 12941  08D0  3017               	movlw	23
 12942  08D1                     u4935:	
 12943  08D1  36B5               	lsrf	(??___fttol^(0+128)+2),f
 12944  08D2  0CB4               	rrf	(??___fttol^(0+128)+1),f
 12945  08D3  0CB3               	rrf	??___fttol^(0+128),f
 12946  08D4  0B89               	decfsz	9,f
 12947  08D5  28D1               	goto	u4935
 12948  08D6  0833               	movf	??___fttol^(0+128),w
 12949  08D7  00B6               	movwf	(??___fttol+3)^(0+128)
 12950  08D8  0836               	movf	(??___fttol+3)^(0+128),w
 12951  08D9  00B7               	movwf	___fttol@sign1^(0+128)
 12952  08DA  17B0               	bsf	(___fttol@f1^(0+128)+1),7
 12953  08DB  30FF               	movlw	255
 12954  08DC  05AF               	andwf	___fttol@f1^(0+128),f
 12955  08DD  30FF               	movlw	255
 12956  08DE  05B0               	andwf	(___fttol@f1+1)^(0+128),f
 12957  08DF  3000               	movlw	0
 12958  08E0  05B1               	andwf	(___fttol@f1+2)^(0+128),f
 12959  08E1  082F               	movf	___fttol@f1^(0+128),w
 12960  08E2  00B8               	movwf	___fttol@lval^(0+128)
 12961  08E3  0830               	movf	(___fttol@f1+1)^(0+128),w
 12962  08E4  00B9               	movwf	(___fttol@lval^(0+128)+1)
 12963  08E5  0831               	movf	(___fttol@f1+2)^(0+128),w
 12964  08E6  00BA               	movwf	(___fttol@lval^(0+128)+2)
 12965  08E7  01BB               	clrf	(___fttol@lval^(0+128)+3)
 12966  08E8  308E               	movlw	142
 12967  08E9  02BC               	subwf	___fttol@exp1^(0+128),f
 12968  08EA  1FBC               	btfss	___fttol@exp1^(0+128),7
 12969  08EB  2908               	goto	l5620
 12970  08EC  083C               	movf	___fttol@exp1^(0+128),w
 12971  08ED  3A80               	xorlw	128
 12972  08EE  3E8F               	addlw	143
 12973  08EF  1803               	skipnc
 12974  08F0  28FA               	goto	l5618
 12975  08F1  3000               	movlw	0
 12976  08F2  00B2               	movwf	(?___fttol+3)^(0+128)
 12977  08F3  3000               	movlw	0
 12978  08F4  00B1               	movwf	(?___fttol+2)^(0+128)
 12979  08F5  3000               	movlw	0
 12980  08F6  00B0               	movwf	(?___fttol+1)^(0+128)
 12981  08F7  3000               	movlw	0
 12982  08F8  00AF               	movwf	?___fttol^(0+128)
 12983  08F9  0008               	return
 12984  08FA                     l5618:	
 12985  08FA  3001               	movlw	1
 12986  08FB                     u4965:	
 12987  08FB  36BB               	lsrf	(___fttol@lval+3)^(0+128),f
 12988  08FC  0CBA               	rrf	(___fttol@lval+2)^(0+128),f
 12989  08FD  0CB9               	rrf	(___fttol@lval+1)^(0+128),f
 12990  08FE  0CB8               	rrf	___fttol@lval^(0+128),f
 12991  08FF  0B89               	decfsz	9,f
 12992  0900  28FB               	goto	u4965
 12993  0901  3001               	movlw	1
 12994  0902  00B3               	movwf	??___fttol^(0+128)
 12995  0903  0833               	movf	??___fttol^(0+128),w
 12996  0904  07BC               	addwf	___fttol@exp1^(0+128),f
 12997  0905  1903               	btfsc	3,2
 12998  0906  2921               	goto	l5628
 12999  0907  28FA               	goto	l5618
 13000  0908                     l5620:	
 13001  0908  3018               	movlw	24
 13002  0909  023C               	subwf	___fttol@exp1^(0+128),w
 13003  090A  1C03               	skipc
 13004  090B  291E               	goto	l1825
 13005  090C  3000               	movlw	0
 13006  090D  00B2               	movwf	(?___fttol+3)^(0+128)
 13007  090E  3000               	movlw	0
 13008  090F  00B1               	movwf	(?___fttol+2)^(0+128)
 13009  0910  3000               	movlw	0
 13010  0911  00B0               	movwf	(?___fttol+1)^(0+128)
 13011  0912  3000               	movlw	0
 13012  0913  00AF               	movwf	?___fttol^(0+128)
 13013  0914  0008               	return
 13014  0915                     l5626:	
 13015  0915  3001               	movlw	1
 13016  0916                     u4995:	
 13017  0916  35B8               	lslf	___fttol@lval^(0+128),f
 13018  0917  0DB9               	rlf	(___fttol@lval+1)^(0+128),f
 13019  0918  0DBA               	rlf	(___fttol@lval+2)^(0+128),f
 13020  0919  0DBB               	rlf	(___fttol@lval+3)^(0+128),f
 13021  091A  0B89               	decfsz	9,f
 13022  091B  2916               	goto	u4995
 13023  091C  3001               	movlw	1
 13024  091D  02BC               	subwf	___fttol@exp1^(0+128),f
 13025  091E                     l1825:	
 13026  091E  083C               	movf	___fttol@exp1^(0+128),w
 13027  091F  1D03               	btfss	3,2
 13028  0920  2915               	goto	l5626
 13029  0921                     l5628:	
 13030  0921  0837               	movf	___fttol@sign1^(0+128),w
 13031  0922  1903               	btfsc	3,2
 13032  0923  292F               	goto	l5632
 13033  0924  09B8               	comf	___fttol@lval^(0+128),f
 13034  0925  09B9               	comf	(___fttol@lval+1)^(0+128),f
 13035  0926  09BA               	comf	(___fttol@lval+2)^(0+128),f
 13036  0927  09BB               	comf	(___fttol@lval+3)^(0+128),f
 13037  0928  0AB8               	incf	___fttol@lval^(0+128),f
 13038  0929  1903               	skipnz
 13039  092A  0AB9               	incf	(___fttol@lval+1)^(0+128),f
 13040  092B  1903               	skipnz
 13041  092C  0ABA               	incf	(___fttol@lval+2)^(0+128),f
 13042  092D  1903               	skipnz
 13043  092E  0ABB               	incf	(___fttol@lval+3)^(0+128),f
 13044  092F                     l5632:	
 13045  092F  083B               	movf	(___fttol@lval+3)^(0+128),w
 13046  0930  00B2               	movwf	(?___fttol+3)^(0+128)
 13047  0931  083A               	movf	(___fttol@lval+2)^(0+128),w
 13048  0932  00B1               	movwf	(?___fttol+2)^(0+128)
 13049  0933  0839               	movf	(___fttol@lval+1)^(0+128),w
 13050  0934  00B0               	movwf	(?___fttol+1)^(0+128)
 13051  0935  0838               	movf	___fttol@lval^(0+128),w
 13052  0936  00AF               	movwf	?___fttol^(0+128)
 13053  0937  0008               	return
 13054  0938                     __end_of___fttol:	
 13055                           
 13056                           	psect	text33
 13057  0CD4                     __ptext33:	
 13058 ;; *************** function ___ftmul *****************
 13059 ;; Defined at:
 13060 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;  f1              3   31[BANK0 ] float 
 13063 ;;  f2              3   34[BANK0 ] float 
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
 13066 ;;  sign            1    5[BANK1 ] unsigned char 
 13067 ;;  cntr            1    4[BANK1 ] unsigned char 
 13068 ;;  exp             1    0[BANK1 ] unsigned char 
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  3   31[BANK0 ] float 
 13071 ;; Registers used:
 13072 ;;		wreg, status,2, status,0, pclath, cstack
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13078 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13079 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13080 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13081 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13082 ;;Total ram usage:       16 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    7
 13085 ;; This function calls:
 13086 ;;		___ftpack
 13087 ;; This function is called by:
 13088 ;;		_main_initialize
 13089 ;;		_setDrvPiezoOnTime
 13090 ;;		_setHeaterPreTime
 13091 ;;		_setHeaterPostTime
 13092 ;;		_drv_outputSine
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           
 13097                           ;psect for function ___ftmul
 13098  0CD4                     ___ftmul:	
 13099                           
 13100                           ;incstack = 0
 13101                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13102  0CD4  0020               	movlb	0	; select bank0
 13103  0CD5  083F               	movf	___ftmul@f1,w
 13104  0CD6  00C5               	movwf	??___ftmul
 13105  0CD7  0840               	movf	___ftmul@f1+1,w
 13106  0CD8  00C6               	movwf	??___ftmul+1
 13107  0CD9  0841               	movf	___ftmul@f1+2,w
 13108  0CDA  00C7               	movwf	??___ftmul+2
 13109  0CDB  1003               	clrc
 13110  0CDC  0D46               	rlf	??___ftmul+1,w
 13111  0CDD  0D47               	rlf	??___ftmul+2,w
 13112  0CDE  00C8               	movwf	??___ftmul+3
 13113  0CDF  0848               	movf	??___ftmul+3,w
 13114  0CE0  0021               	movlb	1	; select bank1
 13115  0CE1  00A0               	movwf	___ftmul@exp^(0+128)
 13116  0CE2  0820               	movf	___ftmul@exp^(0+128),w
 13117  0CE3  1D03               	btfss	3,2
 13118  0CE4  2CED               	goto	l7692
 13119  0CE5  3000               	movlw	0
 13120  0CE6  0020               	movlb	0	; select bank0
 13121  0CE7  00BF               	movwf	?___ftmul
 13122  0CE8  3000               	movlw	0
 13123  0CE9  00C0               	movwf	?___ftmul+1
 13124  0CEA  3000               	movlw	0
 13125  0CEB  00C1               	movwf	?___ftmul+2
 13126  0CEC  0008               	return
 13127  0CED                     l7692:	
 13128  0CED  0020               	movlb	0	; select bank0
 13129  0CEE  0842               	movf	___ftmul@f2,w
 13130  0CEF  00C5               	movwf	??___ftmul
 13131  0CF0  0843               	movf	___ftmul@f2+1,w
 13132  0CF1  00C6               	movwf	??___ftmul+1
 13133  0CF2  0844               	movf	___ftmul@f2+2,w
 13134  0CF3  00C7               	movwf	??___ftmul+2
 13135  0CF4  1003               	clrc
 13136  0CF5  0D46               	rlf	??___ftmul+1,w
 13137  0CF6  0D47               	rlf	??___ftmul+2,w
 13138  0CF7  00C8               	movwf	??___ftmul+3
 13139  0CF8  0848               	movf	??___ftmul+3,w
 13140  0CF9  0021               	movlb	1	; select bank1
 13141  0CFA  00A5               	movwf	___ftmul@sign^(0+128)
 13142  0CFB  0825               	movf	___ftmul@sign^(0+128),w
 13143  0CFC  1D03               	btfss	3,2
 13144  0CFD  2D06               	goto	l7698
 13145  0CFE  3000               	movlw	0
 13146  0CFF  0020               	movlb	0	; select bank0
 13147  0D00  00BF               	movwf	?___ftmul
 13148  0D01  3000               	movlw	0
 13149  0D02  00C0               	movwf	?___ftmul+1
 13150  0D03  3000               	movlw	0
 13151  0D04  00C1               	movwf	?___ftmul+2
 13152  0D05  0008               	return
 13153  0D06                     l7698:	
 13154  0D06  0021               	movlb	1	; select bank1
 13155  0D07  0825               	movf	___ftmul@sign^(0+128),w
 13156  0D08  3E7B               	addlw	123
 13157  0D09  0020               	movlb	0	; select bank0
 13158  0D0A  00C5               	movwf	??___ftmul
 13159  0D0B  0845               	movf	??___ftmul,w
 13160  0D0C  0021               	movlb	1	; select bank1
 13161  0D0D  07A0               	addwf	___ftmul@exp^(0+128),f
 13162  0D0E  0020               	movlb	0	; select bank0
 13163  0D0F  083F               	movf	___ftmul@f1,w
 13164  0D10  00C5               	movwf	??___ftmul
 13165  0D11  0840               	movf	___ftmul@f1+1,w
 13166  0D12  00C6               	movwf	??___ftmul+1
 13167  0D13  0841               	movf	___ftmul@f1+2,w
 13168  0D14  00C7               	movwf	??___ftmul+2
 13169  0D15  3010               	movlw	16
 13170  0D16                     u7725:	
 13171  0D16  36C7               	lsrf	??___ftmul+2,f
 13172  0D17  0CC6               	rrf	??___ftmul+1,f
 13173  0D18  0CC5               	rrf	??___ftmul,f
 13174  0D19  0B89               	decfsz	9,f
 13175  0D1A  2D16               	goto	u7725
 13176  0D1B  0845               	movf	??___ftmul,w
 13177  0D1C  00C8               	movwf	??___ftmul+3
 13178  0D1D  0848               	movf	??___ftmul+3,w
 13179  0D1E  0021               	movlb	1	; select bank1
 13180  0D1F  00A5               	movwf	___ftmul@sign^(0+128)
 13181  0D20  0020               	movlb	0	; select bank0
 13182  0D21  0842               	movf	___ftmul@f2,w
 13183  0D22  00C5               	movwf	??___ftmul
 13184  0D23  0843               	movf	___ftmul@f2+1,w
 13185  0D24  00C6               	movwf	??___ftmul+1
 13186  0D25  0844               	movf	___ftmul@f2+2,w
 13187  0D26  00C7               	movwf	??___ftmul+2
 13188  0D27  3010               	movlw	16
 13189  0D28                     u7735:	
 13190  0D28  36C7               	lsrf	??___ftmul+2,f
 13191  0D29  0CC6               	rrf	??___ftmul+1,f
 13192  0D2A  0CC5               	rrf	??___ftmul,f
 13193  0D2B  0B89               	decfsz	9,f
 13194  0D2C  2D28               	goto	u7735
 13195  0D2D  0845               	movf	??___ftmul,w
 13196  0D2E  00C8               	movwf	??___ftmul+3
 13197  0D2F  0848               	movf	??___ftmul+3,w
 13198  0D30  0021               	movlb	1	; select bank1
 13199  0D31  06A5               	xorwf	___ftmul@sign^(0+128),f
 13200  0D32  3080               	movlw	128
 13201  0D33  0020               	movlb	0	; select bank0
 13202  0D34  00C5               	movwf	??___ftmul
 13203  0D35  0845               	movf	??___ftmul,w
 13204  0D36  0021               	movlb	1	; select bank1
 13205  0D37  05A5               	andwf	___ftmul@sign^(0+128),f
 13206  0D38  0020               	movlb	0	; select bank0
 13207  0D39  17C0               	bsf	___ftmul@f1+1,7
 13208  0D3A  17C3               	bsf	___ftmul@f2+1,7
 13209  0D3B  30FF               	movlw	255
 13210  0D3C  05C2               	andwf	___ftmul@f2,f
 13211  0D3D  30FF               	movlw	255
 13212  0D3E  05C3               	andwf	___ftmul@f2+1,f
 13213  0D3F  3000               	movlw	0
 13214  0D40  05C4               	andwf	___ftmul@f2+2,f
 13215  0D41  3000               	movlw	0
 13216  0D42  0021               	movlb	1	; select bank1
 13217  0D43  00A1               	movwf	___ftmul@f3_as_product^(0+128)
 13218  0D44  3000               	movlw	0
 13219  0D45  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 13220  0D46  3000               	movlw	0
 13221  0D47  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 13222  0D48  3007               	movlw	7
 13223  0D49  0020               	movlb	0	; select bank0
 13224  0D4A  00C5               	movwf	??___ftmul
 13225  0D4B  0845               	movf	??___ftmul,w
 13226  0D4C  0021               	movlb	1	; select bank1
 13227  0D4D  00A4               	movwf	___ftmul@cntr^(0+128)
 13228  0D4E                     l7710:	
 13229  0D4E  0020               	movlb	0	; select bank0
 13230  0D4F  1C3F               	btfss	___ftmul@f1,0
 13231  0D50  2D5C               	goto	l7714
 13232  0D51  0842               	movf	___ftmul@f2,w
 13233  0D52  0021               	movlb	1	; select bank1
 13234  0D53  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13235  0D54  0020               	movlb	0	; select bank0
 13236  0D55  0843               	movf	___ftmul@f2+1,w
 13237  0D56  0021               	movlb	1	; select bank1
 13238  0D57  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13239  0D58  0020               	movlb	0	; select bank0
 13240  0D59  0844               	movf	___ftmul@f2+2,w
 13241  0D5A  0021               	movlb	1	; select bank1
 13242  0D5B  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13243  0D5C                     l7714:	
 13244  0D5C  3001               	movlw	1
 13245  0D5D                     u7755:	
 13246  0D5D  0020               	movlb	0	; select bank0
 13247  0D5E  36C1               	lsrf	___ftmul@f1+2,f
 13248  0D5F  0CC0               	rrf	___ftmul@f1+1,f
 13249  0D60  0CBF               	rrf	___ftmul@f1,f
 13250  0D61  0B89               	decfsz	9,f
 13251  0D62  2D5D               	goto	u7755
 13252  0D63  3001               	movlw	1
 13253  0D64                     u7765:	
 13254  0D64  35C2               	lslf	___ftmul@f2,f
 13255  0D65  0DC3               	rlf	___ftmul@f2+1,f
 13256  0D66  0DC4               	rlf	___ftmul@f2+2,f
 13257  0D67  0B89               	decfsz	9,f
 13258  0D68  2D64               	goto	u7765
 13259  0D69  3001               	movlw	1
 13260  0D6A  0021               	movlb	1	; select bank1
 13261  0D6B  02A4               	subwf	___ftmul@cntr^(0+128),f
 13262  0D6C  1D03               	btfss	3,2
 13263  0D6D  2D4E               	goto	l7710
 13264  0D6E  3009               	movlw	9
 13265  0D6F  0020               	movlb	0	; select bank0
 13266  0D70  00C5               	movwf	??___ftmul
 13267  0D71  0845               	movf	??___ftmul,w
 13268  0D72  0021               	movlb	1	; select bank1
 13269  0D73  00A4               	movwf	___ftmul@cntr^(0+128)
 13270  0D74                     l7722:	
 13271  0D74  0020               	movlb	0	; select bank0
 13272  0D75  1C3F               	btfss	___ftmul@f1,0
 13273  0D76  2D82               	goto	l7726
 13274  0D77  0842               	movf	___ftmul@f2,w
 13275  0D78  0021               	movlb	1	; select bank1
 13276  0D79  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13277  0D7A  0020               	movlb	0	; select bank0
 13278  0D7B  0843               	movf	___ftmul@f2+1,w
 13279  0D7C  0021               	movlb	1	; select bank1
 13280  0D7D  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13281  0D7E  0020               	movlb	0	; select bank0
 13282  0D7F  0844               	movf	___ftmul@f2+2,w
 13283  0D80  0021               	movlb	1	; select bank1
 13284  0D81  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13285  0D82                     l7726:	
 13286  0D82  3001               	movlw	1
 13287  0D83                     u7795:	
 13288  0D83  0020               	movlb	0	; select bank0
 13289  0D84  36C1               	lsrf	___ftmul@f1+2,f
 13290  0D85  0CC0               	rrf	___ftmul@f1+1,f
 13291  0D86  0CBF               	rrf	___ftmul@f1,f
 13292  0D87  0B89               	decfsz	9,f
 13293  0D88  2D83               	goto	u7795
 13294  0D89  3001               	movlw	1
 13295  0D8A                     u7805:	
 13296  0D8A  0021               	movlb	1	; select bank1
 13297  0D8B  36A3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 13298  0D8C  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 13299  0D8D  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
 13300  0D8E  0B89               	decfsz	9,f
 13301  0D8F  2D8A               	goto	u7805
 13302  0D90  3001               	movlw	1
 13303  0D91  02A4               	subwf	___ftmul@cntr^(0+128),f
 13304  0D92  1D03               	btfss	3,2
 13305  0D93  2D74               	goto	l7722
 13306  0D94  0821               	movf	___ftmul@f3_as_product^(0+128),w
 13307  0D95  0020               	movlb	0	; select bank0
 13308  0D96  00B1               	movwf	___ftpack@arg
 13309  0D97  0021               	movlb	1	; select bank1
 13310  0D98  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 13311  0D99  0020               	movlb	0	; select bank0
 13312  0D9A  00B2               	movwf	___ftpack@arg+1
 13313  0D9B  0021               	movlb	1	; select bank1
 13314  0D9C  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 13315  0D9D  0020               	movlb	0	; select bank0
 13316  0D9E  00B3               	movwf	___ftpack@arg+2
 13317  0D9F  0021               	movlb	1	; select bank1
 13318  0DA0  0820               	movf	___ftmul@exp^(0+128),w
 13319  0DA1  0020               	movlb	0	; select bank0
 13320  0DA2  00C5               	movwf	??___ftmul
 13321  0DA3  0845               	movf	??___ftmul,w
 13322  0DA4  00B4               	movwf	___ftpack@exp
 13323  0DA5  0021               	movlb	1	; select bank1
 13324  0DA6  0825               	movf	___ftmul@sign^(0+128),w
 13325  0DA7  0020               	movlb	0	; select bank0
 13326  0DA8  00C6               	movwf	??___ftmul+1
 13327  0DA9  0846               	movf	??___ftmul+1,w
 13328  0DAA  00B5               	movwf	___ftpack@sign
 13329  0DAB  3194  247B         	fcall	___ftpack
 13330  0DAD  0020               	movlb	0	; select bank0
 13331  0DAE  0831               	movf	?___ftpack,w
 13332  0DAF  00BF               	movwf	?___ftmul
 13333  0DB0  0832               	movf	?___ftpack+1,w
 13334  0DB1  00C0               	movwf	?___ftmul+1
 13335  0DB2  0833               	movf	?___ftpack+2,w
 13336  0DB3  00C1               	movwf	?___ftmul+2
 13337  0DB4  0008               	return
 13338  0DB5                     __end_of___ftmul:	
 13339                           
 13340                           	psect	text34
 13341  0DB5                     __ptext34:	
 13342 ;; *************** function ___ftadd *****************
 13343 ;; Defined at:
 13344 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  f1              3    6[BANK1 ] float 
 13347 ;;  f2              3    9[BANK1 ] float 
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;  exp1            1   14[BANK1 ] unsigned char 
 13350 ;;  exp2            1   13[BANK1 ] unsigned char 
 13351 ;;  sign            1   12[BANK1 ] unsigned char 
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  3    6[BANK1 ] float 
 13354 ;; Registers used:
 13355 ;;		wreg, status,2, status,0, pclath, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13361 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13362 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13363 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13364 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13365 ;;Total ram usage:       13 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:    7
 13368 ;; This function calls:
 13369 ;;		___ftpack
 13370 ;; This function is called by:
 13371 ;;		_main_initialize
 13372 ;;		_setDrvPiezoOnTime
 13373 ;;		_setHeaterPreTime
 13374 ;;		_setHeaterPostTime
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           
 13379                           ;psect for function ___ftadd
 13380  0DB5                     ___ftadd:	
 13381                           
 13382                           ;incstack = 0
 13383                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13384  0DB5  0021               	movlb	1	; select bank1
 13385  0DB6  0826               	movf	___ftadd@f1^(0+128),w
 13386  0DB7  0020               	movlb	0	; select bank0
 13387  0DB8  00C9               	movwf	??___ftadd
 13388  0DB9  0021               	movlb	1	; select bank1
 13389  0DBA  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13390  0DBB  0020               	movlb	0	; select bank0
 13391  0DBC  00CA               	movwf	??___ftadd+1
 13392  0DBD  0021               	movlb	1	; select bank1
 13393  0DBE  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13394  0DBF  0020               	movlb	0	; select bank0
 13395  0DC0  00CB               	movwf	??___ftadd+2
 13396  0DC1  1003               	clrc
 13397  0DC2  0D4A               	rlf	??___ftadd+1,w
 13398  0DC3  0D4B               	rlf	??___ftadd+2,w
 13399  0DC4  00CC               	movwf	??___ftadd+3
 13400  0DC5  084C               	movf	??___ftadd+3,w
 13401  0DC6  0021               	movlb	1	; select bank1
 13402  0DC7  00AE               	movwf	___ftadd@exp1^(0+128)
 13403  0DC8  0829               	movf	___ftadd@f2^(0+128),w
 13404  0DC9  0020               	movlb	0	; select bank0
 13405  0DCA  00C9               	movwf	??___ftadd
 13406  0DCB  0021               	movlb	1	; select bank1
 13407  0DCC  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13408  0DCD  0020               	movlb	0	; select bank0
 13409  0DCE  00CA               	movwf	??___ftadd+1
 13410  0DCF  0021               	movlb	1	; select bank1
 13411  0DD0  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13412  0DD1  0020               	movlb	0	; select bank0
 13413  0DD2  00CB               	movwf	??___ftadd+2
 13414  0DD3  1003               	clrc
 13415  0DD4  0D4A               	rlf	??___ftadd+1,w
 13416  0DD5  0D4B               	rlf	??___ftadd+2,w
 13417  0DD6  00CC               	movwf	??___ftadd+3
 13418  0DD7  084C               	movf	??___ftadd+3,w
 13419  0DD8  0021               	movlb	1	; select bank1
 13420  0DD9  00AD               	movwf	___ftadd@exp2^(0+128)
 13421  0DDA  082E               	movf	___ftadd@exp1^(0+128),w
 13422  0DDB  1903               	btfsc	3,2
 13423  0DDC  2DEA               	goto	l7622
 13424  0DDD  082D               	movf	___ftadd@exp2^(0+128),w
 13425  0DDE  022E               	subwf	___ftadd@exp1^(0+128),w
 13426  0DDF  1803               	skipnc
 13427  0DE0  2DF2               	goto	l7626
 13428  0DE1  032E               	decf	___ftadd@exp1^(0+128),w
 13429  0DE2  3AFF               	xorlw	255
 13430  0DE3  072D               	addwf	___ftadd@exp2^(0+128),w
 13431  0DE4  0020               	movlb	0	; select bank0
 13432  0DE5  00C9               	movwf	??___ftadd
 13433  0DE6  3019               	movlw	25
 13434  0DE7  0249               	subwf	??___ftadd,w
 13435  0DE8  1C03               	skipc
 13436  0DE9  2DF2               	goto	l7626
 13437  0DEA                     l7622:	
 13438  0DEA  0021               	movlb	1	; select bank1
 13439  0DEB  0829               	movf	___ftadd@f2^(0+128),w
 13440  0DEC  00A6               	movwf	?___ftadd^(0+128)
 13441  0DED  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13442  0DEE  00A7               	movwf	(?___ftadd+1)^(0+128)
 13443  0DEF  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13444  0DF0  00A8               	movwf	(?___ftadd+2)^(0+128)
 13445  0DF1  0008               	return
 13446  0DF2                     l7626:	
 13447  0DF2  0021               	movlb	1	; select bank1
 13448  0DF3  082D               	movf	___ftadd@exp2^(0+128),w
 13449  0DF4  1903               	btfsc	3,2
 13450  0DF5  0008               	return
 13451  0DF6  082E               	movf	___ftadd@exp1^(0+128),w
 13452  0DF7  022D               	subwf	___ftadd@exp2^(0+128),w
 13453  0DF8  1803               	skipnc
 13454  0DF9  2E03               	goto	l7632
 13455  0DFA  032D               	decf	___ftadd@exp2^(0+128),w
 13456  0DFB  3AFF               	xorlw	255
 13457  0DFC  072E               	addwf	___ftadd@exp1^(0+128),w
 13458  0DFD  0020               	movlb	0	; select bank0
 13459  0DFE  00C9               	movwf	??___ftadd
 13460  0DFF  3019               	movlw	25
 13461  0E00  0249               	subwf	??___ftadd,w
 13462  0E01  1803               	btfsc	3,0
 13463  0E02  0008               	return
 13464  0E03                     l7632:	
 13465  0E03  3006               	movlw	6
 13466  0E04  0020               	movlb	0	; select bank0
 13467  0E05  00C9               	movwf	??___ftadd
 13468  0E06  0849               	movf	??___ftadd,w
 13469  0E07  0021               	movlb	1	; select bank1
 13470  0E08  00AC               	movwf	___ftadd@sign^(0+128)
 13471  0E09  1BA8               	btfsc	(___ftadd@f1+2)^(0+128),7
 13472  0E0A  17AC               	bsf	___ftadd@sign^(0+128),7
 13473  0E0B  1BAB               	btfsc	(___ftadd@f2+2)^(0+128),7
 13474  0E0C  172C               	bsf	___ftadd@sign^(0+128),6
 13475  0E0D  17A7               	bsf	(___ftadd@f1^(0+128)+1),7
 13476  0E0E  30FF               	movlw	255
 13477  0E0F  05A6               	andwf	___ftadd@f1^(0+128),f
 13478  0E10  30FF               	movlw	255
 13479  0E11  05A7               	andwf	(___ftadd@f1+1)^(0+128),f
 13480  0E12  3000               	movlw	0
 13481  0E13  05A8               	andwf	(___ftadd@f1+2)^(0+128),f
 13482  0E14  17AA               	bsf	(___ftadd@f2^(0+128)+1),7
 13483  0E15  30FF               	movlw	255
 13484  0E16  05A9               	andwf	___ftadd@f2^(0+128),f
 13485  0E17  30FF               	movlw	255
 13486  0E18  05AA               	andwf	(___ftadd@f2+1)^(0+128),f
 13487  0E19  3000               	movlw	0
 13488  0E1A  05AB               	andwf	(___ftadd@f2+2)^(0+128),f
 13489  0E1B  082D               	movf	___ftadd@exp2^(0+128),w
 13490  0E1C  022E               	subwf	___ftadd@exp1^(0+128),w
 13491  0E1D  1803               	skipnc
 13492  0E1E  2E43               	goto	l7654
 13493  0E1F                     l7644:	
 13494  0E1F  3001               	movlw	1
 13495  0E20                     u7565:	
 13496  0E20  35A9               	lslf	___ftadd@f2^(0+128),f
 13497  0E21  0DAA               	rlf	(___ftadd@f2+1)^(0+128),f
 13498  0E22  0DAB               	rlf	(___ftadd@f2+2)^(0+128),f
 13499  0E23  0B89               	decfsz	9,f
 13500  0E24  2E20               	goto	u7565
 13501  0E25  3001               	movlw	1
 13502  0E26  02AD               	subwf	___ftadd@exp2^(0+128),f
 13503  0E27  082D               	movf	___ftadd@exp2^(0+128),w
 13504  0E28  062E               	xorwf	___ftadd@exp1^(0+128),w
 13505  0E29  1903               	skipnz
 13506  0E2A  2E3E               	goto	l7652
 13507  0E2B  3001               	movlw	1
 13508  0E2C  02AC               	subwf	___ftadd@sign^(0+128),f
 13509  0E2D  082C               	movf	___ftadd@sign^(0+128),w
 13510  0E2E  3907               	andlw	7
 13511  0E2F  1903               	btfsc	3,2
 13512  0E30  2E3E               	goto	l7652
 13513  0E31  2E1F               	goto	l7644
 13514  0E32                     l7650:	
 13515  0E32  3001               	movlw	1
 13516  0E33                     u7595:	
 13517  0E33  36A8               	lsrf	(___ftadd@f1+2)^(0+128),f
 13518  0E34  0CA7               	rrf	(___ftadd@f1+1)^(0+128),f
 13519  0E35  0CA6               	rrf	___ftadd@f1^(0+128),f
 13520  0E36  0B89               	decfsz	9,f
 13521  0E37  2E33               	goto	u7595
 13522  0E38  3001               	movlw	1
 13523  0E39  0020               	movlb	0	; select bank0
 13524  0E3A  00C9               	movwf	??___ftadd
 13525  0E3B  0849               	movf	??___ftadd,w
 13526  0E3C  0021               	movlb	1	; select bank1
 13527  0E3D  07AE               	addwf	___ftadd@exp1^(0+128),f
 13528  0E3E                     l7652:	
 13529  0E3E  082E               	movf	___ftadd@exp1^(0+128),w
 13530  0E3F  062D               	xorwf	___ftadd@exp2^(0+128),w
 13531  0E40  1903               	btfsc	3,2
 13532  0E41  2E6A               	goto	l1765
 13533  0E42  2E32               	goto	l7650
 13534  0E43                     l7654:	
 13535  0E43  082E               	movf	___ftadd@exp1^(0+128),w
 13536  0E44  022D               	subwf	___ftadd@exp2^(0+128),w
 13537  0E45  1803               	skipnc
 13538  0E46  2E6A               	goto	l1765
 13539  0E47                     l7656:	
 13540  0E47  3001               	movlw	1
 13541  0E48                     u7625:	
 13542  0E48  35A6               	lslf	___ftadd@f1^(0+128),f
 13543  0E49  0DA7               	rlf	(___ftadd@f1+1)^(0+128),f
 13544  0E4A  0DA8               	rlf	(___ftadd@f1+2)^(0+128),f
 13545  0E4B  0B89               	decfsz	9,f
 13546  0E4C  2E48               	goto	u7625
 13547  0E4D  3001               	movlw	1
 13548  0E4E  02AE               	subwf	___ftadd@exp1^(0+128),f
 13549  0E4F  082D               	movf	___ftadd@exp2^(0+128),w
 13550  0E50  062E               	xorwf	___ftadd@exp1^(0+128),w
 13551  0E51  1903               	skipnz
 13552  0E52  2E66               	goto	l7664
 13553  0E53  3001               	movlw	1
 13554  0E54  02AC               	subwf	___ftadd@sign^(0+128),f
 13555  0E55  082C               	movf	___ftadd@sign^(0+128),w
 13556  0E56  3907               	andlw	7
 13557  0E57  1903               	btfsc	3,2
 13558  0E58  2E66               	goto	l7664
 13559  0E59  2E47               	goto	l7656
 13560  0E5A                     l7662:	
 13561  0E5A  3001               	movlw	1
 13562  0E5B                     u7655:	
 13563  0E5B  36AB               	lsrf	(___ftadd@f2+2)^(0+128),f
 13564  0E5C  0CAA               	rrf	(___ftadd@f2+1)^(0+128),f
 13565  0E5D  0CA9               	rrf	___ftadd@f2^(0+128),f
 13566  0E5E  0B89               	decfsz	9,f
 13567  0E5F  2E5B               	goto	u7655
 13568  0E60  3001               	movlw	1
 13569  0E61  0020               	movlb	0	; select bank0
 13570  0E62  00C9               	movwf	??___ftadd
 13571  0E63  0849               	movf	??___ftadd,w
 13572  0E64  0021               	movlb	1	; select bank1
 13573  0E65  07AD               	addwf	___ftadd@exp2^(0+128),f
 13574  0E66                     l7664:	
 13575  0E66  082E               	movf	___ftadd@exp1^(0+128),w
 13576  0E67  062D               	xorwf	___ftadd@exp2^(0+128),w
 13577  0E68  1D03               	skipz
 13578  0E69  2E5A               	goto	l7662
 13579  0E6A                     l1765:	
 13580  0E6A  1FAC               	btfss	___ftadd@sign^(0+128),7
 13581  0E6B  2E7C               	goto	l7668
 13582  0E6C  30FF               	movlw	255
 13583  0E6D  06A6               	xorwf	___ftadd@f1^(0+128),f
 13584  0E6E  30FF               	movlw	255
 13585  0E6F  06A7               	xorwf	(___ftadd@f1+1)^(0+128),f
 13586  0E70  30FF               	movlw	255
 13587  0E71  06A8               	xorwf	(___ftadd@f1+2)^(0+128),f
 13588  0E72  3001               	movlw	1
 13589  0E73  07A6               	addwf	___ftadd@f1^(0+128),f
 13590  0E74  3000               	movlw	0
 13591  0E75  1803               	skipnc
 13592  0E76  3001               	movlw	1
 13593  0E77  07A7               	addwf	(___ftadd@f1+1)^(0+128),f
 13594  0E78  3000               	movlw	0
 13595  0E79  1803               	skipnc
 13596  0E7A  3001               	movlw	1
 13597  0E7B  07A8               	addwf	(___ftadd@f1+2)^(0+128),f
 13598  0E7C                     l7668:	
 13599  0E7C  1F2C               	btfss	___ftadd@sign^(0+128),6
 13600  0E7D  2E8E               	goto	l7672
 13601  0E7E  30FF               	movlw	255
 13602  0E7F  06A9               	xorwf	___ftadd@f2^(0+128),f
 13603  0E80  30FF               	movlw	255
 13604  0E81  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13605  0E82  30FF               	movlw	255
 13606  0E83  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13607  0E84  3001               	movlw	1
 13608  0E85  07A9               	addwf	___ftadd@f2^(0+128),f
 13609  0E86  3000               	movlw	0
 13610  0E87  1803               	skipnc
 13611  0E88  3001               	movlw	1
 13612  0E89  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13613  0E8A  3000               	movlw	0
 13614  0E8B  1803               	skipnc
 13615  0E8C  3001               	movlw	1
 13616  0E8D  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13617  0E8E                     l7672:	
 13618  0E8E  01AC               	clrf	___ftadd@sign^(0+128)
 13619  0E8F  0826               	movf	___ftadd@f1^(0+128),w
 13620  0E90  07A9               	addwf	___ftadd@f2^(0+128),f
 13621  0E91  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13622  0E92  3DAA               	addwfc	(___ftadd@f2+1)^(0+128),f
 13623  0E93  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13624  0E94  3DAB               	addwfc	(___ftadd@f2+2)^(0+128),f
 13625  0E95  1FAB               	btfss	(___ftadd@f2+2)^(0+128),7
 13626  0E96  2EA9               	goto	l7682
 13627  0E97  30FF               	movlw	255
 13628  0E98  06A9               	xorwf	___ftadd@f2^(0+128),f
 13629  0E99  30FF               	movlw	255
 13630  0E9A  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13631  0E9B  30FF               	movlw	255
 13632  0E9C  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13633  0E9D  3001               	movlw	1
 13634  0E9E  07A9               	addwf	___ftadd@f2^(0+128),f
 13635  0E9F  3000               	movlw	0
 13636  0EA0  1803               	skipnc
 13637  0EA1  3001               	movlw	1
 13638  0EA2  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13639  0EA3  3000               	movlw	0
 13640  0EA4  1803               	skipnc
 13641  0EA5  3001               	movlw	1
 13642  0EA6  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13643  0EA7  01AC               	clrf	___ftadd@sign^(0+128)
 13644  0EA8  0AAC               	incf	___ftadd@sign^(0+128),f
 13645  0EA9                     l7682:	
 13646  0EA9  0829               	movf	___ftadd@f2^(0+128),w
 13647  0EAA  0020               	movlb	0	; select bank0
 13648  0EAB  00B1               	movwf	___ftpack@arg
 13649  0EAC  0021               	movlb	1	; select bank1
 13650  0EAD  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13651  0EAE  0020               	movlb	0	; select bank0
 13652  0EAF  00B2               	movwf	___ftpack@arg+1
 13653  0EB0  0021               	movlb	1	; select bank1
 13654  0EB1  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13655  0EB2  0020               	movlb	0	; select bank0
 13656  0EB3  00B3               	movwf	___ftpack@arg+2
 13657  0EB4  0021               	movlb	1	; select bank1
 13658  0EB5  082E               	movf	___ftadd@exp1^(0+128),w
 13659  0EB6  0020               	movlb	0	; select bank0
 13660  0EB7  00C9               	movwf	??___ftadd
 13661  0EB8  0849               	movf	??___ftadd,w
 13662  0EB9  00B4               	movwf	___ftpack@exp
 13663  0EBA  0021               	movlb	1	; select bank1
 13664  0EBB  082C               	movf	___ftadd@sign^(0+128),w
 13665  0EBC  0020               	movlb	0	; select bank0
 13666  0EBD  00CA               	movwf	??___ftadd+1
 13667  0EBE  084A               	movf	??___ftadd+1,w
 13668  0EBF  00B5               	movwf	___ftpack@sign
 13669  0EC0  3194  247B         	fcall	___ftpack
 13670  0EC2  0020               	movlb	0	; select bank0
 13671  0EC3  0831               	movf	?___ftpack,w
 13672  0EC4  0021               	movlb	1	; select bank1
 13673  0EC5  00A6               	movwf	?___ftadd^(0+128)
 13674  0EC6  0020               	movlb	0	; select bank0
 13675  0EC7  0832               	movf	?___ftpack+1,w
 13676  0EC8  0021               	movlb	1	; select bank1
 13677  0EC9  00A7               	movwf	(?___ftadd+1)^(0+128)
 13678  0ECA  0020               	movlb	0	; select bank0
 13679  0ECB  0833               	movf	?___ftpack+2,w
 13680  0ECC  0021               	movlb	1	; select bank1
 13681  0ECD  00A8               	movwf	(?___ftadd+2)^(0+128)
 13682  0ECE  0008               	return
 13683  0ECF                     __end_of___ftadd:	
 13684                           
 13685                           	psect	text35
 13686  26B7                     __ptext35:	
 13687 ;; *************** function ___awtoft *****************
 13688 ;; Defined at:
 13689 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 13690 ;; Parameters:    Size  Location     Type
 13691 ;;  c               2   25[BANK0 ] int 
 13692 ;; Auto vars:     Size  Location     Type
 13693 ;;  sign            1   30[BANK0 ] unsigned char 
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  3   25[BANK0 ] float 
 13696 ;; Registers used:
 13697 ;;		wreg, status,2, status,0, pclath, cstack
 13698 ;; Tracked objects:
 13699 ;;		On entry : 0/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13703 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13706 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13707 ;;Total ram usage:        6 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; Hardware stack levels required when called:    7
 13710 ;; This function calls:
 13711 ;;		___ftpack
 13712 ;; This function is called by:
 13713 ;;		_main_initialize
 13714 ;;		_setDrvPiezoOnTime
 13715 ;;		_setHeaterPreTime
 13716 ;;		_setHeaterPostTime
 13717 ;;		_drv_outputSine
 13718 ;; This function uses a non-reentrant model
 13719 ;;
 13720                           
 13721                           
 13722                           ;psect for function ___awtoft
 13723  26B7                     ___awtoft:	
 13724                           
 13725                           ;incstack = 0
 13726                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13727  26B7  0020               	movlb	0	; select bank0
 13728  26B8  01BE               	clrf	___awtoft@sign
 13729  26B9  1FBA               	btfss	___awtoft@c+1,7
 13730  26BA  2EC2               	goto	l7612
 13731  26BB  09B9               	comf	___awtoft@c,f
 13732  26BC  09BA               	comf	___awtoft@c+1,f
 13733  26BD  0AB9               	incf	___awtoft@c,f
 13734  26BE  1903               	skipnz
 13735  26BF  0ABA               	incf	___awtoft@c+1,f
 13736  26C0  01BE               	clrf	___awtoft@sign
 13737  26C1  0ABE               	incf	___awtoft@sign,f
 13738  26C2                     l7612:	
 13739  26C2  0839               	movf	___awtoft@c,w
 13740  26C3  00B1               	movwf	___ftpack@arg
 13741  26C4  083A               	movf	___awtoft@c+1,w
 13742  26C5  00B2               	movwf	___ftpack@arg+1
 13743  26C6  01B3               	clrf	___ftpack@arg+2
 13744  26C7  308E               	movlw	142
 13745  26C8  00BC               	movwf	??___awtoft
 13746  26C9  083C               	movf	??___awtoft,w
 13747  26CA  00B4               	movwf	___ftpack@exp
 13748  26CB  083E               	movf	___awtoft@sign,w
 13749  26CC  00BD               	movwf	??___awtoft+1
 13750  26CD  083D               	movf	??___awtoft+1,w
 13751  26CE  00B5               	movwf	___ftpack@sign
 13752  26CF  3194  247B         	fcall	___ftpack
 13753  26D1  0020               	movlb	0	; select bank0
 13754  26D2  0831               	movf	?___ftpack,w
 13755  26D3  00B9               	movwf	?___awtoft
 13756  26D4  0832               	movf	?___ftpack+1,w
 13757  26D5  00BA               	movwf	?___awtoft+1
 13758  26D6  0833               	movf	?___ftpack+2,w
 13759  26D7  00BB               	movwf	?___awtoft+2
 13760  26D8  0008               	return
 13761  26D9                     __end_of___awtoft:	
 13762                           
 13763                           	psect	text36
 13764  147B                     __ptext36:	
 13765 ;; *************** function ___ftpack *****************
 13766 ;; Defined at:
 13767 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;  arg             3   17[BANK0 ] unsigned um
 13770 ;;  exp             1   20[BANK0 ] unsigned char 
 13771 ;;  sign            1   21[BANK0 ] unsigned char 
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;		None
 13774 ;; Return value:  Size  Location     Type
 13775 ;;                  3   17[BANK0 ] float 
 13776 ;; Registers used:
 13777 ;;		wreg, status,2, status,0
 13778 ;; Tracked objects:
 13779 ;;		On entry : 0/0
 13780 ;;		On exit  : 0/0
 13781 ;;		Unchanged: 0/0
 13782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13783 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13785 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13786 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13787 ;;Total ram usage:        8 bytes
 13788 ;; Hardware stack levels used:    1
 13789 ;; Hardware stack levels required when called:    6
 13790 ;; This function calls:
 13791 ;;		Nothing
 13792 ;; This function is called by:
 13793 ;;		___awtoft
 13794 ;;		___ftadd
 13795 ;;		___ftmul
 13796 ;; This function uses a non-reentrant model
 13797 ;;
 13798                           
 13799                           
 13800                           ;psect for function ___ftpack
 13801  147B                     ___ftpack:	
 13802                           
 13803                           ;incstack = 0
 13804                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 13805  147B  0020               	movlb	0	; select bank0
 13806  147C  0834               	movf	___ftpack@exp,w
 13807  147D  1903               	btfsc	3,2
 13808  147E  2C84               	goto	l7470
 13809  147F  0833               	movf	___ftpack@arg+2,w
 13810  1480  0432               	iorwf	___ftpack@arg+1,w
 13811  1481  0431               	iorwf	___ftpack@arg,w
 13812  1482  1D03               	skipz
 13813  1483  2C95               	goto	l7476
 13814  1484                     l7470:	
 13815  1484  3000               	movlw	0
 13816  1485  00B1               	movwf	?___ftpack
 13817  1486  3000               	movlw	0
 13818  1487  00B2               	movwf	?___ftpack+1
 13819  1488  3000               	movlw	0
 13820  1489  00B3               	movwf	?___ftpack+2
 13821  148A  0008               	return
 13822  148B                     l7474:	
 13823  148B  3001               	movlw	1
 13824  148C  00B6               	movwf	??___ftpack
 13825  148D  0836               	movf	??___ftpack,w
 13826  148E  07B4               	addwf	___ftpack@exp,f
 13827  148F  3001               	movlw	1
 13828  1490                     u7215:	
 13829  1490  36B3               	lsrf	___ftpack@arg+2,f
 13830  1491  0CB2               	rrf	___ftpack@arg+1,f
 13831  1492  0CB1               	rrf	___ftpack@arg,f
 13832  1493  0B89               	decfsz	9,f
 13833  1494  2C90               	goto	u7215
 13834  1495                     l7476:	
 13835  1495  30FE               	movlw	254
 13836  1496  0533               	andwf	___ftpack@arg+2,w
 13837  1497  1903               	btfsc	3,2
 13838  1498  2CAE               	goto	l1734
 13839  1499  2C8B               	goto	l7474
 13840  149A                     l7478:	
 13841  149A  3001               	movlw	1
 13842  149B  00B6               	movwf	??___ftpack
 13843  149C  0836               	movf	??___ftpack,w
 13844  149D  07B4               	addwf	___ftpack@exp,f
 13845  149E  3001               	movlw	1
 13846  149F  07B1               	addwf	___ftpack@arg,f
 13847  14A0  3000               	movlw	0
 13848  14A1  1803               	skipnc
 13849  14A2  3001               	movlw	1
 13850  14A3  07B2               	addwf	___ftpack@arg+1,f
 13851  14A4  3000               	movlw	0
 13852  14A5  1803               	skipnc
 13853  14A6  3001               	movlw	1
 13854  14A7  07B3               	addwf	___ftpack@arg+2,f
 13855  14A8  3001               	movlw	1
 13856  14A9                     u7235:	
 13857  14A9  36B3               	lsrf	___ftpack@arg+2,f
 13858  14AA  0CB2               	rrf	___ftpack@arg+1,f
 13859  14AB  0CB1               	rrf	___ftpack@arg,f
 13860  14AC  0B89               	decfsz	9,f
 13861  14AD  2CA9               	goto	u7235
 13862  14AE                     l1734:	
 13863  14AE  30FF               	movlw	255
 13864  14AF  0533               	andwf	___ftpack@arg+2,w
 13865  14B0  1903               	btfsc	3,2
 13866  14B1  2CBB               	goto	l7486
 13867  14B2  2C9A               	goto	l7478
 13868  14B3                     l7484:	
 13869  14B3  3001               	movlw	1
 13870  14B4  02B4               	subwf	___ftpack@exp,f
 13871  14B5  3001               	movlw	1
 13872  14B6                     u7255:	
 13873  14B6  35B1               	lslf	___ftpack@arg,f
 13874  14B7  0DB2               	rlf	___ftpack@arg+1,f
 13875  14B8  0DB3               	rlf	___ftpack@arg+2,f
 13876  14B9  0B89               	decfsz	9,f
 13877  14BA  2CB6               	goto	u7255
 13878  14BB                     l7486:	
 13879  14BB  1BB2               	btfsc	___ftpack@arg+1,7
 13880  14BC  2CC1               	goto	l1741
 13881  14BD  3002               	movlw	2
 13882  14BE  0234               	subwf	___ftpack@exp,w
 13883  14BF  1803               	skipnc
 13884  14C0  2CB3               	goto	l7484
 13885  14C1                     l1741:	
 13886  14C1  1834               	btfsc	___ftpack@exp,0
 13887  14C2  2CC9               	goto	l1742
 13888  14C3  30FF               	movlw	255
 13889  14C4  05B1               	andwf	___ftpack@arg,f
 13890  14C5  307F               	movlw	127
 13891  14C6  05B2               	andwf	___ftpack@arg+1,f
 13892  14C7  30FF               	movlw	255
 13893  14C8  05B3               	andwf	___ftpack@arg+2,f
 13894  14C9                     l1742:	
 13895  14C9  1003               	clrc
 13896  14CA  0CB4               	rrf	___ftpack@exp,f
 13897  14CB  0834               	movf	___ftpack@exp,w
 13898  14CC  00B6               	movwf	??___ftpack
 13899  14CD  01B7               	clrf	??___ftpack+1
 13900  14CE  01B8               	clrf	??___ftpack+2
 13901  14CF  3010               	movlw	16
 13902  14D0                     u7295:	
 13903  14D0  35B6               	lslf	??___ftpack,f
 13904  14D1  0DB7               	rlf	??___ftpack+1,f
 13905  14D2  0DB8               	rlf	??___ftpack+2,f
 13906  14D3  0B89               	decfsz	9,f
 13907  14D4  2CD0               	goto	u7295
 13908  14D5  0836               	movf	??___ftpack,w
 13909  14D6  04B1               	iorwf	___ftpack@arg,f
 13910  14D7  0837               	movf	??___ftpack+1,w
 13911  14D8  04B2               	iorwf	___ftpack@arg+1,f
 13912  14D9  0838               	movf	??___ftpack+2,w
 13913  14DA  04B3               	iorwf	___ftpack@arg+2,f
 13914  14DB  0835               	movf	___ftpack@sign,w
 13915  14DC  1903               	btfsc	3,2
 13916  14DD  0008               	return
 13917  14DE  17B3               	bsf	___ftpack@arg+2,7
 13918  14DF  0008               	return
 13919  14E0                     __end_of___ftpack:	
 13920                           
 13921                           	psect	text37
 13922  22EA                     __ptext37:	
 13923 ;; *************** function _TMR0_Load8bitPeriod *****************
 13924 ;; Defined at:
 13925 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;  periodVal       1    wreg     unsigned char 
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;  periodVal       1   17[BANK0 ] unsigned char 
 13930 ;; Return value:  Size  Location     Type
 13931 ;;                  1    wreg      void 
 13932 ;; Registers used:
 13933 ;;		wreg
 13934 ;; Tracked objects:
 13935 ;;		On entry : 0/0
 13936 ;;		On exit  : 0/0
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13943 ;;Total ram usage:        1 bytes
 13944 ;; Hardware stack levels used:    1
 13945 ;; Hardware stack levels required when called:    6
 13946 ;; This function calls:
 13947 ;;		Nothing
 13948 ;; This function is called by:
 13949 ;;		_main_initialize
 13950 ;;		_setDrvPiezoOnTime
 13951 ;;		_setHeaterPreTime
 13952 ;; This function uses a non-reentrant model
 13953 ;;
 13954                           
 13955                           
 13956                           ;psect for function _TMR0_Load8bitPeriod
 13957  22EA                     _TMR0_Load8bitPeriod:	
 13958                           
 13959                           ;incstack = 0
 13960                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 13961                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 13962  22EA  0020               	movlb	0	; select bank0
 13963  22EB  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 13964                           
 13965                           ;tmr0.c: 116: TMR0H = periodVal;
 13966  22EC  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 13967  22ED  0096               	movwf	22	;volatile
 13968  22EE  0008               	return
 13969  22EF                     __end_of_TMR0_Load8bitPeriod:	
 13970                           
 13971                           	psect	text38
 13972  2496                     __ptext38:	
 13973 ;; *************** function _setDrvPeak *****************
 13974 ;; Defined at:
 13975 ;;		line 393 in file "main.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;  pk              2   21[BANK1 ] int 
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;		None
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  2   21[BANK1 ] int 
 13982 ;; Registers used:
 13983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13989 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13992 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13993 ;;Total ram usage:        2 bytes
 13994 ;; Hardware stack levels used:    1
 13995 ;; Hardware stack levels required when called:    9
 13996 ;; This function calls:
 13997 ;;		_printf
 13998 ;; This function is called by:
 13999 ;;		_execCmd
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           
 14004                           ;psect for function _setDrvPeak
 14005  2496                     _setDrvPeak:	
 14006                           
 14007                           ;main.c: 394: drv_peak_val = pk;
 14008                           
 14009                           ;incstack = 0
 14010                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14011  2496  0021               	movlb	1	; select bank1
 14012  2497  0836               	movf	(setDrvPeak@pk+1)^(0+128),w
 14013  2498  0022               	movlb	2	; select bank2
 14014  2499  00EF               	movwf	(_drv_peak_val+1)^(0+256)
 14015  249A  0021               	movlb	1	; select bank1
 14016  249B  0835               	movf	setDrvPeak@pk^(0+128),w
 14017  249C  0022               	movlb	2	; select bank2
 14018  249D  00EE               	movwf	_drv_peak_val^(0+256)
 14019                           
 14020                           ;main.c: 395: printf("A\n");
 14021  249E  3069               	movlw	low (STR_7| (0+32768))
 14022  249F  0021               	movlb	1	; select bank1
 14023  24A0  00A0               	movwf	printf@f^(0+128)
 14024  24A1  30AA               	movlw	high (STR_7| (0+32768))
 14025  24A2  00A1               	movwf	(printf@f^(0+128)+1)
 14026  24A3  3186  26A1         	fcall	_printf
 14027                           
 14028                           ;main.c: 396: return 0;
 14029  24A5  0021               	movlb	1	; select bank1
 14030  24A6  01B5               	clrf	?_setDrvPeak^(0+128)
 14031  24A7  01B6               	clrf	(?_setDrvPeak+1)^(0+128)
 14032  24A8  0008               	return
 14033  24A9                     __end_of_setDrvPeak:	
 14034                           
 14035                           	psect	text39
 14036  1A49                     __ptext39:	
 14037 ;; *************** function _setDrvGain *****************
 14038 ;; Defined at:
 14039 ;;		line 400 in file "main.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;  gain            2   21[BANK1 ] int 
 14042 ;; Auto vars:     Size  Location     Type
 14043 ;;  setGain         2   24[BANK1 ] int 
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  2   21[BANK1 ] int 
 14046 ;; Registers used:
 14047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14048 ;; Tracked objects:
 14049 ;;		On entry : 0/0
 14050 ;;		On exit  : 0/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14053 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14054 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14055 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14056 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14057 ;;Total ram usage:        5 bytes
 14058 ;; Hardware stack levels used:    1
 14059 ;; Hardware stack levels required when called:   13
 14060 ;; This function calls:
 14061 ;;		_drv_write
 14062 ;;		_printf
 14063 ;; This function is called by:
 14064 ;;		_execCmd
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           
 14069                           ;psect for function _setDrvGain
 14070  1A49                     _setDrvGain:	
 14071                           
 14072                           ;main.c: 401: int setGain = 0;
 14073                           
 14074                           ;incstack = 0
 14075                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14076  1A49  0021               	movlb	1	; select bank1
 14077  1A4A  01B8               	clrf	setDrvGain@setGain^(0+128)
 14078  1A4B  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14079                           
 14080                           ;main.c: 402: switch (gain){
 14081  1A4C  2A65               	goto	l7920
 14082  1A4D                     l7904:	
 14083                           ;main.c: 403: case 0: setGain = 0x00; break;
 14084                           
 14085  1A4D  01B8               	clrf	setDrvGain@setGain^(0+128)
 14086  1A4E  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14087  1A4F  2A78               	goto	l7922
 14088  1A50                     l7906:	
 14089                           ;main.c: 404: case 1: setGain = 0x01; break;
 14090                           
 14091  1A50  3001               	movlw	1
 14092  1A51  2A55               	goto	L23
 14093  1A52                     l7908:	
 14094                           ;main.c: 405: case 2: setGain = 0x02; break;
 14095                           
 14096  1A52  3002               	movlw	2
 14097  1A53  2A55               	goto	L23
 14098  1A54                     l7910:	
 14099                           ;main.c: 406: case 3: setGain = 0x03; break;
 14100                           
 14101  1A54  3003               	movlw	3
 14102  1A55                     L23:	
 14103  1A55  00B8               	movwf	setDrvGain@setGain^(0+128)
 14104  1A56  3000               	movlw	0
 14105  1A57  00B9               	movwf	(setDrvGain@setGain^(0+128)+1)
 14106  1A58  2A78               	goto	l7922
 14107  1A59                     l7912:	
 14108                           ;main.c: 407: default: printf("E\n"); return 1;
 14109                           
 14110  1A59  306C               	movlw	low (STR_16| (0+32768))
 14111  1A5A  00A0               	movwf	printf@f^(0+128)
 14112  1A5B  30AA               	movlw	high (STR_16| (0+32768))
 14113  1A5C  00A1               	movwf	(printf@f^(0+128)+1)
 14114  1A5D  3186  26A1         	fcall	_printf
 14115  1A5F  3001               	movlw	1
 14116  1A60  0021               	movlb	1	; select bank1
 14117  1A61  00B5               	movwf	?_setDrvGain^(0+128)
 14118  1A62  3000               	movlw	0
 14119  1A63  00B6               	movwf	(?_setDrvGain^(0+128)+1)
 14120  1A64  0008               	return
 14121  1A65                     l7920:	
 14122                           ;main.c: 408: }
 14123                           
 14124                           
 14125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14126                           ; Switch size 1, requested type "space"
 14127                           ; Number of cases is 1, Range of values is 0 to 0
 14128                           ; switch strategies available:
 14129                           ; Name         Instructions Cycles
 14130                           ; simple_byte            4     3 (average)
 14131                           ; direct_byte            8     6 (fixed)
 14132                           ; jumptable            260     6 (fixed)
 14133                           ;	Chosen strategy is simple_byte
 14134  1A65  0836               	movf	(setDrvGain@gain+1)^(0+128),w
 14135  1A66  3A00               	xorlw	0	; case 0
 14136  1A67  1903               	skipnz
 14137  1A68  2A6A               	goto	l8610
 14138  1A69  2A59               	goto	l7912
 14139  1A6A                     l8610:	
 14140                           
 14141                           ; Switch size 1, requested type "space"
 14142                           ; Number of cases is 4, Range of values is 0 to 3
 14143                           ; switch strategies available:
 14144                           ; Name         Instructions Cycles
 14145                           ; simple_byte           13     7 (average)
 14146                           ; direct_byte           14     6 (fixed)
 14147                           ; jumptable            260     6 (fixed)
 14148                           ;	Chosen strategy is simple_byte
 14149  1A6A  0835               	movf	setDrvGain@gain^(0+128),w
 14150  1A6B  3A00               	xorlw	0	; case 0
 14151  1A6C  1903               	skipnz
 14152  1A6D  2A4D               	goto	l7904
 14153  1A6E  3A01               	xorlw	1	; case 1
 14154  1A6F  1903               	skipnz
 14155  1A70  2A50               	goto	l7906
 14156  1A71  3A03               	xorlw	3	; case 2
 14157  1A72  1903               	skipnz
 14158  1A73  2A52               	goto	l7908
 14159  1A74  3A01               	xorlw	1	; case 3
 14160  1A75  1903               	skipnz
 14161  1A76  2A54               	goto	l7910
 14162  1A77  2A59               	goto	l7912
 14163  1A78                     l7922:	
 14164                           
 14165                           ;main.c: 409: drv_write(0x01, setGain);
 14166  1A78  0838               	movf	setDrvGain@setGain^(0+128),w
 14167  1A79  00B7               	movwf	??_setDrvGain^(0+128)
 14168  1A7A  0837               	movf	??_setDrvGain^(0+128),w
 14169  1A7B  0020               	movlb	0	; select bank0
 14170  1A7C  00C9               	movwf	drv_write@data
 14171  1A7D  3001               	movlw	1
 14172  1A7E  31A7  2744  319A   	fcall	_drv_write
 14173                           
 14174                           ;main.c: 410: printf("A\n");
 14175  1A81  3069               	movlw	low (STR_7| (0+32768))
 14176  1A82  0021               	movlb	1	; select bank1
 14177  1A83  00A0               	movwf	printf@f^(0+128)
 14178  1A84  30AA               	movlw	high (STR_7| (0+32768))
 14179  1A85  00A1               	movwf	(printf@f^(0+128)+1)
 14180  1A86  3186  26A1         	fcall	_printf
 14181                           
 14182                           ;main.c: 411: return 0;
 14183  1A88  0021               	movlb	1	; select bank1
 14184  1A89  01B5               	clrf	?_setDrvGain^(0+128)
 14185  1A8A  01B6               	clrf	(?_setDrvGain+1)^(0+128)
 14186  1A8B  0008               	return
 14187  1A8C                     __end_of_setDrvGain:	
 14188                           
 14189                           	psect	text40
 14190  1711                     __ptext40:	
 14191 ;; *************** function _setActive *****************
 14192 ;; Defined at:
 14193 ;;		line 479 in file "main.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;  probeNum        2   21[BANK1 ] int 
 14196 ;;  onOff           2   23[BANK1 ] int 
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;		None
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  2   21[BANK1 ] int 
 14201 ;; Registers used:
 14202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 0/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14208 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14210 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14211 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14212 ;;Total ram usage:       12 bytes
 14213 ;; Hardware stack levels used:    1
 14214 ;; Hardware stack levels required when called:    9
 14215 ;; This function calls:
 14216 ;;		_printf
 14217 ;; This function is called by:
 14218 ;;		_execCmd
 14219 ;; This function uses a non-reentrant model
 14220 ;;
 14221                           
 14222                           
 14223                           ;psect for function _setActive
 14224  1711                     _setActive:	
 14225                           
 14226                           ;main.c: 482: if(moveMask & 1UL << probeNum){
 14227                           
 14228                           ;incstack = 0
 14229                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14230  1711  0021               	movlb	1	; select bank1
 14231  1712  0859               	movf	_moveMask^(0+128),w
 14232  1713  00B9               	movwf	??_setActive^(0+128)
 14233  1714  085A               	movf	(_moveMask+1)^(0+128),w
 14234  1715  00BA               	movwf	(??_setActive^(0+128)+1)
 14235  1716  085B               	movf	(_moveMask+2)^(0+128),w
 14236  1717  00BB               	movwf	(??_setActive^(0+128)+2)
 14237  1718  085C               	movf	(_moveMask+3)^(0+128),w
 14238  1719  00BC               	movwf	(??_setActive^(0+128)+3)
 14239  171A  3001               	movlw	1
 14240  171B  00BD               	movwf	(??_setActive+4)^(0+128)
 14241  171C  3000               	movlw	0
 14242  171D  00BE               	movwf	((??_setActive+4)^(0+128)+1)
 14243  171E  3000               	movlw	0
 14244  171F  00BF               	movwf	((??_setActive+4)^(0+128)+2)
 14245  1720  3000               	movlw	0
 14246  1721  00C0               	movwf	((??_setActive+4)^(0+128)+3)
 14247  1722  0A35               	incf	setActive@probeNum^(0+128),w
 14248  1723  2F28               	goto	u7940
 14249  1724                     u7945:	
 14250  1724  35BD               	lslf	(??_setActive+4)^(0+128),f
 14251  1725  0DBE               	rlf	((??_setActive+4)^(0+128)+1),f
 14252  1726  0DBF               	rlf	((??_setActive+4)^(0+128)+2),f
 14253  1727  0DC0               	rlf	((??_setActive+4)^(0+128)+3),f
 14254  1728                     u7940:	
 14255  1728  0B89               	decfsz	9,f
 14256  1729  2F24               	goto	u7945
 14257  172A  083D               	movf	(??_setActive+4)^(0+128),w
 14258  172B  05B9               	andwf	??_setActive^(0+128),f
 14259  172C  083E               	movf	(??_setActive+5)^(0+128),w
 14260  172D  05BA               	andwf	(??_setActive^(0+128)+1),f
 14261  172E  083F               	movf	(??_setActive+6)^(0+128),w
 14262  172F  05BB               	andwf	(??_setActive^(0+128)+2),f
 14263  1730  0840               	movf	(??_setActive+7)^(0+128),w
 14264  1731  05BC               	andwf	(??_setActive^(0+128)+3),f
 14265  1732  083C               	movf	(??_setActive+3)^(0+128),w
 14266  1733  043B               	iorwf	(??_setActive+2)^(0+128),w
 14267  1734  043A               	iorwf	(??_setActive+1)^(0+128),w
 14268  1735  0439               	iorwf	??_setActive^(0+128),w
 14269  1736  1903               	skipnz
 14270  1737  2F7B               	goto	l8012
 14271                           
 14272                           ;main.c: 483: if (onOff)
 14273  1738  0837               	movf	setActive@onOff^(0+128),w
 14274  1739  0438               	iorwf	(setActive@onOff+1)^(0+128),w
 14275  173A  1903               	btfsc	3,2
 14276  173B  2F55               	goto	l8004
 14277                           
 14278                           ;main.c: 484: activeMask |= 1UL << probeNum;
 14279  173C  3001               	movlw	1
 14280  173D  00B9               	movwf	??_setActive^(0+128)
 14281  173E  3000               	movlw	0
 14282  173F  00BA               	movwf	(??_setActive^(0+128)+1)
 14283  1740  3000               	movlw	0
 14284  1741  00BB               	movwf	(??_setActive^(0+128)+2)
 14285  1742  3000               	movlw	0
 14286  1743  00BC               	movwf	(??_setActive^(0+128)+3)
 14287  1744  0A35               	incf	setActive@probeNum^(0+128),w
 14288  1745  2F4A               	goto	u7970
 14289  1746                     u7975:	
 14290  1746  35B9               	lslf	??_setActive^(0+128),f
 14291  1747  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14292  1748  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14293  1749  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14294  174A                     u7970:	
 14295  174A  0B89               	decfsz	9,f
 14296  174B  2F46               	goto	u7975
 14297  174C  0839               	movf	??_setActive^(0+128),w
 14298  174D  04DD               	iorwf	_activeMask^(0+128),f
 14299  174E  083A               	movf	(??_setActive+1)^(0+128),w
 14300  174F  04DE               	iorwf	(_activeMask+1)^(0+128),f
 14301  1750  083B               	movf	(??_setActive+2)^(0+128),w
 14302  1751  04DF               	iorwf	(_activeMask+2)^(0+128),f
 14303  1752  083C               	movf	(??_setActive+3)^(0+128),w
 14304  1753  04E0               	iorwf	(_activeMask+3)^(0+128),f
 14305  1754  2F71               	goto	l8006
 14306  1755                     l8004:	
 14307                           
 14308                           ;main.c: 485: else
 14309                           ;main.c: 486: activeMask &= ~(1UL << probeNum);
 14310  1755  3001               	movlw	1
 14311  1756  00B9               	movwf	??_setActive^(0+128)
 14312  1757  3000               	movlw	0
 14313  1758  00BA               	movwf	(??_setActive^(0+128)+1)
 14314  1759  3000               	movlw	0
 14315  175A  00BB               	movwf	(??_setActive^(0+128)+2)
 14316  175B  3000               	movlw	0
 14317  175C  00BC               	movwf	(??_setActive^(0+128)+3)
 14318  175D  0A35               	incf	setActive@probeNum^(0+128),w
 14319  175E  2F63               	goto	u7980
 14320  175F                     u7985:	
 14321  175F  35B9               	lslf	??_setActive^(0+128),f
 14322  1760  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14323  1761  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14324  1762  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14325  1763                     u7980:	
 14326  1763  0B89               	decfsz	9,f
 14327  1764  2F5F               	goto	u7985
 14328  1765  09B9               	comf	??_setActive^(0+128),f
 14329  1766  09BA               	comf	(??_setActive^(0+128)+1),f
 14330  1767  09BB               	comf	(??_setActive^(0+128)+2),f
 14331  1768  09BC               	comf	(??_setActive^(0+128)+3),f
 14332  1769  0839               	movf	??_setActive^(0+128),w
 14333  176A  05DD               	andwf	_activeMask^(0+128),f
 14334  176B  083A               	movf	(??_setActive+1)^(0+128),w
 14335  176C  05DE               	andwf	(_activeMask+1)^(0+128),f
 14336  176D  083B               	movf	(??_setActive+2)^(0+128),w
 14337  176E  05DF               	andwf	(_activeMask+2)^(0+128),f
 14338  176F  083C               	movf	(??_setActive+3)^(0+128),w
 14339  1770  05E0               	andwf	(_activeMask+3)^(0+128),f
 14340  1771                     l8006:	
 14341                           
 14342                           ;main.c: 487: printf("A\n");
 14343  1771  3069               	movlw	low (STR_7| (0+32768))
 14344  1772  00A0               	movwf	printf@f^(0+128)
 14345  1773  30AA               	movlw	high (STR_7| (0+32768))
 14346  1774  00A1               	movwf	(printf@f^(0+128)+1)
 14347  1775  3186  26A1         	fcall	_printf
 14348                           
 14349                           ;main.c: 488: return 0;
 14350  1777  0021               	movlb	1	; select bank1
 14351  1778  01B5               	clrf	?_setActive^(0+128)
 14352  1779  01B6               	clrf	(?_setActive+1)^(0+128)
 14353  177A  0008               	return
 14354  177B                     l8012:	
 14355                           
 14356                           ;main.c: 489: }
 14357                           ;main.c: 490: printf("E\n");
 14358  177B  306C               	movlw	low (STR_16| (0+32768))
 14359  177C  00A0               	movwf	printf@f^(0+128)
 14360  177D  30AA               	movlw	high (STR_16| (0+32768))
 14361  177E  00A1               	movwf	(printf@f^(0+128)+1)
 14362  177F  3186  26A1         	fcall	_printf
 14363                           
 14364                           ;main.c: 491: return 1;
 14365  1781  3001               	movlw	1
 14366  1782  0021               	movlb	1	; select bank1
 14367  1783  00B5               	movwf	?_setActive^(0+128)
 14368  1784  3000               	movlw	0
 14369  1785  00B6               	movwf	(?_setActive^(0+128)+1)
 14370  1786  0008               	return
 14371  1787                     __end_of_setActive:	
 14372                           
 14373                           	psect	text41
 14374  19C7                     __ptext41:	
 14375 ;; *************** function _getPosition *****************
 14376 ;; Defined at:
 14377 ;;		line 382 in file "main.c"
 14378 ;; Parameters:    Size  Location     Type
 14379 ;;  a               2   21[BANK1 ] int 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;		None
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  2   21[BANK1 ] int 
 14384 ;; Registers used:
 14385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14391 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14394 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14395 ;;Total ram usage:        6 bytes
 14396 ;; Hardware stack levels used:    1
 14397 ;; Hardware stack levels required when called:    9
 14398 ;; This function calls:
 14399 ;;		_printf
 14400 ;; This function is called by:
 14401 ;;		_execCmd
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405                           
 14406                           ;psect for function _getPosition
 14407  19C7                     _getPosition:	
 14408                           
 14409                           ;main.c: 384: if (a>=0 && a < 24){
 14410                           
 14411                           ;incstack = 0
 14412                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14413  19C7  0021               	movlb	1	; select bank1
 14414  19C8  1BB6               	btfsc	(getPosition@a+1)^(0+128),7
 14415  19C9  2A00               	goto	l7890
 14416  19CA  0836               	movf	(getPosition@a+1)^(0+128),w
 14417  19CB  3A80               	xorlw	128
 14418  19CC  0020               	movlb	0	; select bank0
 14419  19CD  00C9               	movwf	??_getPosition
 14420  19CE  3080               	movlw	128
 14421  19CF  0249               	subwf	??_getPosition,w
 14422  19D0  1D03               	skipz
 14423  19D1  29D5               	goto	u7895
 14424  19D2  3018               	movlw	24
 14425  19D3  0021               	movlb	1	; select bank1
 14426  19D4  0235               	subwf	getPosition@a^(0+128),w
 14427  19D5                     u7895:	
 14428  19D5  1803               	skipnc
 14429  19D6  2A00               	goto	l7890
 14430                           
 14431                           ;main.c: 385: printf("%d\n", currentPositions_steps[a]);
 14432  19D7  305B               	movlw	low (STR_14| (0+32768))
 14433  19D8  0021               	movlb	1	; select bank1
 14434  19D9  00A0               	movwf	printf@f^(0+128)
 14435  19DA  30AA               	movlw	high (STR_14| (0+32768))
 14436  19DB  00A1               	movwf	(printf@f^(0+128)+1)
 14437  19DC  0836               	movf	(getPosition@a+1)^(0+128),w
 14438  19DD  0020               	movlb	0	; select bank0
 14439  19DE  00CA               	movwf	??_getPosition+1
 14440  19DF  0021               	movlb	1	; select bank1
 14441  19E0  0835               	movf	getPosition@a^(0+128),w
 14442  19E1  0020               	movlb	0	; select bank0
 14443  19E2  00C9               	movwf	??_getPosition
 14444  19E3  35C9               	lslf	??_getPosition,f
 14445  19E4  0DCA               	rlf	??_getPosition+1,f
 14446  19E5  35C9               	lslf	??_getPosition,f
 14447  19E6  0DCA               	rlf	??_getPosition+1,f
 14448  19E7  3090               	movlw	144
 14449  19E8  00CB               	movwf	??_getPosition+2
 14450  19E9  3027               	movlw	39
 14451  19EA  00CC               	movwf	??_getPosition+3
 14452  19EB  0849               	movf	??_getPosition,w
 14453  19EC  074B               	addwf	??_getPosition+2,w
 14454  19ED  0086               	movwf	6
 14455  19EE  084A               	movf	??_getPosition+1,w
 14456  19EF  3D4C               	addwfc	??_getPosition+3,w
 14457  19F0  0087               	movwf	7
 14458  19F1  3F40               	moviw [0]fsr1
 14459  19F2  0021               	movlb	1	; select bank1
 14460  19F3  00A2               	movwf	(?_printf^(0+128)+2)
 14461  19F4  3F41               	moviw [1]fsr1
 14462  19F5  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14463  19F6  3F42               	moviw [2]fsr1
 14464  19F7  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14465  19F8  3F43               	moviw [3]fsr1
 14466  19F9  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14467  19FA  3186  26A1         	fcall	_printf
 14468                           
 14469                           ;main.c: 386: return 0;
 14470  19FC  0021               	movlb	1	; select bank1
 14471  19FD  01B5               	clrf	?_getPosition^(0+128)
 14472  19FE  01B6               	clrf	(?_getPosition+1)^(0+128)
 14473  19FF  0008               	return
 14474  1A00                     l7890:	
 14475                           
 14476                           ;main.c: 387: }
 14477                           ;main.c: 389: return 1;
 14478  1A00  3001               	movlw	1
 14479  1A01  0021               	movlb	1	; select bank1
 14480  1A02  00B5               	movwf	?_getPosition^(0+128)
 14481  1A03  3000               	movlw	0
 14482  1A04  00B6               	movwf	(?_getPosition^(0+128)+1)
 14483  1A05  0008               	return
 14484  1A06                     __end_of_getPosition:	
 14485                           
 14486                           	psect	text42
 14487  1BF9                     __ptext42:	
 14488 ;; *************** function _getMoveMask *****************
 14489 ;; Defined at:
 14490 ;;		line 519 in file "main.c"
 14491 ;; Parameters:    Size  Location     Type
 14492 ;;		None
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;  i               2   23[BANK1 ] int 
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  2   21[BANK1 ] int 
 14497 ;; Registers used:
 14498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14504 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14505 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14507 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14508 ;;Total ram usage:        8 bytes
 14509 ;; Hardware stack levels used:    1
 14510 ;; Hardware stack levels required when called:    9
 14511 ;; This function calls:
 14512 ;;		_printf
 14513 ;; This function is called by:
 14514 ;;		_execCmd
 14515 ;; This function uses a non-reentrant model
 14516 ;;
 14517                           
 14518                           
 14519                           ;psect for function _getMoveMask
 14520  1BF9                     _getMoveMask:	
 14521                           
 14522                           ;main.c: 520: for(int i=24-1; i>=0; i--){
 14523                           
 14524                           ;incstack = 0
 14525                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14526  1BF9  3017               	movlw	23
 14527  1BFA  0021               	movlb	1	; select bank1
 14528  1BFB  00B7               	movwf	getMoveMask@i^(0+128)
 14529  1BFC  3000               	movlw	0
 14530  1BFD  00B8               	movwf	(getMoveMask@i^(0+128)+1)
 14531  1BFE  1BB8               	btfsc	(getMoveMask@i+1)^(0+128),7
 14532  1BFF  2C3C               	goto	l8068
 14533  1C00                     l8062:	
 14534                           
 14535                           ;main.c: 521: printf("%d ", (moveMask >> i) & 1 );
 14536  1C00  305F               	movlw	low (STR_1| (0+32768))
 14537  1C01  00A0               	movwf	printf@f^(0+128)
 14538  1C02  30AA               	movlw	high (STR_1| (0+32768))
 14539  1C03  00A1               	movwf	(printf@f^(0+128)+1)
 14540  1C04  0859               	movf	_moveMask^(0+128),w
 14541  1C05  0020               	movlb	0	; select bank0
 14542  1C06  00C9               	movwf	??_getMoveMask
 14543  1C07  0021               	movlb	1	; select bank1
 14544  1C08  085A               	movf	(_moveMask+1)^(0+128),w
 14545  1C09  0020               	movlb	0	; select bank0
 14546  1C0A  00CA               	movwf	??_getMoveMask+1
 14547  1C0B  0021               	movlb	1	; select bank1
 14548  1C0C  085B               	movf	(_moveMask+2)^(0+128),w
 14549  1C0D  0020               	movlb	0	; select bank0
 14550  1C0E  00CB               	movwf	??_getMoveMask+2
 14551  1C0F  0021               	movlb	1	; select bank1
 14552  1C10  085C               	movf	(_moveMask+3)^(0+128),w
 14553  1C11  0020               	movlb	0	; select bank0
 14554  1C12  00CC               	movwf	??_getMoveMask+3
 14555  1C13  0021               	movlb	1	; select bank1
 14556  1C14  0A37               	incf	getMoveMask@i^(0+128),w
 14557  1C15  0020               	movlb	0	; select bank0
 14558  1C16  2C1C               	goto	u8070
 14559  1C17                     u8075:	
 14560  1C17  1003               	clrc
 14561  1C18  0CCC               	rrf	??_getMoveMask+3,f
 14562  1C19  0CCB               	rrf	??_getMoveMask+2,f
 14563  1C1A  0CCA               	rrf	??_getMoveMask+1,f
 14564  1C1B  0CC9               	rrf	??_getMoveMask,f
 14565  1C1C                     u8070:	
 14566  1C1C  3EFF               	addlw	-1
 14567  1C1D  1D03               	skipz
 14568  1C1E  2C17               	goto	u8075
 14569  1C1F  3001               	movlw	1
 14570  1C20  0549               	andwf	??_getMoveMask,w
 14571  1C21  0021               	movlb	1	; select bank1
 14572  1C22  00A2               	movwf	(?_printf^(0+128)+2)
 14573  1C23  3000               	movlw	0
 14574  1C24  0020               	movlb	0	; select bank0
 14575  1C25  054A               	andwf	??_getMoveMask+1,w
 14576  1C26  0021               	movlb	1	; select bank1
 14577  1C27  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14578  1C28  3000               	movlw	0
 14579  1C29  0020               	movlb	0	; select bank0
 14580  1C2A  054B               	andwf	??_getMoveMask+2,w
 14581  1C2B  0021               	movlb	1	; select bank1
 14582  1C2C  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14583  1C2D  3000               	movlw	0
 14584  1C2E  0020               	movlb	0	; select bank0
 14585  1C2F  054C               	andwf	??_getMoveMask+3,w
 14586  1C30  0021               	movlb	1	; select bank1
 14587  1C31  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14588  1C32  3186  26A1  319B   	fcall	_printf
 14589  1C35  30FF               	movlw	255
 14590  1C36  0021               	movlb	1	; select bank1
 14591  1C37  07B7               	addwf	getMoveMask@i^(0+128),f
 14592  1C38  30FF               	movlw	255
 14593  1C39  3DB8               	addwfc	(getMoveMask@i+1)^(0+128),f
 14594  1C3A  1FB8               	btfss	(getMoveMask@i+1)^(0+128),7
 14595  1C3B  2C00               	goto	l8062
 14596  1C3C                     l8068:	
 14597                           
 14598                           ;main.c: 522: }
 14599                           ;main.c: 523: printf("\n");
 14600  1C3C  3063               	movlw	low ((STR_36+28)| (0+32768))
 14601  1C3D  00A0               	movwf	printf@f^(0+128)
 14602  1C3E  30A8               	movlw	high ((STR_36+28)| (0+32768))
 14603  1C3F  00A1               	movwf	(printf@f^(0+128)+1)
 14604  1C40  3186  26A1         	fcall	_printf
 14605                           
 14606                           ;main.c: 524: return 0;
 14607  1C42  0021               	movlb	1	; select bank1
 14608  1C43  01B5               	clrf	?_getMoveMask^(0+128)
 14609  1C44  01B6               	clrf	(?_getMoveMask+1)^(0+128)
 14610  1C45  0008               	return
 14611  1C46                     __end_of_getMoveMask:	
 14612                           
 14613                           	psect	text43
 14614  26D9                     __ptext43:	
 14615 ;; *************** function _getMotionStatus *****************
 14616 ;; Defined at:
 14617 ;;		line 526 in file "main.c"
 14618 ;; Parameters:    Size  Location     Type
 14619 ;;		None
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;		None
 14622 ;; Return value:  Size  Location     Type
 14623 ;;                  2   21[BANK1 ] int 
 14624 ;; Registers used:
 14625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14626 ;; Tracked objects:
 14627 ;;		On entry : 0/0
 14628 ;;		On exit  : 0/0
 14629 ;;		Unchanged: 0/0
 14630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14631 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14634 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14635 ;;Total ram usage:        2 bytes
 14636 ;; Hardware stack levels used:    1
 14637 ;; Hardware stack levels required when called:    9
 14638 ;; This function calls:
 14639 ;;		_printf
 14640 ;; This function is called by:
 14641 ;;		_execCmd
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           
 14646                           ;psect for function _getMotionStatus
 14647  26D9                     _getMotionStatus:	
 14648                           
 14649                           ;main.c: 527: switch(motionType){
 14650                           
 14651                           ;incstack = 0
 14652                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14653  26D9  2EF2               	goto	l8084
 14654  26DA                     l8076:	
 14655                           ;main.c: 528: case REL_MOVE: printf("R"); break;
 14656                           
 14657  26DA  3075               	movlw	low (STR_33| (0+32768))
 14658  26DB  0021               	movlb	1	; select bank1
 14659  26DC  00A0               	movwf	printf@f^(0+128)
 14660  26DD  30AA               	movlw	high (STR_33| (0+32768))
 14661  26DE  00A1               	movwf	(printf@f^(0+128)+1)
 14662  26DF  3186  26A1         	fcall	_printf
 14663  26E1  0008               	return
 14664  26E2                     l8078:	
 14665                           ;main.c: 529: case ABS_MOVE: printf("A"); break;
 14666                           
 14667  26E2  3034               	movlw	low ((STR_73+3)| (0+32768))
 14668  26E3  0021               	movlb	1	; select bank1
 14669  26E4  00A0               	movwf	printf@f^(0+128)
 14670  26E5  30AA               	movlw	high ((STR_73+3)| (0+32768))
 14671  26E6  00A1               	movwf	(printf@f^(0+128)+1)
 14672  26E7  3186  26A1         	fcall	_printf
 14673  26E9  0008               	return
 14674  26EA                     l8080:	
 14675                           ;main.c: 530: default: printf("N"); break;
 14676                           
 14677  26EA  3073               	movlw	low (STR_35| (0+32768))
 14678  26EB  0021               	movlb	1	; select bank1
 14679  26EC  00A0               	movwf	printf@f^(0+128)
 14680  26ED  30AA               	movlw	high (STR_35| (0+32768))
 14681  26EE  00A1               	movwf	(printf@f^(0+128)+1)
 14682  26EF  3186  26A1         	fcall	_printf
 14683                           
 14684                           ;main.c: 531: }
 14685  26F1  0008               	return
 14686  26F2                     l8084:	
 14687  26F2  0020               	movlb	0	; select bank0
 14688  26F3  0855               	movf	_motionType,w
 14689                           
 14690                           ; Switch size 1, requested type "space"
 14691                           ; Number of cases is 2, Range of values is 1 to 2
 14692                           ; switch strategies available:
 14693                           ; Name         Instructions Cycles
 14694                           ; simple_byte            7     4 (average)
 14695                           ; direct_byte           13     9 (fixed)
 14696                           ; jumptable            263     9 (fixed)
 14697                           ;	Chosen strategy is simple_byte
 14698  26F4  3A01               	xorlw	1	; case 1
 14699  26F5  1903               	skipnz
 14700  26F6  2EDA               	goto	l8076
 14701  26F7  3A03               	xorlw	3	; case 2
 14702  26F8  1903               	skipnz
 14703  26F9  2EE2               	goto	l8078
 14704  26FA  2EEA               	goto	l8080
 14705  26FB  0008               	return
 14706  26FC                     __end_of_getMotionStatus:	
 14707                           
 14708                           	psect	text44
 14709  1BAC                     __ptext44:	
 14710 ;; *************** function _getActive *****************
 14711 ;; Defined at:
 14712 ;;		line 511 in file "main.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;		None
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;  i               2   23[BANK1 ] int 
 14717 ;; Return value:  Size  Location     Type
 14718 ;;                  2   21[BANK1 ] int 
 14719 ;; Registers used:
 14720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14726 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14727 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14728 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14729 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14730 ;;Total ram usage:        8 bytes
 14731 ;; Hardware stack levels used:    1
 14732 ;; Hardware stack levels required when called:    9
 14733 ;; This function calls:
 14734 ;;		_printf
 14735 ;; This function is called by:
 14736 ;;		_execCmd
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           
 14741                           ;psect for function _getActive
 14742  1BAC                     _getActive:	
 14743                           
 14744                           ;main.c: 512: for(int i=24-1; i>=0; i--){
 14745                           
 14746                           ;incstack = 0
 14747                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14748  1BAC  3017               	movlw	23
 14749  1BAD  0021               	movlb	1	; select bank1
 14750  1BAE  00B7               	movwf	getActive@i^(0+128)
 14751  1BAF  3000               	movlw	0
 14752  1BB0  00B8               	movwf	(getActive@i^(0+128)+1)
 14753  1BB1  1BB8               	btfsc	(getActive@i+1)^(0+128),7
 14754  1BB2  2BEF               	goto	l8050
 14755  1BB3                     l8044:	
 14756                           
 14757                           ;main.c: 513: printf("%d ", (activeMask >> i) & 1 );
 14758  1BB3  305F               	movlw	low (STR_1| (0+32768))
 14759  1BB4  00A0               	movwf	printf@f^(0+128)
 14760  1BB5  30AA               	movlw	high (STR_1| (0+32768))
 14761  1BB6  00A1               	movwf	(printf@f^(0+128)+1)
 14762  1BB7  085D               	movf	_activeMask^(0+128),w
 14763  1BB8  0020               	movlb	0	; select bank0
 14764  1BB9  00C9               	movwf	??_getActive
 14765  1BBA  0021               	movlb	1	; select bank1
 14766  1BBB  085E               	movf	(_activeMask+1)^(0+128),w
 14767  1BBC  0020               	movlb	0	; select bank0
 14768  1BBD  00CA               	movwf	??_getActive+1
 14769  1BBE  0021               	movlb	1	; select bank1
 14770  1BBF  085F               	movf	(_activeMask+2)^(0+128),w
 14771  1BC0  0020               	movlb	0	; select bank0
 14772  1BC1  00CB               	movwf	??_getActive+2
 14773  1BC2  0021               	movlb	1	; select bank1
 14774  1BC3  0860               	movf	(_activeMask+3)^(0+128),w
 14775  1BC4  0020               	movlb	0	; select bank0
 14776  1BC5  00CC               	movwf	??_getActive+3
 14777  1BC6  0021               	movlb	1	; select bank1
 14778  1BC7  0A37               	incf	getActive@i^(0+128),w
 14779  1BC8  0020               	movlb	0	; select bank0
 14780  1BC9  2BCF               	goto	u8040
 14781  1BCA                     u8045:	
 14782  1BCA  1003               	clrc
 14783  1BCB  0CCC               	rrf	??_getActive+3,f
 14784  1BCC  0CCB               	rrf	??_getActive+2,f
 14785  1BCD  0CCA               	rrf	??_getActive+1,f
 14786  1BCE  0CC9               	rrf	??_getActive,f
 14787  1BCF                     u8040:	
 14788  1BCF  3EFF               	addlw	-1
 14789  1BD0  1D03               	skipz
 14790  1BD1  2BCA               	goto	u8045
 14791  1BD2  3001               	movlw	1
 14792  1BD3  0549               	andwf	??_getActive,w
 14793  1BD4  0021               	movlb	1	; select bank1
 14794  1BD5  00A2               	movwf	(?_printf^(0+128)+2)
 14795  1BD6  3000               	movlw	0
 14796  1BD7  0020               	movlb	0	; select bank0
 14797  1BD8  054A               	andwf	??_getActive+1,w
 14798  1BD9  0021               	movlb	1	; select bank1
 14799  1BDA  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14800  1BDB  3000               	movlw	0
 14801  1BDC  0020               	movlb	0	; select bank0
 14802  1BDD  054B               	andwf	??_getActive+2,w
 14803  1BDE  0021               	movlb	1	; select bank1
 14804  1BDF  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14805  1BE0  3000               	movlw	0
 14806  1BE1  0020               	movlb	0	; select bank0
 14807  1BE2  054C               	andwf	??_getActive+3,w
 14808  1BE3  0021               	movlb	1	; select bank1
 14809  1BE4  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14810  1BE5  3186  26A1  319B   	fcall	_printf
 14811  1BE8  30FF               	movlw	255
 14812  1BE9  0021               	movlb	1	; select bank1
 14813  1BEA  07B7               	addwf	getActive@i^(0+128),f
 14814  1BEB  30FF               	movlw	255
 14815  1BEC  3DB8               	addwfc	(getActive@i+1)^(0+128),f
 14816  1BED  1FB8               	btfss	(getActive@i+1)^(0+128),7
 14817  1BEE  2BB3               	goto	l8044
 14818  1BEF                     l8050:	
 14819                           
 14820                           ;main.c: 514: }
 14821                           ;main.c: 515: printf("\n");
 14822  1BEF  3063               	movlw	low ((STR_36+28)| (0+32768))
 14823  1BF0  00A0               	movwf	printf@f^(0+128)
 14824  1BF1  30A8               	movlw	high ((STR_36+28)| (0+32768))
 14825  1BF2  00A1               	movwf	(printf@f^(0+128)+1)
 14826  1BF3  3186  26A1         	fcall	_printf
 14827                           
 14828                           ;main.c: 516: return 0;
 14829  1BF5  0021               	movlb	1	; select bank1
 14830  1BF6  01B5               	clrf	?_getActive^(0+128)
 14831  1BF7  01B6               	clrf	(?_getActive+1)^(0+128)
 14832  1BF8  0008               	return
 14833  1BF9                     __end_of_getActive:	
 14834                           
 14835                           	psect	text45
 14836  0A54                     __ptext45:	
 14837 ;; *************** function _commCheck *****************
 14838 ;; Defined at:
 14839 ;;		line 534 in file "main.c"
 14840 ;; Parameters:    Size  Location     Type
 14841 ;;		None
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;		None
 14844 ;; Return value:  Size  Location     Type
 14845 ;;                  2   49[BANK1 ] int 
 14846 ;; Registers used:
 14847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14848 ;; Tracked objects:
 14849 ;;		On entry : 0/0
 14850 ;;		On exit  : 0/0
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14853 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14855 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14856 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14857 ;;Total ram usage:        3 bytes
 14858 ;; Hardware stack levels used:    1
 14859 ;; Hardware stack levels required when called:   13
 14860 ;; This function calls:
 14861 ;;		_LED_testComm
 14862 ;;		_LED_test_openshort
 14863 ;;		_drv_read
 14864 ;;		_printf
 14865 ;; This function is called by:
 14866 ;;		_execCmd
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           
 14871                           ;psect for function _commCheck
 14872  0A54                     _commCheck:	
 14873                           
 14874                           ;main.c: 535: printf("\n----starting comm test----\n\n");
 14875                           
 14876                           ;incstack = 0
 14877                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14878  0A54  3047               	movlw	low (STR_36| (0+32768))
 14879  0A55  0021               	movlb	1	; select bank1
 14880  0A56  00A0               	movwf	printf@f^(0+128)
 14881  0A57  30A8               	movlw	high (STR_36| (0+32768))
 14882  0A58  00A1               	movwf	(printf@f^(0+128)+1)
 14883  0A59  3186  26A1  318A   	fcall	_printf
 14884                           
 14885                           ;main.c: 537: printf("testing top LED driver...");
 14886  0A5C  309C               	movlw	low (STR_37| (0+32768))
 14887  0A5D  0021               	movlb	1	; select bank1
 14888  0A5E  00A0               	movwf	printf@f^(0+128)
 14889  0A5F  30A8               	movlw	high (STR_37| (0+32768))
 14890  0A60  00A1               	movwf	(printf@f^(0+128)+1)
 14891  0A61  3186  26A1  318A   	fcall	_printf
 14892                           
 14893                           ;main.c: 538: if (!LED_testComm(1))
 14894  0A64  3001               	movlw	1
 14895  0A65  0021               	movlb	1	; select bank1
 14896  0A66  00C9               	movwf	LED_testComm@topOrBottom^(0+128)
 14897  0A67  3000               	movlw	0
 14898  0A68  00CA               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 14899  0A69  3188  2038  318A   	fcall	_LED_testComm
 14900  0A6C  0021               	movlb	1	; select bank1
 14901  0A6D  0849               	movf	?_LED_testComm^(0+128),w
 14902  0A6E  044A               	iorwf	(?_LED_testComm+1)^(0+128),w
 14903  0A6F  1D03               	btfss	3,2
 14904  0A70  2A75               	goto	l8090
 14905                           
 14906                           ;main.c: 539: printf("passed\n");
 14907  0A71  300B               	movlw	low (STR_38| (0+32768))
 14908  0A72  00A0               	movwf	printf@f^(0+128)
 14909  0A73  30AA               	movlw	high (STR_38| (0+32768))
 14910  0A74  2A79               	goto	L24
 14911  0A75                     l8090:	
 14912                           
 14913                           ;main.c: 540: else
 14914                           ;main.c: 541: printf("FAILED\n");
 14915  0A75  3003               	movlw	low (STR_39| (0+32768))
 14916  0A76  0021               	movlb	1	; select bank1
 14917  0A77  00A0               	movwf	printf@f^(0+128)
 14918  0A78  30AA               	movlw	high (STR_39| (0+32768))
 14919  0A79                     L24:	
 14920  0A79  00A1               	movwf	(printf@f^(0+128)+1)
 14921  0A7A  3186  26A1  318A   	fcall	_printf
 14922                           
 14923                           ;main.c: 543: printf("opens: ");
 14924  0A7D  301B               	movlw	low (STR_40| (0+32768))
 14925  0A7E  0021               	movlb	1	; select bank1
 14926  0A7F  00A0               	movwf	printf@f^(0+128)
 14927  0A80  30AA               	movlw	high (STR_40| (0+32768))
 14928  0A81  00A1               	movwf	(printf@f^(0+128)+1)
 14929  0A82  3186  26A1  318A   	fcall	_printf
 14930                           
 14931                           ;main.c: 544: LED_test_openshort(10, 1);
 14932  0A85  300A               	movlw	10
 14933  0A86  0021               	movlb	1	; select bank1
 14934  0A87  00B5               	movwf	LED_test_openshort@type^(0+128)
 14935  0A88  3000               	movlw	0
 14936  0A89  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 14937  0A8A  3001               	movlw	1
 14938  0A8B  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 14939  0A8C  3000               	movlw	0
 14940  0A8D  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 14941  0A8E  3194  24E0  318A   	fcall	_LED_test_openshort
 14942                           
 14943                           ;main.c: 545: printf("\n\nshorts: ");
 14944  0A91  30C6               	movlw	low (STR_41| (0+32768))
 14945  0A92  0021               	movlb	1	; select bank1
 14946  0A93  00A0               	movwf	printf@f^(0+128)
 14947  0A94  30A9               	movlw	high (STR_41| (0+32768))
 14948  0A95  00A1               	movwf	(printf@f^(0+128)+1)
 14949  0A96  3186  26A1  318A   	fcall	_printf
 14950                           
 14951                           ;main.c: 546: LED_test_openshort(11, 1);
 14952  0A99  300B               	movlw	11
 14953  0A9A  0021               	movlb	1	; select bank1
 14954  0A9B  00B5               	movwf	LED_test_openshort@type^(0+128)
 14955  0A9C  3000               	movlw	0
 14956  0A9D  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 14957  0A9E  3001               	movlw	1
 14958  0A9F  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 14959  0AA0  3000               	movlw	0
 14960  0AA1  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 14961  0AA2  3194  24E0  318A   	fcall	_LED_test_openshort
 14962                           
 14963                           ;main.c: 548: printf("\ntesting bottom LED driver...\n");
 14964  0AA5  3028               	movlw	low (STR_42| (0+32768))
 14965  0AA6  0021               	movlb	1	; select bank1
 14966  0AA7  00A0               	movwf	printf@f^(0+128)
 14967  0AA8  30A8               	movlw	high (STR_42| (0+32768))
 14968  0AA9  00A1               	movwf	(printf@f^(0+128)+1)
 14969  0AAA  3186  26A1  318A   	fcall	_printf
 14970                           
 14971                           ;main.c: 549: if (!LED_testComm(2))
 14972  0AAD  3002               	movlw	2
 14973  0AAE  0021               	movlb	1	; select bank1
 14974  0AAF  00C9               	movwf	LED_testComm@topOrBottom^(0+128)
 14975  0AB0  3000               	movlw	0
 14976  0AB1  00CA               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 14977  0AB2  3188  2038  318A   	fcall	_LED_testComm
 14978  0AB5  0021               	movlb	1	; select bank1
 14979  0AB6  0849               	movf	?_LED_testComm^(0+128),w
 14980  0AB7  044A               	iorwf	(?_LED_testComm+1)^(0+128),w
 14981  0AB8  1D03               	btfss	3,2
 14982  0AB9  2ABE               	goto	l8094
 14983                           
 14984                           ;main.c: 550: printf("passed\n");
 14985  0ABA  300B               	movlw	low (STR_38| (0+32768))
 14986  0ABB  00A0               	movwf	printf@f^(0+128)
 14987  0ABC  30AA               	movlw	high (STR_38| (0+32768))
 14988  0ABD  2AC2               	goto	L25
 14989  0ABE                     l8094:	
 14990                           
 14991                           ;main.c: 551: else
 14992                           ;main.c: 552: printf("FAILED\n");
 14993  0ABE  3003               	movlw	low (STR_39| (0+32768))
 14994  0ABF  0021               	movlb	1	; select bank1
 14995  0AC0  00A0               	movwf	printf@f^(0+128)
 14996  0AC1  30AA               	movlw	high (STR_39| (0+32768))
 14997  0AC2                     L25:	
 14998  0AC2  00A1               	movwf	(printf@f^(0+128)+1)
 14999  0AC3  3186  26A1  318A   	fcall	_printf
 15000                           
 15001                           ;main.c: 554: printf("opens: ");
 15002  0AC6  301B               	movlw	low (STR_40| (0+32768))
 15003  0AC7  0021               	movlb	1	; select bank1
 15004  0AC8  00A0               	movwf	printf@f^(0+128)
 15005  0AC9  30AA               	movlw	high (STR_40| (0+32768))
 15006  0ACA  00A1               	movwf	(printf@f^(0+128)+1)
 15007  0ACB  3186  26A1  318A   	fcall	_printf
 15008                           
 15009                           ;main.c: 555: LED_test_openshort(10, 2);
 15010  0ACE  300A               	movlw	10
 15011  0ACF  0021               	movlb	1	; select bank1
 15012  0AD0  00B5               	movwf	LED_test_openshort@type^(0+128)
 15013  0AD1  3000               	movlw	0
 15014  0AD2  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15015  0AD3  3002               	movlw	2
 15016  0AD4  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15017  0AD5  3000               	movlw	0
 15018  0AD6  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15019  0AD7  3194  24E0  318A   	fcall	_LED_test_openshort
 15020                           
 15021                           ;main.c: 556: printf("\n\nshorts: ");
 15022  0ADA  30C6               	movlw	low (STR_41| (0+32768))
 15023  0ADB  0021               	movlb	1	; select bank1
 15024  0ADC  00A0               	movwf	printf@f^(0+128)
 15025  0ADD  30A9               	movlw	high (STR_41| (0+32768))
 15026  0ADE  00A1               	movwf	(printf@f^(0+128)+1)
 15027  0ADF  3186  26A1  318A   	fcall	_printf
 15028                           
 15029                           ;main.c: 557: LED_test_openshort(11, 2);
 15030  0AE2  300B               	movlw	11
 15031  0AE3  0021               	movlb	1	; select bank1
 15032  0AE4  00B5               	movwf	LED_test_openshort@type^(0+128)
 15033  0AE5  3000               	movlw	0
 15034  0AE6  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15035  0AE7  3002               	movlw	2
 15036  0AE8  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15037  0AE9  3000               	movlw	0
 15038  0AEA  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15039  0AEB  3194  24E0  318A   	fcall	_LED_test_openshort
 15040                           
 15041                           ;main.c: 559: printf("\ntesting piezo driver...");
 15042  0AEE  30B6               	movlw	low (STR_47| (0+32768))
 15043  0AEF  0021               	movlb	1	; select bank1
 15044  0AF0  00A0               	movwf	printf@f^(0+128)
 15045  0AF1  30A8               	movlw	high (STR_47| (0+32768))
 15046  0AF2  00A1               	movwf	(printf@f^(0+128)+1)
 15047  0AF3  3186  26A1  318A   	fcall	_printf
 15048                           
 15049                           ;main.c: 560: if(drv_read(0x01) > 0)
 15050  0AF6  3001               	movlw	1
 15051  0AF7  319A  22D0  318A   	fcall	_drv_read
 15052  0AFA  0021               	movlb	1	; select bank1
 15053  0AFB  0836               	movf	(?_drv_read+1)^(0+128),w
 15054  0AFC  3A80               	xorlw	128
 15055  0AFD  00D3               	movwf	??_commCheck^(0+128)
 15056  0AFE  3080               	movlw	128
 15057  0AFF  0253               	subwf	??_commCheck^(0+128),w
 15058  0B00  1D03               	skipz
 15059  0B01  2B04               	goto	u8115
 15060  0B02  3001               	movlw	1
 15061  0B03  0235               	subwf	?_drv_read^(0+128),w
 15062  0B04                     u8115:	
 15063  0B04  1C03               	skipc
 15064  0B05  2B0B               	goto	l8098
 15065                           
 15066                           ;main.c: 561: printf("passed\n\n");
 15067  0B06  30DA               	movlw	low (STR_48| (0+32768))
 15068  0B07  0021               	movlb	1	; select bank1
 15069  0B08  00A0               	movwf	printf@f^(0+128)
 15070  0B09  30A9               	movlw	high (STR_48| (0+32768))
 15071  0B0A  2B0F               	goto	L26
 15072  0B0B                     l8098:	
 15073                           
 15074                           ;main.c: 562: else
 15075                           ;main.c: 563: printf("FAILED\n\n");
 15076  0B0B  30D1               	movlw	low (STR_49| (0+32768))
 15077  0B0C  0021               	movlb	1	; select bank1
 15078  0B0D  00A0               	movwf	printf@f^(0+128)
 15079  0B0E  30A9               	movlw	high (STR_49| (0+32768))
 15080  0B0F                     L26:	
 15081  0B0F  00A1               	movwf	(printf@f^(0+128)+1)
 15082  0B10  3186  26A1  318A   	fcall	_printf
 15083                           
 15084                           ;main.c: 564: printf("----finished comm test----\n");
 15085  0B13  3065               	movlw	low (STR_50| (0+32768))
 15086  0B14  0021               	movlb	1	; select bank1
 15087  0B15  00A0               	movwf	printf@f^(0+128)
 15088  0B16  30A8               	movlw	high (STR_50| (0+32768))
 15089  0B17  00A1               	movwf	(printf@f^(0+128)+1)
 15090  0B18  3186  26A1         	fcall	_printf
 15091  0B1A  0008               	return
 15092  0B1B                     __end_of_commCheck:	
 15093                           
 15094                           	psect	text46
 15095  14E0                     __ptext46:	
 15096 ;; *************** function _LED_test_openshort *****************
 15097 ;; Defined at:
 15098 ;;		line 95 in file "LEDcomm.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;  type            2   21[BANK1 ] int 
 15101 ;;  topOrBottom     2   23[BANK1 ] int 
 15102 ;; Auto vars:     Size  Location     Type
 15103 ;;  j               2   30[BANK1 ] int 
 15104 ;;  readData        4   26[BANK1 ] unsigned long 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  1    wreg      void 
 15107 ;; Registers used:
 15108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15114 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15115 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15116 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15117 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15118 ;;Total ram usage:       11 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:    9
 15121 ;; This function calls:
 15122 ;;		_LEDsOn
 15123 ;;		_printf
 15124 ;;		_send_2length_2bytes_IK
 15125 ;; This function is called by:
 15126 ;;		_commCheck
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           
 15131                           ;psect for function _LED_test_openshort
 15132  14E0                     _LED_test_openshort:	
 15133                           
 15134                           ;incstack = 0
 15135                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15136                           ;LEDcomm.c: 97: do { LATCbits.LATC1 = 1; } while(0);
 15137  14E0  0022               	movlb	2	; select bank2
 15138  14E1  148E               	bsf	14,1	;volatile
 15139                           
 15140                           ;LEDcomm.c: 98: LEDsOn(0xFFFFFFFF, topOrBottom);
 15141  14E2  30FF               	movlw	255
 15142  14E3  0020               	movlb	0	; select bank0
 15143  14E4  00C7               	movwf	LEDsOn@LEDpins+3
 15144  14E5  30FF               	movlw	255
 15145  14E6  00C6               	movwf	LEDsOn@LEDpins+2
 15146  14E7  30FF               	movlw	255
 15147  14E8  00C5               	movwf	LEDsOn@LEDpins+1
 15148  14E9  30FF               	movlw	255
 15149  14EA  00C4               	movwf	LEDsOn@LEDpins
 15150  14EB  0021               	movlb	1	; select bank1
 15151  14EC  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15152  14ED  0020               	movlb	0	; select bank0
 15153  14EE  00C9               	movwf	LEDsOn@topOrBottom+1
 15154  14EF  0021               	movlb	1	; select bank1
 15155  14F0  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15156  14F1  0020               	movlb	0	; select bank0
 15157  14F2  00C8               	movwf	LEDsOn@topOrBottom
 15158  14F3  31A6  2696  3194   	fcall	_LEDsOn
 15159                           
 15160                           ;LEDcomm.c: 99: send_2length_2bytes_IK(0,0,type,topOrBottom);
 15161  14F6  3000               	movlw	0
 15162  14F7  0020               	movlb	0	; select bank0
 15163  14F8  00BC               	movwf	send_2length_2bytes_IK@data1
 15164  14F9  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15165  14FA  3000               	movlw	0
 15166  14FB  00BE               	movwf	send_2length_2bytes_IK@data2
 15167  14FC  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15168  14FD  0021               	movlb	1	; select bank1
 15169  14FE  0835               	movf	LED_test_openshort@type^(0+128),w
 15170  14FF  00B9               	movwf	??_LED_test_openshort^(0+128)
 15171  1500  0839               	movf	??_LED_test_openshort^(0+128),w
 15172  1501  0020               	movlb	0	; select bank0
 15173  1502  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15174  1503  0021               	movlb	1	; select bank1
 15175  1504  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15176  1505  0020               	movlb	0	; select bank0
 15177  1506  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15178  1507  0021               	movlb	1	; select bank1
 15179  1508  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15180  1509  0020               	movlb	0	; select bank0
 15181  150A  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15182  150B  31A4  24FF  3194   	fcall	_send_2length_2bytes_IK
 15183                           
 15184                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 0; } while(0);
 15185  150E  0022               	movlb	2	; select bank2
 15186  150F  108E               	bcf	14,1	;volatile
 15187                           
 15188                           ;LEDcomm.c: 103: unsigned long readData = 0;
 15189  1510  3000               	movlw	0
 15190  1511  0021               	movlb	1	; select bank1
 15191  1512  00BD               	movwf	(LED_test_openshort@readData+3)^(0+128)
 15192  1513  3000               	movlw	0
 15193  1514  00BC               	movwf	(LED_test_openshort@readData+2)^(0+128)
 15194  1515  3000               	movlw	0
 15195  1516  00BB               	movwf	(LED_test_openshort@readData+1)^(0+128)
 15196  1517  3000               	movlw	0
 15197  1518  00BA               	movwf	LED_test_openshort@readData^(0+128)
 15198                           
 15199                           ;LEDcomm.c: 105: for(int j = 23; j>=0; j--){
 15200  1519  3017               	movlw	23
 15201  151A  00BE               	movwf	LED_test_openshort@j^(0+128)
 15202  151B  3000               	movlw	0
 15203  151C  00BF               	movwf	(LED_test_openshort@j^(0+128)+1)
 15204  151D  1BBF               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 15205  151E  2D42               	goto	l7532
 15206  151F                     l279:	
 15207                           ;LEDcomm.c: 106: do { LATAbits.LATA2 = 1; } while(0);
 15208                           
 15209  151F  0022               	movlb	2	; select bank2
 15210  1520  150C               	bsf	12,2	;volatile
 15211                           
 15212                           ;LEDcomm.c: 107: _delay((unsigned long)((10)*(1000000/4000000.0)));
 15213  1521  3200               	nop2	;2 cycle nop
 15214                           
 15215                           ;LEDcomm.c: 108: do { LATAbits.LATA2 = 0; } while(0);
 15216  1522  0022               	movlb	2	; select bank2
 15217  1523  110C               	bcf	12,2	;volatile
 15218                           
 15219                           ;LEDcomm.c: 110: if (PORTCbits.RC6) printf("%d ", j);
 15220  1524  0020               	movlb	0	; select bank0
 15221  1525  1F0E               	btfss	14,6	;volatile
 15222  1526  2D33               	goto	l7526
 15223  1527  305F               	movlw	low (STR_1| (0+32768))
 15224  1528  0021               	movlb	1	; select bank1
 15225  1529  00A0               	movwf	printf@f^(0+128)
 15226  152A  30AA               	movlw	high (STR_1| (0+32768))
 15227  152B  00A1               	movwf	(printf@f^(0+128)+1)
 15228  152C  083F               	movf	(LED_test_openshort@j+1)^(0+128),w
 15229  152D  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15230  152E  083E               	movf	LED_test_openshort@j^(0+128),w
 15231  152F  00A2               	movwf	(?_printf^(0+128)+2)
 15232  1530  3186  26A1  3194   	fcall	_printf
 15233  1533                     l7526:	
 15234                           
 15235                           ;LEDcomm.c: 116: if (j == 23) do { LATCbits.LATC1 = 1; } while(0);
 15236  1533  3017               	movlw	23
 15237  1534  0021               	movlb	1	; select bank1
 15238  1535  063E               	xorwf	LED_test_openshort@j^(0+128),w
 15239  1536  043F               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 15240  1537  1D03               	btfss	3,2
 15241  1538  2D3B               	goto	l7528
 15242  1539  0022               	movlb	2	; select bank2
 15243  153A  148E               	bsf	14,1	;volatile
 15244  153B                     l7528:	
 15245  153B  30FF               	movlw	255
 15246  153C  0021               	movlb	1	; select bank1
 15247  153D  07BE               	addwf	LED_test_openshort@j^(0+128),f
 15248  153E  30FF               	movlw	255
 15249  153F  3DBF               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 15250  1540  1FBF               	btfss	(LED_test_openshort@j+1)^(0+128),7
 15251  1541  2D1F               	goto	l279
 15252  1542                     l7532:	
 15253                           
 15254                           ;LEDcomm.c: 117: }
 15255                           ;LEDcomm.c: 118: printf("\n");
 15256  1542  3063               	movlw	low ((STR_36+28)| (0+32768))
 15257  1543  00A0               	movwf	printf@f^(0+128)
 15258  1544  30A8               	movlw	high ((STR_36+28)| (0+32768))
 15259  1545  00A1               	movwf	(printf@f^(0+128)+1)
 15260  1546  3186  26A1         	fcall	_printf
 15261  1548  0008               	return
 15262  1549                     __end_of_LED_test_openshort:	
 15263                           
 15264                           	psect	text47
 15265  0838                     __ptext47:	
 15266 ;; *************** function _LED_testComm *****************
 15267 ;; Defined at:
 15268 ;;		line 151 in file "LEDcomm.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  topOrBottom     2   41[BANK1 ] int 
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;  oldConfigReg    4   45[BANK1 ] long 
 15273 ;;  readResult      2   43[BANK1 ] int 
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  2   41[BANK1 ] int 
 15276 ;; Registers used:
 15277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15278 ;; Tracked objects:
 15279 ;;		On entry : 0/0
 15280 ;;		On exit  : 0/0
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15283 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15284 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15285 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15286 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15287 ;;Total ram usage:       10 bytes
 15288 ;; Hardware stack levels used:    1
 15289 ;; Hardware stack levels required when called:   11
 15290 ;; This function calls:
 15291 ;;		_LED_readConfig
 15292 ;;		_LED_setBrightnessRange
 15293 ;; This function is called by:
 15294 ;;		_commCheck
 15295 ;; This function uses a non-reentrant model
 15296 ;;
 15297                           
 15298                           
 15299                           ;psect for function _LED_testComm
 15300  0838                     _LED_testComm:	
 15301                           
 15302                           ;LEDcomm.c: 153: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15303                           
 15304                           ;incstack = 0
 15305                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15306  0838  0021               	movlb	1	; select bank1
 15307  0839  0349               	decf	LED_testComm@topOrBottom^(0+128),w
 15308  083A  044A               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 15309  083B  1903               	btfsc	3,2
 15310  083C  284C               	goto	l7538
 15311  083D  0022               	movlb	2	; select bank2
 15312  083E  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15313  083F  0021               	movlb	1	; select bank1
 15314  0840  00D0               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15315  0841  0022               	movlb	2	; select bank2
 15316  0842  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15317  0843  0021               	movlb	1	; select bank1
 15318  0844  00CF               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15319  0845  0022               	movlb	2	; select bank2
 15320  0846  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15321  0847  0021               	movlb	1	; select bank1
 15322  0848  00CE               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15323  0849  0022               	movlb	2	; select bank2
 15324  084A  084A               	movf	_LED_configReg_bot^(0+256),w
 15325  084B  285A               	goto	L27
 15326  084C                     l7538:	
 15327  084C  0022               	movlb	2	; select bank2
 15328  084D  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15329  084E  0021               	movlb	1	; select bank1
 15330  084F  00D0               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15331  0850  0022               	movlb	2	; select bank2
 15332  0851  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15333  0852  0021               	movlb	1	; select bank1
 15334  0853  00CF               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15335  0854  0022               	movlb	2	; select bank2
 15336  0855  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15337  0856  0021               	movlb	1	; select bank1
 15338  0857  00CE               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15339  0858  0022               	movlb	2	; select bank2
 15340  0859  084E               	movf	_LED_configReg_top^(0+256),w
 15341  085A                     L27:	
 15342  085A  0021               	movlb	1	; select bank1
 15343  085B  00CD               	movwf	LED_testComm@oldConfigReg^(0+128)
 15344                           
 15345                           ;LEDcomm.c: 154: LED_setBrightnessRange(1, topOrBottom);
 15346  085C  3001               	movlw	1
 15347  085D  0020               	movlb	0	; select bank0
 15348  085E  00C4               	movwf	LED_setBrightnessRange@range
 15349  085F  3000               	movlw	0
 15350  0860  00C5               	movwf	LED_setBrightnessRange@range+1
 15351  0861  0021               	movlb	1	; select bank1
 15352  0862  084A               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15353  0863  0020               	movlb	0	; select bank0
 15354  0864  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15355  0865  0021               	movlb	1	; select bank1
 15356  0866  0849               	movf	LED_testComm@topOrBottom^(0+128),w
 15357  0867  0020               	movlb	0	; select bank0
 15358  0868  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15359  0869  318B  23F6  3188   	fcall	_LED_setBrightnessRange
 15360                           
 15361                           ;LEDcomm.c: 155: int readResult = LED_readConfig(topOrBottom);
 15362  086C  0021               	movlb	1	; select bank1
 15363  086D  084A               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15364  086E  00C6               	movwf	(LED_readConfig@topOrBottom+1)^(0+128)
 15365  086F  0849               	movf	LED_testComm@topOrBottom^(0+128),w
 15366  0870  00C5               	movwf	LED_readConfig@topOrBottom^(0+128)
 15367  0871  31A7  2768  3188   	fcall	_LED_readConfig
 15368  0874  0021               	movlb	1	; select bank1
 15369  0875  0846               	movf	(?_LED_readConfig+1)^(0+128),w
 15370  0876  00CC               	movwf	(LED_testComm@readResult+1)^(0+128)
 15371  0877  0845               	movf	?_LED_readConfig^(0+128),w
 15372  0878  00CB               	movwf	LED_testComm@readResult^(0+128)
 15373                           
 15374                           ;LEDcomm.c: 157: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 15375  0879  1BD0               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 15376  087A  288A               	goto	u7390
 15377  087B  0850               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 15378  087C  1D03               	btfss	3,2
 15379  087D  2888               	goto	u7391
 15380  087E  084F               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 15381  087F  1D03               	btfss	3,2
 15382  0880  2888               	goto	u7391
 15383  0881  084E               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 15384  0882  1D03               	btfss	3,2
 15385  0883  2888               	goto	u7391
 15386  0884  3001               	movlw	1
 15387  0885  024D               	subwf	LED_testComm@oldConfigReg^(0+128),w
 15388  0886  1C03               	btfss	3,0
 15389  0887  288A               	goto	u7390
 15390  0888                     u7391:	
 15391  0888  3001               	movlw	1
 15392  0889  288B               	goto	u7400
 15393  088A                     u7390:	
 15394  088A  3000               	movlw	0
 15395  088B                     u7400:	
 15396  088B  0020               	movlb	0	; select bank0
 15397  088C  00CC               	movwf	??_LED_testComm
 15398  088D  01CD               	clrf	??_LED_testComm+1
 15399  088E  084C               	movf	??_LED_testComm,w
 15400  088F  00C4               	movwf	LED_setBrightnessRange@range
 15401  0890  084D               	movf	??_LED_testComm+1,w
 15402  0891  00C5               	movwf	LED_setBrightnessRange@range+1
 15403  0892  0021               	movlb	1	; select bank1
 15404  0893  084A               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15405  0894  0020               	movlb	0	; select bank0
 15406  0895  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15407  0896  0021               	movlb	1	; select bank1
 15408  0897  0849               	movf	LED_testComm@topOrBottom^(0+128),w
 15409  0898  0020               	movlb	0	; select bank0
 15410  0899  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15411  089A  318B  23F6  3188   	fcall	_LED_setBrightnessRange
 15412                           
 15413                           ;LEDcomm.c: 159: return (readResult != 7);
 15414  089D  3007               	movlw	7
 15415  089E  0021               	movlb	1	; select bank1
 15416  089F  064B               	xorwf	LED_testComm@readResult^(0+128),w
 15417  08A0  044C               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 15418  08A1  1903               	btfsc	3,2
 15419  08A2  28A5               	goto	u7410
 15420  08A3  3001               	movlw	1
 15421  08A4  28A6               	goto	u7420
 15422  08A5                     u7410:	
 15423  08A5  3000               	movlw	0
 15424  08A6                     u7420:	
 15425  08A6  0020               	movlb	0	; select bank0
 15426  08A7  00CC               	movwf	??_LED_testComm
 15427  08A8  01CD               	clrf	??_LED_testComm+1
 15428  08A9  084C               	movf	??_LED_testComm,w
 15429  08AA  0021               	movlb	1	; select bank1
 15430  08AB  00C9               	movwf	?_LED_testComm^(0+128)
 15431  08AC  0020               	movlb	0	; select bank0
 15432  08AD  084D               	movf	??_LED_testComm+1,w
 15433  08AE  0021               	movlb	1	; select bank1
 15434  08AF  00CA               	movwf	(?_LED_testComm+1)^(0+128)
 15435  08B0  0008               	return
 15436  08B1                     __end_of_LED_testComm:	
 15437                           
 15438                           	psect	text48
 15439  0BF6                     __ptext48:	
 15440 ;; *************** function _LED_setBrightnessRange *****************
 15441 ;; Defined at:
 15442 ;;		line 77 in file "LEDcomm.c"
 15443 ;; Parameters:    Size  Location     Type
 15444 ;;  range           2   36[BANK0 ] int 
 15445 ;;  topOrBottom     2   38[BANK0 ] int 
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;  LED_configRe    4   40[BANK0 ] long 
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		wreg, status,2, status,0, pclath, cstack
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15459 ;;      Temps:          0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15460 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15461 ;;Total ram usage:       25 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; Hardware stack levels required when called:    8
 15464 ;; This function calls:
 15465 ;;		_send_2length_2bytes_IK
 15466 ;; This function is called by:
 15467 ;;		_LED_testComm
 15468 ;;		_main_initialize
 15469 ;;		_setLEDBrightnessRange
 15470 ;; This function uses a non-reentrant model
 15471 ;;
 15472                           
 15473                           
 15474                           ;psect for function _LED_setBrightnessRange
 15475  0BF6                     _LED_setBrightnessRange:	
 15476                           
 15477                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15478                           
 15479                           ;incstack = 0
 15480                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 15481  0BF6  0020               	movlb	0	; select bank0
 15482  0BF7  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15483  0BF8  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15484  0BF9  1903               	btfsc	3,2
 15485  0BFA  2C0A               	goto	l7430
 15486  0BFB  0022               	movlb	2	; select bank2
 15487  0BFC  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15488  0BFD  0020               	movlb	0	; select bank0
 15489  0BFE  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15490  0BFF  0022               	movlb	2	; select bank2
 15491  0C00  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15492  0C01  0020               	movlb	0	; select bank0
 15493  0C02  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15494  0C03  0022               	movlb	2	; select bank2
 15495  0C04  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15496  0C05  0020               	movlb	0	; select bank0
 15497  0C06  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15498  0C07  0022               	movlb	2	; select bank2
 15499  0C08  084A               	movf	_LED_configReg_bot^(0+256),w
 15500  0C09  2C18               	goto	L28
 15501  0C0A                     l7430:	
 15502  0C0A  0022               	movlb	2	; select bank2
 15503  0C0B  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15504  0C0C  0020               	movlb	0	; select bank0
 15505  0C0D  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15506  0C0E  0022               	movlb	2	; select bank2
 15507  0C0F  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15508  0C10  0020               	movlb	0	; select bank0
 15509  0C11  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15510  0C12  0022               	movlb	2	; select bank2
 15511  0C13  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15512  0C14  0020               	movlb	0	; select bank0
 15513  0C15  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15514  0C16  0022               	movlb	2	; select bank2
 15515  0C17  084E               	movf	_LED_configReg_top^(0+256),w
 15516  0C18                     L28:	
 15517  0C18  0020               	movlb	0	; select bank0
 15518  0C19  00C8               	movwf	LED_setBrightnessRange@LED_configReg
 15519                           
 15520                           ;LEDcomm.c: 80: LED_configReg |= ((range>0) | (range>0)<<1 | (range>0) << 2);
 15521  0C1A  0845               	movf	LED_setBrightnessRange@range+1,w
 15522  0C1B  3A80               	xorlw	128
 15523  0C1C  0021               	movlb	1	; select bank1
 15524  0C1D  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15525  0C1E  3080               	movlw	128
 15526  0C1F  0220               	subwf	??_LED_setBrightnessRange^(0+128),w
 15527  0C20  1D03               	skipz
 15528  0C21  2C25               	goto	u7095
 15529  0C22  3001               	movlw	1
 15530  0C23  0020               	movlb	0	; select bank0
 15531  0C24  0244               	subwf	LED_setBrightnessRange@range,w
 15532  0C25                     u7095:	
 15533  0C25  1C03               	btfss	3,0
 15534  0C26  2C29               	goto	u7090
 15535  0C27  3001               	movlw	1
 15536  0C28  2C2A               	goto	u7100
 15537  0C29                     u7090:	
 15538  0C29  3000               	movlw	0
 15539  0C2A                     u7100:	
 15540  0C2A  0021               	movlb	1	; select bank1
 15541  0C2B  00A1               	movwf	(??_LED_setBrightnessRange+1)^(0+128)
 15542  0C2C  01A2               	clrf	((??_LED_setBrightnessRange+1)^(0+128)+1)
 15543  0C2D  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15544  0C2E  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15545  0C2F  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15546  0C30  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15547  0C31  0020               	movlb	0	; select bank0
 15548  0C32  0845               	movf	LED_setBrightnessRange@range+1,w
 15549  0C33  3A80               	xorlw	128
 15550  0C34  0021               	movlb	1	; select bank1
 15551  0C35  00A3               	movwf	(??_LED_setBrightnessRange+3)^(0+128)
 15552  0C36  3080               	movlw	128
 15553  0C37  0223               	subwf	(??_LED_setBrightnessRange+3)^(0+128),w
 15554  0C38  1D03               	skipz
 15555  0C39  2C3D               	goto	u7115
 15556  0C3A  3001               	movlw	1
 15557  0C3B  0020               	movlb	0	; select bank0
 15558  0C3C  0244               	subwf	LED_setBrightnessRange@range,w
 15559  0C3D                     u7115:	
 15560  0C3D  1C03               	btfss	3,0
 15561  0C3E  2C41               	goto	u7110
 15562  0C3F  3001               	movlw	1
 15563  0C40  2C42               	goto	u7120
 15564  0C41                     u7110:	
 15565  0C41  3000               	movlw	0
 15566  0C42                     u7120:	
 15567  0C42  0021               	movlb	1	; select bank1
 15568  0C43  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15569  0C44  01A5               	clrf	((??_LED_setBrightnessRange+4)^(0+128)+1)
 15570  0C45  35A4               	lslf	(??_LED_setBrightnessRange+4)^(0+128),f
 15571  0C46  0DA5               	rlf	((??_LED_setBrightnessRange+4)^(0+128)+1),f
 15572  0C47  0020               	movlb	0	; select bank0
 15573  0C48  0845               	movf	LED_setBrightnessRange@range+1,w
 15574  0C49  3A80               	xorlw	128
 15575  0C4A  0021               	movlb	1	; select bank1
 15576  0C4B  00A6               	movwf	(??_LED_setBrightnessRange+6)^(0+128)
 15577  0C4C  3080               	movlw	128
 15578  0C4D  0226               	subwf	(??_LED_setBrightnessRange+6)^(0+128),w
 15579  0C4E  1D03               	skipz
 15580  0C4F  2C53               	goto	u7135
 15581  0C50  3001               	movlw	1
 15582  0C51  0020               	movlb	0	; select bank0
 15583  0C52  0244               	subwf	LED_setBrightnessRange@range,w
 15584  0C53                     u7135:	
 15585  0C53  1C03               	btfss	3,0
 15586  0C54  2C57               	goto	u7130
 15587  0C55  3001               	movlw	1
 15588  0C56  2C58               	goto	u7140
 15589  0C57                     u7130:	
 15590  0C57  3000               	movlw	0
 15591  0C58                     u7140:	
 15592  0C58  0021               	movlb	1	; select bank1
 15593  0C59  00A7               	movwf	(??_LED_setBrightnessRange+7)^(0+128)
 15594  0C5A  01A8               	clrf	((??_LED_setBrightnessRange+7)^(0+128)+1)
 15595  0C5B  0824               	movf	(??_LED_setBrightnessRange+4)^(0+128),w
 15596  0C5C  0427               	iorwf	(??_LED_setBrightnessRange+7)^(0+128),w
 15597  0C5D  00A9               	movwf	(??_LED_setBrightnessRange+9)^(0+128)
 15598  0C5E  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15599  0C5F  0428               	iorwf	(??_LED_setBrightnessRange+8)^(0+128),w
 15600  0C60  00AA               	movwf	(??_LED_setBrightnessRange+10)^(0+128)
 15601  0C61  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15602  0C62  0429               	iorwf	(??_LED_setBrightnessRange+9)^(0+128),w
 15603  0C63  00AB               	movwf	(??_LED_setBrightnessRange+11)^(0+128)
 15604  0C64  0822               	movf	(??_LED_setBrightnessRange+2)^(0+128),w
 15605  0C65  042A               	iorwf	(??_LED_setBrightnessRange+10)^(0+128),w
 15606  0C66  00AC               	movwf	(??_LED_setBrightnessRange+12)^(0+128)
 15607  0C67  082B               	movf	(??_LED_setBrightnessRange+11)^(0+128),w
 15608  0C68  00AD               	movwf	(??_LED_setBrightnessRange+13)^(0+128)
 15609  0C69  082C               	movf	(??_LED_setBrightnessRange+12)^(0+128),w
 15610  0C6A  00AE               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+1)
 15611  0C6B  3000               	movlw	0
 15612  0C6C  1BAE               	btfsc	((??_LED_setBrightnessRange+13)^(0+128)+1),7
 15613  0C6D  30FF               	movlw	255
 15614  0C6E  00AF               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+2)
 15615  0C6F  00B0               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+3)
 15616  0C70  082D               	movf	(??_LED_setBrightnessRange+13)^(0+128),w
 15617  0C71  0020               	movlb	0	; select bank0
 15618  0C72  04C8               	iorwf	LED_setBrightnessRange@LED_configReg,f
 15619  0C73  0021               	movlb	1	; select bank1
 15620  0C74  082E               	movf	(??_LED_setBrightnessRange+14)^(0+128),w
 15621  0C75  0020               	movlb	0	; select bank0
 15622  0C76  04C9               	iorwf	LED_setBrightnessRange@LED_configReg+1,f
 15623  0C77  0021               	movlb	1	; select bank1
 15624  0C78  082F               	movf	(??_LED_setBrightnessRange+15)^(0+128),w
 15625  0C79  0020               	movlb	0	; select bank0
 15626  0C7A  04CA               	iorwf	LED_setBrightnessRange@LED_configReg+2,f
 15627  0C7B  0021               	movlb	1	; select bank1
 15628  0C7C  0830               	movf	(??_LED_setBrightnessRange+16)^(0+128),w
 15629  0C7D  0020               	movlb	0	; select bank0
 15630  0C7E  04CB               	iorwf	LED_setBrightnessRange@LED_configReg+3,f
 15631                           
 15632                           ;LEDcomm.c: 81: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 15633  0C7F  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15634  0C80  0021               	movlb	1	; select bank1
 15635  0C81  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15636  0C82  0020               	movlb	0	; select bank0
 15637  0C83  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15638  0C84  0021               	movlb	1	; select bank1
 15639  0C85  00A1               	movwf	(??_LED_setBrightnessRange^(0+128)+1)
 15640  0C86  0020               	movlb	0	; select bank0
 15641  0C87  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15642  0C88  0021               	movlb	1	; select bank1
 15643  0C89  00A2               	movwf	(??_LED_setBrightnessRange^(0+128)+2)
 15644  0C8A  0020               	movlb	0	; select bank0
 15645  0C8B  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15646  0C8C  0021               	movlb	1	; select bank1
 15647  0C8D  00A3               	movwf	(??_LED_setBrightnessRange^(0+128)+3)
 15648  0C8E  3010               	movlw	16
 15649  0C8F  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15650  0C90                     u7155:	
 15651  0C90  37A3               	asrf	(??_LED_setBrightnessRange^(0+128)+3),f
 15652  0C91  0CA2               	rrf	(??_LED_setBrightnessRange^(0+128)+2),f
 15653  0C92  0CA1               	rrf	(??_LED_setBrightnessRange^(0+128)+1),f
 15654  0C93  0CA0               	rrf	??_LED_setBrightnessRange^(0+128),f
 15655  0C94  0BA4               	decfsz	(??_LED_setBrightnessRange+4)^(0+128),f
 15656  0C95  2C90               	goto	u7155
 15657  0C96  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15658  0C97  0020               	movlb	0	; select bank0
 15659  0C98  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15660  0C99  0021               	movlb	1	; select bank1
 15661  0C9A  0820               	movf	??_LED_setBrightnessRange^(0+128),w
 15662  0C9B  0020               	movlb	0	; select bank0
 15663  0C9C  00BC               	movwf	send_2length_2bytes_IK@data1
 15664  0C9D  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15665  0C9E  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15666  0C9F  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15667  0CA0  00BE               	movwf	send_2length_2bytes_IK@data2
 15668  0CA1  3003               	movlw	3
 15669  0CA2  0021               	movlb	1	; select bank1
 15670  0CA3  00A5               	movwf	(??_LED_setBrightnessRange+5)^(0+128)
 15671  0CA4  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15672  0CA5  0020               	movlb	0	; select bank0
 15673  0CA6  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15674  0CA7  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 15675  0CA8  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15676  0CA9  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 15677  0CAA  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15678  0CAB  31A4  24FF  318B   	fcall	_send_2length_2bytes_IK
 15679                           
 15680                           ;LEDcomm.c: 84: if (topOrBottom == 1)
 15681  0CAE  0020               	movlb	0	; select bank0
 15682  0CAF  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15683  0CB0  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15684  0CB1  1D03               	btfss	3,2
 15685  0CB2  2CC3               	goto	l7440
 15686                           
 15687                           ;LEDcomm.c: 85: LED_configReg_top = LED_configReg;
 15688  0CB3  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15689  0CB4  0022               	movlb	2	; select bank2
 15690  0CB5  00D1               	movwf	(_LED_configReg_top+3)^(0+256)
 15691  0CB6  0020               	movlb	0	; select bank0
 15692  0CB7  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15693  0CB8  0022               	movlb	2	; select bank2
 15694  0CB9  00D0               	movwf	(_LED_configReg_top+2)^(0+256)
 15695  0CBA  0020               	movlb	0	; select bank0
 15696  0CBB  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15697  0CBC  0022               	movlb	2	; select bank2
 15698  0CBD  00CF               	movwf	(_LED_configReg_top+1)^(0+256)
 15699  0CBE  0020               	movlb	0	; select bank0
 15700  0CBF  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15701  0CC0  0022               	movlb	2	; select bank2
 15702  0CC1  00CE               	movwf	_LED_configReg_top^(0+256)
 15703  0CC2  0008               	return
 15704  0CC3                     l7440:	
 15705                           
 15706                           ;LEDcomm.c: 86: else
 15707                           ;LEDcomm.c: 87: LED_configReg_bot = LED_configReg;
 15708  0CC3  0020               	movlb	0	; select bank0
 15709  0CC4  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15710  0CC5  0022               	movlb	2	; select bank2
 15711  0CC6  00CD               	movwf	(_LED_configReg_bot+3)^(0+256)
 15712  0CC7  0020               	movlb	0	; select bank0
 15713  0CC8  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15714  0CC9  0022               	movlb	2	; select bank2
 15715  0CCA  00CC               	movwf	(_LED_configReg_bot+2)^(0+256)
 15716  0CCB  0020               	movlb	0	; select bank0
 15717  0CCC  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15718  0CCD  0022               	movlb	2	; select bank2
 15719  0CCE  00CB               	movwf	(_LED_configReg_bot+1)^(0+256)
 15720  0CCF  0020               	movlb	0	; select bank0
 15721  0CD0  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15722  0CD1  0022               	movlb	2	; select bank2
 15723  0CD2  00CA               	movwf	_LED_configReg_bot^(0+256)
 15724  0CD3  0008               	return
 15725  0CD4                     __end_of_LED_setBrightnessRange:	
 15726                           
 15727                           	psect	text49
 15728  2768                     __ptext49:	
 15729 ;; *************** function _LED_readConfig *****************
 15730 ;; Defined at:
 15731 ;;		line 123 in file "LEDcomm.c"
 15732 ;; Parameters:    Size  Location     Type
 15733 ;;  topOrBottom     2   37[BANK1 ] int 
 15734 ;; Auto vars:     Size  Location     Type
 15735 ;;		None
 15736 ;; Return value:  Size  Location     Type
 15737 ;;                  4   37[BANK1 ] long 
 15738 ;; Registers used:
 15739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15740 ;; Tracked objects:
 15741 ;;		On entry : 0/0
 15742 ;;		On exit  : 0/0
 15743 ;;		Unchanged: 0/0
 15744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15745 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15748 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15749 ;;Total ram usage:        5 bytes
 15750 ;; Hardware stack levels used:    1
 15751 ;; Hardware stack levels required when called:   10
 15752 ;; This function calls:
 15753 ;;		_LED_getData
 15754 ;;		_send_2length_2bytes_IK
 15755 ;; This function is called by:
 15756 ;;		_LED_testComm
 15757 ;; This function uses a non-reentrant model
 15758 ;;
 15759                           
 15760                           
 15761                           ;psect for function _LED_readConfig
 15762  2768                     _LED_readConfig:	
 15763                           
 15764                           ;incstack = 0
 15765                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15766                           ;LEDcomm.c: 124: do { LATCbits.LATC1 = 1; } while(0);
 15767  2768  0022               	movlb	2	; select bank2
 15768  2769  148E               	bsf	14,1	;volatile
 15769                           
 15770                           ;LEDcomm.c: 125: send_2length_2bytes_IK(0,0,5,topOrBottom);
 15771  276A  3000               	movlw	0
 15772  276B  0020               	movlb	0	; select bank0
 15773  276C  00BC               	movwf	send_2length_2bytes_IK@data1
 15774  276D  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15775  276E  3000               	movlw	0
 15776  276F  00BE               	movwf	send_2length_2bytes_IK@data2
 15777  2770  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15778  2771  3005               	movlw	5
 15779  2772  00C9               	movwf	??_LED_readConfig
 15780  2773  0849               	movf	??_LED_readConfig,w
 15781  2774  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15782  2775  0021               	movlb	1	; select bank1
 15783  2776  0846               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 15784  2777  0020               	movlb	0	; select bank0
 15785  2778  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15786  2779  0021               	movlb	1	; select bank1
 15787  277A  0845               	movf	LED_readConfig@topOrBottom^(0+128),w
 15788  277B  0020               	movlb	0	; select bank0
 15789  277C  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15790  277D  31A4  24FF  31A7   	fcall	_send_2length_2bytes_IK
 15791                           
 15792                           ;LEDcomm.c: 126: return LED_getData();
 15793  2780  319E  268C         	fcall	_LED_getData
 15794  2782  0021               	movlb	1	; select bank1
 15795  2783  0838               	movf	(?_LED_getData+3)^(0+128),w
 15796  2784  00C8               	movwf	(?_LED_readConfig+3)^(0+128)
 15797  2785  0837               	movf	(?_LED_getData+2)^(0+128),w
 15798  2786  00C7               	movwf	(?_LED_readConfig+2)^(0+128)
 15799  2787  0836               	movf	(?_LED_getData+1)^(0+128),w
 15800  2788  00C6               	movwf	(?_LED_readConfig+1)^(0+128)
 15801  2789  0835               	movf	?_LED_getData^(0+128),w
 15802  278A  00C5               	movwf	?_LED_readConfig^(0+128)
 15803  278B  0008               	return
 15804  278C                     __end_of_LED_readConfig:	
 15805                           
 15806                           	psect	text50
 15807  1E8C                     __ptext50:	
 15808 ;; *************** function _LED_getData *****************
 15809 ;; Defined at:
 15810 ;;		line 129 in file "LEDcomm.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;		None
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;  j               2   35[BANK1 ] int 
 15815 ;;  readData        4   31[BANK1 ] long 
 15816 ;; Return value:  Size  Location     Type
 15817 ;;                  4   21[BANK1 ] long 
 15818 ;; Registers used:
 15819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15820 ;; Tracked objects:
 15821 ;;		On entry : 0/0
 15822 ;;		On exit  : 0/0
 15823 ;;		Unchanged: 0/0
 15824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15825 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15826 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15827 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15828 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15829 ;;Total ram usage:       16 bytes
 15830 ;; Hardware stack levels used:    1
 15831 ;; Hardware stack levels required when called:    9
 15832 ;; This function calls:
 15833 ;;		_printf
 15834 ;; This function is called by:
 15835 ;;		_LED_readConfig
 15836 ;; This function uses a non-reentrant model
 15837 ;;
 15838                           
 15839                           
 15840                           ;psect for function _LED_getData
 15841  1E8C                     _LED_getData:	
 15842                           
 15843                           ;LEDcomm.c: 131: long readData = 0;
 15844                           
 15845                           ;incstack = 0
 15846                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15847  1E8C  3000               	movlw	0
 15848  1E8D  0021               	movlb	1	; select bank1
 15849  1E8E  00C2               	movwf	(LED_getData@readData+3)^(0+128)
 15850  1E8F  3000               	movlw	0
 15851  1E90  00C1               	movwf	(LED_getData@readData+2)^(0+128)
 15852  1E91  3000               	movlw	0
 15853  1E92  00C0               	movwf	(LED_getData@readData+1)^(0+128)
 15854  1E93  3000               	movlw	0
 15855  1E94  00BF               	movwf	LED_getData@readData^(0+128)
 15856                           
 15857                           ;LEDcomm.c: 132: do { LATBbits.LATB4 = 0; } while(0);
 15858  1E95  0022               	movlb	2	; select bank2
 15859  1E96  120D               	bcf	13,4	;volatile
 15860                           
 15861                           ;LEDcomm.c: 134: for(int j = 23; j>=0; j--){
 15862  1E97  3017               	movlw	23
 15863  1E98  0021               	movlb	1	; select bank1
 15864  1E99  00C3               	movwf	LED_getData@j^(0+128)
 15865  1E9A  3000               	movlw	0
 15866  1E9B  00C4               	movwf	(LED_getData@j^(0+128)+1)
 15867  1E9C  1BC4               	btfsc	(LED_getData@j+1)^(0+128),7
 15868  1E9D  2ECC               	goto	l303
 15869  1E9E                     l299:	
 15870                           ;LEDcomm.c: 135: do { LATAbits.LATA2 = 1; } while(0);
 15871                           
 15872  1E9E  0022               	movlb	2	; select bank2
 15873  1E9F  150C               	bsf	12,2	;volatile
 15874                           
 15875                           ;LEDcomm.c: 136: readData |= (PORTCbits.RC6 << j);
 15876  1EA0  0020               	movlb	0	; select bank0
 15877  1EA1  0E0E               	swapf	14,w	;volatile
 15878  1EA2  0C89               	rrf	9,f
 15879  1EA3  0C89               	rrf	9,f
 15880  1EA4  3901               	andlw	1
 15881  1EA5  0021               	movlb	1	; select bank1
 15882  1EA6  00B9               	movwf	??_LED_getData^(0+128)
 15883  1EA7  01BA               	clrf	(??_LED_getData^(0+128)+1)
 15884  1EA8  0A43               	incf	LED_getData@j^(0+128),w
 15885  1EA9  2EAC               	goto	u7034
 15886  1EAA                     u7035:	
 15887  1EAA  35B9               	lslf	??_LED_getData^(0+128),f
 15888  1EAB  0DBA               	rlf	(??_LED_getData^(0+128)+1),f
 15889  1EAC                     u7034:	
 15890  1EAC  0B89               	decfsz	9,f
 15891  1EAD  2EAA               	goto	u7035
 15892  1EAE  0839               	movf	??_LED_getData^(0+128),w
 15893  1EAF  00BB               	movwf	(??_LED_getData+2)^(0+128)
 15894  1EB0  083A               	movf	(??_LED_getData+1)^(0+128),w
 15895  1EB1  00BC               	movwf	((??_LED_getData+2)^(0+128)+1)
 15896  1EB2  3000               	movlw	0
 15897  1EB3  1BBC               	btfsc	((??_LED_getData+2)^(0+128)+1),7
 15898  1EB4  30FF               	movlw	255
 15899  1EB5  00BD               	movwf	((??_LED_getData+2)^(0+128)+2)
 15900  1EB6  00BE               	movwf	((??_LED_getData+2)^(0+128)+3)
 15901  1EB7  083B               	movf	(??_LED_getData+2)^(0+128),w
 15902  1EB8  04BF               	iorwf	LED_getData@readData^(0+128),f
 15903  1EB9  083C               	movf	(??_LED_getData+3)^(0+128),w
 15904  1EBA  04C0               	iorwf	(LED_getData@readData+1)^(0+128),f
 15905  1EBB  083D               	movf	(??_LED_getData+4)^(0+128),w
 15906  1EBC  04C1               	iorwf	(LED_getData@readData+2)^(0+128),f
 15907  1EBD  083E               	movf	(??_LED_getData+5)^(0+128),w
 15908  1EBE  04C2               	iorwf	(LED_getData@readData+3)^(0+128),f
 15909                           
 15910                           ;LEDcomm.c: 138: do { LATAbits.LATA2 = 0; } while(0);
 15911  1EBF  0022               	movlb	2	; select bank2
 15912  1EC0  110C               	bcf	12,2	;volatile
 15913                           
 15914                           ;LEDcomm.c: 139: _delay((unsigned long)((100)*(1000000/4000000.0)));
 15915  1EC1  3008               	movlw	8
 15916  1EC2                     u8847:	
 15917  1EC2  0B89               	decfsz	9,f
 15918  1EC3  2EC2               	goto	u8847
 15919  1EC4  0000               	nop
 15920  1EC5  30FF               	movlw	255
 15921  1EC6  0021               	movlb	1	; select bank1
 15922  1EC7  07C3               	addwf	LED_getData@j^(0+128),f
 15923  1EC8  30FF               	movlw	255
 15924  1EC9  3DC4               	addwfc	(LED_getData@j+1)^(0+128),f
 15925  1ECA  1FC4               	btfss	(LED_getData@j+1)^(0+128),7
 15926  1ECB  2E9E               	goto	l299
 15927  1ECC                     l303:	
 15928                           ;LEDcomm.c: 141: }
 15929                           ;LEDcomm.c: 143: do { LATAbits.LATA2 = 0; } while(0);
 15930                           
 15931  1ECC  0022               	movlb	2	; select bank2
 15932  1ECD  110C               	bcf	12,2	;volatile
 15933                           
 15934                           ;LEDcomm.c: 144: printf("read data: %lu\n", readData);
 15935  1ECE  304B               	movlw	low (STR_3| (0+32768))
 15936  1ECF  0021               	movlb	1	; select bank1
 15937  1ED0  00A0               	movwf	printf@f^(0+128)
 15938  1ED1  30A9               	movlw	high (STR_3| (0+32768))
 15939  1ED2  00A1               	movwf	(printf@f^(0+128)+1)
 15940  1ED3  0842               	movf	(LED_getData@readData+3)^(0+128),w
 15941  1ED4  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15942  1ED5  0841               	movf	(LED_getData@readData+2)^(0+128),w
 15943  1ED6  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15944  1ED7  0840               	movf	(LED_getData@readData+1)^(0+128),w
 15945  1ED8  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15946  1ED9  083F               	movf	LED_getData@readData^(0+128),w
 15947  1EDA  00A2               	movwf	(?_printf^(0+128)+2)
 15948  1EDB  3186  26A1         	fcall	_printf
 15949                           
 15950                           ;LEDcomm.c: 145: return readData;
 15951  1EDD  0021               	movlb	1	; select bank1
 15952  1EDE  0842               	movf	(LED_getData@readData+3)^(0+128),w
 15953  1EDF  00B8               	movwf	(?_LED_getData+3)^(0+128)
 15954  1EE0  0841               	movf	(LED_getData@readData+2)^(0+128),w
 15955  1EE1  00B7               	movwf	(?_LED_getData+2)^(0+128)
 15956  1EE2  0840               	movf	(LED_getData@readData+1)^(0+128),w
 15957  1EE3  00B6               	movwf	(?_LED_getData+1)^(0+128)
 15958  1EE4  083F               	movf	LED_getData@readData^(0+128),w
 15959  1EE5  00B5               	movwf	?_LED_getData^(0+128)
 15960  1EE6  0008               	return
 15961  1EE7                     __end_of_LED_getData:	
 15962                           
 15963                           	psect	text51
 15964  0ECF                     __ptext51:	
 15965 ;; *************** function _doRelMove *****************
 15966 ;; Defined at:
 15967 ;;		line 335 in file "main.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;		None
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;  j               2   54[BANK1 ] int 
 15972 ;; Return value:  Size  Location     Type
 15973 ;;                  1    wreg      void 
 15974 ;; Registers used:
 15975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15976 ;; Tracked objects:
 15977 ;;		On entry : 0/0
 15978 ;;		On exit  : 0/0
 15979 ;;		Unchanged: 0/0
 15980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15982 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15983 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15984 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15985 ;;Total ram usage:       18 bytes
 15986 ;; Hardware stack levels used:    1
 15987 ;; Hardware stack levels required when called:   16
 15988 ;; This function calls:
 15989 ;;		_doMove
 15990 ;;		_printf
 15991 ;; This function is called by:
 15992 ;;		_main
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           
 15997                           ;psect for function _doRelMove
 15998  0ECF                     _doRelMove:	
 15999                           
 16000                           ;main.c: 336: printf("doRelMove\n");
 16001                           
 16002                           ;incstack = 0
 16003 ;; hardware stack exceeded
 16004                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16005  0ECF  30BB               	movlw	low (STR_11| (0+32768))
 16006  0ED0  0021               	movlb	1	; select bank1
 16007  0ED1  00A0               	movwf	printf@f^(0+128)
 16008  0ED2  30A9               	movlw	high (STR_11| (0+32768))
 16009  0ED3  00A1               	movwf	(printf@f^(0+128)+1)
 16010  0ED4  3186  26A1  318E   	fcall	_printf
 16011                           
 16012                           ;main.c: 337: if(remainingSteps == 0){
 16013  0ED7  0022               	movlb	2	; select bank2
 16014  0ED8  0841               	movf	(_remainingSteps+3)^(0+256),w
 16015  0ED9  0440               	iorwf	(_remainingSteps+2)^(0+256),w
 16016  0EDA  043F               	iorwf	(_remainingSteps+1)^(0+256),w
 16017  0EDB  043E               	iorwf	_remainingSteps^(0+256),w
 16018  0EDC  1D03               	skipz
 16019  0EDD  2EF9               	goto	l8290
 16020                           
 16021                           ;main.c: 338: printf("rel: all there\n");
 16022  0EDE  302B               	movlw	low (STR_12| (0+32768))
 16023  0EDF  0021               	movlb	1	; select bank1
 16024  0EE0  00A0               	movwf	printf@f^(0+128)
 16025  0EE1  30A9               	movlw	high (STR_12| (0+32768))
 16026  0EE2  00A1               	movwf	(printf@f^(0+128)+1)
 16027  0EE3  3186  26A1         	fcall	_printf
 16028                           
 16029                           ;main.c: 339: motionType = NONE;
 16030  0EE5  0020               	movlb	0	; select bank0
 16031  0EE6  01D5               	clrf	_motionType
 16032                           
 16033                           ;main.c: 340: moveVector_ups = 0;
 16034  0EE7  3000               	movlw	0
 16035  0EE8  0021               	movlb	1	; select bank1
 16036  0EE9  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16037  0EEA  3000               	movlw	0
 16038  0EEB  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16039  0EEC  3000               	movlw	0
 16040  0EED  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16041  0EEE  3000               	movlw	0
 16042  0EEF  00E5               	movwf	_moveVector_ups^(0+128)
 16043                           
 16044                           ;main.c: 341: moveVector_downs = 0;
 16045  0EF0  3000               	movlw	0
 16046  0EF1  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16047  0EF2  3000               	movlw	0
 16048  0EF3  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16049  0EF4  3000               	movlw	0
 16050  0EF5  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16051  0EF6  3000               	movlw	0
 16052  0EF7  00E1               	movwf	_moveVector_downs^(0+128)
 16053                           
 16054                           ;main.c: 343: }
 16055                           
 16056                           ;main.c: 342: return;
 16057  0EF8  0008               	return
 16058  0EF9                     l8290:	
 16059                           
 16060                           ;main.c: 344: else{
 16061                           ;main.c: 345: int j;
 16062                           ;main.c: 346: if (remainingSteps > 0){
 16063  0EF9  0022               	movlb	2	; select bank2
 16064  0EFA  1BC1               	btfsc	(_remainingSteps+3)^(0+256),7
 16065  0EFB  2F84               	goto	l8310
 16066  0EFC  0841               	movf	(_remainingSteps+3)^(0+256),w
 16067  0EFD  1D03               	btfss	3,2
 16068  0EFE  2F09               	goto	l8292
 16069  0EFF  0840               	movf	(_remainingSteps+2)^(0+256),w
 16070  0F00  1D03               	btfss	3,2
 16071  0F01  2F09               	goto	l8292
 16072  0F02  083F               	movf	(_remainingSteps+1)^(0+256),w
 16073  0F03  1D03               	btfss	3,2
 16074  0F04  2F09               	goto	l8292
 16075  0F05  3001               	movlw	1
 16076  0F06  023E               	subwf	_remainingSteps^(0+256),w
 16077  0F07  1C03               	btfss	3,0
 16078  0F08  2F84               	goto	l8310
 16079  0F09                     l8292:	
 16080                           
 16081                           ;main.c: 347: moveVector_ups = 0;
 16082  0F09  3000               	movlw	0
 16083  0F0A  0021               	movlb	1	; select bank1
 16084  0F0B  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16085  0F0C  3000               	movlw	0
 16086  0F0D  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16087  0F0E  3000               	movlw	0
 16088  0F0F  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16089  0F10  3000               	movlw	0
 16090  0F11  00E5               	movwf	_moveVector_ups^(0+128)
 16091                           
 16092                           ;main.c: 348: moveVector_downs = activeMask;
 16093  0F12  0860               	movf	(_activeMask+3)^(0+128),w
 16094  0F13  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16095  0F14  085F               	movf	(_activeMask+2)^(0+128),w
 16096  0F15  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16097  0F16  085E               	movf	(_activeMask+1)^(0+128),w
 16098  0F17  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16099  0F18  085D               	movf	_activeMask^(0+128),w
 16100  0F19  00E1               	movwf	_moveVector_downs^(0+128)
 16101                           
 16102                           ;main.c: 350: doMove();
 16103  0F1A  3189  2138  318E   	fcall	_doMove
 16104                           
 16105                           ;main.c: 351: remainingSteps--;
 16106  0F1D  30FF               	movlw	255
 16107  0F1E  0022               	movlb	2	; select bank2
 16108  0F1F  07BE               	addwf	_remainingSteps^(0+256),f
 16109  0F20  30FF               	movlw	255
 16110  0F21  3DBF               	addwfc	(_remainingSteps+1)^(0+256),f
 16111  0F22  30FF               	movlw	255
 16112  0F23  3DC0               	addwfc	(_remainingSteps+2)^(0+256),f
 16113  0F24  30FF               	movlw	255
 16114  0F25  3DC1               	addwfc	(_remainingSteps+3)^(0+256),f
 16115                           
 16116                           ;main.c: 354: for(j = 0; j<24; j++)
 16117  0F26  0021               	movlb	1	; select bank1
 16118  0F27  01D6               	clrf	doRelMove@j^(0+128)
 16119  0F28  01D7               	clrf	(doRelMove@j+1)^(0+128)
 16120  0F29                     L29:	
 16121  0F29  0857               	movf	(doRelMove@j+1)^(0+128),w
 16122  0F2A  3A80               	xorlw	128
 16123  0F2B  00C6               	movwf	??_doRelMove^(0+128)
 16124  0F2C  3080               	movlw	128
 16125  0F2D  0246               	subwf	??_doRelMove^(0+128),w
 16126  0F2E  1D03               	skipz
 16127  0F2F  2F32               	goto	u8175
 16128  0F30  3018               	movlw	24
 16129  0F31  0256               	subwf	doRelMove@j^(0+128),w
 16130  0F32                     u8175:	
 16131  0F32  1803               	btfsc	3,0
 16132  0F33  0008               	return
 16133                           
 16134                           ;main.c: 355: currentPositions_steps[j] += (activeMask & (1UL<<j) > 0);
 16135  0F34  0021               	movlb	1	; select bank1
 16136  0F35  085D               	movf	_activeMask^(0+128),w
 16137  0F36  00C6               	movwf	??_doRelMove^(0+128)
 16138  0F37  085E               	movf	(_activeMask+1)^(0+128),w
 16139  0F38  00C7               	movwf	(??_doRelMove^(0+128)+1)
 16140  0F39  085F               	movf	(_activeMask+2)^(0+128),w
 16141  0F3A  00C8               	movwf	(??_doRelMove^(0+128)+2)
 16142  0F3B  0860               	movf	(_activeMask+3)^(0+128),w
 16143  0F3C  00C9               	movwf	(??_doRelMove^(0+128)+3)
 16144  0F3D  3001               	movlw	1
 16145  0F3E  00CA               	movwf	(??_doRelMove+4)^(0+128)
 16146  0F3F  3000               	movlw	0
 16147  0F40  00CB               	movwf	((??_doRelMove+4)^(0+128)+1)
 16148  0F41  3000               	movlw	0
 16149  0F42  00CC               	movwf	((??_doRelMove+4)^(0+128)+2)
 16150  0F43  3000               	movlw	0
 16151  0F44  00CD               	movwf	((??_doRelMove+4)^(0+128)+3)
 16152  0F45  0A56               	incf	doRelMove@j^(0+128),w
 16153  0F46  2F4B               	goto	u8180
 16154  0F47                     u8185:	
 16155  0F47  35CA               	lslf	(??_doRelMove+4)^(0+128),f
 16156  0F48  0DCB               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16157  0F49  0DCC               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16158  0F4A  0DCD               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16159  0F4B                     u8180:	
 16160  0F4B  0B89               	decfsz	9,f
 16161  0F4C  2F47               	goto	u8185
 16162  0F4D  084D               	movf	(??_doRelMove+7)^(0+128),w
 16163  0F4E  044C               	iorwf	(??_doRelMove+6)^(0+128),w
 16164  0F4F  044B               	iorwf	(??_doRelMove+5)^(0+128),w
 16165  0F50  044A               	iorwf	(??_doRelMove+4)^(0+128),w
 16166  0F51  1903               	btfsc	3,2
 16167  0F52  2F55               	goto	u8190
 16168  0F53  3001               	movlw	1
 16169  0F54  2F56               	goto	u8200
 16170  0F55                     u8190:	
 16171  0F55  3000               	movlw	0
 16172  0F56                     u8200:	
 16173  0F56  00CE               	movwf	(??_doRelMove+8)^(0+128)
 16174  0F57  01CF               	clrf	((??_doRelMove+8)^(0+128)+1)
 16175  0F58  01D0               	clrf	((??_doRelMove+8)^(0+128)+2)
 16176  0F59  01D1               	clrf	((??_doRelMove+8)^(0+128)+3)
 16177  0F5A  084E               	movf	(??_doRelMove+8)^(0+128),w
 16178  0F5B  05C6               	andwf	??_doRelMove^(0+128),f
 16179  0F5C  084F               	movf	(??_doRelMove+9)^(0+128),w
 16180  0F5D  05C7               	andwf	(??_doRelMove^(0+128)+1),f
 16181  0F5E  0850               	movf	(??_doRelMove+10)^(0+128),w
 16182  0F5F  05C8               	andwf	(??_doRelMove^(0+128)+2),f
 16183  0F60  0851               	movf	(??_doRelMove+11)^(0+128),w
 16184  0F61  05C9               	andwf	(??_doRelMove^(0+128)+3),f
 16185  0F62  0857               	movf	(doRelMove@j+1)^(0+128),w
 16186  0F63  00D3               	movwf	((??_doRelMove+12)^(0+128)+1)
 16187  0F64  0856               	movf	doRelMove@j^(0+128),w
 16188  0F65  00D2               	movwf	(??_doRelMove+12)^(0+128)
 16189  0F66  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16190  0F67  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16191  0F68  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16192  0F69  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16193  0F6A  3090               	movlw	144
 16194  0F6B  00D4               	movwf	(??_doRelMove+14)^(0+128)
 16195  0F6C  3027               	movlw	39
 16196  0F6D  00D5               	movwf	((??_doRelMove+14)^(0+128)+1)
 16197  0F6E  0852               	movf	(??_doRelMove+12)^(0+128),w
 16198  0F6F  0754               	addwf	(??_doRelMove+14)^(0+128),w
 16199  0F70  0086               	movwf	6
 16200  0F71  0853               	movf	(??_doRelMove+13)^(0+128),w
 16201  0F72  3D55               	addwfc	(??_doRelMove+15)^(0+128),w
 16202  0F73  0087               	movwf	7
 16203  0F74  0846               	movf	??_doRelMove^(0+128),w
 16204  0F75  0781               	addwf	1,f
 16205  0F76  3141               	addfsr 1,1
 16206  0F77  0847               	movf	(??_doRelMove+1)^(0+128),w
 16207  0F78  3D81               	addwfc	1,f
 16208  0F79  3141               	addfsr 1,1
 16209  0F7A  0848               	movf	(??_doRelMove+2)^(0+128),w
 16210  0F7B  3D81               	addwfc	1,f
 16211  0F7C  3141               	addfsr 1,1
 16212  0F7D  0849               	movf	(??_doRelMove+3)^(0+128),w
 16213  0F7E  3D81               	addwfc	1,f
 16214  0F7F  3001               	movlw	1
 16215  0F80  07D6               	addwf	doRelMove@j^(0+128),f
 16216  0F81  3000               	movlw	0
 16217  0F82  3DD7               	addwfc	(doRelMove@j+1)^(0+128),f
 16218  0F83  2F29               	goto	L29
 16219  0F84                     l8310:	
 16220                           ;main.c: 357: }
 16221                           
 16222                           
 16223                           ;main.c: 358: else{
 16224                           ;main.c: 359: moveVector_ups = activeMask;
 16225  0F84  0021               	movlb	1	; select bank1
 16226  0F85  0860               	movf	(_activeMask+3)^(0+128),w
 16227  0F86  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16228  0F87  085F               	movf	(_activeMask+2)^(0+128),w
 16229  0F88  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16230  0F89  085E               	movf	(_activeMask+1)^(0+128),w
 16231  0F8A  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16232  0F8B  085D               	movf	_activeMask^(0+128),w
 16233  0F8C  00E5               	movwf	_moveVector_ups^(0+128)
 16234                           
 16235                           ;main.c: 360: moveVector_downs = 0;
 16236  0F8D  3000               	movlw	0
 16237  0F8E  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16238  0F8F  3000               	movlw	0
 16239  0F90  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16240  0F91  3000               	movlw	0
 16241  0F92  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16242  0F93  3000               	movlw	0
 16243  0F94  00E1               	movwf	_moveVector_downs^(0+128)
 16244                           
 16245                           ;main.c: 362: doMove();
 16246  0F95  3189  2138  318E   	fcall	_doMove
 16247                           
 16248                           ;main.c: 363: remainingSteps++;
 16249  0F98  3001               	movlw	1
 16250  0F99  0022               	movlb	2	; select bank2
 16251  0F9A  07BE               	addwf	_remainingSteps^(0+256),f
 16252  0F9B  3000               	movlw	0
 16253  0F9C  3DBF               	addwfc	(_remainingSteps+1)^(0+256),f
 16254  0F9D  3000               	movlw	0
 16255  0F9E  3DC0               	addwfc	(_remainingSteps+2)^(0+256),f
 16256  0F9F  3000               	movlw	0
 16257  0FA0  3DC1               	addwfc	(_remainingSteps+3)^(0+256),f
 16258                           
 16259                           ;main.c: 364: for(j = 0; j<24; j++)
 16260  0FA1  0021               	movlb	1	; select bank1
 16261  0FA2  01D6               	clrf	doRelMove@j^(0+128)
 16262  0FA3  01D7               	clrf	(doRelMove@j+1)^(0+128)
 16263  0FA4                     L30:	
 16264  0FA4  0857               	movf	(doRelMove@j+1)^(0+128),w
 16265  0FA5  3A80               	xorlw	128
 16266  0FA6  00C6               	movwf	??_doRelMove^(0+128)
 16267  0FA7  3080               	movlw	128
 16268  0FA8  0246               	subwf	??_doRelMove^(0+128),w
 16269  0FA9  1D03               	skipz
 16270  0FAA  2FAD               	goto	u8225
 16271  0FAB  3018               	movlw	24
 16272  0FAC  0256               	subwf	doRelMove@j^(0+128),w
 16273  0FAD                     u8225:	
 16274  0FAD  1803               	btfsc	3,0
 16275  0FAE  0008               	return
 16276                           
 16277                           ;main.c: 365: currentPositions_steps[j] -= (activeMask & (1UL<<j) > 0);
 16278  0FAF  0021               	movlb	1	; select bank1
 16279  0FB0  085D               	movf	_activeMask^(0+128),w
 16280  0FB1  00C6               	movwf	??_doRelMove^(0+128)
 16281  0FB2  085E               	movf	(_activeMask+1)^(0+128),w
 16282  0FB3  00C7               	movwf	(??_doRelMove^(0+128)+1)
 16283  0FB4  085F               	movf	(_activeMask+2)^(0+128),w
 16284  0FB5  00C8               	movwf	(??_doRelMove^(0+128)+2)
 16285  0FB6  0860               	movf	(_activeMask+3)^(0+128),w
 16286  0FB7  00C9               	movwf	(??_doRelMove^(0+128)+3)
 16287  0FB8  3001               	movlw	1
 16288  0FB9  00CA               	movwf	(??_doRelMove+4)^(0+128)
 16289  0FBA  3000               	movlw	0
 16290  0FBB  00CB               	movwf	((??_doRelMove+4)^(0+128)+1)
 16291  0FBC  3000               	movlw	0
 16292  0FBD  00CC               	movwf	((??_doRelMove+4)^(0+128)+2)
 16293  0FBE  3000               	movlw	0
 16294  0FBF  00CD               	movwf	((??_doRelMove+4)^(0+128)+3)
 16295  0FC0  0A56               	incf	doRelMove@j^(0+128),w
 16296  0FC1  2FC6               	goto	u8230
 16297  0FC2                     u8235:	
 16298  0FC2  35CA               	lslf	(??_doRelMove+4)^(0+128),f
 16299  0FC3  0DCB               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16300  0FC4  0DCC               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16301  0FC5  0DCD               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16302  0FC6                     u8230:	
 16303  0FC6  0B89               	decfsz	9,f
 16304  0FC7  2FC2               	goto	u8235
 16305  0FC8  084D               	movf	(??_doRelMove+7)^(0+128),w
 16306  0FC9  044C               	iorwf	(??_doRelMove+6)^(0+128),w
 16307  0FCA  044B               	iorwf	(??_doRelMove+5)^(0+128),w
 16308  0FCB  044A               	iorwf	(??_doRelMove+4)^(0+128),w
 16309  0FCC  1903               	btfsc	3,2
 16310  0FCD  2FD0               	goto	u8240
 16311  0FCE  3001               	movlw	1
 16312  0FCF  2FD1               	goto	u8250
 16313  0FD0                     u8240:	
 16314  0FD0  3000               	movlw	0
 16315  0FD1                     u8250:	
 16316  0FD1  00CE               	movwf	(??_doRelMove+8)^(0+128)
 16317  0FD2  01CF               	clrf	((??_doRelMove+8)^(0+128)+1)
 16318  0FD3  01D0               	clrf	((??_doRelMove+8)^(0+128)+2)
 16319  0FD4  01D1               	clrf	((??_doRelMove+8)^(0+128)+3)
 16320  0FD5  084E               	movf	(??_doRelMove+8)^(0+128),w
 16321  0FD6  05C6               	andwf	??_doRelMove^(0+128),f
 16322  0FD7  084F               	movf	(??_doRelMove+9)^(0+128),w
 16323  0FD8  05C7               	andwf	(??_doRelMove^(0+128)+1),f
 16324  0FD9  0850               	movf	(??_doRelMove+10)^(0+128),w
 16325  0FDA  05C8               	andwf	(??_doRelMove^(0+128)+2),f
 16326  0FDB  0851               	movf	(??_doRelMove+11)^(0+128),w
 16327  0FDC  05C9               	andwf	(??_doRelMove^(0+128)+3),f
 16328  0FDD  0857               	movf	(doRelMove@j+1)^(0+128),w
 16329  0FDE  00D3               	movwf	((??_doRelMove+12)^(0+128)+1)
 16330  0FDF  0856               	movf	doRelMove@j^(0+128),w
 16331  0FE0  00D2               	movwf	(??_doRelMove+12)^(0+128)
 16332  0FE1  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16333  0FE2  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16334  0FE3  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16335  0FE4  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16336  0FE5  3090               	movlw	144
 16337  0FE6  00D4               	movwf	(??_doRelMove+14)^(0+128)
 16338  0FE7  3027               	movlw	39
 16339  0FE8  00D5               	movwf	((??_doRelMove+14)^(0+128)+1)
 16340  0FE9  0852               	movf	(??_doRelMove+12)^(0+128),w
 16341  0FEA  0754               	addwf	(??_doRelMove+14)^(0+128),w
 16342  0FEB  0086               	movwf	6
 16343  0FEC  0853               	movf	(??_doRelMove+13)^(0+128),w
 16344  0FED  3D55               	addwfc	(??_doRelMove+15)^(0+128),w
 16345  0FEE  0087               	movwf	7
 16346  0FEF  0846               	movf	??_doRelMove^(0+128),w
 16347  0FF0  0281               	subwf	1,f
 16348  0FF1  3141               	addfsr 1,1
 16349  0FF2  0847               	movf	(??_doRelMove+1)^(0+128),w
 16350  0FF3  3B81               	subwfb	1,f
 16351  0FF4  3141               	addfsr 1,1
 16352  0FF5  0848               	movf	(??_doRelMove+2)^(0+128),w
 16353  0FF6  3B81               	subwfb	1,f
 16354  0FF7  3141               	addfsr 1,1
 16355  0FF8  0849               	movf	(??_doRelMove+3)^(0+128),w
 16356  0FF9  3B81               	subwfb	1,f
 16357  0FFA  317D               	addfsr 1,-3
 16358  0FFB  3001               	movlw	1
 16359  0FFC  07D6               	addwf	doRelMove@j^(0+128),f
 16360  0FFD  3000               	movlw	0
 16361  0FFE  3DD7               	addwfc	(doRelMove@j+1)^(0+128),f
 16362  0FFF  2FA4               	goto	L30
 16363  1000                     __end_of_doRelMove:	
 16364                           
 16365                           	psect	text52
 16366  00C0                     __ptext52:	
 16367 ;; *************** function _doAbsMove *****************
 16368 ;; Defined at:
 16369 ;;		line 303 in file "main.c"
 16370 ;; Parameters:    Size  Location     Type
 16371 ;;		None
 16372 ;; Auto vars:     Size  Location     Type
 16373 ;;  i               2   42[BANK1 ] int 
 16374 ;;  i               2   44[BANK1 ] int 
 16375 ;;  i               2   40[BANK1 ] int 
 16376 ;;  allThere        2   38[BANK1 ] int 
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      void 
 16379 ;; Registers used:
 16380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16387 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16388 ;;      Temps:          0       0       0       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16389 ;;      Totals:         0       0       8       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16390 ;;Total ram usage:       36 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; Hardware stack levels required when called:   16
 16393 ;; This function calls:
 16394 ;;		_doMove
 16395 ;;		_printf
 16396 ;; This function is called by:
 16397 ;;		_main
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           
 16402                           ;psect for function _doAbsMove
 16403  00C0                     _doAbsMove:	
 16404                           
 16405                           ;main.c: 306: int allThere=1;
 16406                           
 16407                           ;incstack = 0
 16408 ;; hardware stack exceeded
 16409                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16410  00C0  3001               	movlw	1
 16411  00C1  0021               	movlb	1	; select bank1
 16412  00C2  00C6               	movwf	doAbsMove@allThere^(0+128)
 16413  00C3  3000               	movlw	0
 16414  00C4  00C7               	movwf	(doAbsMove@allThere^(0+128)+1)
 16415                           
 16416                           ;main.c: 307: for(int i=0;i<24;i++){
 16417  00C5  01C8               	clrf	doAbsMove@i^(0+128)
 16418  00C6  01C9               	clrf	(doAbsMove@i+1)^(0+128)
 16419  00C7  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16420  00C8  3A80               	xorlw	128
 16421  00C9  0024               	movlb	4	; select bank4
 16422  00CA  00C0               	movwf	??_doAbsMove^(0+512)
 16423  00CB  3080               	movlw	128
 16424  00CC  0240               	subwf	??_doAbsMove^(0+512),w
 16425  00CD  1D03               	skipz
 16426  00CE  28D2               	goto	u8275
 16427  00CF  3018               	movlw	24
 16428  00D0  0021               	movlb	1	; select bank1
 16429  00D1  0248               	subwf	doAbsMove@i^(0+128),w
 16430  00D2                     u8275:	
 16431  00D2  1803               	btfsc	3,0
 16432  00D3  2958               	goto	l8344
 16433  00D4                     l8336:	
 16434                           
 16435                           ;main.c: 308: if((activeMask & (1UL << i)) > 0)
 16436  00D4  0021               	movlb	1	; select bank1
 16437  00D5  085D               	movf	_activeMask^(0+128),w
 16438  00D6  0024               	movlb	4	; select bank4
 16439  00D7  00C0               	movwf	??_doAbsMove^(0+512)
 16440  00D8  0021               	movlb	1	; select bank1
 16441  00D9  085E               	movf	(_activeMask+1)^(0+128),w
 16442  00DA  0024               	movlb	4	; select bank4
 16443  00DB  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16444  00DC  0021               	movlb	1	; select bank1
 16445  00DD  085F               	movf	(_activeMask+2)^(0+128),w
 16446  00DE  0024               	movlb	4	; select bank4
 16447  00DF  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16448  00E0  0021               	movlb	1	; select bank1
 16449  00E1  0860               	movf	(_activeMask+3)^(0+128),w
 16450  00E2  0024               	movlb	4	; select bank4
 16451  00E3  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 16452  00E4  3001               	movlw	1
 16453  00E5  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16454  00E6  3000               	movlw	0
 16455  00E7  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16456  00E8  3000               	movlw	0
 16457  00E9  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16458  00EA  3000               	movlw	0
 16459  00EB  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16460  00EC  0021               	movlb	1	; select bank1
 16461  00ED  0A48               	incf	doAbsMove@i^(0+128),w
 16462  00EE  0024               	movlb	4	; select bank4
 16463  00EF  28F4               	goto	u8280
 16464  00F0                     u8285:	
 16465  00F0  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16466  00F1  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16467  00F2  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 16468  00F3  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 16469  00F4                     u8280:	
 16470  00F4  0B89               	decfsz	9,f
 16471  00F5  28F0               	goto	u8285
 16472  00F6  0844               	movf	(??_doAbsMove+4)^(0+512),w
 16473  00F7  05C0               	andwf	??_doAbsMove^(0+512),f
 16474  00F8  0845               	movf	(??_doAbsMove+5)^(0+512),w
 16475  00F9  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 16476  00FA  0846               	movf	(??_doAbsMove+6)^(0+512),w
 16477  00FB  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 16478  00FC  0847               	movf	(??_doAbsMove+7)^(0+512),w
 16479  00FD  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 16480  00FE  0843               	movf	(??_doAbsMove+3)^(0+512),w
 16481  00FF  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 16482  0100  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 16483  0101  0440               	iorwf	??_doAbsMove^(0+512),w
 16484  0102  1903               	skipnz
 16485  0103  2946               	goto	l8340
 16486                           
 16487                           ;main.c: 309: allThere &= (currentPositions_steps[i] == absCommand);
 16488  0104  0021               	movlb	1	; select bank1
 16489  0105  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16490  0106  0024               	movlb	4	; select bank4
 16491  0107  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16492  0108  0021               	movlb	1	; select bank1
 16493  0109  0848               	movf	doAbsMove@i^(0+128),w
 16494  010A  0024               	movlb	4	; select bank4
 16495  010B  00C0               	movwf	??_doAbsMove^(0+512)
 16496  010C  35C0               	lslf	??_doAbsMove^(0+512),f
 16497  010D  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16498  010E  35C0               	lslf	??_doAbsMove^(0+512),f
 16499  010F  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16500  0110  3090               	movlw	144
 16501  0111  00C2               	movwf	(??_doAbsMove+2)^(0+512)
 16502  0112  3027               	movlw	39
 16503  0113  00C3               	movwf	((??_doAbsMove+2)^(0+512)+1)
 16504  0114  0840               	movf	??_doAbsMove^(0+512),w
 16505  0115  0742               	addwf	(??_doAbsMove+2)^(0+512),w
 16506  0116  0086               	movwf	6
 16507  0117  0841               	movf	(??_doAbsMove+1)^(0+512),w
 16508  0118  3D43               	addwfc	(??_doAbsMove+3)^(0+512),w
 16509  0119  0087               	movwf	7
 16510  011A  3F40               	moviw [0]fsr1
 16511  011B  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16512  011C  3F41               	moviw [1]fsr1
 16513  011D  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16514  011E  3F42               	moviw [2]fsr1
 16515  011F  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16516  0120  3F43               	moviw [3]fsr1
 16517  0121  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16518  0122  0020               	movlb	0	; select bank0
 16519  0123  0851               	movf	_absCommand+3,w
 16520  0124  0024               	movlb	4	; select bank4
 16521  0125  0647               	xorwf	(??_doAbsMove+7)^(0+512),w
 16522  0126  1D03               	skipz
 16523  0127  2938               	goto	u8305
 16524  0128  0020               	movlb	0	; select bank0
 16525  0129  0850               	movf	_absCommand+2,w
 16526  012A  0024               	movlb	4	; select bank4
 16527  012B  0646               	xorwf	(??_doAbsMove+6)^(0+512),w
 16528  012C  1D03               	skipz
 16529  012D  2938               	goto	u8305
 16530  012E  0020               	movlb	0	; select bank0
 16531  012F  084F               	movf	_absCommand+1,w
 16532  0130  0024               	movlb	4	; select bank4
 16533  0131  0645               	xorwf	(??_doAbsMove+5)^(0+512),w
 16534  0132  1D03               	skipz
 16535  0133  2938               	goto	u8305
 16536  0134  0020               	movlb	0	; select bank0
 16537  0135  084E               	movf	_absCommand,w
 16538  0136  0024               	movlb	4	; select bank4
 16539  0137  0644               	xorwf	(??_doAbsMove+4)^(0+512),w
 16540  0138                     u8305:	
 16541  0138  1D03               	btfss	3,2
 16542  0139  293C               	goto	u8300
 16543  013A  3001               	movlw	1
 16544  013B  293D               	goto	u8310
 16545  013C                     u8300:	
 16546  013C  3000               	movlw	0
 16547  013D                     u8310:	
 16548  013D  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 16549  013E  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 16550  013F  0848               	movf	(??_doAbsMove+8)^(0+512),w
 16551  0140  0021               	movlb	1	; select bank1
 16552  0141  05C6               	andwf	doAbsMove@allThere^(0+128),f
 16553  0142  0024               	movlb	4	; select bank4
 16554  0143  0849               	movf	(??_doAbsMove+9)^(0+512),w
 16555  0144  0021               	movlb	1	; select bank1
 16556  0145  05C7               	andwf	(doAbsMove@allThere+1)^(0+128),f
 16557  0146                     l8340:	
 16558  0146  3001               	movlw	1
 16559  0147  0021               	movlb	1	; select bank1
 16560  0148  07C8               	addwf	doAbsMove@i^(0+128),f
 16561  0149  3000               	movlw	0
 16562  014A  3DC9               	addwfc	(doAbsMove@i+1)^(0+128),f
 16563  014B  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16564  014C  3A80               	xorlw	128
 16565  014D  0024               	movlb	4	; select bank4
 16566  014E  00C0               	movwf	??_doAbsMove^(0+512)
 16567  014F  3080               	movlw	128
 16568  0150  0240               	subwf	??_doAbsMove^(0+512),w
 16569  0151  1D03               	skipz
 16570  0152  2956               	goto	u8325
 16571  0153  3018               	movlw	24
 16572  0154  0021               	movlb	1	; select bank1
 16573  0155  0248               	subwf	doAbsMove@i^(0+128),w
 16574  0156                     u8325:	
 16575  0156  1C03               	skipc
 16576  0157  28D4               	goto	l8336
 16577  0158                     l8344:	
 16578                           
 16579                           ;main.c: 310: }
 16580                           ;main.c: 312: if(allThere){
 16581  0158  0021               	movlb	1	; select bank1
 16582  0159  0846               	movf	doAbsMove@allThere^(0+128),w
 16583  015A  0447               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 16584  015B  1903               	btfsc	3,2
 16585  015C  2977               	goto	l8358
 16586                           
 16587                           ;main.c: 313: printf("abs: all there\n");
 16588  015D  303B               	movlw	low (STR_10| (0+32768))
 16589  015E  00A0               	movwf	printf@f^(0+128)
 16590  015F  30A9               	movlw	high (STR_10| (0+32768))
 16591  0160  00A1               	movwf	(printf@f^(0+128)+1)
 16592  0161  3186  26A1         	fcall	_printf
 16593                           
 16594                           ;main.c: 314: motionType = NONE;
 16595  0163  0020               	movlb	0	; select bank0
 16596  0164  01D5               	clrf	_motionType
 16597                           
 16598                           ;main.c: 315: moveVector_ups = 0;
 16599  0165  3000               	movlw	0
 16600  0166  0021               	movlb	1	; select bank1
 16601  0167  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16602  0168  3000               	movlw	0
 16603  0169  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16604  016A  3000               	movlw	0
 16605  016B  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16606  016C  3000               	movlw	0
 16607  016D  00E5               	movwf	_moveVector_ups^(0+128)
 16608                           
 16609                           ;main.c: 316: moveVector_downs = 0;
 16610  016E  3000               	movlw	0
 16611  016F  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16612  0170  3000               	movlw	0
 16613  0171  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16614  0172  3000               	movlw	0
 16615  0173  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16616  0174  3000               	movlw	0
 16617  0175  00E1               	movwf	_moveVector_downs^(0+128)
 16618                           
 16619                           ;main.c: 318: }
 16620                           
 16621                           ;main.c: 317: return;
 16622  0176  0008               	return
 16623  0177                     l8358:	
 16624                           
 16625                           ;main.c: 319: else{
 16626                           ;main.c: 320: for(int i=0;i<24;i++){
 16627  0177  01CC               	clrf	doAbsMove@i_1574^(0+128)
 16628  0178  01CD               	clrf	(doAbsMove@i_1574+1)^(0+128)
 16629  0179  084D               	movf	(doAbsMove@i_1574+1)^(0+128),w
 16630  017A  3A80               	xorlw	128
 16631  017B  0024               	movlb	4	; select bank4
 16632  017C  00C0               	movwf	??_doAbsMove^(0+512)
 16633  017D  3080               	movlw	128
 16634  017E  0240               	subwf	??_doAbsMove^(0+512),w
 16635  017F  1D03               	skipz
 16636  0180  2984               	goto	u8345
 16637  0181  3018               	movlw	24
 16638  0182  0021               	movlb	1	; select bank1
 16639  0183  024C               	subwf	doAbsMove@i_1574^(0+128),w
 16640  0184                     u8345:	
 16641  0184  1803               	btfsc	3,0
 16642  0185  2ABA               	goto	l8370
 16643  0186                     l8364:	
 16644                           
 16645                           ;main.c: 322: moveVector_ups |= (activeMask & (1UL << i)) & ((currentPositions_steps[i] 
      +                          > absCommand)<<i);
 16646  0186  0021               	movlb	1	; select bank1
 16647  0187  085D               	movf	_activeMask^(0+128),w
 16648  0188  0024               	movlb	4	; select bank4
 16649  0189  00C0               	movwf	??_doAbsMove^(0+512)
 16650  018A  0021               	movlb	1	; select bank1
 16651  018B  085E               	movf	(_activeMask+1)^(0+128),w
 16652  018C  0024               	movlb	4	; select bank4
 16653  018D  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16654  018E  0021               	movlb	1	; select bank1
 16655  018F  085F               	movf	(_activeMask+2)^(0+128),w
 16656  0190  0024               	movlb	4	; select bank4
 16657  0191  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16658  0192  0021               	movlb	1	; select bank1
 16659  0193  0860               	movf	(_activeMask+3)^(0+128),w
 16660  0194  0024               	movlb	4	; select bank4
 16661  0195  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 16662  0196  0021               	movlb	1	; select bank1
 16663  0197  084D               	movf	(doAbsMove@i_1574+1)^(0+128),w
 16664  0198  0024               	movlb	4	; select bank4
 16665  0199  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16666  019A  0021               	movlb	1	; select bank1
 16667  019B  084C               	movf	doAbsMove@i_1574^(0+128),w
 16668  019C  0024               	movlb	4	; select bank4
 16669  019D  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16670  019E  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16671  019F  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16672  01A0  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16673  01A1  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16674  01A2  3090               	movlw	144
 16675  01A3  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 16676  01A4  3027               	movlw	39
 16677  01A5  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 16678  01A6  0844               	movf	(??_doAbsMove+4)^(0+512),w
 16679  01A7  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 16680  01A8  0086               	movwf	6
 16681  01A9  0845               	movf	(??_doAbsMove+5)^(0+512),w
 16682  01AA  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 16683  01AB  0087               	movwf	7
 16684  01AC  3F40               	moviw [0]fsr1
 16685  01AD  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 16686  01AE  3F41               	moviw [1]fsr1
 16687  01AF  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 16688  01B0  3F42               	moviw [2]fsr1
 16689  01B1  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 16690  01B2  3F43               	moviw [3]fsr1
 16691  01B3  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 16692  01B4  0020               	movlb	0	; select bank0
 16693  01B5  0851               	movf	_absCommand+3,w
 16694  01B6  3A80               	xorlw	128
 16695  01B7  0024               	movlb	4	; select bank4
 16696  01B8  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 16697  01B9  084B               	movf	(??_doAbsMove+11)^(0+512),w
 16698  01BA  3A80               	xorlw	128
 16699  01BB  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 16700  01BC  0020               	movlb	0	; select bank0
 16701  01BD  1D03               	skipz
 16702  01BE  29CF               	goto	u8353
 16703  01BF  0024               	movlb	4	; select bank4
 16704  01C0  084A               	movf	(??_doAbsMove+10)^(0+512),w
 16705  01C1  0020               	movlb	0	; select bank0
 16706  01C2  0250               	subwf	_absCommand+2,w
 16707  01C3  1D03               	skipz
 16708  01C4  29CF               	goto	u8353
 16709  01C5  0024               	movlb	4	; select bank4
 16710  01C6  0849               	movf	(??_doAbsMove+9)^(0+512),w
 16711  01C7  0020               	movlb	0	; select bank0
 16712  01C8  024F               	subwf	_absCommand+1,w
 16713  01C9  1D03               	skipz
 16714  01CA  29CF               	goto	u8353
 16715  01CB  0024               	movlb	4	; select bank4
 16716  01CC  0848               	movf	(??_doAbsMove+8)^(0+512),w
 16717  01CD  0020               	movlb	0	; select bank0
 16718  01CE  024E               	subwf	_absCommand,w
 16719  01CF                     u8353:	
 16720  01CF  1803               	btfsc	3,0
 16721  01D0  29D3               	goto	u8350
 16722  01D1  3001               	movlw	1
 16723  01D2  29D4               	goto	u8360
 16724  01D3                     u8350:	
 16725  01D3  3000               	movlw	0
 16726  01D4                     u8360:	
 16727  01D4  0024               	movlb	4	; select bank4
 16728  01D5  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 16729  01D6  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 16730  01D7  0021               	movlb	1	; select bank1
 16731  01D8  0A4C               	incf	doAbsMove@i_1574^(0+128),w
 16732  01D9  0024               	movlb	4	; select bank4
 16733  01DA  29DD               	goto	u8374
 16734  01DB                     u8375:	
 16735  01DB  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 16736  01DC  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 16737  01DD                     u8374:	
 16738  01DD  0B89               	decfsz	9,f
 16739  01DE  29DB               	goto	u8375
 16740  01DF  084D               	movf	(??_doAbsMove+13)^(0+512),w
 16741  01E0  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 16742  01E1  084E               	movf	(??_doAbsMove+14)^(0+512),w
 16743  01E2  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 16744  01E3  3000               	movlw	0
 16745  01E4  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 16746  01E5  30FF               	movlw	255
 16747  01E6  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 16748  01E7  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 16749  01E8  3001               	movlw	1
 16750  01E9  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 16751  01EA  3000               	movlw	0
 16752  01EB  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 16753  01EC  3000               	movlw	0
 16754  01ED  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 16755  01EE  3000               	movlw	0
 16756  01EF  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 16757  01F0  0021               	movlb	1	; select bank1
 16758  01F1  0A4C               	incf	doAbsMove@i_1574^(0+128),w
 16759  01F2  0024               	movlb	4	; select bank4
 16760  01F3  29F8               	goto	u8380
 16761  01F4                     u8385:	
 16762  01F4  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 16763  01F5  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 16764  01F6  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 16765  01F7  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 16766  01F8                     u8380:	
 16767  01F8  0B89               	decfsz	9,f
 16768  01F9  29F4               	goto	u8385
 16769  01FA  0853               	movf	(??_doAbsMove+19)^(0+512),w
 16770  01FB  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 16771  01FC  0854               	movf	(??_doAbsMove+20)^(0+512),w
 16772  01FD  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 16773  01FE  0855               	movf	(??_doAbsMove+21)^(0+512),w
 16774  01FF  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 16775  0200  0856               	movf	(??_doAbsMove+22)^(0+512),w
 16776  0201  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 16777  0202  084F               	movf	(??_doAbsMove+15)^(0+512),w
 16778  0203  05C0               	andwf	??_doAbsMove^(0+512),f
 16779  0204  0850               	movf	(??_doAbsMove+16)^(0+512),w
 16780  0205  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 16781  0206  0851               	movf	(??_doAbsMove+17)^(0+512),w
 16782  0207  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 16783  0208  0852               	movf	(??_doAbsMove+18)^(0+512),w
 16784  0209  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 16785  020A  0840               	movf	??_doAbsMove^(0+512),w
 16786  020B  0021               	movlb	1	; select bank1
 16787  020C  04E5               	iorwf	_moveVector_ups^(0+128),f
 16788  020D  0024               	movlb	4	; select bank4
 16789  020E  0841               	movf	(??_doAbsMove+1)^(0+512),w
 16790  020F  0021               	movlb	1	; select bank1
 16791  0210  04E6               	iorwf	(_moveVector_ups+1)^(0+128),f
 16792  0211  0024               	movlb	4	; select bank4
 16793  0212  0842               	movf	(??_doAbsMove+2)^(0+512),w
 16794  0213  0021               	movlb	1	; select bank1
 16795  0214  04E7               	iorwf	(_moveVector_ups+2)^(0+128),f
 16796  0215  0024               	movlb	4	; select bank4
 16797  0216  0843               	movf	(??_doAbsMove+3)^(0+512),w
 16798  0217  0021               	movlb	1	; select bank1
 16799  0218  04E8               	iorwf	(_moveVector_ups+3)^(0+128),f
 16800                           
 16801                           ;main.c: 323: moveVector_downs |= (activeMask & (1UL << i)) & ((currentPositions_steps[i
      +                          ] < absCommand)<<i);
 16802  0219  085D               	movf	_activeMask^(0+128),w
 16803  021A  0024               	movlb	4	; select bank4
 16804  021B  00C0               	movwf	??_doAbsMove^(0+512)
 16805  021C  0021               	movlb	1	; select bank1
 16806  021D  085E               	movf	(_activeMask+1)^(0+128),w
 16807  021E  0024               	movlb	4	; select bank4
 16808  021F  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16809  0220  0021               	movlb	1	; select bank1
 16810  0221  085F               	movf	(_activeMask+2)^(0+128),w
 16811  0222  0024               	movlb	4	; select bank4
 16812  0223  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16813  0224  0021               	movlb	1	; select bank1
 16814  0225  0860               	movf	(_activeMask+3)^(0+128),w
 16815  0226  0024               	movlb	4	; select bank4
 16816  0227  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 16817  0228  0021               	movlb	1	; select bank1
 16818  0229  084D               	movf	(doAbsMove@i_1574+1)^(0+128),w
 16819  022A  0024               	movlb	4	; select bank4
 16820  022B  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16821  022C  0021               	movlb	1	; select bank1
 16822  022D  084C               	movf	doAbsMove@i_1574^(0+128),w
 16823  022E  0024               	movlb	4	; select bank4
 16824  022F  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16825  0230  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16826  0231  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16827  0232  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16828  0233  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16829  0234  3090               	movlw	144
 16830  0235  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 16831  0236  3027               	movlw	39
 16832  0237  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 16833  0238  0844               	movf	(??_doAbsMove+4)^(0+512),w
 16834  0239  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 16835  023A  0086               	movwf	6
 16836  023B  0845               	movf	(??_doAbsMove+5)^(0+512),w
 16837  023C  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 16838  023D  0087               	movwf	7
 16839  023E  3F40               	moviw [0]fsr1
 16840  023F  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 16841  0240  3F41               	moviw [1]fsr1
 16842  0241  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 16843  0242  3F42               	moviw [2]fsr1
 16844  0243  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 16845  0244  3F43               	moviw [3]fsr1
 16846  0245  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 16847  0246  084B               	movf	(??_doAbsMove+11)^(0+512),w
 16848  0247  3A80               	xorlw	128
 16849  0248  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 16850  0249  0020               	movlb	0	; select bank0
 16851  024A  0851               	movf	_absCommand+3,w
 16852  024B  3A80               	xorlw	128
 16853  024C  0024               	movlb	4	; select bank4
 16854  024D  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 16855  024E  1D03               	skipz
 16856  024F  2A60               	goto	u8393
 16857  0250  0020               	movlb	0	; select bank0
 16858  0251  0850               	movf	_absCommand+2,w
 16859  0252  0024               	movlb	4	; select bank4
 16860  0253  024A               	subwf	(??_doAbsMove+10)^(0+512),w
 16861  0254  1D03               	skipz
 16862  0255  2A60               	goto	u8393
 16863  0256  0020               	movlb	0	; select bank0
 16864  0257  084F               	movf	_absCommand+1,w
 16865  0258  0024               	movlb	4	; select bank4
 16866  0259  0249               	subwf	(??_doAbsMove+9)^(0+512),w
 16867  025A  1D03               	skipz
 16868  025B  2A60               	goto	u8393
 16869  025C  0020               	movlb	0	; select bank0
 16870  025D  084E               	movf	_absCommand,w
 16871  025E  0024               	movlb	4	; select bank4
 16872  025F  0248               	subwf	(??_doAbsMove+8)^(0+512),w
 16873  0260                     u8393:	
 16874  0260  1803               	btfsc	3,0
 16875  0261  2A64               	goto	u8390
 16876  0262  3001               	movlw	1
 16877  0263  2A65               	goto	u8400
 16878  0264                     u8390:	
 16879  0264  3000               	movlw	0
 16880  0265                     u8400:	
 16881  0265  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 16882  0266  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 16883  0267  0021               	movlb	1	; select bank1
 16884  0268  0A4C               	incf	doAbsMove@i_1574^(0+128),w
 16885  0269  0024               	movlb	4	; select bank4
 16886  026A  2A6D               	goto	u8414
 16887  026B                     u8415:	
 16888  026B  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 16889  026C  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 16890  026D                     u8414:	
 16891  026D  0B89               	decfsz	9,f
 16892  026E  2A6B               	goto	u8415
 16893  026F  084D               	movf	(??_doAbsMove+13)^(0+512),w
 16894  0270  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 16895  0271  084E               	movf	(??_doAbsMove+14)^(0+512),w
 16896  0272  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 16897  0273  3000               	movlw	0
 16898  0274  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 16899  0275  30FF               	movlw	255
 16900  0276  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 16901  0277  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 16902  0278  3001               	movlw	1
 16903  0279  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 16904  027A  3000               	movlw	0
 16905  027B  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 16906  027C  3000               	movlw	0
 16907  027D  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 16908  027E  3000               	movlw	0
 16909  027F  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 16910  0280  0021               	movlb	1	; select bank1
 16911  0281  0A4C               	incf	doAbsMove@i_1574^(0+128),w
 16912  0282  0024               	movlb	4	; select bank4
 16913  0283  2A88               	goto	u8420
 16914  0284                     u8425:	
 16915  0284  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 16916  0285  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 16917  0286  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 16918  0287  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 16919  0288                     u8420:	
 16920  0288  0B89               	decfsz	9,f
 16921  0289  2A84               	goto	u8425
 16922  028A  0853               	movf	(??_doAbsMove+19)^(0+512),w
 16923  028B  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 16924  028C  0854               	movf	(??_doAbsMove+20)^(0+512),w
 16925  028D  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 16926  028E  0855               	movf	(??_doAbsMove+21)^(0+512),w
 16927  028F  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 16928  0290  0856               	movf	(??_doAbsMove+22)^(0+512),w
 16929  0291  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 16930  0292  084F               	movf	(??_doAbsMove+15)^(0+512),w
 16931  0293  05C0               	andwf	??_doAbsMove^(0+512),f
 16932  0294  0850               	movf	(??_doAbsMove+16)^(0+512),w
 16933  0295  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 16934  0296  0851               	movf	(??_doAbsMove+17)^(0+512),w
 16935  0297  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 16936  0298  0852               	movf	(??_doAbsMove+18)^(0+512),w
 16937  0299  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 16938  029A  0840               	movf	??_doAbsMove^(0+512),w
 16939  029B  0021               	movlb	1	; select bank1
 16940  029C  04E1               	iorwf	_moveVector_downs^(0+128),f
 16941  029D  0024               	movlb	4	; select bank4
 16942  029E  0841               	movf	(??_doAbsMove+1)^(0+512),w
 16943  029F  0021               	movlb	1	; select bank1
 16944  02A0  04E2               	iorwf	(_moveVector_downs+1)^(0+128),f
 16945  02A1  0024               	movlb	4	; select bank4
 16946  02A2  0842               	movf	(??_doAbsMove+2)^(0+512),w
 16947  02A3  0021               	movlb	1	; select bank1
 16948  02A4  04E3               	iorwf	(_moveVector_downs+2)^(0+128),f
 16949  02A5  0024               	movlb	4	; select bank4
 16950  02A6  0843               	movf	(??_doAbsMove+3)^(0+512),w
 16951  02A7  0021               	movlb	1	; select bank1
 16952  02A8  04E4               	iorwf	(_moveVector_downs+3)^(0+128),f
 16953  02A9  3001               	movlw	1
 16954  02AA  07CC               	addwf	doAbsMove@i_1574^(0+128),f
 16955  02AB  3000               	movlw	0
 16956  02AC  3DCD               	addwfc	(doAbsMove@i_1574+1)^(0+128),f
 16957  02AD  084D               	movf	(doAbsMove@i_1574+1)^(0+128),w
 16958  02AE  3A80               	xorlw	128
 16959  02AF  0024               	movlb	4	; select bank4
 16960  02B0  00C0               	movwf	??_doAbsMove^(0+512)
 16961  02B1  3080               	movlw	128
 16962  02B2  0240               	subwf	??_doAbsMove^(0+512),w
 16963  02B3  1D03               	skipz
 16964  02B4  2AB8               	goto	u8435
 16965  02B5  3018               	movlw	24
 16966  02B6  0021               	movlb	1	; select bank1
 16967  02B7  024C               	subwf	doAbsMove@i_1574^(0+128),w
 16968  02B8                     u8435:	
 16969  02B8  1C03               	skipc
 16970  02B9  2986               	goto	l8364
 16971  02BA                     l8370:	
 16972                           
 16973                           ;main.c: 325: }
 16974                           ;main.c: 326: doMove();
 16975  02BA  3189  2138  3180   	fcall	_doMove
 16976                           
 16977                           ;main.c: 328: for(int i=0;i<24;i++)
 16978  02BD  0021               	movlb	1	; select bank1
 16979  02BE  01CA               	clrf	doAbsMove@i_1576^(0+128)
 16980  02BF  01CB               	clrf	(doAbsMove@i_1576+1)^(0+128)
 16981  02C0                     L31:	
 16982  02C0  084B               	movf	(doAbsMove@i_1576+1)^(0+128),w
 16983  02C1  3A80               	xorlw	128
 16984  02C2  0024               	movlb	4	; select bank4
 16985  02C3  00C0               	movwf	??_doAbsMove^(0+512)
 16986  02C4  3080               	movlw	128
 16987  02C5  0240               	subwf	??_doAbsMove^(0+512),w
 16988  02C6  1D03               	skipz
 16989  02C7  2ACB               	goto	u8445
 16990  02C8  3018               	movlw	24
 16991  02C9  0021               	movlb	1	; select bank1
 16992  02CA  024A               	subwf	doAbsMove@i_1576^(0+128),w
 16993  02CB                     u8445:	
 16994  02CB  1803               	btfsc	3,0
 16995  02CC  0008               	return
 16996                           
 16997                           ;main.c: 329: currentPositions_steps[i] += ((moveVector_downs & (1UL << i)) > 0) - ((mov
      +                          eVector_ups & (1UL << i)) > 0);
 16998  02CD  0021               	movlb	1	; select bank1
 16999  02CE  0865               	movf	_moveVector_ups^(0+128),w
 17000  02CF  0024               	movlb	4	; select bank4
 17001  02D0  00C0               	movwf	??_doAbsMove^(0+512)
 17002  02D1  0021               	movlb	1	; select bank1
 17003  02D2  0866               	movf	(_moveVector_ups+1)^(0+128),w
 17004  02D3  0024               	movlb	4	; select bank4
 17005  02D4  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17006  02D5  0021               	movlb	1	; select bank1
 17007  02D6  0867               	movf	(_moveVector_ups+2)^(0+128),w
 17008  02D7  0024               	movlb	4	; select bank4
 17009  02D8  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17010  02D9  0021               	movlb	1	; select bank1
 17011  02DA  0868               	movf	(_moveVector_ups+3)^(0+128),w
 17012  02DB  0024               	movlb	4	; select bank4
 17013  02DC  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17014  02DD  3001               	movlw	1
 17015  02DE  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17016  02DF  3000               	movlw	0
 17017  02E0  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17018  02E1  3000               	movlw	0
 17019  02E2  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 17020  02E3  3000               	movlw	0
 17021  02E4  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 17022  02E5  0021               	movlb	1	; select bank1
 17023  02E6  0A4A               	incf	doAbsMove@i_1576^(0+128),w
 17024  02E7  0024               	movlb	4	; select bank4
 17025  02E8  2AED               	goto	u8450
 17026  02E9                     u8455:	
 17027  02E9  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17028  02EA  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17029  02EB  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 17030  02EC  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 17031  02ED                     u8450:	
 17032  02ED  0B89               	decfsz	9,f
 17033  02EE  2AE9               	goto	u8455
 17034  02EF  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17035  02F0  05C0               	andwf	??_doAbsMove^(0+512),f
 17036  02F1  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17037  02F2  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17038  02F3  0846               	movf	(??_doAbsMove+6)^(0+512),w
 17039  02F4  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17040  02F5  0847               	movf	(??_doAbsMove+7)^(0+512),w
 17041  02F6  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17042  02F7  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17043  02F8  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 17044  02F9  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 17045  02FA  0440               	iorwf	??_doAbsMove^(0+512),w
 17046  02FB  1903               	btfsc	3,2
 17047  02FC  2AFF               	goto	u8460
 17048  02FD  3001               	movlw	1
 17049  02FE  2B00               	goto	u8470
 17050  02FF                     u8460:	
 17051  02FF  3000               	movlw	0
 17052  0300                     u8470:	
 17053  0300  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17054  0301  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 17055  0302  09C8               	comf	(??_doAbsMove+8)^(0+512),f
 17056  0303  09C9               	comf	((??_doAbsMove+8)^(0+512)+1),f
 17057  0304  0AC8               	incf	(??_doAbsMove+8)^(0+512),f
 17058  0305  1903               	skipnz
 17059  0306  0AC9               	incf	((??_doAbsMove+8)^(0+512)+1),f
 17060  0307  0021               	movlb	1	; select bank1
 17061  0308  0861               	movf	_moveVector_downs^(0+128),w
 17062  0309  0024               	movlb	4	; select bank4
 17063  030A  00CA               	movwf	(??_doAbsMove+10)^(0+512)
 17064  030B  0021               	movlb	1	; select bank1
 17065  030C  0862               	movf	(_moveVector_downs+1)^(0+128),w
 17066  030D  0024               	movlb	4	; select bank4
 17067  030E  00CB               	movwf	((??_doAbsMove+10)^(0+512)+1)
 17068  030F  0021               	movlb	1	; select bank1
 17069  0310  0863               	movf	(_moveVector_downs+2)^(0+128),w
 17070  0311  0024               	movlb	4	; select bank4
 17071  0312  00CC               	movwf	((??_doAbsMove+10)^(0+512)+2)
 17072  0313  0021               	movlb	1	; select bank1
 17073  0314  0864               	movf	(_moveVector_downs+3)^(0+128),w
 17074  0315  0024               	movlb	4	; select bank4
 17075  0316  00CD               	movwf	((??_doAbsMove+10)^(0+512)+3)
 17076  0317  3001               	movlw	1
 17077  0318  00CE               	movwf	(??_doAbsMove+14)^(0+512)
 17078  0319  3000               	movlw	0
 17079  031A  00CF               	movwf	((??_doAbsMove+14)^(0+512)+1)
 17080  031B  3000               	movlw	0
 17081  031C  00D0               	movwf	((??_doAbsMove+14)^(0+512)+2)
 17082  031D  3000               	movlw	0
 17083  031E  00D1               	movwf	((??_doAbsMove+14)^(0+512)+3)
 17084  031F  0021               	movlb	1	; select bank1
 17085  0320  0A4A               	incf	doAbsMove@i_1576^(0+128),w
 17086  0321  0024               	movlb	4	; select bank4
 17087  0322  2B27               	goto	u8480
 17088  0323                     u8485:	
 17089  0323  35CE               	lslf	(??_doAbsMove+14)^(0+512),f
 17090  0324  0DCF               	rlf	((??_doAbsMove+14)^(0+512)+1),f
 17091  0325  0DD0               	rlf	((??_doAbsMove+14)^(0+512)+2),f
 17092  0326  0DD1               	rlf	((??_doAbsMove+14)^(0+512)+3),f
 17093  0327                     u8480:	
 17094  0327  0B89               	decfsz	9,f
 17095  0328  2B23               	goto	u8485
 17096  0329  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17097  032A  05CA               	andwf	(??_doAbsMove+10)^(0+512),f
 17098  032B  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17099  032C  05CB               	andwf	((??_doAbsMove+10)^(0+512)+1),f
 17100  032D  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17101  032E  05CC               	andwf	((??_doAbsMove+10)^(0+512)+2),f
 17102  032F  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17103  0330  05CD               	andwf	((??_doAbsMove+10)^(0+512)+3),f
 17104  0331  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17105  0332  044C               	iorwf	(??_doAbsMove+12)^(0+512),w
 17106  0333  044B               	iorwf	(??_doAbsMove+11)^(0+512),w
 17107  0334  044A               	iorwf	(??_doAbsMove+10)^(0+512),w
 17108  0335  1903               	btfsc	3,2
 17109  0336  2B39               	goto	u8490
 17110  0337  3001               	movlw	1
 17111  0338  2B3A               	goto	u8500
 17112  0339                     u8490:	
 17113  0339  3000               	movlw	0
 17114  033A                     u8500:	
 17115  033A  0748               	addwf	(??_doAbsMove+8)^(0+512),w
 17116  033B  00D2               	movwf	(??_doAbsMove+18)^(0+512)
 17117  033C  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17118  033D  1803               	skipnc
 17119  033E  0A49               	incf	(??_doAbsMove+9)^(0+512),w
 17120  033F  00D3               	movwf	((??_doAbsMove+18)^(0+512)+1)
 17121  0340  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17122  0341  00D4               	movwf	(??_doAbsMove+20)^(0+512)
 17123  0342  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17124  0343  00D5               	movwf	((??_doAbsMove+20)^(0+512)+1)
 17125  0344  3000               	movlw	0
 17126  0345  1BD5               	btfsc	((??_doAbsMove+20)^(0+512)+1),7
 17127  0346  30FF               	movlw	255
 17128  0347  00D6               	movwf	((??_doAbsMove+20)^(0+512)+2)
 17129  0348  00D7               	movwf	((??_doAbsMove+20)^(0+512)+3)
 17130  0349  0021               	movlb	1	; select bank1
 17131  034A  084B               	movf	(doAbsMove@i_1576+1)^(0+128),w
 17132  034B  0024               	movlb	4	; select bank4
 17133  034C  00D9               	movwf	((??_doAbsMove+24)^(0+512)+1)
 17134  034D  0021               	movlb	1	; select bank1
 17135  034E  084A               	movf	doAbsMove@i_1576^(0+128),w
 17136  034F  0024               	movlb	4	; select bank4
 17137  0350  00D8               	movwf	(??_doAbsMove+24)^(0+512)
 17138  0351  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17139  0352  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17140  0353  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17141  0354  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17142  0355  3090               	movlw	144
 17143  0356  00DA               	movwf	(??_doAbsMove+26)^(0+512)
 17144  0357  3027               	movlw	39
 17145  0358  00DB               	movwf	((??_doAbsMove+26)^(0+512)+1)
 17146  0359  0858               	movf	(??_doAbsMove+24)^(0+512),w
 17147  035A  075A               	addwf	(??_doAbsMove+26)^(0+512),w
 17148  035B  0086               	movwf	6
 17149  035C  0859               	movf	(??_doAbsMove+25)^(0+512),w
 17150  035D  3D5B               	addwfc	(??_doAbsMove+27)^(0+512),w
 17151  035E  0087               	movwf	7
 17152  035F  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17153  0360  0781               	addwf	1,f
 17154  0361  3141               	addfsr 1,1
 17155  0362  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17156  0363  3D81               	addwfc	1,f
 17157  0364  3141               	addfsr 1,1
 17158  0365  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17159  0366  3D81               	addwfc	1,f
 17160  0367  3141               	addfsr 1,1
 17161  0368  0857               	movf	(??_doAbsMove+23)^(0+512),w
 17162  0369  3D81               	addwfc	1,f
 17163  036A  3001               	movlw	1
 17164  036B  0021               	movlb	1	; select bank1
 17165  036C  07CA               	addwf	doAbsMove@i_1576^(0+128),f
 17166  036D  3000               	movlw	0
 17167  036E  3DCB               	addwfc	(doAbsMove@i_1576+1)^(0+128),f
 17168  036F  2AC0               	goto	L31
 17169  0370                     __end_of_doAbsMove:	
 17170                           
 17171                           	psect	text53
 17172  0938                     __ptext53:	
 17173 ;; *************** function _doMove *****************
 17174 ;; Defined at:
 17175 ;;		line 233 in file "main.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;		None
 17178 ;; Auto vars:     Size  Location     Type
 17179 ;;  t               2   36[BANK1 ] int 
 17180 ;;  t               2   34[BANK1 ] int 
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  2   31[BANK1 ] int 
 17183 ;; Registers used:
 17184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17190 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17191 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17192 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17193 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17194 ;;Total ram usage:        7 bytes
 17195 ;; Hardware stack levels used:    1
 17196 ;; Hardware stack levels required when called:   15
 17197 ;; This function calls:
 17198 ;;		_LEDsOn
 17199 ;;		_TMR0_StartTimer
 17200 ;;		_TMR2_StartTimer
 17201 ;;		_calcHeaterPins
 17202 ;;		_drv_write_DC
 17203 ;;		_printf
 17204 ;; This function is called by:
 17205 ;;		_doAbsMove
 17206 ;;		_doRelMove
 17207 ;;		_execCmd
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           
 17211                           
 17212                           ;psect for function _doMove
 17213  0938                     _doMove:	
 17214                           
 17215                           ;main.c: 234: printf("doMove\n");
 17216                           
 17217                           ;incstack = 0
 17218 ;; hardware stack exceeded
 17219                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17220  0938  3013               	movlw	low (STR_6| (0+32768))
 17221  0939  0021               	movlb	1	; select bank1
 17222  093A  00A0               	movwf	printf@f^(0+128)
 17223  093B  30AA               	movlw	high (STR_6| (0+32768))
 17224  093C  00A1               	movwf	(printf@f^(0+128)+1)
 17225  093D  3186  26A1  3189   	fcall	_printf
 17226                           
 17227                           ;main.c: 236: calcHeaterPins();
 17228  0940  3197  2787  3189   	fcall	_calcHeaterPins
 17229                           
 17230                           ;main.c: 237: do { LATCbits.LATC1 = 1; } while(0);
 17231  0943  0022               	movlb	2	; select bank2
 17232  0944  148E               	bsf	14,1	;volatile
 17233                           
 17234                           ;main.c: 238: LEDsOn(first_top, 1);
 17235  0945  0859               	movf	(_first_top+3)^(0+256),w
 17236  0946  0020               	movlb	0	; select bank0
 17237  0947  00C7               	movwf	LEDsOn@LEDpins+3
 17238  0948  0022               	movlb	2	; select bank2
 17239  0949  0858               	movf	(_first_top+2)^(0+256),w
 17240  094A  0020               	movlb	0	; select bank0
 17241  094B  00C6               	movwf	LEDsOn@LEDpins+2
 17242  094C  0022               	movlb	2	; select bank2
 17243  094D  0857               	movf	(_first_top+1)^(0+256),w
 17244  094E  0020               	movlb	0	; select bank0
 17245  094F  00C5               	movwf	LEDsOn@LEDpins+1
 17246  0950  0022               	movlb	2	; select bank2
 17247  0951  0856               	movf	_first_top^(0+256),w
 17248  0952  0020               	movlb	0	; select bank0
 17249  0953  00C4               	movwf	LEDsOn@LEDpins
 17250  0954  3001               	movlw	1
 17251  0955  00C8               	movwf	LEDsOn@topOrBottom
 17252  0956  3000               	movlw	0
 17253  0957  00C9               	movwf	LEDsOn@topOrBottom+1
 17254  0958  31A6  2696  3189   	fcall	_LEDsOn
 17255                           
 17256                           ;main.c: 239: LEDsOn(first_bottom,2);
 17257  095B  0022               	movlb	2	; select bank2
 17258  095C  085D               	movf	(_first_bottom+3)^(0+256),w
 17259  095D  0020               	movlb	0	; select bank0
 17260  095E  00C7               	movwf	LEDsOn@LEDpins+3
 17261  095F  0022               	movlb	2	; select bank2
 17262  0960  085C               	movf	(_first_bottom+2)^(0+256),w
 17263  0961  0020               	movlb	0	; select bank0
 17264  0962  00C6               	movwf	LEDsOn@LEDpins+2
 17265  0963  0022               	movlb	2	; select bank2
 17266  0964  085B               	movf	(_first_bottom+1)^(0+256),w
 17267  0965  0020               	movlb	0	; select bank0
 17268  0966  00C5               	movwf	LEDsOn@LEDpins+1
 17269  0967  0022               	movlb	2	; select bank2
 17270  0968  085A               	movf	_first_bottom^(0+256),w
 17271  0969  0020               	movlb	0	; select bank0
 17272  096A  00C4               	movwf	LEDsOn@LEDpins
 17273  096B  3002               	movlw	2
 17274  096C  00C8               	movwf	LEDsOn@topOrBottom
 17275  096D  3000               	movlw	0
 17276  096E  00C9               	movwf	LEDsOn@topOrBottom+1
 17277  096F  31A6  2696  3189   	fcall	_LEDsOn
 17278                           
 17279                           ;main.c: 240: do { LATCbits.LATC1 = 0; } while(0);
 17280  0972  0022               	movlb	2	; select bank2
 17281  0973  108E               	bcf	14,1	;volatile
 17282                           
 17283                           ;main.c: 241: for(int t=0; t<heater_pre_time_ms; t++) _delay((unsigned long)((1)*(100000
      +                          0/4000.0)));
 17284  0974  0021               	movlb	1	; select bank1
 17285  0975  01C2               	clrf	doMove@t^(0+128)
 17286  0976  01C3               	clrf	(doMove@t+1)^(0+128)
 17287  0977                     l1086:	
 17288  0977  0843               	movf	(doMove@t+1)^(0+128),w
 17289  0978  3A80               	xorlw	128
 17290  0979  00C1               	movwf	??_doMove^(0+128)
 17291  097A  086E               	movf	(_heater_pre_time_ms+1)^(0+128),w
 17292  097B  3A80               	xorlw	128
 17293  097C  0241               	subwf	??_doMove^(0+128),w
 17294  097D  1D03               	skipz
 17295  097E  2981               	goto	u7825
 17296  097F  086D               	movf	_heater_pre_time_ms^(0+128),w
 17297  0980  0242               	subwf	doMove@t^(0+128),w
 17298  0981                     u7825:	
 17299  0981  1803               	btfsc	3,0
 17300  0982  298D               	goto	l7830
 17301  0983  3053               	movlw	83
 17302  0984                     u8857:	
 17303  0984  0B89               	decfsz	9,f
 17304  0985  2984               	goto	u8857
 17305  0986  0000               	nop
 17306  0987  3001               	movlw	1
 17307  0988  0021               	movlb	1	; select bank1
 17308  0989  07C2               	addwf	doMove@t^(0+128),f
 17309  098A  3000               	movlw	0
 17310  098B  3DC3               	addwfc	(doMove@t+1)^(0+128),f
 17311  098C  2977               	goto	l1086
 17312  098D                     l7830:	
 17313                           
 17314                           ;main.c: 242: TMR2_StartTimer();
 17315  098D  31A2  228A  3189   	fcall	_TMR2_StartTimer
 17316                           
 17317                           ;main.c: 243: TMR0_StartTimer();
 17318  0990  31A2  2287  3189   	fcall	_TMR0_StartTimer
 17319                           
 17320                           ;main.c: 245: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 17321  0993  0022               	movlb	2	; select bank2
 17322  0994  086F               	movf	(_drv_peak_val+1)^(0+256),w
 17323  0995  0021               	movlb	1	; select bank1
 17324  0996  00B9               	movwf	(drv_write_DC@val+1)^(0+128)
 17325  0997  0022               	movlb	2	; select bank2
 17326  0998  086E               	movf	_drv_peak_val^(0+256),w
 17327  0999  0021               	movlb	1	; select bank1
 17328  099A  00B8               	movwf	drv_write_DC@val^(0+128)
 17329  099B  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 17330  099C  00BB               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 17331  099D  0869               	movf	_piezo_on_time_ms^(0+128),w
 17332  099E  00BA               	movwf	drv_write_DC@duration_ms^(0+128)
 17333  099F  319C  2494  3189   	fcall	_drv_write_DC
 17334                           
 17335                           ;main.c: 247: for(int t=0; t<heater_post_time_ms; t++) _delay((unsigned long)((1)*(10000
      +                          00/4000.0)));
 17336  09A2  0021               	movlb	1	; select bank1
 17337  09A3  01C4               	clrf	doMove@t_1559^(0+128)
 17338  09A4  01C5               	clrf	(doMove@t_1559+1)^(0+128)
 17339  09A5                     l1089:	
 17340  09A5  0845               	movf	(doMove@t_1559+1)^(0+128),w
 17341  09A6  3A80               	xorlw	128
 17342  09A7  00C1               	movwf	??_doMove^(0+128)
 17343  09A8  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 17344  09A9  3A80               	xorlw	128
 17345  09AA  0241               	subwf	??_doMove^(0+128),w
 17346  09AB  1D03               	skipz
 17347  09AC  29AF               	goto	u7835
 17348  09AD  086B               	movf	_heater_post_time_ms^(0+128),w
 17349  09AE  0244               	subwf	doMove@t_1559^(0+128),w
 17350  09AF                     u7835:	
 17351  09AF  1803               	btfsc	3,0
 17352  09B0  29BB               	goto	l1092
 17353  09B1  3053               	movlw	83
 17354  09B2                     u8867:	
 17355  09B2  0B89               	decfsz	9,f
 17356  09B3  29B2               	goto	u8867
 17357  09B4  0000               	nop
 17358  09B5  3001               	movlw	1
 17359  09B6  0021               	movlb	1	; select bank1
 17360  09B7  07C4               	addwf	doMove@t_1559^(0+128),f
 17361  09B8  3000               	movlw	0
 17362  09B9  3DC5               	addwfc	(doMove@t_1559+1)^(0+128),f
 17363  09BA  29A5               	goto	l1089
 17364  09BB                     l1092:	
 17365                           ;main.c: 249: do { LATCbits.LATC1 = 1; } while(0);
 17366                           
 17367  09BB  0022               	movlb	2	; select bank2
 17368  09BC  148E               	bsf	14,1	;volatile
 17369                           
 17370                           ;main.c: 251: return 0;
 17371  09BD  0021               	movlb	1	; select bank1
 17372  09BE  01BF               	clrf	?_doMove^(0+128)
 17373  09BF  01C0               	clrf	(?_doMove+1)^(0+128)
 17374  09C0  0008               	return
 17375  09C1                     __end_of_doMove:	
 17376                           
 17377                           	psect	text54
 17378  1C94                     __ptext54:	
 17379 ;; *************** function _drv_write_DC *****************
 17380 ;; Defined at:
 17381 ;;		line 106 in file "drv2665.c"
 17382 ;; Parameters:    Size  Location     Type
 17383 ;;  val             2   24[BANK1 ] int 
 17384 ;;  duration_ms     2   26[BANK1 ] int 
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;  i               2   29[BANK1 ] int 
 17387 ;; Return value:  Size  Location     Type
 17388 ;;                  1    wreg      void 
 17389 ;; Registers used:
 17390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17391 ;; Tracked objects:
 17392 ;;		On entry : 0/0
 17393 ;;		On exit  : 0/0
 17394 ;;		Unchanged: 0/0
 17395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17396 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17397 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17398 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17399 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17400 ;;Total ram usage:        7 bytes
 17401 ;; Hardware stack levels used:    1
 17402 ;; Hardware stack levels required when called:   14
 17403 ;; This function calls:
 17404 ;;		___awdiv
 17405 ;;		_drv_write
 17406 ;;		_fifo_check
 17407 ;;		_printf
 17408 ;; This function is called by:
 17409 ;;		_doMove
 17410 ;; This function uses a non-reentrant model
 17411 ;;
 17412                           
 17413                           
 17414                           ;psect for function _drv_write_DC
 17415  1C94                     _drv_write_DC:	
 17416                           
 17417                           ;drv2665.c: 108: drv_write(0x0b, 0x00);
 17418                           
 17419                           ;incstack = 0
 17420 ;; hardware stack exceeded
 17421                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17422  1C94  0020               	movlb	0	; select bank0
 17423  1C95  01C9               	clrf	drv_write@data
 17424  1C96  300B               	movlw	11
 17425  1C97  31A7  2744  319C   	fcall	_drv_write
 17426                           
 17427                           ;drv2665.c: 109: for(int i=0;i<duration_ms/5; i++){
 17428  1C9A  0021               	movlb	1	; select bank1
 17429  1C9B  01BD               	clrf	drv_write_DC@i^(0+128)
 17430  1C9C  01BE               	clrf	(drv_write_DC@i+1)^(0+128)
 17431  1C9D                     l7596:	
 17432  1C9D  3005               	movlw	5
 17433  1C9E  0020               	movlb	0	; select bank0
 17434  1C9F  00B1               	movwf	___awdiv@divisor
 17435  1CA0  3000               	movlw	0
 17436  1CA1  00B2               	movwf	___awdiv@divisor+1
 17437  1CA2  0021               	movlb	1	; select bank1
 17438  1CA3  083B               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 17439  1CA4  0020               	movlb	0	; select bank0
 17440  1CA5  00B4               	movwf	___awdiv@dividend+1
 17441  1CA6  0021               	movlb	1	; select bank1
 17442  1CA7  083A               	movf	drv_write_DC@duration_ms^(0+128),w
 17443  1CA8  0020               	movlb	0	; select bank0
 17444  1CA9  00B3               	movwf	___awdiv@dividend
 17445  1CAA  319C  24E4  319C   	fcall	___awdiv
 17446  1CAD  0021               	movlb	1	; select bank1
 17447  1CAE  083E               	movf	(drv_write_DC@i+1)^(0+128),w
 17448  1CAF  3A80               	xorlw	128
 17449  1CB0  00BC               	movwf	??_drv_write_DC^(0+128)
 17450  1CB1  0020               	movlb	0	; select bank0
 17451  1CB2  0832               	movf	?___awdiv+1,w
 17452  1CB3  3A80               	xorlw	128
 17453  1CB4  0021               	movlb	1	; select bank1
 17454  1CB5  023C               	subwf	??_drv_write_DC^(0+128),w
 17455  1CB6  1D03               	skipz
 17456  1CB7  2CBC               	goto	u7445
 17457  1CB8  0020               	movlb	0	; select bank0
 17458  1CB9  0831               	movf	?___awdiv,w
 17459  1CBA  0021               	movlb	1	; select bank1
 17460  1CBB  023D               	subwf	drv_write_DC@i^(0+128),w
 17461  1CBC                     u7445:	
 17462  1CBC  1803               	btfsc	3,0
 17463  1CBD  2CD1               	goto	l7598
 17464                           
 17465                           ;drv2665.c: 110: drv_write(0x0b, val);
 17466  1CBE  0021               	movlb	1	; select bank1
 17467  1CBF  0838               	movf	drv_write_DC@val^(0+128),w
 17468  1CC0  00BC               	movwf	??_drv_write_DC^(0+128)
 17469  1CC1  083C               	movf	??_drv_write_DC^(0+128),w
 17470  1CC2  0020               	movlb	0	; select bank0
 17471  1CC3  00C9               	movwf	drv_write@data
 17472  1CC4  300B               	movlw	11
 17473  1CC5  31A7  2744  319C   	fcall	_drv_write
 17474                           
 17475                           ;drv2665.c: 111: _delay((unsigned long)((20)*(1000000/4000000.0)));
 17476  1CC8  3200               	nop2	;2 cycle nop
 17477  1CC9  3200               	nop2	;2 cycle nop
 17478  1CCA  0000               	nop
 17479  1CCB  3001               	movlw	1
 17480  1CCC  0021               	movlb	1	; select bank1
 17481  1CCD  07BD               	addwf	drv_write_DC@i^(0+128),f
 17482  1CCE  3000               	movlw	0
 17483  1CCF  3DBE               	addwfc	(drv_write_DC@i+1)^(0+128),f
 17484  1CD0  2C9D               	goto	l7596
 17485  1CD1                     l7598:	
 17486                           
 17487                           ;drv2665.c: 113: }
 17488                           ;drv2665.c: 116: if(!fifo_check()) printf("fifo not ready!\n");
 17489  1CD1  31A4  2473  319C   	fcall	_fifo_check
 17490  1CD4  1803               	btfsc	3,0
 17491  1CD5  2CDE               	goto	l1307
 17492  1CD6  3009               	movlw	low (STR_55| (0+32768))
 17493  1CD7  0021               	movlb	1	; select bank1
 17494  1CD8  00A0               	movwf	printf@f^(0+128)
 17495  1CD9  30A9               	movlw	high (STR_55| (0+32768))
 17496  1CDA  00A1               	movwf	(printf@f^(0+128)+1)
 17497  1CDB  3186  26A1  319C   	fcall	_printf
 17498  1CDE                     l1307:	
 17499                           
 17500                           ;drv2665.c: 118: drv_write(0x0b, 0x00);
 17501  1CDE  0020               	movlb	0	; select bank0
 17502  1CDF  01C9               	clrf	drv_write@data
 17503  1CE0  300B               	movlw	11
 17504  1CE1  31A7  2744         	fcall	_drv_write
 17505  1CE3  0008               	return
 17506  1CE4                     __end_of_drv_write_DC:	
 17507                           
 17508                           	psect	text55
 17509  2473                     __ptext55:	
 17510 ;; *************** function _fifo_check *****************
 17511 ;; Defined at:
 17512 ;;		line 124 in file "drv2665.c"
 17513 ;; Parameters:    Size  Location     Type
 17514 ;;		None
 17515 ;; Auto vars:     Size  Location     Type
 17516 ;;  reply           1   23[BANK1 ] unsigned char 
 17517 ;; Return value:  Size  Location     Type
 17518 ;;		None               void
 17519 ;; Registers used:
 17520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17521 ;; Tracked objects:
 17522 ;;		On entry : 0/0
 17523 ;;		On exit  : 0/0
 17524 ;;		Unchanged: 0/0
 17525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17527 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17529 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17530 ;;Total ram usage:        2 bytes
 17531 ;; Hardware stack levels used:    1
 17532 ;; Hardware stack levels required when called:   13
 17533 ;; This function calls:
 17534 ;;		_drv_read
 17535 ;; This function is called by:
 17536 ;;		_drv_write_DC
 17537 ;; This function uses a non-reentrant model
 17538 ;;
 17539                           
 17540                           
 17541                           ;psect for function _fifo_check
 17542  2473                     _fifo_check:	
 17543                           
 17544                           ;drv2665.c: 126: uint8_t reply;
 17545                           ;drv2665.c: 127: reply = drv_read(0x00);
 17546                           
 17547                           ;incstack = 0
 17548 ;; hardware stack exceeded
 17549                           ; Regs used in _fifo_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17550  2473  3000               	movlw	0
 17551  2474  319A  22D0  31A4   	fcall	_drv_read
 17552  2477  0021               	movlb	1	; select bank1
 17553  2478  0835               	movf	?_drv_read^(0+128),w
 17554  2479  0020               	movlb	0	; select bank0
 17555  247A  00CD               	movwf	??_fifo_check
 17556  247B  084D               	movf	??_fifo_check,w
 17557  247C  0021               	movlb	1	; select bank1
 17558  247D  00B7               	movwf	fifo_check@reply^(0+128)
 17559                           
 17560                           ;drv2665.c: 129: return !(reply & 0x01);
 17561  247E  1C37               	btfss	fifo_check@reply^(0+128),0
 17562  247F  2C82               	goto	l7462
 17563  2480  1003               	clrc
 17564  2481  0008               	return
 17565  2482                     l7462:	
 17566  2482  1403               	setc
 17567  2483  0008               	return
 17568  2484                     __end_of_fifo_check:	
 17569                           
 17570                           	psect	text56
 17571  1AD0                     __ptext56:	
 17572 ;; *************** function _drv_read *****************
 17573 ;; Defined at:
 17574 ;;		line 84 in file "drv2665.c"
 17575 ;; Parameters:    Size  Location     Type
 17576 ;;  reg             1    wreg     unsigned char 
 17577 ;; Auto vars:     Size  Location     Type
 17578 ;;  reg             1   43[BANK0 ] unsigned char 
 17579 ;;  buff            1   44[BANK0 ] unsigned char 
 17580 ;; Return value:  Size  Location     Type
 17581 ;;                  2   21[BANK1 ] int 
 17582 ;; Registers used:
 17583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17584 ;; Tracked objects:
 17585 ;;		On entry : 0/0
 17586 ;;		On exit  : 0/0
 17587 ;;		Unchanged: 0/0
 17588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17589 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17592 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17593 ;;Total ram usage:        6 bytes
 17594 ;; Hardware stack levels used:    1
 17595 ;; Hardware stack levels required when called:   12
 17596 ;; This function calls:
 17597 ;;		_i2c_masterOperation
 17598 ;;		_i2c_setBuffer
 17599 ;;		_printf
 17600 ;; This function is called by:
 17601 ;;		_commCheck
 17602 ;;		_fifo_check
 17603 ;; This function uses a non-reentrant model
 17604 ;;
 17605                           
 17606                           
 17607                           ;psect for function _drv_read
 17608  1AD0                     _drv_read:	
 17609                           
 17610                           ;incstack = 0
 17611 ;; hardware stack exceeded
 17612                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17613                           ;drv_read@reg stored from wreg
 17614  1AD0  0020               	movlb	0	; select bank0
 17615  1AD1  00CB               	movwf	drv_read@reg
 17616                           
 17617                           ;drv2665.c: 86: char buff=0;
 17618  1AD2  01CC               	clrf	drv_read@buff
 17619                           
 17620                           ;drv2665.c: 89: i2c_setBuffer(&reg, 1);
 17621  1AD3  304B               	movlw	low drv_read@reg
 17622  1AD4  00B1               	movwf	i2c_setBuffer@buffer
 17623  1AD5  3000               	movlw	high drv_read@reg
 17624  1AD6  00B2               	movwf	i2c_setBuffer@buffer+1
 17625  1AD7  3001               	movlw	1
 17626  1AD8  00B3               	movwf	i2c_setBuffer@bufferSize
 17627  1AD9  3000               	movlw	0
 17628  1ADA  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17629  1ADB  31A4  24D2  319A   	fcall	_i2c_setBuffer
 17630                           
 17631                           ;drv2665.c: 90: if(i2c_masterOperation(0) != I2C_NOERR)
 17632  1ADE  3000               	movlw	0
 17633  1ADF  31A7  2720  319A   	fcall	_i2c_masterOperation
 17634  1AE2  3A00               	xorlw	0
 17635  1AE3  1903               	skipnz
 17636  1AE4  2AED               	goto	l7412
 17637                           
 17638                           ;drv2665.c: 91: printf("drv_write error!\n");
 17639  1AE5  30E6               	movlw	low (STR_52| (0+32768))
 17640  1AE6  0021               	movlb	1	; select bank1
 17641  1AE7  00A0               	movwf	printf@f^(0+128)
 17642  1AE8  30A8               	movlw	high (STR_52| (0+32768))
 17643  1AE9  00A1               	movwf	(printf@f^(0+128)+1)
 17644  1AEA  3186  26A1  319A   	fcall	_printf
 17645  1AED                     l7412:	
 17646                           
 17647                           ;drv2665.c: 94: _delay((unsigned long)((100)*(1000000/4000000.0)));
 17648  1AED  3008               	movlw	8
 17649  1AEE                     u8877:	
 17650  1AEE  0B89               	decfsz	9,f
 17651  1AEF  2AEE               	goto	u8877
 17652  1AF0  0000               	nop
 17653                           
 17654                           ;drv2665.c: 97: i2c_setBuffer(&buff, 1);
 17655  1AF1  304C               	movlw	low drv_read@buff
 17656  1AF2  0020               	movlb	0	; select bank0
 17657  1AF3  00B1               	movwf	i2c_setBuffer@buffer
 17658  1AF4  3000               	movlw	high drv_read@buff
 17659  1AF5  00B2               	movwf	i2c_setBuffer@buffer+1
 17660  1AF6  3001               	movlw	1
 17661  1AF7  00B3               	movwf	i2c_setBuffer@bufferSize
 17662  1AF8  3000               	movlw	0
 17663  1AF9  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17664  1AFA  31A4  24D2  319A   	fcall	_i2c_setBuffer
 17665                           
 17666                           ;drv2665.c: 99: if(i2c_masterOperation(1) != I2C_NOERR)
 17667  1AFD  3001               	movlw	1
 17668  1AFE  31A7  2720  319A   	fcall	_i2c_masterOperation
 17669  1B01  3A00               	xorlw	0
 17670  1B02  1903               	skipnz
 17671  1B03  2B0B               	goto	l7420
 17672                           
 17673                           ;drv2665.c: 100: printf("drv_read error!\n");
 17674  1B04  30F8               	movlw	low (STR_54| (0+32768))
 17675  1B05  0021               	movlb	1	; select bank1
 17676  1B06  00A0               	movwf	printf@f^(0+128)
 17677  1B07  30A8               	movlw	high (STR_54| (0+32768))
 17678  1B08  00A1               	movwf	(printf@f^(0+128)+1)
 17679  1B09  3186  26A1         	fcall	_printf
 17680  1B0B                     l7420:	
 17681                           
 17682                           ;drv2665.c: 102: return buff;
 17683  1B0B  0020               	movlb	0	; select bank0
 17684  1B0C  084C               	movf	drv_read@buff,w
 17685  1B0D  00C9               	movwf	??_drv_read
 17686  1B0E  01CA               	clrf	??_drv_read+1
 17687  1B0F  0849               	movf	??_drv_read,w
 17688  1B10  0021               	movlb	1	; select bank1
 17689  1B11  00B5               	movwf	?_drv_read^(0+128)
 17690  1B12  0020               	movlb	0	; select bank0
 17691  1B13  084A               	movf	??_drv_read+1,w
 17692  1B14  0021               	movlb	1	; select bank1
 17693  1B15  00B6               	movwf	(?_drv_read+1)^(0+128)
 17694  1B16  0008               	return
 17695  1B17                     __end_of_drv_read:	
 17696                           
 17697                           	psect	text57
 17698  2744                     __ptext57:	
 17699 ;; *************** function _drv_write *****************
 17700 ;; Defined at:
 17701 ;;		line 57 in file "drv2665.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;  reg             1    wreg     unsigned char 
 17704 ;;  data            1   41[BANK0 ] unsigned char 
 17705 ;; Auto vars:     Size  Location     Type
 17706 ;;  reg             1   43[BANK0 ] unsigned char 
 17707 ;;  buff            2   44[BANK0 ] unsigned char [2]
 17708 ;; Return value:  Size  Location     Type
 17709 ;;                  1    wreg      void 
 17710 ;; Registers used:
 17711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17712 ;; Tracked objects:
 17713 ;;		On entry : 0/0
 17714 ;;		On exit  : 0/0
 17715 ;;		Unchanged: 0/0
 17716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17717 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17718 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17720 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17721 ;;Total ram usage:        5 bytes
 17722 ;; Hardware stack levels used:    1
 17723 ;; Hardware stack levels required when called:   12
 17724 ;; This function calls:
 17725 ;;		_i2c_masterOperation
 17726 ;;		_i2c_setBuffer
 17727 ;;		_printf
 17728 ;; This function is called by:
 17729 ;;		_setDrvGain
 17730 ;;		_drv_init
 17731 ;;		_drv_reset
 17732 ;;		_drv_write_DC
 17733 ;;		_drv_outputSine
 17734 ;;		_drv_outputWave
 17735 ;; This function uses a non-reentrant model
 17736 ;;
 17737                           
 17738                           
 17739                           ;psect for function _drv_write
 17740  2744                     _drv_write:	
 17741                           
 17742                           ;incstack = 0
 17743                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17744                           ;drv_write@reg stored from wreg
 17745  2744  0020               	movlb	0	; select bank0
 17746  2745  00CB               	movwf	drv_write@reg
 17747                           
 17748                           ;drv2665.c: 62: uint8_t buff[2];
 17749                           ;drv2665.c: 64: buff[0] = reg;
 17750  2746  084B               	movf	drv_write@reg,w
 17751  2747  00CA               	movwf	??_drv_write
 17752  2748  084A               	movf	??_drv_write,w
 17753  2749  00CC               	movwf	drv_write@buff
 17754                           
 17755                           ;drv2665.c: 65: buff[1] = data;
 17756  274A  0849               	movf	drv_write@data,w
 17757  274B  00CA               	movwf	??_drv_write
 17758  274C  084A               	movf	??_drv_write,w
 17759  274D  00CD               	movwf	drv_write@buff+1
 17760                           
 17761                           ;drv2665.c: 68: i2c_setBuffer(buff, 2);
 17762  274E  304C               	movlw	low drv_write@buff
 17763  274F  00B1               	movwf	i2c_setBuffer@buffer
 17764  2750  3000               	movlw	high drv_write@buff
 17765  2751  00B2               	movwf	i2c_setBuffer@buffer+1
 17766  2752  3002               	movlw	2
 17767  2753  00B3               	movwf	i2c_setBuffer@bufferSize
 17768  2754  3000               	movlw	0
 17769  2755  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17770  2756  31A4  24D2  31A7   	fcall	_i2c_setBuffer
 17771                           
 17772                           ;drv2665.c: 69: if(i2c_masterOperation(0) != I2C_NOERR)
 17773  2759  3000               	movlw	0
 17774  275A  31A7  2720  31A7   	fcall	_i2c_masterOperation
 17775  275D  3A00               	xorlw	0
 17776  275E  1903               	skipnz
 17777  275F  0008               	return
 17778                           
 17779                           ;drv2665.c: 70: printf("drv_write error!\n");
 17780  2760  30E6               	movlw	low (STR_52| (0+32768))
 17781  2761  0021               	movlb	1	; select bank1
 17782  2762  00A0               	movwf	printf@f^(0+128)
 17783  2763  30A8               	movlw	high (STR_52| (0+32768))
 17784  2764  00A1               	movwf	(printf@f^(0+128)+1)
 17785  2765  3186  26A1         	fcall	_printf
 17786  2767  0008               	return
 17787  2768                     __end_of_drv_write:	
 17788                           
 17789                           	psect	text58
 17790  06A1                     __ptext58:	
 17791 ;; *************** function _printf *****************
 17792 ;; Defined at:
 17793 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17794 ;; Parameters:    Size  Location     Type
 17795 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 17796 ;;		 -> STR_80(23), STR_79(3), STR_55(17), STR_54(17), 
 17797 ;;		 -> STR_53(18), STR_52(18), STR_51(17), STR_50(28), 
 17798 ;;		 -> STR_49(9), STR_48(9), STR_47(25), STR_46(11), 
 17799 ;;		 -> STR_45(8), STR_44(8), STR_43(8), STR_42(31), 
 17800 ;;		 -> STR_41(11), STR_40(8), STR_39(8), STR_38(8), 
 17801 ;;		 -> STR_37(26), STR_36(30), STR_35(2), STR_34(2), 
 17802 ;;		 -> STR_33(2), STR_32(2), STR_31(4), STR_30(2), 
 17803 ;;		 -> STR_29(4), STR_28(3), STR_27(3), STR_26(3), 
 17804 ;;		 -> STR_25(3), STR_24(3), STR_23(27), STR_22(3), 
 17805 ;;		 -> STR_21(3), STR_20(3), STR_19(3), STR_18(3), 
 17806 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(4), 
 17807 ;;		 -> STR_13(3), STR_12(16), STR_11(11), STR_10(16), 
 17808 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(8), 
 17809 ;;		 -> STR_5(13), STR_4(15), STR_3(16), STR_2(2), 
 17810 ;;		 -> STR_1(4), 
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;  val             4   14[BANK1 ] unsigned long 
 17813 ;;  tmpval          4    0        struct .
 17814 ;;  prec            2   12[BANK1 ] int 
 17815 ;;  cp              2    0        PTR const unsigned char 
 17816 ;;  len             2    0        unsigned int 
 17817 ;;  c               1   20[BANK1 ] char 
 17818 ;;  ap              1   19[BANK1 ] PTR void [1]
 17819 ;;		 -> ?_printf(2), 
 17820 ;;  flag            1   18[BANK1 ] unsigned char 
 17821 ;; Return value:  Size  Location     Type
 17822 ;;                  2    0[BANK1 ] int 
 17823 ;; Registers used:
 17824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17825 ;; Tracked objects:
 17826 ;;		On entry : 0/0
 17827 ;;		On exit  : 0/0
 17828 ;;		Unchanged: 0/0
 17829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17830 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17831 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17832 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17833 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17834 ;;Total ram usage:       21 bytes
 17835 ;; Hardware stack levels used:    1
 17836 ;; Hardware stack levels required when called:    8
 17837 ;; This function calls:
 17838 ;;		___lldiv
 17839 ;;		___llmod
 17840 ;;		_putch
 17841 ;; This function is called by:
 17842 ;;		_LED_test_openshort
 17843 ;;		_LED_getData
 17844 ;;		_main
 17845 ;;		_main_initialize
 17846 ;;		_doMove
 17847 ;;		_startRelMove
 17848 ;;		_startAbsMove
 17849 ;;		_doAbsMove
 17850 ;;		_doRelMove
 17851 ;;		_zeroPosition
 17852 ;;		_getPosition
 17853 ;;		_setDrvPeak
 17854 ;;		_setDrvGain
 17855 ;;		_setDrvPiezoOnTime
 17856 ;;		_setHeaterPreTime
 17857 ;;		_setHeaterPostTime
 17858 ;;		_setLEDBrightnessRange
 17859 ;;		_setLEDPwr
 17860 ;;		_setHeaterToggle
 17861 ;;		_setActive
 17862 ;;		_setMoveMask
 17863 ;;		_getActive
 17864 ;;		_getMoveMask
 17865 ;;		_getMotionStatus
 17866 ;;		_commCheck
 17867 ;;		_drv_init
 17868 ;;		_drv_write
 17869 ;;		_drv_read
 17870 ;;		_drv_write_DC
 17871 ;;		_execCmd
 17872 ;;		_stop
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           
 17877                           ;psect for function _printf
 17878  06A1                     _printf:	
 17879                           
 17880                           ;doprnt.c: 466: va_list ap;
 17881                           ;doprnt.c: 499: signed char c;
 17882                           ;doprnt.c: 504: int prec;
 17883                           ;doprnt.c: 508: unsigned char flag;
 17884                           ;doprnt.c: 523: union {
 17885                           ;doprnt.c: 524: unsigned long vd;
 17886                           ;doprnt.c: 525: double integ;
 17887                           ;doprnt.c: 526: } tmpval;
 17888                           ;doprnt.c: 528: unsigned long val;
 17889                           ;doprnt.c: 529: unsigned len;
 17890                           ;doprnt.c: 530: const char * cp;
 17891                           ;doprnt.c: 533: *ap = __va_start();
 17892                           
 17893                           ;incstack = 0
 17894                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17895  06A1  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17896  06A2  0021               	movlb	1	; select bank1
 17897  06A3  00A6               	movwf	??_printf^(0+128)
 17898  06A4  0826               	movf	??_printf^(0+128),w
 17899  06A5  00B3               	movwf	printf@ap^(0+128)
 17900  06A6                     l7350:	
 17901                           ;doprnt.c: 536: while(c = *f++) {
 17902                           
 17903  06A6  0021               	movlb	1	; select bank1
 17904  06A7  0821               	movf	(printf@f+1)^(0+128),w
 17905  06A8  00A7               	movwf	(??_printf^(0+128)+1)
 17906  06A9  0820               	movf	printf@f^(0+128),w
 17907  06AA  00A6               	movwf	??_printf^(0+128)
 17908  06AB  0AA0               	incf	printf@f^(0+128),f
 17909  06AC  1903               	skipnz
 17910  06AD  0AA1               	incf	(printf@f+1)^(0+128),f
 17911  06AE  0826               	movf	??_printf^(0+128),w
 17912  06AF  0084               	movwf	4
 17913  06B0  0827               	movf	(??_printf+1)^(0+128),w
 17914  06B1  0085               	movwf	5
 17915  06B2  0800               	movf	0,w	;code access
 17916  06B3  00A8               	movwf	(??_printf+2)^(0+128)
 17917  06B4  0828               	movf	(??_printf+2)^(0+128),w
 17918  06B5  00B4               	movwf	printf@c^(0+128)
 17919  06B6  0834               	movf	printf@c^(0+128),w
 17920  06B7  1903               	btfsc	3,2
 17921  06B8  0008               	return
 17922                           
 17923                           ;doprnt.c: 538: if(c != '%')
 17924  06B9  3025               	movlw	37
 17925  06BA  0634               	xorwf	printf@c^(0+128),w
 17926  06BB  1903               	btfsc	3,2
 17927  06BC  2EC2               	goto	l7296
 17928                           
 17929                           ;doprnt.c: 540: {
 17930                           ;doprnt.c: 541: (putch(c) );
 17931  06BD  0834               	movf	printf@c^(0+128),w
 17932  06BE  31A3  230C  3186   	fcall	_putch
 17933                           
 17934                           ;doprnt.c: 542: continue;
 17935  06C1  2EA6               	goto	l7350
 17936  06C2                     l7296:	
 17937                           
 17938                           ;doprnt.c: 543: }
 17939                           ;doprnt.c: 548: flag = 0;
 17940  06C2  0021               	movlb	1	; select bank1
 17941  06C3  01B2               	clrf	printf@flag^(0+128)
 17942                           
 17943                           ;doprnt.c: 635: switch(c = *f++) {
 17944                           
 17945                           ;doprnt.c: 633: loop:
 17946  06C4  2EC9               	goto	l7300
 17947  06C5                     l1455:	
 17948                           ;doprnt.c: 641: case 'l':
 17949                           
 17950                           ;doprnt.c: 638: goto alldone;
 17951                           
 17952                           ;doprnt.c: 637: case 0:
 17953                           
 17954                           
 17955                           ;doprnt.c: 643: flag |= 0x10;
 17956  06C5  1632               	bsf	printf@flag^(0+128),4
 17957                           
 17958                           ;doprnt.c: 644: goto loop;
 17959  06C6  2EC9               	goto	l7300
 17960  06C7                     l1460:	
 17961                           ;doprnt.c: 817: case 'u':
 17962                           
 17963                           ;doprnt.c: 813: continue;
 17964                           
 17965                           ;doprnt.c: 802: default:
 17966                           
 17967                           ;doprnt.c: 698: case 'i':
 17968                           ;doprnt.c: 699: break;
 17969                           
 17970                           ;doprnt.c: 697: case 'd':
 17971                           
 17972                           
 17973                           ;doprnt.c: 818: flag |= 0x40;
 17974  06C7  1732               	bsf	printf@flag^(0+128),6
 17975                           
 17976                           ;doprnt.c: 822: }
 17977                           
 17978                           ;doprnt.c: 819: break;
 17979  06C8  2EE6               	goto	l1458
 17980  06C9                     l7300:	
 17981  06C9  0821               	movf	(printf@f+1)^(0+128),w
 17982  06CA  00A7               	movwf	(??_printf^(0+128)+1)
 17983  06CB  0820               	movf	printf@f^(0+128),w
 17984  06CC  00A6               	movwf	??_printf^(0+128)
 17985  06CD  0AA0               	incf	printf@f^(0+128),f
 17986  06CE  1903               	skipnz
 17987  06CF  0AA1               	incf	(printf@f+1)^(0+128),f
 17988  06D0  0826               	movf	??_printf^(0+128),w
 17989  06D1  0084               	movwf	4
 17990  06D2  0827               	movf	(??_printf+1)^(0+128),w
 17991  06D3  0085               	movwf	5
 17992  06D4  0800               	movf	0,w	;code access
 17993  06D5  00B4               	movwf	printf@c^(0+128)
 17994                           
 17995                           ; Switch size 1, requested type "space"
 17996                           ; Number of cases is 5, Range of values is 0 to 117
 17997                           ; switch strategies available:
 17998                           ; Name         Instructions Cycles
 17999                           ; simple_byte           16     9 (average)
 18000                           ; direct_byte          242     6 (fixed)
 18001                           ; jumptable            260     6 (fixed)
 18002                           ;	Chosen strategy is simple_byte
 18003  06D6  3A00               	xorlw	0	; case 0
 18004  06D7  1903               	skipnz
 18005  06D8  2FD2               	goto	l1476
 18006  06D9  3A64               	xorlw	100	; case 100
 18007  06DA  1903               	skipnz
 18008  06DB  2EE6               	goto	l1458
 18009  06DC  3A0D               	xorlw	13	; case 105
 18010  06DD  1903               	skipnz
 18011  06DE  2EE6               	goto	l1458
 18012  06DF  3A05               	xorlw	5	; case 108
 18013  06E0  1903               	skipnz
 18014  06E1  2EC5               	goto	l1455
 18015  06E2  3A19               	xorlw	25	; case 117
 18016  06E3  1903               	skipnz
 18017  06E4  2EC7               	goto	l1460
 18018  06E5  2EA6               	goto	l7350
 18019  06E6                     l1458:	
 18020                           
 18021                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 18022  06E6  1B32               	btfsc	printf@flag^(0+128),6
 18023  06E7  2F1D               	goto	l1461
 18024                           
 18025                           ;doprnt.c: 1253: {
 18026                           ;doprnt.c: 1255: if(flag & 0x10)
 18027  06E8  1E32               	btfss	printf@flag^(0+128),4
 18028  06E9  2EF7               	goto	l7308
 18029                           
 18030                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 18031  06EA  0833               	movf	printf@ap^(0+128),w
 18032  06EB  0086               	movwf	6
 18033  06EC  0187               	clrf	7
 18034  06ED  3F40               	moviw [0]fsr1
 18035  06EE  00AE               	movwf	printf@val^(0+128)
 18036  06EF  3F41               	moviw [1]fsr1
 18037  06F0  00AF               	movwf	(printf@val+1)^(0+128)
 18038  06F1  3F42               	moviw [2]fsr1
 18039  06F2  00B0               	movwf	(printf@val+2)^(0+128)
 18040  06F3  3F43               	moviw [3]fsr1
 18041  06F4  00B1               	movwf	(printf@val+3)^(0+128)
 18042  06F5  3004               	movlw	4
 18043  06F6  2F08               	goto	L32
 18044  06F7                     l7308:	
 18045                           
 18046                           ;doprnt.c: 1257: else
 18047                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 18048  06F7  0833               	movf	printf@ap^(0+128),w
 18049  06F8  0086               	movwf	6
 18050  06F9  0187               	clrf	7
 18051  06FA  3F40               	moviw [0]fsr1
 18052  06FB  00A6               	movwf	??_printf^(0+128)
 18053  06FC  3F41               	moviw [1]fsr1
 18054  06FD  00A7               	movwf	(??_printf^(0+128)+1)
 18055  06FE  0826               	movf	??_printf^(0+128),w
 18056  06FF  00AE               	movwf	printf@val^(0+128)
 18057  0700  0827               	movf	(??_printf+1)^(0+128),w
 18058  0701  00AF               	movwf	(printf@val+1)^(0+128)
 18059  0702  0D89               	rlf	9,f
 18060  0703  3B89               	subwfb	9,f
 18061  0704  0989               	comf	9,f
 18062  0705  00B0               	movwf	(printf@val+2)^(0+128)
 18063  0706  00B1               	movwf	(printf@val+3)^(0+128)
 18064  0707  3002               	movlw	2
 18065  0708                     L32:	
 18066  0708  00A6               	movwf	??_printf^(0+128)
 18067  0709  0826               	movf	??_printf^(0+128),w
 18068  070A  07B3               	addwf	printf@ap^(0+128),f
 18069                           
 18070                           ;doprnt.c: 1261: if((long)val < 0) {
 18071  070B  1FB1               	btfss	(printf@val+3)^(0+128),7
 18072  070C  2F3D               	goto	l7326
 18073                           
 18074                           ;doprnt.c: 1262: flag |= 0x03;
 18075  070D  3003               	movlw	3
 18076  070E  00A6               	movwf	??_printf^(0+128)
 18077  070F  0826               	movf	??_printf^(0+128),w
 18078  0710  04B2               	iorwf	printf@flag^(0+128),f
 18079                           
 18080                           ;doprnt.c: 1263: val = -val;
 18081  0711  09AE               	comf	printf@val^(0+128),f
 18082  0712  09AF               	comf	(printf@val+1)^(0+128),f
 18083  0713  09B0               	comf	(printf@val+2)^(0+128),f
 18084  0714  09B1               	comf	(printf@val+3)^(0+128),f
 18085  0715  0AAE               	incf	printf@val^(0+128),f
 18086  0716  1903               	skipnz
 18087  0717  0AAF               	incf	(printf@val+1)^(0+128),f
 18088  0718  1903               	skipnz
 18089  0719  0AB0               	incf	(printf@val+2)^(0+128),f
 18090  071A  1903               	skipnz
 18091  071B  0AB1               	incf	(printf@val+3)^(0+128),f
 18092                           
 18093                           ;doprnt.c: 1264: }
 18094                           ;doprnt.c: 1266: }
 18095  071C  2F3D               	goto	l7326
 18096  071D                     l1461:	
 18097                           
 18098                           ;doprnt.c: 1268: else
 18099                           ;doprnt.c: 1273: {
 18100                           ;doprnt.c: 1281: if(flag & 0x10)
 18101  071D  1E32               	btfss	printf@flag^(0+128),4
 18102  071E  2F2C               	goto	l7322
 18103                           
 18104                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 18105  071F  0833               	movf	printf@ap^(0+128),w
 18106  0720  0086               	movwf	6
 18107  0721  0187               	clrf	7
 18108  0722  3F40               	moviw [0]fsr1
 18109  0723  00AE               	movwf	printf@val^(0+128)
 18110  0724  3F41               	moviw [1]fsr1
 18111  0725  00AF               	movwf	(printf@val+1)^(0+128)
 18112  0726  3F42               	moviw [2]fsr1
 18113  0727  00B0               	movwf	(printf@val+2)^(0+128)
 18114  0728  3F43               	moviw [3]fsr1
 18115  0729  00B1               	movwf	(printf@val+3)^(0+128)
 18116  072A  3004               	movlw	4
 18117  072B  2F3A               	goto	L33
 18118  072C                     l7322:	
 18119                           
 18120                           ;doprnt.c: 1283: else
 18121                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18122  072C  0833               	movf	printf@ap^(0+128),w
 18123  072D  0086               	movwf	6
 18124  072E  0187               	clrf	7
 18125  072F  3F40               	moviw [0]fsr1
 18126  0730  00A6               	movwf	??_printf^(0+128)
 18127  0731  3F41               	moviw [1]fsr1
 18128  0732  00A7               	movwf	(??_printf^(0+128)+1)
 18129  0733  0826               	movf	??_printf^(0+128),w
 18130  0734  00AE               	movwf	printf@val^(0+128)
 18131  0735  0827               	movf	(??_printf+1)^(0+128),w
 18132  0736  00AF               	movwf	(printf@val^(0+128)+1)
 18133  0737  01B0               	clrf	(printf@val^(0+128)+2)
 18134  0738  01B1               	clrf	(printf@val^(0+128)+3)
 18135  0739  3002               	movlw	2
 18136  073A                     L33:	
 18137  073A  00A6               	movwf	??_printf^(0+128)
 18138  073B  0826               	movf	??_printf^(0+128),w
 18139  073C  07B3               	addwf	printf@ap^(0+128),f
 18140  073D                     l7326:	
 18141                           
 18142                           ;doprnt.c: 1287: }
 18143                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18144  073D  01B4               	clrf	printf@c^(0+128)
 18145  073E  0AB4               	incf	printf@c^(0+128),f
 18146  073F  300A               	movlw	10
 18147  0740  0634               	xorwf	printf@c^(0+128),w
 18148  0741  1903               	btfsc	3,2
 18149  0742  2F70               	goto	l7338
 18150  0743                     l7332:	
 18151                           
 18152                           ;doprnt.c: 1306: if(val < dpowers[c])
 18153  0743  0834               	movf	printf@c^(0+128),w
 18154  0744  00A6               	movwf	??_printf^(0+128)
 18155  0745  01A7               	clrf	(??_printf^(0+128)+1)
 18156  0746  35A6               	lslf	??_printf^(0+128),f
 18157  0747  0DA7               	rlf	(??_printf^(0+128)+1),f
 18158  0748  35A6               	lslf	??_printf^(0+128),f
 18159  0749  0DA7               	rlf	(??_printf^(0+128)+1),f
 18160  074A  3000               	movlw	low (_dpowers| (0+32768))
 18161  074B  0726               	addwf	??_printf^(0+128),w
 18162  074C  0084               	movwf	4
 18163  074D  30A8               	movlw	high (_dpowers| (0+32768))
 18164  074E  3D27               	addwfc	(??_printf+1)^(0+128),w
 18165  074F  0085               	movwf	5
 18166  0750  3F00               	moviw [0]fsr0
 18167  0751  00A8               	movwf	(??_printf+2)^(0+128)
 18168  0752  3F01               	moviw [1]fsr0
 18169  0753  00A9               	movwf	((??_printf+2)^(0+128)+1)
 18170  0754  3F02               	moviw [2]fsr0
 18171  0755  00AA               	movwf	((??_printf+2)^(0+128)+2)
 18172  0756  3F03               	moviw [3]fsr0
 18173  0757  00AB               	movwf	((??_printf+2)^(0+128)+3)
 18174  0758  082B               	movf	(??_printf+5)^(0+128),w
 18175  0759  0231               	subwf	(printf@val+3)^(0+128),w
 18176  075A  1D03               	skipz
 18177  075B  2F66               	goto	u6935
 18178  075C  082A               	movf	(??_printf+4)^(0+128),w
 18179  075D  0230               	subwf	(printf@val+2)^(0+128),w
 18180  075E  1D03               	skipz
 18181  075F  2F66               	goto	u6935
 18182  0760  0829               	movf	(??_printf+3)^(0+128),w
 18183  0761  022F               	subwf	(printf@val+1)^(0+128),w
 18184  0762  1D03               	skipz
 18185  0763  2F66               	goto	u6935
 18186  0764  0828               	movf	(??_printf+2)^(0+128),w
 18187  0765  022E               	subwf	printf@val^(0+128),w
 18188  0766                     u6935:	
 18189  0766  1C03               	btfss	3,0
 18190  0767  2F70               	goto	l7338
 18191                           
 18192                           ;doprnt.c: 1307: break;
 18193  0768  3001               	movlw	1
 18194  0769  00A6               	movwf	??_printf^(0+128)
 18195  076A  0826               	movf	??_printf^(0+128),w
 18196  076B  07B4               	addwf	printf@c^(0+128),f
 18197  076C  300A               	movlw	10
 18198  076D  0634               	xorwf	printf@c^(0+128),w
 18199  076E  1D03               	btfss	3,2
 18200  076F  2F43               	goto	l7332
 18201  0770                     l7338:	
 18202                           
 18203                           ;doprnt.c: 1422: {
 18204                           ;doprnt.c: 1438: if(flag & 0x03)
 18205  0770  0832               	movf	printf@flag^(0+128),w
 18206  0771  3903               	andlw	3
 18207  0772  1903               	btfsc	3,2
 18208  0773  2F78               	goto	l7342
 18209                           
 18210                           ;doprnt.c: 1439: (putch('-') );
 18211  0774  302D               	movlw	45
 18212  0775  31A3  230C  3186   	fcall	_putch
 18213  0778                     l7342:	
 18214                           
 18215                           ;doprnt.c: 1469: }
 18216                           ;doprnt.c: 1472: prec = c;
 18217  0778  0021               	movlb	1	; select bank1
 18218  0779  0834               	movf	printf@c^(0+128),w
 18219  077A  00AC               	movwf	printf@prec^(0+128)
 18220  077B  01AD               	clrf	(printf@prec+1)^(0+128)
 18221  077C  1BAC               	btfsc	printf@prec^(0+128),7
 18222  077D  03AD               	decf	(printf@prec+1)^(0+128),f
 18223  077E                     l7348:	
 18224                           ;doprnt.c: 1474: while(prec--) {
 18225                           
 18226  077E  30FF               	movlw	255
 18227  077F  0021               	movlb	1	; select bank1
 18228  0780  07AC               	addwf	printf@prec^(0+128),f
 18229  0781  30FF               	movlw	255
 18230  0782  3DAD               	addwfc	(printf@prec+1)^(0+128),f
 18231  0783  0A2C               	incf	printf@prec^(0+128),w
 18232  0784  1903               	btfsc	3,2
 18233  0785  0A2D               	incf	(printf@prec+1)^(0+128),w
 18234  0786  1903               	btfsc	3,2
 18235  0787  2EA6               	goto	l7350
 18236                           
 18237                           ;doprnt.c: 1478: {
 18238                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18239  0788  3000               	movlw	0
 18240  0789  0020               	movlb	0	; select bank0
 18241  078A  00C2               	movwf	___llmod@divisor+3
 18242  078B  3000               	movlw	0
 18243  078C  00C1               	movwf	___llmod@divisor+2
 18244  078D  3000               	movlw	0
 18245  078E  00C0               	movwf	___llmod@divisor+1
 18246  078F  300A               	movlw	10
 18247  0790  00BF               	movwf	___llmod@divisor
 18248  0791  0021               	movlb	1	; select bank1
 18249  0792  082D               	movf	(printf@prec+1)^(0+128),w
 18250  0793  0085               	movwf	5
 18251  0794  082C               	movf	printf@prec^(0+128),w
 18252  0795  0084               	movwf	4
 18253  0796  3584               	lslf	4,f
 18254  0797  0D85               	rlf	5,f
 18255  0798  3584               	lslf	4,f
 18256  0799  0D85               	rlf	5,f
 18257  079A  3000               	movlw	low (_dpowers| (0+32768))
 18258  079B  0784               	addwf	4,f
 18259  079C  30A8               	movlw	high (_dpowers| (0+32768))
 18260  079D  3D85               	addwfc	5,f
 18261  079E  3F00               	moviw [0]fsr0
 18262  079F  0020               	movlb	0	; select bank0
 18263  07A0  00B1               	movwf	___lldiv@divisor
 18264  07A1  3F01               	moviw [1]fsr0
 18265  07A2  00B2               	movwf	___lldiv@divisor+1
 18266  07A3  3F02               	moviw [2]fsr0
 18267  07A4  00B3               	movwf	___lldiv@divisor+2
 18268  07A5  3F03               	moviw [3]fsr0
 18269  07A6  00B4               	movwf	___lldiv@divisor+3
 18270  07A7  0021               	movlb	1	; select bank1
 18271  07A8  0831               	movf	(printf@val+3)^(0+128),w
 18272  07A9  0020               	movlb	0	; select bank0
 18273  07AA  00B8               	movwf	___lldiv@dividend+3
 18274  07AB  0021               	movlb	1	; select bank1
 18275  07AC  0830               	movf	(printf@val+2)^(0+128),w
 18276  07AD  0020               	movlb	0	; select bank0
 18277  07AE  00B7               	movwf	___lldiv@dividend+2
 18278  07AF  0021               	movlb	1	; select bank1
 18279  07B0  082F               	movf	(printf@val+1)^(0+128),w
 18280  07B1  0020               	movlb	0	; select bank0
 18281  07B2  00B6               	movwf	___lldiv@dividend+1
 18282  07B3  0021               	movlb	1	; select bank1
 18283  07B4  082E               	movf	printf@val^(0+128),w
 18284  07B5  0020               	movlb	0	; select bank0
 18285  07B6  00B5               	movwf	___lldiv@dividend
 18286  07B7  319D  2588  3186   	fcall	___lldiv
 18287  07BA  0020               	movlb	0	; select bank0
 18288  07BB  0834               	movf	?___lldiv+3,w
 18289  07BC  00C6               	movwf	___llmod@dividend+3
 18290  07BD  0833               	movf	?___lldiv+2,w
 18291  07BE  00C5               	movwf	___llmod@dividend+2
 18292  07BF  0832               	movf	?___lldiv+1,w
 18293  07C0  00C4               	movwf	___llmod@dividend+1
 18294  07C1  0831               	movf	?___lldiv,w
 18295  07C2  00C3               	movwf	___llmod@dividend
 18296  07C3  319A  2206  3186   	fcall	___llmod
 18297  07C6  0020               	movlb	0	; select bank0
 18298  07C7  083F               	movf	?___llmod,w
 18299  07C8  3E30               	addlw	48
 18300  07C9  0021               	movlb	1	; select bank1
 18301  07CA  00A6               	movwf	??_printf^(0+128)
 18302  07CB  0826               	movf	??_printf^(0+128),w
 18303  07CC  00B4               	movwf	printf@c^(0+128)
 18304                           
 18305                           ;doprnt.c: 1523: }
 18306                           ;doprnt.c: 1524: (putch(c) );
 18307  07CD  0834               	movf	printf@c^(0+128),w
 18308  07CE  31A3  230C  3186   	fcall	_putch
 18309  07D1  2F7E               	goto	l7348
 18310  07D2                     l1476:	
 18311                           ;doprnt.c: 1540: return 0;
 18312                           ;	Return value of _printf is never used
 18313                           
 18314                           ;doprnt.c: 1525: }
 18315                           ;doprnt.c: 1533: }
 18316                           ;doprnt.c: 1535: alldone:
 18317                           
 18318  07D2  0008               	return
 18319  07D3                     __end_of_printf:	
 18320                           
 18321                           	psect	text59
 18322  230C                     __ptext59:	
 18323 ;; *************** function _putch *****************
 18324 ;; Defined at:
 18325 ;;		line 156 in file "mcc_generated_files/eusart.c"
 18326 ;; Parameters:    Size  Location     Type
 18327 ;;  txData          1    wreg     unsigned char 
 18328 ;; Auto vars:     Size  Location     Type
 18329 ;;  txData          1   19[BANK0 ] unsigned char 
 18330 ;; Return value:  Size  Location     Type
 18331 ;;                  1    wreg      void 
 18332 ;; Registers used:
 18333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18334 ;; Tracked objects:
 18335 ;;		On entry : 0/0
 18336 ;;		On exit  : 0/0
 18337 ;;		Unchanged: 0/0
 18338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18343 ;;Total ram usage:        1 bytes
 18344 ;; Hardware stack levels used:    1
 18345 ;; Hardware stack levels required when called:    7
 18346 ;; This function calls:
 18347 ;;		_EUSART_Write
 18348 ;; This function is called by:
 18349 ;;		_printf
 18350 ;; This function uses a non-reentrant model
 18351 ;;
 18352                           
 18353                           
 18354                           ;psect for function _putch
 18355  230C                     _putch:	
 18356                           
 18357                           ;incstack = 0
 18358                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18359                           ;putch@txData stored from wreg
 18360  230C  0020               	movlb	0	; select bank0
 18361  230D  00B3               	movwf	putch@txData
 18362                           
 18363                           ;eusart.c: 158: EUSART_Write(txData);
 18364  230E  0833               	movf	putch@txData,w
 18365  230F  31A7  278C         	fcall	_EUSART_Write
 18366  2311  0008               	return
 18367  2312                     __end_of_putch:	
 18368                           
 18369                           	psect	text60
 18370  278C                     __ptext60:	
 18371 ;; *************** function _EUSART_Write *****************
 18372 ;; Defined at:
 18373 ;;		line 128 in file "mcc_generated_files/eusart.c"
 18374 ;; Parameters:    Size  Location     Type
 18375 ;;  txData          1    wreg     unsigned char 
 18376 ;; Auto vars:     Size  Location     Type
 18377 ;;  txData          1   18[BANK0 ] unsigned char 
 18378 ;; Return value:  Size  Location     Type
 18379 ;;                  1    wreg      void 
 18380 ;; Registers used:
 18381 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18382 ;; Tracked objects:
 18383 ;;		On entry : 0/0
 18384 ;;		On exit  : 0/0
 18385 ;;		Unchanged: 0/0
 18386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18390 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18391 ;;Total ram usage:        2 bytes
 18392 ;; Hardware stack levels used:    1
 18393 ;; Hardware stack levels required when called:    6
 18394 ;; This function calls:
 18395 ;;		Nothing
 18396 ;; This function is called by:
 18397 ;;		_putch
 18398 ;; This function uses a non-reentrant model
 18399 ;;
 18400                           
 18401                           
 18402                           ;psect for function _EUSART_Write
 18403  278C                     _EUSART_Write:	
 18404                           
 18405                           ;incstack = 0
 18406                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18407                           ;EUSART_Write@txData stored from wreg
 18408  278C  0020               	movlb	0	; select bank0
 18409  278D  00B2               	movwf	EUSART_Write@txData
 18410  278E                     l7166:	
 18411                           ;eusart.c: 131: {
 18412                           
 18413                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 18414                           
 18415  278E  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 18416  278F  1903               	btfsc	3,2
 18417  2790  2F8E               	goto	l7166
 18418                           
 18419                           ;eusart.c: 132: }
 18420                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 18421  2791  0021               	movlb	1	; select bank1
 18422  2792  1A11               	btfsc	17,4	;volatile
 18423  2793  2F99               	goto	l415
 18424                           
 18425                           ;eusart.c: 135: {
 18426                           ;eusart.c: 136: TX1REG = txData;
 18427  2794  0020               	movlb	0	; select bank0
 18428  2795  0832               	movf	EUSART_Write@txData,w
 18429  2796  0023               	movlb	3	; select bank3
 18430  2797  009A               	movwf	26	;volatile
 18431                           
 18432                           ;eusart.c: 137: }
 18433  2798  2FAE               	goto	l7180
 18434  2799                     l415:	
 18435                           
 18436                           ;eusart.c: 138: else
 18437                           ;eusart.c: 139: {
 18438                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 18439  2799  1211               	bcf	17,4	;volatile
 18440                           
 18441                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 18442  279A  0020               	movlb	0	; select bank0
 18443  279B  0832               	movf	EUSART_Write@txData,w
 18444  279C  00B1               	movwf	??_EUSART_Write
 18445  279D  087D               	movf	_eusartTxHead,w
 18446  279E  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18447  279F  0086               	movwf	6
 18448  27A0  3001               	movlw	1	; select bank3/4
 18449  27A1  0087               	movwf	7
 18450  27A2  0831               	movf	??_EUSART_Write,w
 18451  27A3  0081               	movwf	1
 18452  27A4  3001               	movlw	1
 18453  27A5  00B1               	movwf	??_EUSART_Write
 18454  27A6  0831               	movf	??_EUSART_Write,w
 18455  27A7  07FD               	addwf	_eusartTxHead,f	;volatile
 18456                           
 18457                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 18458  27A8  3008               	movlw	8
 18459  27A9  027D               	subwf	_eusartTxHead,w	;volatile
 18460  27AA  1803               	btfsc	3,0
 18461                           
 18462                           ;eusart.c: 143: {
 18463                           ;eusart.c: 144: eusartTxHead = 0;
 18464  27AB  01FD               	clrf	_eusartTxHead	;volatile
 18465                           
 18466                           ;eusart.c: 145: }
 18467                           ;eusart.c: 146: eusartTxBufferRemaining--;
 18468  27AC  3001               	movlw	1
 18469  27AD  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 18470  27AE                     l7180:	
 18471                           
 18472                           ;eusart.c: 147: }
 18473                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 18474  27AE  0021               	movlb	1	; select bank1
 18475  27AF  1611               	bsf	17,4	;volatile
 18476  27B0  0008               	return
 18477  27B1                     __end_of_EUSART_Write:	
 18478                           
 18479                           	psect	text61
 18480  1A06                     __ptext61:	
 18481 ;; *************** function ___llmod *****************
 18482 ;; Defined at:
 18483 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18484 ;; Parameters:    Size  Location     Type
 18485 ;;  divisor         4   31[BANK0 ] unsigned long 
 18486 ;;  dividend        4   35[BANK0 ] unsigned long 
 18487 ;; Auto vars:     Size  Location     Type
 18488 ;;  counter         1   40[BANK0 ] unsigned char 
 18489 ;; Return value:  Size  Location     Type
 18490 ;;                  4   31[BANK0 ] unsigned long 
 18491 ;; Registers used:
 18492 ;;		wreg, status,2, status,0
 18493 ;; Tracked objects:
 18494 ;;		On entry : 0/0
 18495 ;;		On exit  : 0/0
 18496 ;;		Unchanged: 0/0
 18497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18498 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18500 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18501 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18502 ;;Total ram usage:       10 bytes
 18503 ;; Hardware stack levels used:    1
 18504 ;; Hardware stack levels required when called:    6
 18505 ;; This function calls:
 18506 ;;		Nothing
 18507 ;; This function is called by:
 18508 ;;		_printf
 18509 ;; This function uses a non-reentrant model
 18510 ;;
 18511                           
 18512                           
 18513                           ;psect for function ___llmod
 18514  1A06                     ___llmod:	
 18515                           
 18516                           ;incstack = 0
 18517                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 18518  1A06  0020               	movlb	0	; select bank0
 18519  1A07  0842               	movf	___llmod@divisor+3,w
 18520  1A08  0441               	iorwf	___llmod@divisor+2,w
 18521  1A09  0440               	iorwf	___llmod@divisor+1,w
 18522  1A0A  043F               	iorwf	___llmod@divisor,w
 18523  1A0B  1903               	skipnz
 18524  1A0C  2A40               	goto	l7254
 18525  1A0D  01C8               	clrf	___llmod@counter
 18526  1A0E  0AC8               	incf	___llmod@counter,f
 18527  1A0F                     l7244:	
 18528  1A0F  1BC2               	btfsc	___llmod@divisor+3,7
 18529  1A10  2A1D               	goto	l7246
 18530  1A11  3001               	movlw	1
 18531  1A12                     u6705:	
 18532  1A12  35BF               	lslf	___llmod@divisor,f
 18533  1A13  0DC0               	rlf	___llmod@divisor+1,f
 18534  1A14  0DC1               	rlf	___llmod@divisor+2,f
 18535  1A15  0DC2               	rlf	___llmod@divisor+3,f
 18536  1A16  0B89               	decfsz	9,f
 18537  1A17  2A12               	goto	u6705
 18538  1A18  3001               	movlw	1
 18539  1A19  00C7               	movwf	??___llmod
 18540  1A1A  0847               	movf	??___llmod,w
 18541  1A1B  07C8               	addwf	___llmod@counter,f
 18542  1A1C  2A0F               	goto	l7244
 18543  1A1D                     l7246:	
 18544  1A1D  0842               	movf	___llmod@divisor+3,w
 18545  1A1E  0246               	subwf	___llmod@dividend+3,w
 18546  1A1F  1D03               	skipz
 18547  1A20  2A2B               	goto	u6725
 18548  1A21  0841               	movf	___llmod@divisor+2,w
 18549  1A22  0245               	subwf	___llmod@dividend+2,w
 18550  1A23  1D03               	skipz
 18551  1A24  2A2B               	goto	u6725
 18552  1A25  0840               	movf	___llmod@divisor+1,w
 18553  1A26  0244               	subwf	___llmod@dividend+1,w
 18554  1A27  1D03               	skipz
 18555  1A28  2A2B               	goto	u6725
 18556  1A29  083F               	movf	___llmod@divisor,w
 18557  1A2A  0243               	subwf	___llmod@dividend,w
 18558  1A2B                     u6725:	
 18559  1A2B  1C03               	skipc
 18560  1A2C  2A35               	goto	l7250
 18561  1A2D  083F               	movf	___llmod@divisor,w
 18562  1A2E  02C3               	subwf	___llmod@dividend,f
 18563  1A2F  0840               	movf	___llmod@divisor+1,w
 18564  1A30  3BC4               	subwfb	___llmod@dividend+1,f
 18565  1A31  0841               	movf	___llmod@divisor+2,w
 18566  1A32  3BC5               	subwfb	___llmod@dividend+2,f
 18567  1A33  0842               	movf	___llmod@divisor+3,w
 18568  1A34  3BC6               	subwfb	___llmod@dividend+3,f
 18569  1A35                     l7250:	
 18570  1A35  3001               	movlw	1
 18571  1A36                     u6735:	
 18572  1A36  36C2               	lsrf	___llmod@divisor+3,f
 18573  1A37  0CC1               	rrf	___llmod@divisor+2,f
 18574  1A38  0CC0               	rrf	___llmod@divisor+1,f
 18575  1A39  0CBF               	rrf	___llmod@divisor,f
 18576  1A3A  0B89               	decfsz	9,f
 18577  1A3B  2A36               	goto	u6735
 18578  1A3C  3001               	movlw	1
 18579  1A3D  02C8               	subwf	___llmod@counter,f
 18580  1A3E  1D03               	btfss	3,2
 18581  1A3F  2A1D               	goto	l7246
 18582  1A40                     l7254:	
 18583  1A40  0846               	movf	___llmod@dividend+3,w
 18584  1A41  00C2               	movwf	?___llmod+3
 18585  1A42  0845               	movf	___llmod@dividend+2,w
 18586  1A43  00C1               	movwf	?___llmod+2
 18587  1A44  0844               	movf	___llmod@dividend+1,w
 18588  1A45  00C0               	movwf	?___llmod+1
 18589  1A46  0843               	movf	___llmod@dividend,w
 18590  1A47  00BF               	movwf	?___llmod
 18591  1A48  0008               	return
 18592  1A49                     __end_of___llmod:	
 18593                           
 18594                           	psect	text62
 18595  1D88                     __ptext62:	
 18596 ;; *************** function ___lldiv *****************
 18597 ;; Defined at:
 18598 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18599 ;; Parameters:    Size  Location     Type
 18600 ;;  divisor         4   17[BANK0 ] unsigned long 
 18601 ;;  dividend        4   21[BANK0 ] unsigned long 
 18602 ;; Auto vars:     Size  Location     Type
 18603 ;;  quotient        4   26[BANK0 ] unsigned long 
 18604 ;;  counter         1   30[BANK0 ] unsigned char 
 18605 ;; Return value:  Size  Location     Type
 18606 ;;                  4   17[BANK0 ] unsigned long 
 18607 ;; Registers used:
 18608 ;;		wreg, status,2, status,0
 18609 ;; Tracked objects:
 18610 ;;		On entry : 0/0
 18611 ;;		On exit  : 0/0
 18612 ;;		Unchanged: 0/0
 18613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18614 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18615 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18616 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18617 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18618 ;;Total ram usage:       14 bytes
 18619 ;; Hardware stack levels used:    1
 18620 ;; Hardware stack levels required when called:    6
 18621 ;; This function calls:
 18622 ;;		Nothing
 18623 ;; This function is called by:
 18624 ;;		_printf
 18625 ;; This function uses a non-reentrant model
 18626 ;;
 18627                           
 18628                           
 18629                           ;psect for function ___lldiv
 18630  1D88                     ___lldiv:	
 18631                           
 18632                           ;incstack = 0
 18633                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 18634  1D88  3000               	movlw	0
 18635  1D89  0020               	movlb	0	; select bank0
 18636  1D8A  00BD               	movwf	___lldiv@quotient+3
 18637  1D8B  3000               	movlw	0
 18638  1D8C  00BC               	movwf	___lldiv@quotient+2
 18639  1D8D  3000               	movlw	0
 18640  1D8E  00BB               	movwf	___lldiv@quotient+1
 18641  1D8F  3000               	movlw	0
 18642  1D90  00BA               	movwf	___lldiv@quotient
 18643  1D91  0834               	movf	___lldiv@divisor+3,w
 18644  1D92  0433               	iorwf	___lldiv@divisor+2,w
 18645  1D93  0432               	iorwf	___lldiv@divisor+1,w
 18646  1D94  0431               	iorwf	___lldiv@divisor,w
 18647  1D95  1903               	skipnz
 18648  1D96  2DD2               	goto	l7234
 18649  1D97  01BE               	clrf	___lldiv@counter
 18650  1D98  0ABE               	incf	___lldiv@counter,f
 18651  1D99                     l7220:	
 18652  1D99  1BB4               	btfsc	___lldiv@divisor+3,7
 18653  1D9A  2DA7               	goto	l7222
 18654  1D9B  3001               	movlw	1
 18655  1D9C                     u6635:	
 18656  1D9C  35B1               	lslf	___lldiv@divisor,f
 18657  1D9D  0DB2               	rlf	___lldiv@divisor+1,f
 18658  1D9E  0DB3               	rlf	___lldiv@divisor+2,f
 18659  1D9F  0DB4               	rlf	___lldiv@divisor+3,f
 18660  1DA0  0B89               	decfsz	9,f
 18661  1DA1  2D9C               	goto	u6635
 18662  1DA2  3001               	movlw	1
 18663  1DA3  00B9               	movwf	??___lldiv
 18664  1DA4  0839               	movf	??___lldiv,w
 18665  1DA5  07BE               	addwf	___lldiv@counter,f
 18666  1DA6  2D99               	goto	l7220
 18667  1DA7                     l7222:	
 18668  1DA7  3001               	movlw	1
 18669  1DA8                     u6655:	
 18670  1DA8  35BA               	lslf	___lldiv@quotient,f
 18671  1DA9  0DBB               	rlf	___lldiv@quotient+1,f
 18672  1DAA  0DBC               	rlf	___lldiv@quotient+2,f
 18673  1DAB  0DBD               	rlf	___lldiv@quotient+3,f
 18674  1DAC  0B89               	decfsz	9,f
 18675  1DAD  2DA8               	goto	u6655
 18676  1DAE  0834               	movf	___lldiv@divisor+3,w
 18677  1DAF  0238               	subwf	___lldiv@dividend+3,w
 18678  1DB0  1D03               	skipz
 18679  1DB1  2DBC               	goto	u6665
 18680  1DB2  0833               	movf	___lldiv@divisor+2,w
 18681  1DB3  0237               	subwf	___lldiv@dividend+2,w
 18682  1DB4  1D03               	skipz
 18683  1DB5  2DBC               	goto	u6665
 18684  1DB6  0832               	movf	___lldiv@divisor+1,w
 18685  1DB7  0236               	subwf	___lldiv@dividend+1,w
 18686  1DB8  1D03               	skipz
 18687  1DB9  2DBC               	goto	u6665
 18688  1DBA  0831               	movf	___lldiv@divisor,w
 18689  1DBB  0235               	subwf	___lldiv@dividend,w
 18690  1DBC                     u6665:	
 18691  1DBC  1C03               	skipc
 18692  1DBD  2DC7               	goto	l7230
 18693  1DBE  0831               	movf	___lldiv@divisor,w
 18694  1DBF  02B5               	subwf	___lldiv@dividend,f
 18695  1DC0  0832               	movf	___lldiv@divisor+1,w
 18696  1DC1  3BB6               	subwfb	___lldiv@dividend+1,f
 18697  1DC2  0833               	movf	___lldiv@divisor+2,w
 18698  1DC3  3BB7               	subwfb	___lldiv@dividend+2,f
 18699  1DC4  0834               	movf	___lldiv@divisor+3,w
 18700  1DC5  3BB8               	subwfb	___lldiv@dividend+3,f
 18701  1DC6  143A               	bsf	___lldiv@quotient,0
 18702  1DC7                     l7230:	
 18703  1DC7  3001               	movlw	1
 18704  1DC8                     u6675:	
 18705  1DC8  36B4               	lsrf	___lldiv@divisor+3,f
 18706  1DC9  0CB3               	rrf	___lldiv@divisor+2,f
 18707  1DCA  0CB2               	rrf	___lldiv@divisor+1,f
 18708  1DCB  0CB1               	rrf	___lldiv@divisor,f
 18709  1DCC  0B89               	decfsz	9,f
 18710  1DCD  2DC8               	goto	u6675
 18711  1DCE  3001               	movlw	1
 18712  1DCF  02BE               	subwf	___lldiv@counter,f
 18713  1DD0  1D03               	btfss	3,2
 18714  1DD1  2DA7               	goto	l7222
 18715  1DD2                     l7234:	
 18716  1DD2  083D               	movf	___lldiv@quotient+3,w
 18717  1DD3  00B4               	movwf	?___lldiv+3
 18718  1DD4  083C               	movf	___lldiv@quotient+2,w
 18719  1DD5  00B3               	movwf	?___lldiv+2
 18720  1DD6  083B               	movf	___lldiv@quotient+1,w
 18721  1DD7  00B2               	movwf	?___lldiv+1
 18722  1DD8  083A               	movf	___lldiv@quotient,w
 18723  1DD9  00B1               	movwf	?___lldiv
 18724  1DDA  0008               	return
 18725  1DDB                     __end_of___lldiv:	
 18726                           
 18727                           	psect	text63
 18728  24D2                     __ptext63:	
 18729 ;; *************** function _i2c_setBuffer *****************
 18730 ;; Defined at:
 18731 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;  buffer          2   17[BANK0 ] PTR void 
 18734 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv2665@drv_fifo_sine(244), drv_write@buff(2), 
 18735 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 18736 ;; Auto vars:     Size  Location     Type
 18737 ;;		None
 18738 ;; Return value:  Size  Location     Type
 18739 ;;                  1    wreg      void 
 18740 ;; Registers used:
 18741 ;;		wreg
 18742 ;; Tracked objects:
 18743 ;;		On entry : 0/0
 18744 ;;		On exit  : 0/0
 18745 ;;		Unchanged: 0/0
 18746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18750 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18751 ;;Total ram usage:        4 bytes
 18752 ;; Hardware stack levels used:    1
 18753 ;; Hardware stack levels required when called:    6
 18754 ;; This function calls:
 18755 ;;		Nothing
 18756 ;; This function is called by:
 18757 ;;		_drv_write
 18758 ;;		_drv_read
 18759 ;;		_drv_write_wvfrm
 18760 ;; This function uses a non-reentrant model
 18761 ;;
 18762                           
 18763                           
 18764                           ;psect for function _i2c_setBuffer
 18765  24D2                     _i2c_setBuffer:	
 18766                           
 18767                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 18768                           
 18769                           ;incstack = 0
 18770                           ; Regs used in _i2c_setBuffer: [wreg]
 18771  24D2  0022               	movlb	2	; select bank2
 18772  24D3  1D20               	btfss	_i2c_status^(0+256),2
 18773  24D4  0008               	return
 18774                           
 18775                           ;i2c_master.c: 187: {
 18776                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 18777  24D5  0020               	movlb	0	; select bank0
 18778  24D6  0832               	movf	i2c_setBuffer@buffer+1,w
 18779  24D7  0022               	movlb	2	; select bank2
 18780  24D8  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 18781  24D9  0020               	movlb	0	; select bank0
 18782  24DA  0831               	movf	i2c_setBuffer@buffer,w
 18783  24DB  0022               	movlb	2	; select bank2
 18784  24DC  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 18785                           
 18786                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 18787  24DD  0020               	movlb	0	; select bank0
 18788  24DE  0834               	movf	i2c_setBuffer@bufferSize+1,w
 18789  24DF  0022               	movlb	2	; select bank2
 18790  24E0  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 18791  24E1  0020               	movlb	0	; select bank0
 18792  24E2  0833               	movf	i2c_setBuffer@bufferSize,w
 18793  24E3  0022               	movlb	2	; select bank2
 18794  24E4  00A4               	movwf	(_i2c_status^(0+256)+4)
 18795                           
 18796                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 18797  24E5  1120               	bcf	_i2c_status^(0+256),2
 18798  24E6  0008               	return
 18799  24E7                     __end_of_i2c_setBuffer:	
 18800                           
 18801                           	psect	text64
 18802  2720                     __ptext64:	
 18803 ;; *************** function _i2c_masterOperation *****************
 18804 ;; Defined at:
 18805 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 18806 ;; Parameters:    Size  Location     Type
 18807 ;;  read            1    wreg     unsigned char 
 18808 ;; Auto vars:     Size  Location     Type
 18809 ;;  read            1   24[BANK0 ] unsigned char 
 18810 ;;  ret             1   25[BANK0 ] enum E8193
 18811 ;; Return value:  Size  Location     Type
 18812 ;;                  1    wreg      enum E8193
 18813 ;; Registers used:
 18814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18815 ;; Tracked objects:
 18816 ;;		On entry : 0/0
 18817 ;;		On exit  : 0/0
 18818 ;;		Unchanged: 0/0
 18819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18823 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18824 ;;Total ram usage:        3 bytes
 18825 ;; Hardware stack levels used:    1
 18826 ;; Hardware stack levels required when called:   11
 18827 ;; This function calls:
 18828 ;;		_i2c1_driver_start
 18829 ;;		_i2c_poller
 18830 ;;		_mssp1_IRQisEnabled
 18831 ;; This function is called by:
 18832 ;;		_drv_write
 18833 ;;		_drv_read
 18834 ;;		_i2c_masterRead
 18835 ;;		_i2c_masterWrite
 18836 ;;		_drv_write_wvfrm
 18837 ;; This function uses a non-reentrant model
 18838 ;;
 18839                           
 18840                           
 18841                           ;psect for function _i2c_masterOperation
 18842  2720                     _i2c_masterOperation:	
 18843                           
 18844                           ;incstack = 0
 18845                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18846                           ;i2c_masterOperation@read stored from wreg
 18847  2720  0020               	movlb	0	; select bank0
 18848  2721  00B8               	movwf	i2c_masterOperation@read
 18849                           
 18850                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 18851  2722  01B9               	clrf	i2c_masterOperation@ret
 18852  2723  0AB9               	incf	i2c_masterOperation@ret,f
 18853                           
 18854                           ;i2c_master.c: 196: if(!i2c_status.busy)
 18855  2724  0022               	movlb	2	; select bank2
 18856  2725  1820               	btfsc	_i2c_status^(0+256),0
 18857  2726  2F41               	goto	l7374
 18858                           
 18859                           ;i2c_master.c: 197: {
 18860                           ;i2c_master.c: 198: i2c_status.busy = 1;
 18861  2727  1420               	bsf	_i2c_status^(0+256),0
 18862                           
 18863                           ;i2c_master.c: 199: ret = I2C_NOERR;
 18864  2728  0020               	movlb	0	; select bank0
 18865  2729  01B9               	clrf	i2c_masterOperation@ret
 18866                           
 18867                           ;i2c_master.c: 201: if(read)
 18868  272A  0838               	movf	i2c_masterOperation@read,w
 18869  272B  1903               	btfsc	3,2
 18870  272C  2F31               	goto	l7368
 18871                           
 18872                           ;i2c_master.c: 202: {
 18873                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 18874  272D  0022               	movlb	2	; select bank2
 18875  272E  01AA               	clrf	(_i2c_status^(0+256)+10)
 18876  272F  0AAA               	incf	(_i2c_status^(0+256)+10),f
 18877                           
 18878                           ;i2c_master.c: 204: }
 18879  2730  2F37               	goto	l7370
 18880  2731                     l7368:	
 18881                           
 18882                           ;i2c_master.c: 205: else
 18883                           ;i2c_master.c: 206: {
 18884                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 18885  2731  3002               	movlw	2
 18886  2732  0020               	movlb	0	; select bank0
 18887  2733  00B7               	movwf	??_i2c_masterOperation
 18888  2734  0837               	movf	??_i2c_masterOperation,w
 18889  2735  0022               	movlb	2	; select bank2
 18890  2736  00AA               	movwf	(_i2c_status^(0+256)+10)
 18891  2737                     l7370:	
 18892                           
 18893                           ;i2c_master.c: 208: }
 18894                           ;i2c_master.c: 209: i2c1_driver_start();
 18895  2737  31A2  228D  31A7   	fcall	_i2c1_driver_start
 18896                           
 18897                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 18898  273A  31A3  23C0  31A7   	fcall	_mssp1_IRQisEnabled
 18899  273D  1803               	btfsc	3,0
 18900  273E  2F41               	goto	l7374
 18901                           
 18902                           ;i2c_master.c: 212: i2c_poller();
 18903  273F  31A3  23FF         	fcall	_i2c_poller
 18904  2741                     l7374:	
 18905                           
 18906                           ;i2c_master.c: 213: }
 18907                           ;i2c_master.c: 214: return ret;
 18908  2741  0020               	movlb	0	; select bank0
 18909  2742  0839               	movf	i2c_masterOperation@ret,w
 18910  2743  0008               	return
 18911  2744                     __end_of_i2c_masterOperation:	
 18912                           
 18913                           	psect	text65
 18914  23C0                     __ptext65:	
 18915 ;; *************** function _mssp1_IRQisEnabled *****************
 18916 ;; Defined at:
 18917 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 18918 ;; Parameters:    Size  Location     Type
 18919 ;;		None
 18920 ;; Auto vars:     Size  Location     Type
 18921 ;;		None
 18922 ;; Return value:  Size  Location     Type
 18923 ;;		None               void
 18924 ;; Registers used:
 18925 ;;		wreg, status,2, status,0
 18926 ;; Tracked objects:
 18927 ;;		On entry : 0/0
 18928 ;;		On exit  : 0/0
 18929 ;;		Unchanged: 0/0
 18930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18933 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18934 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18935 ;;Total ram usage:        2 bytes
 18936 ;; Hardware stack levels used:    1
 18937 ;; Hardware stack levels required when called:    6
 18938 ;; This function calls:
 18939 ;;		Nothing
 18940 ;; This function is called by:
 18941 ;;		_i2c_masterOperation
 18942 ;; This function uses a non-reentrant model
 18943 ;;
 18944                           
 18945                           
 18946                           ;psect for function _mssp1_IRQisEnabled
 18947  23C0                     _mssp1_IRQisEnabled:	
 18948                           
 18949                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 18950                           
 18951                           ;incstack = 0
 18952                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 18953  23C0  0021               	movlb	1	; select bank1
 18954  23C1  0C11               	rrf	17,w	;volatile
 18955  23C2  0020               	movlb	0	; select bank0
 18956  23C3  00B1               	movwf	??_mssp1_IRQisEnabled
 18957  23C4  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 18958  23C5  0C31               	rrf	??_mssp1_IRQisEnabled,w
 18959  23C6  3901               	andlw	1
 18960  23C7  00B2               	movwf	??_mssp1_IRQisEnabled+1
 18961  23C8  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 18962  23C9  0008               	return
 18963  23CA                     __end_of_mssp1_IRQisEnabled:	
 18964                           
 18965                           	psect	text66
 18966  23FF                     __ptext66:	
 18967 ;; *************** function _i2c_poller *****************
 18968 ;; Defined at:
 18969 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 18970 ;; Parameters:    Size  Location     Type
 18971 ;;		None
 18972 ;; Auto vars:     Size  Location     Type
 18973 ;;		None
 18974 ;; Return value:  Size  Location     Type
 18975 ;;                  1    wreg      void 
 18976 ;; Registers used:
 18977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18978 ;; Tracked objects:
 18979 ;;		On entry : 0/0
 18980 ;;		On exit  : 0/0
 18981 ;;		Unchanged: 0/0
 18982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18987 ;;Total ram usage:        0 bytes
 18988 ;; Hardware stack levels used:    1
 18989 ;; Hardware stack levels required when called:   10
 18990 ;; This function calls:
 18991 ;;		_i2c_ISR
 18992 ;;		_mssp1_waitForEvent
 18993 ;; This function is called by:
 18994 ;;		_i2c_masterOperation
 18995 ;; This function uses a non-reentrant model
 18996 ;;
 18997                           
 18998                           
 18999                           ;psect for function _i2c_poller
 19000  23FF                     _i2c_poller:	
 19001  23FF                     l7212:	
 19002                           ;i2c_master.c: 232: while(i2c_status.busy)
 19003                           
 19004                           ;incstack = 0
 19005                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19006                           
 19007  23FF  0022               	movlb	2	; select bank2
 19008  2400  1C20               	btfss	_i2c_status^(0+256),0
 19009  2401  0008               	return
 19010                           
 19011                           ;i2c_master.c: 233: {
 19012                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 19013  2402  3000               	movlw	0
 19014  2403  31A3  23F4  31A3   	fcall	_mssp1_waitForEvent
 19015                           
 19016                           ;i2c_master.c: 235: i2c_ISR();
 19017  2406  31A7  27B1  31A3   	fcall	_i2c_ISR
 19018  2409  2BFF               	goto	l7212
 19019  240A                     __end_of_i2c_poller:	
 19020                           
 19021                           	psect	text67
 19022  23F4                     __ptext67:	
 19023 ;; *************** function _mssp1_waitForEvent *****************
 19024 ;; Defined at:
 19025 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 19026 ;; Parameters:    Size  Location     Type
 19027 ;;  timeout         1    wreg     PTR unsigned int 
 19028 ;;		 -> NULL(0), 
 19029 ;; Auto vars:     Size  Location     Type
 19030 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 19031 ;;		 -> NULL(0), 
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  1    wreg      void 
 19034 ;; Registers used:
 19035 ;;		wreg
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19044 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19045 ;;Total ram usage:        1 bytes
 19046 ;; Hardware stack levels used:    1
 19047 ;; Hardware stack levels required when called:    6
 19048 ;; This function calls:
 19049 ;;		Nothing
 19050 ;; This function is called by:
 19051 ;;		_i2c_poller
 19052 ;; This function uses a non-reentrant model
 19053 ;;
 19054                           
 19055                           
 19056                           ;psect for function _mssp1_waitForEvent
 19057  23F4                     _mssp1_waitForEvent:	
 19058                           
 19059                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 19060                           
 19061                           ;incstack = 0
 19062                           ; Regs used in _mssp1_waitForEvent: [wreg]
 19063  23F4  0020               	movlb	0	; select bank0
 19064  23F5  1991               	btfsc	17,3	;volatile
 19065  23F6  0008               	return
 19066  23F7                     l500:	
 19067                           ;i2c1_driver.c: 74: {
 19068                           ;i2c1_driver.c: 75: while(1)
 19069                           
 19070                           
 19071                           ;i2c1_driver.c: 76: {
 19072                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 19073  23F7  0020               	movlb	0	; select bank0
 19074  23F8  1991               	btfsc	17,3	;volatile
 19075  23F9  0008               	return
 19076                           
 19077                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19078  23FA  3008               	movlw	8
 19079  23FB                     u8887:	
 19080  23FB  0B89               	decfsz	9,f
 19081  23FC  2BFB               	goto	u8887
 19082  23FD  0000               	nop
 19083  23FE  2BF7               	goto	l500
 19084  23FF                     __end_of_mssp1_waitForEvent:	
 19085                           
 19086                           	psect	text68
 19087  27B1                     __ptext68:	
 19088 ;; *************** function _i2c_ISR *****************
 19089 ;; Defined at:
 19090 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 19091 ;; Parameters:    Size  Location     Type
 19092 ;;		None
 19093 ;; Auto vars:     Size  Location     Type
 19094 ;;		None
 19095 ;; Return value:  Size  Location     Type
 19096 ;;                  1    wreg      void 
 19097 ;; Registers used:
 19098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19099 ;; Tracked objects:
 19100 ;;		On entry : 0/0
 19101 ;;		On exit  : 0/0
 19102 ;;		Unchanged: 0/0
 19103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19106 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19108 ;;Total ram usage:        1 bytes
 19109 ;; Hardware stack levels used:    1
 19110 ;; Hardware stack levels required when called:    9
 19111 ;; This function calls:
 19112 ;;		_do_I2C_DO_ACK
 19113 ;;		_do_I2C_DO_ADDRESS_NACK
 19114 ;;		_do_I2C_DO_NACK_RESTART
 19115 ;;		_do_I2C_DO_NACK_STOP
 19116 ;;		_do_I2C_IDLE
 19117 ;;		_do_I2C_RCEN
 19118 ;;		_do_I2C_RESET
 19119 ;;		_do_I2C_RX
 19120 ;;		_do_I2C_SEND_ADR_READ
 19121 ;;		_do_I2C_SEND_ADR_WRITE
 19122 ;;		_do_I2C_SEND_RESTART
 19123 ;;		_do_I2C_SEND_RESTART_READ
 19124 ;;		_do_I2C_SEND_RESTART_WRITE
 19125 ;;		_do_I2C_SEND_STOP
 19126 ;;		_do_I2C_TX
 19127 ;;		_do_I2C_TX_EMPTY
 19128 ;;		_i2c1_driver_isNACK
 19129 ;;		_mssp1_clearIRQ
 19130 ;; This function is called by:
 19131 ;;		_i2c_open
 19132 ;;		_i2c_poller
 19133 ;;		_INTERRUPT_InterruptManager
 19134 ;; This function uses a non-reentrant model
 19135 ;;
 19136                           
 19137                           
 19138                           ;psect for function _i2c_ISR
 19139  27B1                     _i2c_ISR:	
 19140                           
 19141                           ;Skip over the trampoline to the duplicate function for level 1
 19142  27B1  1C7E               	btfss	126,0
 19143  27B2  2FB5               	goto	l7188
 19144  27B3  31A6  2E15         	ljmp	i1l8384
 19145  27B5                     _i2c_ISR$intlevel0:	
 19146  27B5                     l7188:	
 19147                           ;incstack = 0
 19148                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19149                           
 19150                           
 19151                           ;i2c_master.c: 421: mssp1_clearIRQ();
 19152  27B5  31A2  229F  31A7   	fcall	_mssp1_clearIRQ
 19153                           
 19154                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 19155  27B8  0022               	movlb	2	; select bank2
 19156  27B9  1DA0               	btfss	_i2c_status^(0+256),3
 19157  27BA  2FC6               	goto	l7196
 19158  27BB  3198  202B  31A7   	fcall	_i2c1_driver_isNACK
 19159  27BE  1C03               	btfss	3,0
 19160  27BF  2FC6               	goto	l7196
 19161                           
 19162                           ;i2c_master.c: 428: {
 19163                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 19164  27C0  300F               	movlw	15
 19165  27C1  0020               	movlb	0	; select bank0
 19166  27C2  00B6               	movwf	??_i2c_ISR
 19167  27C3  0836               	movf	??_i2c_ISR,w
 19168  27C4  0022               	movlb	2	; select bank2
 19169  27C5  00AA               	movwf	(_i2c_status^(0+256)+10)
 19170  27C6                     l7196:	
 19171                           
 19172                           ;i2c_master.c: 430: }
 19173                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 19174  27C6  0022               	movlb	2	; select bank2
 19175  27C7  352A               	lslf	(_i2c_status^(0+256)+10),w
 19176  27C8  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 19177  27C9  0086               	movwf	6
 19178  27CA  3002               	movlw	2	; select bank4/5
 19179  27CB  0087               	movwf	7
 19180  27CC  3F41               	moviw [1]fsr1
 19181  27CD  008A               	movwf	10
 19182  27CE  3F40               	moviw [0]fsr1
 19183  27CF  000A               	callw
 19184  27D0  31A7               	pagesel	$
 19185  27D1  0020               	movlb	0	; select bank0
 19186  27D2  00B6               	movwf	??_i2c_ISR
 19187  27D3  0836               	movf	??_i2c_ISR,w
 19188  27D4  0022               	movlb	2	; select bank2
 19189  27D5  00AA               	movwf	(_i2c_status^(0+256)+10)
 19190  27D6  0008               	return
 19191  27D7                     __end_of_i2c_ISR:	
 19192                           
 19193                           	psect	text69
 19194  229F                     __ptext69:	
 19195 ;; *************** function _mssp1_clearIRQ *****************
 19196 ;; Defined at:
 19197 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 19198 ;; Parameters:    Size  Location     Type
 19199 ;;		None
 19200 ;; Auto vars:     Size  Location     Type
 19201 ;;		None
 19202 ;; Return value:  Size  Location     Type
 19203 ;;                  1    wreg      void 
 19204 ;; Registers used:
 19205 ;;		None
 19206 ;; Tracked objects:
 19207 ;;		On entry : 0/0
 19208 ;;		On exit  : 0/0
 19209 ;;		Unchanged: 0/0
 19210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19215 ;;Total ram usage:        0 bytes
 19216 ;; Hardware stack levels used:    1
 19217 ;; Hardware stack levels required when called:    6
 19218 ;; This function calls:
 19219 ;;		Nothing
 19220 ;; This function is called by:
 19221 ;;		_i2c_open
 19222 ;;		_i2c_ISR
 19223 ;;		_i2c_close
 19224 ;; This function uses a non-reentrant model
 19225 ;;
 19226                           
 19227                           
 19228                           ;psect for function _mssp1_clearIRQ
 19229  229F                     _mssp1_clearIRQ:	
 19230                           
 19231                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 19232                           
 19233                           ;incstack = 0
 19234                           ; Regs used in _mssp1_clearIRQ: []
 19235  229F  0020               	movlb	0	; select bank0
 19236  22A0  1191               	bcf	17,3	;volatile
 19237  22A1  0008               	return
 19238  22A2                     __end_of_mssp1_clearIRQ:	
 19239                           
 19240                           	psect	text70
 19241  1A8C                     __ptext70:	
 19242 ;; *************** function _do_I2C_RX *****************
 19243 ;; Defined at:
 19244 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 19245 ;; Parameters:    Size  Location     Type
 19246 ;;		None
 19247 ;; Auto vars:     Size  Location     Type
 19248 ;;		None
 19249 ;; Return value:  Size  Location     Type
 19250 ;;                  1    wreg      enum E8364
 19251 ;; Registers used:
 19252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19253 ;; Tracked objects:
 19254 ;;		On entry : 0/0
 19255 ;;		On exit  : 0/0
 19256 ;;		Unchanged: 0/0
 19257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19262 ;;Total ram usage:        1 bytes
 19263 ;; Hardware stack levels used:    1
 19264 ;; Hardware stack levels required when called:    8
 19265 ;; This function calls:
 19266 ;;		_do_I2C_DO_NACK_RESTART
 19267 ;;		_do_I2C_DO_NACK_STOP
 19268 ;;		_i2c1_driver_getRXData
 19269 ;;		_i2c1_driver_sendACK
 19270 ;;		_returnReset
 19271 ;;		_returnStop
 19272 ;; This function is called by:
 19273 ;;		_i2c_ISR
 19274 ;;		i1_i2c_ISR
 19275 ;; This function uses a non-reentrant model
 19276 ;;
 19277                           
 19278                           
 19279                           ;psect for function _do_I2C_RX
 19280  1A8C                     _do_I2C_RX:	
 19281                           
 19282                           ;Skip over the trampoline to the duplicate function for level 1
 19283  1A8C  1C7E               	btfss	126,0
 19284  1A8D  2A90               	goto	l7118
 19285  1A8E  3199  2988         	ljmp	i1l8168
 19286  1A90                     _do_I2C_RX$intlevel0:	
 19287  1A90                     l7118:	
 19288                           ;incstack = 0
 19289                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19290                           
 19291                           
 19292                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 19293  1A90  0022               	movlb	2	; select bank2
 19294  1A91  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19295  1A92  0086               	movwf	6
 19296  1A93  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19297  1A94  0087               	movwf	7
 19298  1A95  31A2  2299  319A   	fcall	_i2c1_driver_getRXData
 19299  1A98  0081               	movwf	1
 19300  1A99  3001               	movlw	1
 19301  1A9A  0022               	movlb	2	; select bank2
 19302  1A9B  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 19303  1A9C  3000               	movlw	0
 19304  1A9D  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19305                           
 19306                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 19307  1A9E  3001               	movlw	1
 19308  1A9F  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19309  1AA0  3000               	movlw	0
 19310  1AA1  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19311  1AA2  0824               	movf	(_i2c_status^(0+256)+4),w
 19312  1AA3  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19313  1AA4  1903               	btfsc	3,2
 19314  1AA5  2AAA               	goto	l761
 19315                           
 19316                           ;i2c_master.c: 361: {
 19317                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 19318  1AA6  31A2  22CA         	fcall	_i2c1_driver_sendACK
 19319                           
 19320                           ;i2c_master.c: 363: return I2C_RCEN;
 19321  1AA8  3005               	movlw	5
 19322                           
 19323                           ;i2c_master.c: 364: }
 19324  1AA9  0008               	return
 19325  1AAA                     l761:	
 19326                           
 19327                           ;i2c_master.c: 365: else
 19328                           ;i2c_master.c: 366: {
 19329                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 19330  1AAA  1520               	bsf	_i2c_status^(0+256),2
 19331                           
 19332                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19333  1AAB  2AB2               	goto	l7142
 19334  1AAC                     l7132:	
 19335                           ;i2c_master.c: 369: {
 19336                           ;i2c_master.c: 370: case i2c_restart_write:
 19337                           
 19338                           
 19339                           ;i2c_master.c: 371: case i2c_restart_read:
 19340                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 19341  1AAC  31A3  2366         	fcall	_do_I2C_DO_NACK_RESTART
 19342  1AAE  0008               	return
 19343  1AAF                     l7136:	
 19344                           ;i2c_master.c: 374: case i2c_continue:
 19345                           
 19346                           ;i2c_master.c: 373: default:
 19347                           
 19348                           
 19349                           ;i2c_master.c: 375: case i2c_stop:
 19350                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 19351  1AAF  31A3  235E         	fcall	_do_I2C_DO_NACK_STOP
 19352                           
 19353                           ;i2c_master.c: 377: }
 19354  1AB1  0008               	return
 19355  1AB2                     l7142:	
 19356  1AB2  0022               	movlb	2	; select bank2
 19357  1AB3  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 19358  1AB4  0020               	movlb	0	; select bank0
 19359  1AB5  00B1               	movwf	??_do_I2C_RX
 19360  1AB6  0831               	movf	??_do_I2C_RX,w
 19361  1AB7  00B1               	movwf	returnReset@p
 19362  1AB8  300C               	movlw	12
 19363  1AB9  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19364  1ABA  0086               	movwf	6
 19365  1ABB  3001               	movlw	1	; select bank2/3
 19366  1ABC  0087               	movwf	7
 19367  1ABD  3F41               	moviw [1]fsr1
 19368  1ABE  008A               	movwf	10
 19369  1ABF  3F40               	moviw [0]fsr1
 19370  1AC0  000A               	callw
 19371  1AC1  319A               	pagesel	$
 19372                           
 19373                           ; Switch size 1, requested type "space"
 19374                           ; Number of cases is 4, Range of values is 1 to 4
 19375                           ; switch strategies available:
 19376                           ; Name         Instructions Cycles
 19377                           ; simple_byte           13     7 (average)
 19378                           ; direct_byte           17     9 (fixed)
 19379                           ; jumptable            263     9 (fixed)
 19380                           ;	Chosen strategy is simple_byte
 19381  1AC2  3A01               	xorlw	1	; case 1
 19382  1AC3  1903               	skipnz
 19383  1AC4  2AAF               	goto	l7136
 19384  1AC5  3A03               	xorlw	3	; case 2
 19385  1AC6  1903               	skipnz
 19386  1AC7  2AAC               	goto	l7132
 19387  1AC8  3A01               	xorlw	1	; case 3
 19388  1AC9  1903               	skipnz
 19389  1ACA  2AAC               	goto	l7132
 19390  1ACB  3A07               	xorlw	7	; case 4
 19391  1ACC  1903               	skipnz
 19392  1ACD  2AAF               	goto	l7136
 19393  1ACE  2AAF               	goto	l7136
 19394  1ACF  0008               	return
 19395  1AD0                     __end_of_do_I2C_RX:	
 19396                           
 19397                           	psect	text71
 19398  1E33                     __ptext71:	
 19399 ;; *************** function _do_I2C_TX *****************
 19400 ;; Defined at:
 19401 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 19402 ;; Parameters:    Size  Location     Type
 19403 ;;		None
 19404 ;; Auto vars:     Size  Location     Type
 19405 ;;		None
 19406 ;; Return value:  Size  Location     Type
 19407 ;;                  1    wreg      enum E8364
 19408 ;; Registers used:
 19409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19410 ;; Tracked objects:
 19411 ;;		On entry : 0/0
 19412 ;;		On exit  : 0/0
 19413 ;;		Unchanged: 0/0
 19414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19419 ;;Total ram usage:        4 bytes
 19420 ;; Hardware stack levels used:    1
 19421 ;; Hardware stack levels required when called:    8
 19422 ;; This function calls:
 19423 ;;		_do_I2C_SEND_RESTART_READ
 19424 ;;		_do_I2C_SEND_RESTART_WRITE
 19425 ;;		_do_I2C_SEND_STOP
 19426 ;;		_i2c1_driver_TXData
 19427 ;;		_i2c1_driver_isNACK
 19428 ;;		_returnReset
 19429 ;;		_returnStop
 19430 ;; This function is called by:
 19431 ;;		_i2c_ISR
 19432 ;;		i1_i2c_ISR
 19433 ;; This function uses a non-reentrant model
 19434 ;;
 19435                           
 19436                           
 19437                           ;psect for function _do_I2C_TX
 19438  1E33                     _do_I2C_TX:	
 19439                           
 19440                           ;Skip over the trampoline to the duplicate function for level 1
 19441  1E33  1C7E               	btfss	126,0
 19442  1E34  2E37               	goto	l7088
 19443  1E35  319C  2C46         	ljmp	i1l8138
 19444  1E37                     _do_I2C_TX$intlevel0:	
 19445  1E37                     l7088:	
 19446                           ;incstack = 0
 19447                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19448                           
 19449                           
 19450                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 19451  1E37  3198  202B  319E   	fcall	_i2c1_driver_isNACK
 19452  1E3A  1803               	btfsc	3,0
 19453  1E3B  2E46               	goto	l7106
 19454  1E3C  2E64               	goto	l745
 19455  1E3D                     l7092:	
 19456                           ;i2c_master.c: 338: {
 19457                           ;i2c_master.c: 339: case i2c_restart_read:
 19458                           
 19459                           ;i2c_master.c: 336: {
 19460                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 19461                           
 19462                           
 19463                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 19464  1E3D  31A3  2336         	fcall	_do_I2C_SEND_RESTART_READ
 19465  1E3F  0008               	return
 19466  1E40                     l7096:	
 19467                           ;i2c_master.c: 341: case i2c_restart_write:
 19468                           
 19469                           
 19470                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 19471  1E40  31A3  233E         	fcall	_do_I2C_SEND_RESTART_WRITE
 19472  1E42  0008               	return
 19473  1E43                     l7100:	
 19474                           ;i2c_master.c: 344: case i2c_continue:
 19475                           
 19476                           ;i2c_master.c: 343: default:
 19477                           
 19478                           
 19479                           ;i2c_master.c: 345: case i2c_stop:
 19480                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 19481  1E43  31A3  234E         	fcall	_do_I2C_SEND_STOP
 19482                           
 19483                           ;i2c_master.c: 347: }
 19484  1E45  0008               	return
 19485  1E46                     l7106:	
 19486  1E46  0022               	movlb	2	; select bank2
 19487  1E47  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 19488  1E48  0020               	movlb	0	; select bank0
 19489  1E49  00B2               	movwf	??_do_I2C_TX
 19490  1E4A  0832               	movf	??_do_I2C_TX,w
 19491  1E4B  00B1               	movwf	returnReset@p
 19492  1E4C  3012               	movlw	18
 19493  1E4D  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19494  1E4E  0086               	movwf	6
 19495  1E4F  3001               	movlw	1	; select bank2/3
 19496  1E50  0087               	movwf	7
 19497  1E51  3F41               	moviw [1]fsr1
 19498  1E52  008A               	movwf	10
 19499  1E53  3F40               	moviw [0]fsr1
 19500  1E54  000A               	callw
 19501  1E55  319E               	pagesel	$
 19502                           
 19503                           ; Switch size 1, requested type "space"
 19504                           ; Number of cases is 4, Range of values is 1 to 4
 19505                           ; switch strategies available:
 19506                           ; Name         Instructions Cycles
 19507                           ; simple_byte           13     7 (average)
 19508                           ; direct_byte           17     9 (fixed)
 19509                           ; jumptable            263     9 (fixed)
 19510                           ;	Chosen strategy is simple_byte
 19511  1E56  3A01               	xorlw	1	; case 1
 19512  1E57  1903               	skipnz
 19513  1E58  2E43               	goto	l7100
 19514  1E59  3A03               	xorlw	3	; case 2
 19515  1E5A  1903               	skipnz
 19516  1E5B  2E3D               	goto	l7092
 19517  1E5C  3A01               	xorlw	1	; case 3
 19518  1E5D  1903               	skipnz
 19519  1E5E  2E40               	goto	l7096
 19520  1E5F  3A07               	xorlw	7	; case 4
 19521  1E60  1903               	skipnz
 19522  1E61  2E43               	goto	l7100
 19523  1E62  2E43               	goto	l7100
 19524                           
 19525                           ;i2c_master.c: 348: }
 19526  1E63  0008               	return
 19527  1E64                     l745:	
 19528                           
 19529                           ;i2c_master.c: 349: else
 19530                           ;i2c_master.c: 350: {
 19531                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 19532  1E64  0022               	movlb	2	; select bank2
 19533  1E65  11A0               	bcf	_i2c_status^(0+256),3
 19534                           
 19535                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 19536  1E66  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19537  1E67  0020               	movlb	0	; select bank0
 19538  1E68  00B3               	movwf	??_do_I2C_TX+1
 19539  1E69  0022               	movlb	2	; select bank2
 19540  1E6A  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19541  1E6B  0020               	movlb	0	; select bank0
 19542  1E6C  00B2               	movwf	??_do_I2C_TX
 19543  1E6D  0022               	movlb	2	; select bank2
 19544  1E6E  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 19545  1E6F  1903               	skipnz
 19546  1E70  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19547  1E71  0020               	movlb	0	; select bank0
 19548  1E72  0832               	movf	??_do_I2C_TX,w
 19549  1E73  0084               	movwf	4
 19550  1E74  0833               	movf	??_do_I2C_TX+1,w
 19551  1E75  0085               	movwf	5
 19552  1E76  0800               	movf	0,w	;code access
 19553  1E77  31A3  2306  319E   	fcall	_i2c1_driver_TXData
 19554                           
 19555                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 19556  1E7A  3001               	movlw	1
 19557  1E7B  0022               	movlb	2	; select bank2
 19558  1E7C  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19559  1E7D  3000               	movlw	0
 19560  1E7E  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19561  1E7F  0824               	movf	(_i2c_status^(0+256)+4),w
 19562  1E80  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19563  1E81  1D03               	btfss	3,2
 19564  1E82  2E85               	goto	l7114
 19565  1E83  3006               	movlw	6
 19566  1E84  2E86               	goto	L34
 19567  1E85                     l7114:	
 19568  1E85  3003               	movlw	3
 19569  1E86                     L34:	
 19570  1E86  0020               	movlb	0	; select bank0
 19571  1E87  00B4               	movwf	_do_I2C_TX$1132
 19572  1E88  3000               	movlw	0
 19573  1E89  00B5               	movwf	_do_I2C_TX$1132+1
 19574  1E8A  0834               	movf	_do_I2C_TX$1132,w
 19575  1E8B  0008               	return
 19576  1E8C                     __end_of_do_I2C_TX:	
 19577                           
 19578                           	psect	text72
 19579  07D3                     __ptext72:	
 19580 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 19581 ;; Defined at:
 19582 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 19583 ;; Parameters:    Size  Location     Type
 19584 ;;		None
 19585 ;; Auto vars:     Size  Location     Type
 19586 ;;		None
 19587 ;; Return value:  Size  Location     Type
 19588 ;;                  1    wreg      enum E8364
 19589 ;; Registers used:
 19590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19591 ;; Tracked objects:
 19592 ;;		On entry : 0/0
 19593 ;;		On exit  : 0/0
 19594 ;;		Unchanged: 0/0
 19595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19599 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19600 ;;Total ram usage:        1 bytes
 19601 ;; Hardware stack levels used:    1
 19602 ;; Hardware stack levels required when called:    8
 19603 ;; This function calls:
 19604 ;;		_do_I2C_SEND_RESTART
 19605 ;;		_do_I2C_SEND_STOP
 19606 ;;		_returnReset
 19607 ;;		_returnStop
 19608 ;; This function is called by:
 19609 ;;		_i2c_ISR
 19610 ;;		i1_i2c_ISR
 19611 ;; This function uses a non-reentrant model
 19612 ;;
 19613                           
 19614                           
 19615                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 19616  07D3                     _do_I2C_DO_ADDRESS_NACK:	
 19617                           
 19618                           ;Skip over the trampoline to the duplicate function for level 1
 19619  07D3  1C7E               	btfss	126,0
 19620  07D4  2FD7               	goto	l7072
 19621  07D5  31A6  2EFC         	ljmp	i1l8122
 19622  07D7                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 19623  07D7                     l7072:	
 19624                           ;incstack = 0
 19625                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19626                           
 19627                           
 19628                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 19629  07D7  0022               	movlb	2	; select bank2
 19630  07D8  11A0               	bcf	_i2c_status^(0+256),3
 19631                           
 19632                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 19633  07D9  3002               	movlw	2
 19634  07DA  0020               	movlb	0	; select bank0
 19635  07DB  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 19636  07DC  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 19637  07DD  0022               	movlb	2	; select bank2
 19638  07DE  00AB               	movwf	(_i2c_status^(0+256)+11)
 19639                           
 19640                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 19641  07DF  2FE6               	goto	l7086
 19642  07E0                     l7076:	
 19643                           ;i2c_master.c: 324: {
 19644                           ;i2c_master.c: 325: case i2c_restart_read:
 19645                           
 19646                           
 19647                           ;i2c_master.c: 326: case i2c_restart_write:
 19648                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 19649  07E0  31A3  2346         	fcall	_do_I2C_SEND_RESTART
 19650  07E2  0008               	return
 19651  07E3                     l7080:	
 19652                           ;i2c_master.c: 328: default:
 19653                           
 19654                           
 19655                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 19656  07E3  31A3  234E         	fcall	_do_I2C_SEND_STOP
 19657                           
 19658                           ;i2c_master.c: 330: }
 19659  07E5  0008               	return
 19660  07E6                     l7086:	
 19661  07E6  0022               	movlb	2	; select bank2
 19662  07E7  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 19663  07E8  0020               	movlb	0	; select bank0
 19664  07E9  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 19665  07EA  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 19666  07EB  00B1               	movwf	returnReset@p
 19667  07EC  3010               	movlw	16
 19668  07ED  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19669  07EE  0086               	movwf	6
 19670  07EF  3001               	movlw	1	; select bank2/3
 19671  07F0  0087               	movwf	7
 19672  07F1  3F41               	moviw [1]fsr1
 19673  07F2  008A               	movwf	10
 19674  07F3  3F40               	moviw [0]fsr1
 19675  07F4  000A               	callw
 19676  07F5  3187               	pagesel	$
 19677                           
 19678                           ; Switch size 1, requested type "space"
 19679                           ; Number of cases is 2, Range of values is 2 to 3
 19680                           ; switch strategies available:
 19681                           ; Name         Instructions Cycles
 19682                           ; simple_byte            7     4 (average)
 19683                           ; direct_byte           13     9 (fixed)
 19684                           ; jumptable            263     9 (fixed)
 19685                           ;	Chosen strategy is simple_byte
 19686  07F6  3A02               	xorlw	2	; case 2
 19687  07F7  1903               	skipnz
 19688  07F8  2FE0               	goto	l7076
 19689  07F9  3A01               	xorlw	1	; case 3
 19690  07FA  1903               	skipnz
 19691  07FB  2FE0               	goto	l7076
 19692  07FC  2FE3               	goto	l7080
 19693  07FD  0008               	return
 19694  07FE                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 19695                           
 19696                           	psect	text73
 19697  2366                     __ptext73:	
 19698 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 19699 ;; Defined at:
 19700 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 19701 ;; Parameters:    Size  Location     Type
 19702 ;;		None
 19703 ;; Auto vars:     Size  Location     Type
 19704 ;;		None
 19705 ;; Return value:  Size  Location     Type
 19706 ;;                  1    wreg      enum E8364
 19707 ;; Registers used:
 19708 ;;		wreg, status,2, status,0, pclath, cstack
 19709 ;; Tracked objects:
 19710 ;;		On entry : 0/0
 19711 ;;		On exit  : 0/0
 19712 ;;		Unchanged: 0/0
 19713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19718 ;;Total ram usage:        0 bytes
 19719 ;; Hardware stack levels used:    1
 19720 ;; Hardware stack levels required when called:    7
 19721 ;; This function calls:
 19722 ;;		_i2c1_driver_sendNACK
 19723 ;; This function is called by:
 19724 ;;		_do_I2C_RX
 19725 ;;		_i2c_ISR
 19726 ;;		i1_i2c_ISR
 19727 ;; This function uses a non-reentrant model
 19728 ;;
 19729                           
 19730                           
 19731                           ;psect for function _do_I2C_DO_NACK_RESTART
 19732  2366                     _do_I2C_DO_NACK_RESTART:	
 19733                           
 19734                           ;Skip over the trampoline to the duplicate function for level 1
 19735  2366  1C7E               	btfss	126,0
 19736  2367  2B6A               	goto	l7008
 19737  2368  31A2  2AC2         	ljmp	i1l7778
 19738  236A                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 19739  236A                     l7008:	
 19740                           ;incstack = 0
 19741                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19742                           
 19743                           
 19744                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 19745  236A  31A2  22CE         	fcall	_i2c1_driver_sendNACK
 19746                           
 19747                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 19748  236C  3009               	movlw	9
 19749  236D  0008               	return
 19750  236E                     __end_of_do_I2C_DO_NACK_RESTART:	
 19751                           
 19752                           	psect	text74
 19753  235E                     __ptext74:	
 19754 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 19755 ;; Defined at:
 19756 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 19757 ;; Parameters:    Size  Location     Type
 19758 ;;		None
 19759 ;; Auto vars:     Size  Location     Type
 19760 ;;		None
 19761 ;; Return value:  Size  Location     Type
 19762 ;;                  1    wreg      enum E8364
 19763 ;; Registers used:
 19764 ;;		wreg, status,2, status,0, pclath, cstack
 19765 ;; Tracked objects:
 19766 ;;		On entry : 0/0
 19767 ;;		On exit  : 0/0
 19768 ;;		Unchanged: 0/0
 19769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19774 ;;Total ram usage:        0 bytes
 19775 ;; Hardware stack levels used:    1
 19776 ;; Hardware stack levels required when called:    7
 19777 ;; This function calls:
 19778 ;;		_i2c1_driver_sendNACK
 19779 ;; This function is called by:
 19780 ;;		_do_I2C_RX
 19781 ;;		_i2c_ISR
 19782 ;;		i1_i2c_ISR
 19783 ;; This function uses a non-reentrant model
 19784 ;;
 19785                           
 19786                           
 19787                           ;psect for function _do_I2C_DO_NACK_STOP
 19788  235E                     _do_I2C_DO_NACK_STOP:	
 19789                           
 19790                           ;Skip over the trampoline to the duplicate function for level 1
 19791  235E  1C7E               	btfss	126,0
 19792  235F  2B62               	goto	l7002
 19793  2360  31A2  2ABE         	ljmp	i1l7772
 19794  2362                     _do_I2C_DO_NACK_STOP$intlevel0:	
 19795  2362                     l7002:	
 19796                           ;incstack = 0
 19797                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 19798                           
 19799                           
 19800                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 19801  2362  31A2  22CE         	fcall	_i2c1_driver_sendNACK
 19802                           
 19803                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 19804  2364  300A               	movlw	10
 19805  2365  0008               	return
 19806  2366                     __end_of_do_I2C_DO_NACK_STOP:	
 19807                           
 19808                           	psect	text75
 19809  2356                     __ptext75:	
 19810 ;; *************** function _do_I2C_DO_ACK *****************
 19811 ;; Defined at:
 19812 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 19813 ;; Parameters:    Size  Location     Type
 19814 ;;		None
 19815 ;; Auto vars:     Size  Location     Type
 19816 ;;		None
 19817 ;; Return value:  Size  Location     Type
 19818 ;;                  1    wreg      enum E8364
 19819 ;; Registers used:
 19820 ;;		wreg, status,2, status,0, pclath, cstack
 19821 ;; Tracked objects:
 19822 ;;		On entry : 0/0
 19823 ;;		On exit  : 0/0
 19824 ;;		Unchanged: 0/0
 19825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19830 ;;Total ram usage:        0 bytes
 19831 ;; Hardware stack levels used:    1
 19832 ;; Hardware stack levels required when called:    7
 19833 ;; This function calls:
 19834 ;;		_i2c1_driver_sendACK
 19835 ;; This function is called by:
 19836 ;;		_i2c_ISR
 19837 ;;		i1_i2c_ISR
 19838 ;; This function uses a non-reentrant model
 19839 ;;
 19840                           
 19841                           
 19842                           ;psect for function _do_I2C_DO_ACK
 19843  2356                     _do_I2C_DO_ACK:	
 19844                           
 19845                           ;Skip over the trampoline to the duplicate function for level 1
 19846  2356  1C7E               	btfss	126,0
 19847  2357  2B5A               	goto	l7066
 19848  2358  31A2  2ABA         	ljmp	i1l8116
 19849  235A                     _do_I2C_DO_ACK$intlevel0:	
 19850  235A                     l7066:	
 19851                           ;incstack = 0
 19852                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 19853                           
 19854                           
 19855                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 19856  235A  31A2  22CA         	fcall	_i2c1_driver_sendACK
 19857                           
 19858                           ;i2c_master.c: 302: return I2C_RCEN;
 19859  235C  3005               	movlw	5
 19860  235D  0008               	return
 19861  235E                     __end_of_do_I2C_DO_ACK:	
 19862                           
 19863                           	psect	text76
 19864  23B6                     __ptext76:	
 19865 ;; *************** function _do_I2C_RCEN *****************
 19866 ;; Defined at:
 19867 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;		None
 19870 ;; Auto vars:     Size  Location     Type
 19871 ;;		None
 19872 ;; Return value:  Size  Location     Type
 19873 ;;                  1    wreg      enum E8364
 19874 ;; Registers used:
 19875 ;;		wreg, status,2, status,0, pclath, cstack
 19876 ;; Tracked objects:
 19877 ;;		On entry : 0/0
 19878 ;;		On exit  : 0/0
 19879 ;;		Unchanged: 0/0
 19880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19885 ;;Total ram usage:        0 bytes
 19886 ;; Hardware stack levels used:    1
 19887 ;; Hardware stack levels required when called:    7
 19888 ;; This function calls:
 19889 ;;		_i2c1_driver_startRX
 19890 ;; This function is called by:
 19891 ;;		_i2c_ISR
 19892 ;;		i1_i2c_ISR
 19893 ;; This function uses a non-reentrant model
 19894 ;;
 19895                           
 19896                           
 19897                           ;psect for function _do_I2C_RCEN
 19898  23B6                     _do_I2C_RCEN:	
 19899                           
 19900                           ;Skip over the trampoline to the duplicate function for level 1
 19901  23B6  1C7E               	btfss	126,0
 19902  23B7  2BBA               	goto	l7058
 19903  23B8  31A2  2AF4         	ljmp	i1l6252
 19904  23BA                     _do_I2C_RCEN$intlevel0:	
 19905  23BA                     l7058:	
 19906                           ;incstack = 0
 19907                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 19908                           
 19909                           
 19910                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 19911  23BA  0022               	movlb	2	; select bank2
 19912  23BB  11A0               	bcf	_i2c_status^(0+256),3
 19913                           
 19914                           ;i2c_master.c: 295: i2c1_driver_startRX();
 19915  23BC  31A2  2296         	fcall	_i2c1_driver_startRX
 19916                           
 19917                           ;i2c_master.c: 296: return I2C_RX;
 19918  23BE  3004               	movlw	4
 19919  23BF  0008               	return
 19920  23C0                     __end_of_do_I2C_RCEN:	
 19921                           
 19922                           	psect	text77
 19923  23E9                     __ptext77:	
 19924 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 19925 ;; Defined at:
 19926 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 19927 ;; Parameters:    Size  Location     Type
 19928 ;;		None
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;		None
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1    wreg      enum E8364
 19933 ;; Registers used:
 19934 ;;		wreg, status,2, status,0, pclath, cstack
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/0
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19944 ;;Total ram usage:        0 bytes
 19945 ;; Hardware stack levels used:    1
 19946 ;; Hardware stack levels required when called:    7
 19947 ;; This function calls:
 19948 ;;		_i2c1_driver_TXData
 19949 ;; This function is called by:
 19950 ;;		_i2c_ISR
 19951 ;;		i1_i2c_ISR
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           
 19956                           ;psect for function _do_I2C_SEND_ADR_WRITE
 19957  23E9                     _do_I2C_SEND_ADR_WRITE:	
 19958                           
 19959                           ;Skip over the trampoline to the duplicate function for level 1
 19960  23E9  1C7E               	btfss	126,0
 19961  23EA  2BED               	goto	l7050
 19962  23EB  31A3  2B1F         	ljmp	i1l8108
 19963  23ED                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 19964  23ED                     l7050:	
 19965                           ;incstack = 0
 19966                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19967                           
 19968                           
 19969                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 19970  23ED  0022               	movlb	2	; select bank2
 19971  23EE  15A0               	bsf	_i2c_status^(0+256),3
 19972                           
 19973                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 19974  23EF  3521               	lslf	(_i2c_status^(0+256)+1),w
 19975  23F0  31A3  2306         	fcall	_i2c1_driver_TXData
 19976                           
 19977                           ;i2c_master.c: 289: return I2C_TX;
 19978  23F2  3003               	movlw	3
 19979  23F3  0008               	return
 19980  23F4                     __end_of_do_I2C_SEND_ADR_WRITE:	
 19981                           
 19982                           	psect	text78
 19983  2416                     __ptext78:	
 19984 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 19985 ;; Defined at:
 19986 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 19987 ;; Parameters:    Size  Location     Type
 19988 ;;		None
 19989 ;; Auto vars:     Size  Location     Type
 19990 ;;		None
 19991 ;; Return value:  Size  Location     Type
 19992 ;;                  1    wreg      enum E8364
 19993 ;; Registers used:
 19994 ;;		wreg, status,2, status,0, pclath, cstack
 19995 ;; Tracked objects:
 19996 ;;		On entry : 0/0
 19997 ;;		On exit  : 0/0
 19998 ;;		Unchanged: 0/0
 19999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20004 ;;Total ram usage:        0 bytes
 20005 ;; Hardware stack levels used:    1
 20006 ;; Hardware stack levels required when called:    7
 20007 ;; This function calls:
 20008 ;;		_i2c1_driver_TXData
 20009 ;; This function is called by:
 20010 ;;		_i2c_ISR
 20011 ;;		i1_i2c_ISR
 20012 ;; This function uses a non-reentrant model
 20013 ;;
 20014                           
 20015                           
 20016                           ;psect for function _do_I2C_SEND_ADR_READ
 20017  2416                     _do_I2C_SEND_ADR_READ:	
 20018                           
 20019                           ;Skip over the trampoline to the duplicate function for level 1
 20020  2416  1C7E               	btfss	126,0
 20021  2417  2C1A               	goto	l7042
 20022  2418  31A3  2B26         	ljmp	i1l8100
 20023  241A                     _do_I2C_SEND_ADR_READ$intlevel0:	
 20024  241A                     l7042:	
 20025                           ;incstack = 0
 20026                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20027                           
 20028                           
 20029                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 20030  241A  0022               	movlb	2	; select bank2
 20031  241B  15A0               	bsf	_i2c_status^(0+256),3
 20032                           
 20033                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 20034  241C  1403               	setc
 20035  241D  0D21               	rlf	(_i2c_status^(0+256)+1),w
 20036  241E  31A3  2306         	fcall	_i2c1_driver_TXData
 20037                           
 20038                           ;i2c_master.c: 282: return I2C_RCEN;
 20039  2420  3005               	movlw	5
 20040  2421  0008               	return
 20041  2422                     __end_of_do_I2C_SEND_ADR_READ:	
 20042                           
 20043                           	psect	text79
 20044  234E                     __ptext79:	
 20045 ;; *************** function _do_I2C_SEND_STOP *****************
 20046 ;; Defined at:
 20047 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;		None
 20050 ;; Auto vars:     Size  Location     Type
 20051 ;;		None
 20052 ;; Return value:  Size  Location     Type
 20053 ;;                  1    wreg      enum E8364
 20054 ;; Registers used:
 20055 ;;		wreg, status,2, status,0, pclath, cstack
 20056 ;; Tracked objects:
 20057 ;;		On entry : 0/0
 20058 ;;		On exit  : 0/0
 20059 ;;		Unchanged: 0/0
 20060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20065 ;;Total ram usage:        0 bytes
 20066 ;; Hardware stack levels used:    1
 20067 ;; Hardware stack levels required when called:    7
 20068 ;; This function calls:
 20069 ;;		_i2c1_driver_stop
 20070 ;; This function is called by:
 20071 ;;		_do_I2C_DO_ADDRESS_NACK
 20072 ;;		_do_I2C_TX
 20073 ;;		_do_I2C_TX_EMPTY
 20074 ;;		_i2c_ISR
 20075 ;;		i1_i2c_ISR
 20076 ;; This function uses a non-reentrant model
 20077 ;;
 20078                           
 20079                           
 20080                           ;psect for function _do_I2C_SEND_STOP
 20081  234E                     _do_I2C_SEND_STOP:	
 20082                           
 20083                           ;Skip over the trampoline to the duplicate function for level 1
 20084  234E  1C7E               	btfss	126,0
 20085  234F  2B52               	goto	l6996
 20086  2350  31A2  2AB6         	ljmp	i1l7766
 20087  2352                     _do_I2C_SEND_STOP$intlevel0:	
 20088  2352                     l6996:	
 20089                           ;incstack = 0
 20090                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20091                           
 20092                           
 20093                           ;i2c_master.c: 274: i2c1_driver_stop();
 20094  2352  31A2  2293         	fcall	_i2c1_driver_stop
 20095                           
 20096                           ;i2c_master.c: 275: return I2C_IDLE;
 20097  2354  3000               	movlw	0
 20098  2355  0008               	return
 20099  2356                     __end_of_do_I2C_SEND_STOP:	
 20100                           
 20101                           	psect	text80
 20102  2346                     __ptext80:	
 20103 ;; *************** function _do_I2C_SEND_RESTART *****************
 20104 ;; Defined at:
 20105 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 20106 ;; Parameters:    Size  Location     Type
 20107 ;;		None
 20108 ;; Auto vars:     Size  Location     Type
 20109 ;;		None
 20110 ;; Return value:  Size  Location     Type
 20111 ;;                  1    wreg      enum E8364
 20112 ;; Registers used:
 20113 ;;		wreg, status,2, status,0, pclath, cstack
 20114 ;; Tracked objects:
 20115 ;;		On entry : 0/0
 20116 ;;		On exit  : 0/0
 20117 ;;		Unchanged: 0/0
 20118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20123 ;;Total ram usage:        0 bytes
 20124 ;; Hardware stack levels used:    1
 20125 ;; Hardware stack levels required when called:    7
 20126 ;; This function calls:
 20127 ;;		_i2c1_driver_restart
 20128 ;; This function is called by:
 20129 ;;		_do_I2C_DO_ADDRESS_NACK
 20130 ;;		_do_I2C_TX_EMPTY
 20131 ;;		_i2c_ISR
 20132 ;;		i1_i2c_ISR
 20133 ;; This function uses a non-reentrant model
 20134 ;;
 20135                           
 20136                           
 20137                           ;psect for function _do_I2C_SEND_RESTART
 20138  2346                     _do_I2C_SEND_RESTART:	
 20139                           
 20140                           ;Skip over the trampoline to the duplicate function for level 1
 20141  2346  1C7E               	btfss	126,0
 20142  2347  2B4A               	goto	l6990
 20143  2348  31A2  2AB2         	ljmp	i1l7760
 20144  234A                     _do_I2C_SEND_RESTART$intlevel0:	
 20145  234A                     l6990:	
 20146                           ;incstack = 0
 20147                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20148                           
 20149                           
 20150                           ;i2c_master.c: 268: i2c1_driver_restart();
 20151  234A  31A2  2290         	fcall	_i2c1_driver_restart
 20152                           
 20153                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 20154  234C  3001               	movlw	1
 20155  234D  0008               	return
 20156  234E                     __end_of_do_I2C_SEND_RESTART:	
 20157                           
 20158                           	psect	text81
 20159  233E                     __ptext81:	
 20160 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 20161 ;; Defined at:
 20162 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;		None
 20165 ;; Auto vars:     Size  Location     Type
 20166 ;;		None
 20167 ;; Return value:  Size  Location     Type
 20168 ;;                  1    wreg      enum E8364
 20169 ;; Registers used:
 20170 ;;		wreg, status,2, status,0, pclath, cstack
 20171 ;; Tracked objects:
 20172 ;;		On entry : 0/0
 20173 ;;		On exit  : 0/0
 20174 ;;		Unchanged: 0/0
 20175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20180 ;;Total ram usage:        0 bytes
 20181 ;; Hardware stack levels used:    1
 20182 ;; Hardware stack levels required when called:    7
 20183 ;; This function calls:
 20184 ;;		_i2c1_driver_restart
 20185 ;; This function is called by:
 20186 ;;		_do_I2C_TX
 20187 ;;		_i2c_ISR
 20188 ;;		i1_i2c_ISR
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           
 20193                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 20194  233E                     _do_I2C_SEND_RESTART_WRITE:	
 20195                           
 20196                           ;Skip over the trampoline to the duplicate function for level 1
 20197  233E  1C7E               	btfss	126,0
 20198  233F  2B42               	goto	l6984
 20199  2340  31A2  2AAE         	ljmp	i1l7754
 20200  2342                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 20201  2342                     l6984:	
 20202                           ;incstack = 0
 20203                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20204                           
 20205                           
 20206                           ;i2c_master.c: 262: i2c1_driver_restart();
 20207  2342  31A2  2290         	fcall	_i2c1_driver_restart
 20208                           
 20209                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 20210  2344  3002               	movlw	2
 20211  2345  0008               	return
 20212  2346                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 20213                           
 20214                           	psect	text82
 20215  2336                     __ptext82:	
 20216 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 20217 ;; Defined at:
 20218 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 20219 ;; Parameters:    Size  Location     Type
 20220 ;;		None
 20221 ;; Auto vars:     Size  Location     Type
 20222 ;;		None
 20223 ;; Return value:  Size  Location     Type
 20224 ;;                  1    wreg      enum E8364
 20225 ;; Registers used:
 20226 ;;		wreg, status,2, status,0, pclath, cstack
 20227 ;; Tracked objects:
 20228 ;;		On entry : 0/0
 20229 ;;		On exit  : 0/0
 20230 ;;		Unchanged: 0/0
 20231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20236 ;;Total ram usage:        0 bytes
 20237 ;; Hardware stack levels used:    1
 20238 ;; Hardware stack levels required when called:    7
 20239 ;; This function calls:
 20240 ;;		_i2c1_driver_restart
 20241 ;; This function is called by:
 20242 ;;		_do_I2C_TX
 20243 ;;		_i2c_ISR
 20244 ;;		i1_i2c_ISR
 20245 ;; This function uses a non-reentrant model
 20246 ;;
 20247                           
 20248                           
 20249                           ;psect for function _do_I2C_SEND_RESTART_READ
 20250  2336                     _do_I2C_SEND_RESTART_READ:	
 20251                           
 20252                           ;Skip over the trampoline to the duplicate function for level 1
 20253  2336  1C7E               	btfss	126,0
 20254  2337  2B3A               	goto	l6978
 20255  2338  31A2  2AAA         	ljmp	i1l7748
 20256  233A                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 20257  233A                     l6978:	
 20258                           ;incstack = 0
 20259                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20260                           
 20261                           
 20262                           ;i2c_master.c: 256: i2c1_driver_restart();
 20263  233A  31A2  2290         	fcall	_i2c1_driver_restart
 20264                           
 20265                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 20266  233C  3001               	movlw	1
 20267  233D  0008               	return
 20268  233E                     __end_of_do_I2C_SEND_RESTART_READ:	
 20269                           
 20270                           	psect	text83
 20271  2391                     __ptext83:	
 20272 ;; *************** function _do_I2C_IDLE *****************
 20273 ;; Defined at:
 20274 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 20275 ;; Parameters:    Size  Location     Type
 20276 ;;		None
 20277 ;; Auto vars:     Size  Location     Type
 20278 ;;		None
 20279 ;; Return value:  Size  Location     Type
 20280 ;;                  1    wreg      enum E8364
 20281 ;; Registers used:
 20282 ;;		wreg, status,2
 20283 ;; Tracked objects:
 20284 ;;		On entry : 0/0
 20285 ;;		On exit  : 0/0
 20286 ;;		Unchanged: 0/0
 20287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20292 ;;Total ram usage:        0 bytes
 20293 ;; Hardware stack levels used:    1
 20294 ;; Hardware stack levels required when called:    6
 20295 ;; This function calls:
 20296 ;;		Nothing
 20297 ;; This function is called by:
 20298 ;;		_i2c_ISR
 20299 ;;		i1_i2c_ISR
 20300 ;; This function uses a non-reentrant model
 20301 ;;
 20302                           
 20303                           
 20304                           ;psect for function _do_I2C_IDLE
 20305  2391                     _do_I2C_IDLE:	
 20306                           
 20307                           ;Skip over the trampoline to the duplicate function for level 1
 20308  2391  1C7E               	btfss	126,0
 20309  2392  2B95               	goto	l7034
 20310  2393  31A2  2AE5         	ljmp	i1l6228
 20311  2395                     _do_I2C_IDLE$intlevel0:	
 20312  2395                     l7034:	
 20313                           ;incstack = 0
 20314                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 20315                           
 20316                           
 20317                           ;i2c_master.c: 249: i2c_status.busy = 0;
 20318  2395  0022               	movlb	2	; select bank2
 20319  2396  1020               	bcf	_i2c_status^(0+256),0
 20320                           
 20321                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 20322  2397  01AB               	clrf	(_i2c_status^(0+256)+11)
 20323                           
 20324                           ;i2c_master.c: 251: return I2C_RESET;
 20325  2398  300E               	movlw	14
 20326  2399  0008               	return
 20327  239A                     __end_of_do_I2C_IDLE:	
 20328                           
 20329                           	psect	text84
 20330  23DE                     __ptext84:	
 20331 ;; *************** function _do_I2C_RESET *****************
 20332 ;; Defined at:
 20333 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 20334 ;; Parameters:    Size  Location     Type
 20335 ;;		None
 20336 ;; Auto vars:     Size  Location     Type
 20337 ;;		None
 20338 ;; Return value:  Size  Location     Type
 20339 ;;                  1    wreg      enum E8364
 20340 ;; Registers used:
 20341 ;;		wreg, status,2, status,0, pclath, cstack
 20342 ;; Tracked objects:
 20343 ;;		On entry : 0/0
 20344 ;;		On exit  : 0/0
 20345 ;;		Unchanged: 0/0
 20346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20351 ;;Total ram usage:        0 bytes
 20352 ;; Hardware stack levels used:    1
 20353 ;; Hardware stack levels required when called:    7
 20354 ;; This function calls:
 20355 ;;		_i2c1_driver_resetBus
 20356 ;; This function is called by:
 20357 ;;		_i2c_ISR
 20358 ;;		i1_i2c_ISR
 20359 ;; This function uses a non-reentrant model
 20360 ;;
 20361                           
 20362                           
 20363                           ;psect for function _do_I2C_RESET
 20364  23DE                     _do_I2C_RESET:	
 20365                           
 20366                           ;Skip over the trampoline to the duplicate function for level 1
 20367  23DE  1C7E               	btfss	126,0
 20368  23DF  2BE2               	goto	l7024
 20369  23E0  31A3  2B18         	ljmp	i1l6218
 20370  23E2                     _do_I2C_RESET$intlevel0:	
 20371  23E2                     l7024:	
 20372                           ;incstack = 0
 20373                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 20374                           
 20375                           
 20376                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 20377  23E2  3188  2000         	fcall	_i2c1_driver_resetBus
 20378                           
 20379                           ;i2c_master.c: 242: i2c_status.busy = 0;
 20380  23E4  0022               	movlb	2	; select bank2
 20381  23E5  1020               	bcf	_i2c_status^(0+256),0
 20382                           
 20383                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 20384  23E6  01AB               	clrf	(_i2c_status^(0+256)+11)
 20385                           
 20386                           ;i2c_master.c: 244: return I2C_RESET;
 20387  23E7  300E               	movlw	14
 20388  23E8  0008               	return
 20389  23E9                     __end_of_do_I2C_RESET:	
 20390                           
 20391                           	psect	text85
 20392  1862                     __ptext85:	
 20393 ;; *************** function _do_I2C_TX_EMPTY *****************
 20394 ;; Defined at:
 20395 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 20396 ;; Parameters:    Size  Location     Type
 20397 ;;		None
 20398 ;; Auto vars:     Size  Location     Type
 20399 ;;		None
 20400 ;; Return value:  Size  Location     Type
 20401 ;;                  1    wreg      enum E8364
 20402 ;; Registers used:
 20403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20404 ;; Tracked objects:
 20405 ;;		On entry : 0/0
 20406 ;;		On exit  : 0/0
 20407 ;;		Unchanged: 0/0
 20408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20413 ;;Total ram usage:        1 bytes
 20414 ;; Hardware stack levels used:    1
 20415 ;; Hardware stack levels required when called:    8
 20416 ;; This function calls:
 20417 ;;		_do_I2C_SEND_RESTART
 20418 ;;		_do_I2C_SEND_STOP
 20419 ;;		_mssp1_setIRQ
 20420 ;;		_returnReset
 20421 ;;		_returnStop
 20422 ;; This function is called by:
 20423 ;;		_i2c_ISR
 20424 ;;		i1_i2c_ISR
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           
 20429                           ;psect for function _do_I2C_TX_EMPTY
 20430  1862                     _do_I2C_TX_EMPTY:	
 20431                           
 20432                           ;Skip over the trampoline to the duplicate function for level 1
 20433  1862  1C7E               	btfss	126,0
 20434  1863  2866               	goto	l7144
 20435  1864  3198  2838         	ljmp	i1l8194
 20436  1866                     _do_I2C_TX_EMPTY$intlevel0:	
 20437  1866                     l7144:	
 20438                           ;incstack = 0
 20439                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20440                           
 20441                           
 20442                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 20443  1866  0022               	movlb	2	; select bank2
 20444  1867  1520               	bsf	_i2c_status^(0+256),2
 20445                           
 20446                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20447  1868  2873               	goto	l7162
 20448  1869                     l7146:	
 20449                           ;i2c_master.c: 386: {
 20450                           ;i2c_master.c: 387: case i2c_restart_read:
 20451                           
 20452                           
 20453                           ;i2c_master.c: 388: case i2c_restart_write:
 20454                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 20455  1869  31A3  2346         	fcall	_do_I2C_SEND_RESTART
 20456  186B  0008               	return
 20457  186C                     l7150:	
 20458                           ;i2c_master.c: 390: case i2c_continue:
 20459                           
 20460                           
 20461                           ;i2c_master.c: 391: mssp1_setIRQ();
 20462  186C  31A2  229C         	fcall	_mssp1_setIRQ
 20463                           
 20464                           ;i2c_master.c: 392: return I2C_TX;
 20465  186E  3003               	movlw	3
 20466  186F  0008               	return
 20467  1870                     l7156:	
 20468                           ;i2c_master.c: 394: case i2c_stop:
 20469                           
 20470                           ;i2c_master.c: 393: default:
 20471                           
 20472                           
 20473                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 20474  1870  31A3  234E         	fcall	_do_I2C_SEND_STOP
 20475                           
 20476                           ;i2c_master.c: 396: }
 20477  1872  0008               	return
 20478  1873                     l7162:	
 20479  1873  0022               	movlb	2	; select bank2
 20480  1874  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 20481  1875  0020               	movlb	0	; select bank0
 20482  1876  00B1               	movwf	??_do_I2C_TX_EMPTY
 20483  1877  0831               	movf	??_do_I2C_TX_EMPTY,w
 20484  1878  00B1               	movwf	returnReset@p
 20485  1879  300C               	movlw	12
 20486  187A  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20487  187B  0086               	movwf	6
 20488  187C  3001               	movlw	1	; select bank2/3
 20489  187D  0087               	movwf	7
 20490  187E  3F41               	moviw [1]fsr1
 20491  187F  008A               	movwf	10
 20492  1880  3F40               	moviw [0]fsr1
 20493  1881  000A               	callw
 20494  1882  3198               	pagesel	$
 20495                           
 20496                           ; Switch size 1, requested type "space"
 20497                           ; Number of cases is 4, Range of values is 1 to 4
 20498                           ; switch strategies available:
 20499                           ; Name         Instructions Cycles
 20500                           ; simple_byte           13     7 (average)
 20501                           ; direct_byte           17     9 (fixed)
 20502                           ; jumptable            263     9 (fixed)
 20503                           ;	Chosen strategy is simple_byte
 20504  1883  3A01               	xorlw	1	; case 1
 20505  1884  1903               	skipnz
 20506  1885  2870               	goto	l7156
 20507  1886  3A03               	xorlw	3	; case 2
 20508  1887  1903               	skipnz
 20509  1888  2869               	goto	l7146
 20510  1889  3A01               	xorlw	1	; case 3
 20511  188A  1903               	skipnz
 20512  188B  2869               	goto	l7146
 20513  188C  3A07               	xorlw	7	; case 4
 20514  188D  1903               	skipnz
 20515  188E  286C               	goto	l7150
 20516  188F  2870               	goto	l7156
 20517  1890  0008               	return
 20518  1891                     __end_of_do_I2C_TX_EMPTY:	
 20519                           
 20520                           	psect	text86
 20521  229C                     __ptext86:	
 20522 ;; *************** function _mssp1_setIRQ *****************
 20523 ;; Defined at:
 20524 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 20525 ;; Parameters:    Size  Location     Type
 20526 ;;		None
 20527 ;; Auto vars:     Size  Location     Type
 20528 ;;		None
 20529 ;; Return value:  Size  Location     Type
 20530 ;;                  1    wreg      void 
 20531 ;; Registers used:
 20532 ;;		None
 20533 ;; Tracked objects:
 20534 ;;		On entry : 0/0
 20535 ;;		On exit  : 0/0
 20536 ;;		Unchanged: 0/0
 20537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20542 ;;Total ram usage:        0 bytes
 20543 ;; Hardware stack levels used:    1
 20544 ;; Hardware stack levels required when called:    6
 20545 ;; This function calls:
 20546 ;;		Nothing
 20547 ;; This function is called by:
 20548 ;;		_do_I2C_TX_EMPTY
 20549 ;; This function uses a non-reentrant model
 20550 ;;
 20551                           
 20552                           
 20553                           ;psect for function _mssp1_setIRQ
 20554  229C                     _mssp1_setIRQ:	
 20555                           
 20556                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 20557                           
 20558                           ;incstack = 0
 20559                           ; Regs used in _mssp1_setIRQ: []
 20560  229C  0020               	movlb	0	; select bank0
 20561  229D  1591               	bsf	17,3	;volatile
 20562  229E  0008               	return
 20563  229F                     __end_of_mssp1_setIRQ:	
 20564                           
 20565                           	psect	text87
 20566  182B                     __ptext87:	
 20567 ;; *************** function _i2c1_driver_isNACK *****************
 20568 ;; Defined at:
 20569 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 20570 ;; Parameters:    Size  Location     Type
 20571 ;;		None
 20572 ;; Auto vars:     Size  Location     Type
 20573 ;;		None
 20574 ;; Return value:  Size  Location     Type
 20575 ;;		None               void
 20576 ;; Registers used:
 20577 ;;		wreg, status,2, status,0
 20578 ;; Tracked objects:
 20579 ;;		On entry : 0/0
 20580 ;;		On exit  : 0/0
 20581 ;;		Unchanged: 0/0
 20582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20586 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20587 ;;Total ram usage:        1 bytes
 20588 ;; Hardware stack levels used:    1
 20589 ;; Hardware stack levels required when called:    6
 20590 ;; This function calls:
 20591 ;;		Nothing
 20592 ;; This function is called by:
 20593 ;;		_do_I2C_TX
 20594 ;;		_i2c_ISR
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598                           
 20599                           ;psect for function _i2c1_driver_isNACK
 20600  182B                     _i2c1_driver_isNACK:	
 20601                           
 20602                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 20603                           
 20604                           ;incstack = 0
 20605                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 20606  182B  0024               	movlb	4	; select bank4
 20607  182C  0816               	movf	22,w	;volatile
 20608  182D  39BF               	andlw	-65
 20609  182E  3840               	iorlw	64
 20610  182F  0096               	movwf	22	;volatile
 20611  1830  0E16               	swapf	22,w	;volatile
 20612  1831  0C89               	rrf	9,f
 20613  1832  0C89               	rrf	9,f
 20614  1833  3901               	andlw	1
 20615  1834  0020               	movlb	0	; select bank0
 20616  1835  00B1               	movwf	??_i2c1_driver_isNACK
 20617  1836  0C31               	rrf	??_i2c1_driver_isNACK,w
 20618  1837  0008               	return
 20619  1838                     __end_of_i2c1_driver_isNACK:	
 20620                           
 20621                           	psect	text88
 20622  2306                     __ptext88:	
 20623 ;; *************** function _i2c1_driver_TXData *****************
 20624 ;; Defined at:
 20625 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;  d               1    wreg     unsigned char 
 20628 ;; Auto vars:     Size  Location     Type
 20629 ;;  d               1   17[BANK0 ] unsigned char 
 20630 ;; Return value:  Size  Location     Type
 20631 ;;                  1    wreg      void 
 20632 ;; Registers used:
 20633 ;;		wreg
 20634 ;; Tracked objects:
 20635 ;;		On entry : 0/0
 20636 ;;		On exit  : 0/0
 20637 ;;		Unchanged: 0/0
 20638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20642 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20643 ;;Total ram usage:        1 bytes
 20644 ;; Hardware stack levels used:    1
 20645 ;; Hardware stack levels required when called:    6
 20646 ;; This function calls:
 20647 ;;		Nothing
 20648 ;; This function is called by:
 20649 ;;		_do_I2C_SEND_ADR_READ
 20650 ;;		_do_I2C_SEND_ADR_WRITE
 20651 ;;		_do_I2C_TX
 20652 ;; This function uses a non-reentrant model
 20653 ;;
 20654                           
 20655                           
 20656                           ;psect for function _i2c1_driver_TXData
 20657  2306                     _i2c1_driver_TXData:	
 20658                           
 20659                           ;incstack = 0
 20660                           ; Regs used in _i2c1_driver_TXData: [wreg]
 20661                           ;i2c1_driver_TXData@d stored from wreg
 20662  2306  0020               	movlb	0	; select bank0
 20663  2307  00B1               	movwf	i2c1_driver_TXData@d
 20664                           
 20665                           ;i2c1_driver.c: 188: SSP1BUF = d;
 20666  2308  0831               	movf	i2c1_driver_TXData@d,w
 20667  2309  0024               	movlb	4	; select bank4
 20668  230A  0091               	movwf	17	;volatile
 20669  230B  0008               	return
 20670  230C                     __end_of_i2c1_driver_TXData:	
 20671                           
 20672                           	psect	text89
 20673  2299                     __ptext89:	
 20674 ;; *************** function _i2c1_driver_getRXData *****************
 20675 ;; Defined at:
 20676 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 20677 ;; Parameters:    Size  Location     Type
 20678 ;;		None
 20679 ;; Auto vars:     Size  Location     Type
 20680 ;;		None
 20681 ;; Return value:  Size  Location     Type
 20682 ;;                  1    wreg      unsigned char 
 20683 ;; Registers used:
 20684 ;;		wreg
 20685 ;; Tracked objects:
 20686 ;;		On entry : 0/0
 20687 ;;		On exit  : 0/0
 20688 ;;		Unchanged: 0/0
 20689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20694 ;;Total ram usage:        0 bytes
 20695 ;; Hardware stack levels used:    1
 20696 ;; Hardware stack levels required when called:    6
 20697 ;; This function calls:
 20698 ;;		Nothing
 20699 ;; This function is called by:
 20700 ;;		_do_I2C_RX
 20701 ;; This function uses a non-reentrant model
 20702 ;;
 20703                           
 20704                           
 20705                           ;psect for function _i2c1_driver_getRXData
 20706  2299                     _i2c1_driver_getRXData:	
 20707                           
 20708                           ;i2c1_driver.c: 173: return SSP1BUF;
 20709                           
 20710                           ;incstack = 0
 20711                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 20712  2299  0024               	movlb	4	; select bank4
 20713  229A  0811               	movf	17,w	;volatile
 20714  229B  0008               	return
 20715  229C                     __end_of_i2c1_driver_getRXData:	
 20716                           
 20717                           	psect	text90
 20718  22CE                     __ptext90:	
 20719 ;; *************** function _i2c1_driver_sendNACK *****************
 20720 ;; Defined at:
 20721 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 20722 ;; Parameters:    Size  Location     Type
 20723 ;;		None
 20724 ;; Auto vars:     Size  Location     Type
 20725 ;;		None
 20726 ;; Return value:  Size  Location     Type
 20727 ;;                  1    wreg      void 
 20728 ;; Registers used:
 20729 ;;		None
 20730 ;; Tracked objects:
 20731 ;;		On entry : 0/0
 20732 ;;		On exit  : 0/0
 20733 ;;		Unchanged: 0/0
 20734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20739 ;;Total ram usage:        0 bytes
 20740 ;; Hardware stack levels used:    1
 20741 ;; Hardware stack levels required when called:    6
 20742 ;; This function calls:
 20743 ;;		Nothing
 20744 ;; This function is called by:
 20745 ;;		_do_I2C_DO_NACK_STOP
 20746 ;;		_do_I2C_DO_NACK_RESTART
 20747 ;; This function uses a non-reentrant model
 20748 ;;
 20749                           
 20750                           
 20751                           ;psect for function _i2c1_driver_sendNACK
 20752  22CE                     _i2c1_driver_sendNACK:	
 20753                           
 20754                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 20755                           
 20756                           ;incstack = 0
 20757                           ; Regs used in _i2c1_driver_sendNACK: []
 20758  22CE  0024               	movlb	4	; select bank4
 20759  22CF  1696               	bsf	22,5	;volatile
 20760                           
 20761                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 20762  22D0  1616               	bsf	22,4	;volatile
 20763  22D1  0008               	return
 20764  22D2                     __end_of_i2c1_driver_sendNACK:	
 20765                           
 20766                           	psect	text91
 20767  0800                     __ptext91:	
 20768 ;; *************** function _i2c1_driver_resetBus *****************
 20769 ;; Defined at:
 20770 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 20771 ;; Parameters:    Size  Location     Type
 20772 ;;		None
 20773 ;; Auto vars:     Size  Location     Type
 20774 ;;		None
 20775 ;; Return value:  Size  Location     Type
 20776 ;;                  1    wreg      void 
 20777 ;; Registers used:
 20778 ;;		None
 20779 ;; Tracked objects:
 20780 ;;		On entry : 0/0
 20781 ;;		On exit  : 0/0
 20782 ;;		Unchanged: 0/0
 20783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20788 ;;Total ram usage:        0 bytes
 20789 ;; Hardware stack levels used:    1
 20790 ;; Hardware stack levels required when called:    6
 20791 ;; This function calls:
 20792 ;;		Nothing
 20793 ;; This function is called by:
 20794 ;;		_do_I2C_RESET
 20795 ;; This function uses a non-reentrant model
 20796 ;;
 20797                           
 20798                           
 20799                           ;psect for function _i2c1_driver_resetBus
 20800  0800                     _i2c1_driver_resetBus:	
 20801                           
 20802                           ;incstack = 0
 20803                           ; Regs used in _i2c1_driver_resetBus: []
 20804  0800  0008               	return
 20805  0801                     __end_of_i2c1_driver_resetBus:	
 20806                           
 20807                           	psect	text92
 20808  2296                     __ptext92:	
 20809 ;; *************** function _i2c1_driver_startRX *****************
 20810 ;; Defined at:
 20811 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;		None
 20814 ;; Auto vars:     Size  Location     Type
 20815 ;;		None
 20816 ;; Return value:  Size  Location     Type
 20817 ;;                  1    wreg      void 
 20818 ;; Registers used:
 20819 ;;		None
 20820 ;; Tracked objects:
 20821 ;;		On entry : 0/0
 20822 ;;		On exit  : 0/0
 20823 ;;		Unchanged: 0/0
 20824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20829 ;;Total ram usage:        0 bytes
 20830 ;; Hardware stack levels used:    1
 20831 ;; Hardware stack levels required when called:    6
 20832 ;; This function calls:
 20833 ;;		Nothing
 20834 ;; This function is called by:
 20835 ;;		_do_I2C_RCEN
 20836 ;; This function uses a non-reentrant model
 20837 ;;
 20838                           
 20839                           
 20840                           ;psect for function _i2c1_driver_startRX
 20841  2296                     _i2c1_driver_startRX:	
 20842                           
 20843                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 20844                           
 20845                           ;incstack = 0
 20846                           ; Regs used in _i2c1_driver_startRX: []
 20847  2296  0024               	movlb	4	; select bank4
 20848  2297  1596               	bsf	22,3	;volatile
 20849  2298  0008               	return
 20850  2299                     __end_of_i2c1_driver_startRX:	
 20851                           
 20852                           	psect	text93
 20853  2300                     __ptext93:	
 20854 ;; *************** function _returnReset *****************
 20855 ;; Defined at:
 20856 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;  p               1   17[BANK0 ] PTR void 
 20859 ;;		 -> NULL(0), 
 20860 ;; Auto vars:     Size  Location     Type
 20861 ;;		None
 20862 ;; Return value:  Size  Location     Type
 20863 ;;                  1    wreg      enum E8198
 20864 ;; Registers used:
 20865 ;;		wreg
 20866 ;; Tracked objects:
 20867 ;;		On entry : 0/0
 20868 ;;		On exit  : 0/0
 20869 ;;		Unchanged: 0/0
 20870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20871 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20875 ;;Total ram usage:        1 bytes
 20876 ;; Hardware stack levels used:    1
 20877 ;; Hardware stack levels required when called:    6
 20878 ;; This function calls:
 20879 ;;		Nothing
 20880 ;; This function is called by:
 20881 ;;		_i2c_open
 20882 ;;		_do_I2C_DO_ADDRESS_NACK
 20883 ;;		_do_I2C_TX
 20884 ;;		_do_I2C_RX
 20885 ;;		_do_I2C_TX_EMPTY
 20886 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20887 ;;		i1_do_I2C_TX
 20888 ;;		i1_do_I2C_RX
 20889 ;;		i1_do_I2C_TX_EMPTY
 20890 ;; This function uses a non-reentrant model
 20891 ;;
 20892                           
 20893                           
 20894                           ;psect for function _returnReset
 20895  2300                     _returnReset:	
 20896                           
 20897                           ;Skip over the trampoline to the duplicate function for level 1
 20898  2300  1C7E               	btfss	126,0
 20899  2301  2B04               	goto	l7018
 20900  2302  3180  2802         	ljmp	i1l7788
 20901  2304                     _returnReset$intlevel0:	
 20902  2304                     l7018:	
 20903                           ;incstack = 0
 20904                           ; Regs used in _returnReset: [wreg]
 20905                           
 20906                           
 20907                           ;i2c_master.c: 450: return i2c_reset_link;
 20908  2304  3005               	movlw	5
 20909  2305  0008               	return
 20910  2306                     __end_of_returnReset:	
 20911                           
 20912                           	psect	text94
 20913  22FA                     __ptext94:	
 20914 ;; *************** function _returnStop *****************
 20915 ;; Defined at:
 20916 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 20917 ;; Parameters:    Size  Location     Type
 20918 ;;  p               1   17[BANK0 ] PTR void 
 20919 ;;		 -> NULL(0), 
 20920 ;; Auto vars:     Size  Location     Type
 20921 ;;		None
 20922 ;; Return value:  Size  Location     Type
 20923 ;;                  1    wreg      enum E8198
 20924 ;; Registers used:
 20925 ;;		wreg
 20926 ;; Tracked objects:
 20927 ;;		On entry : 0/0
 20928 ;;		On exit  : 0/0
 20929 ;;		Unchanged: 0/0
 20930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20931 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20935 ;;Total ram usage:        1 bytes
 20936 ;; Hardware stack levels used:    1
 20937 ;; Hardware stack levels required when called:    6
 20938 ;; This function calls:
 20939 ;;		Nothing
 20940 ;; This function is called by:
 20941 ;;		_i2c_open
 20942 ;;		_setCallBack
 20943 ;;		_do_I2C_DO_ADDRESS_NACK
 20944 ;;		_do_I2C_TX
 20945 ;;		_do_I2C_RX
 20946 ;;		_do_I2C_TX_EMPTY
 20947 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20948 ;;		i1_do_I2C_TX
 20949 ;;		i1_do_I2C_RX
 20950 ;;		i1_do_I2C_TX_EMPTY
 20951 ;; This function uses a non-reentrant model
 20952 ;;
 20953                           
 20954                           
 20955                           ;psect for function _returnStop
 20956  22FA                     _returnStop:	
 20957                           
 20958                           ;Skip over the trampoline to the duplicate function for level 1
 20959  22FA  1C7E               	btfss	126,0
 20960  22FB  2AFE               	goto	l7014
 20961  22FC  31A2  2A67         	ljmp	i1l7784
 20962  22FE                     _returnStop$intlevel0:	
 20963  22FE                     l7014:	
 20964                           ;incstack = 0
 20965                           ; Regs used in _returnStop: [wreg]
 20966                           
 20967                           
 20968                           ;i2c_master.c: 445: return i2c_stop;
 20969  22FE  3001               	movlw	1
 20970  22FF  0008               	return
 20971  2300                     __end_of_returnStop:	
 20972                           
 20973                           	psect	text95
 20974  2293                     __ptext95:	
 20975 ;; *************** function _i2c1_driver_stop *****************
 20976 ;; Defined at:
 20977 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 20978 ;; Parameters:    Size  Location     Type
 20979 ;;		None
 20980 ;; Auto vars:     Size  Location     Type
 20981 ;;		None
 20982 ;; Return value:  Size  Location     Type
 20983 ;;                  1    wreg      void 
 20984 ;; Registers used:
 20985 ;;		None
 20986 ;; Tracked objects:
 20987 ;;		On entry : 0/0
 20988 ;;		On exit  : 0/0
 20989 ;;		Unchanged: 0/0
 20990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20995 ;;Total ram usage:        0 bytes
 20996 ;; Hardware stack levels used:    1
 20997 ;; Hardware stack levels required when called:    6
 20998 ;; This function calls:
 20999 ;;		Nothing
 21000 ;; This function is called by:
 21001 ;;		_do_I2C_SEND_STOP
 21002 ;; This function uses a non-reentrant model
 21003 ;;
 21004                           
 21005                           
 21006                           ;psect for function _i2c1_driver_stop
 21007  2293                     _i2c1_driver_stop:	
 21008                           
 21009                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 21010                           
 21011                           ;incstack = 0
 21012                           ; Regs used in _i2c1_driver_stop: []
 21013  2293  0024               	movlb	4	; select bank4
 21014  2294  1516               	bsf	22,2	;volatile
 21015  2295  0008               	return
 21016  2296                     __end_of_i2c1_driver_stop:	
 21017                           
 21018                           	psect	text96
 21019  2290                     __ptext96:	
 21020 ;; *************** function _i2c1_driver_restart *****************
 21021 ;; Defined at:
 21022 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 21023 ;; Parameters:    Size  Location     Type
 21024 ;;		None
 21025 ;; Auto vars:     Size  Location     Type
 21026 ;;		None
 21027 ;; Return value:  Size  Location     Type
 21028 ;;                  1    wreg      void 
 21029 ;; Registers used:
 21030 ;;		None
 21031 ;; Tracked objects:
 21032 ;;		On entry : 0/0
 21033 ;;		On exit  : 0/0
 21034 ;;		Unchanged: 0/0
 21035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21040 ;;Total ram usage:        0 bytes
 21041 ;; Hardware stack levels used:    1
 21042 ;; Hardware stack levels required when called:    6
 21043 ;; This function calls:
 21044 ;;		Nothing
 21045 ;; This function is called by:
 21046 ;;		_do_I2C_SEND_RESTART_READ
 21047 ;;		_do_I2C_SEND_RESTART_WRITE
 21048 ;;		_do_I2C_SEND_RESTART
 21049 ;; This function uses a non-reentrant model
 21050 ;;
 21051                           
 21052                           
 21053                           ;psect for function _i2c1_driver_restart
 21054  2290                     _i2c1_driver_restart:	
 21055                           
 21056                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 21057                           
 21058                           ;incstack = 0
 21059                           ; Regs used in _i2c1_driver_restart: []
 21060  2290  0024               	movlb	4	; select bank4
 21061  2291  1496               	bsf	22,1	;volatile
 21062  2292  0008               	return
 21063  2293                     __end_of_i2c1_driver_restart:	
 21064                           
 21065                           	psect	text97
 21066  22CA                     __ptext97:	
 21067 ;; *************** function _i2c1_driver_sendACK *****************
 21068 ;; Defined at:
 21069 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 21070 ;; Parameters:    Size  Location     Type
 21071 ;;		None
 21072 ;; Auto vars:     Size  Location     Type
 21073 ;;		None
 21074 ;; Return value:  Size  Location     Type
 21075 ;;                  1    wreg      void 
 21076 ;; Registers used:
 21077 ;;		None
 21078 ;; Tracked objects:
 21079 ;;		On entry : 0/0
 21080 ;;		On exit  : 0/0
 21081 ;;		Unchanged: 0/0
 21082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21087 ;;Total ram usage:        0 bytes
 21088 ;; Hardware stack levels used:    1
 21089 ;; Hardware stack levels required when called:    6
 21090 ;; This function calls:
 21091 ;;		Nothing
 21092 ;; This function is called by:
 21093 ;;		_do_I2C_DO_ACK
 21094 ;;		_do_I2C_RX
 21095 ;; This function uses a non-reentrant model
 21096 ;;
 21097                           
 21098                           
 21099                           ;psect for function _i2c1_driver_sendACK
 21100  22CA                     _i2c1_driver_sendACK:	
 21101                           
 21102                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 21103                           
 21104                           ;incstack = 0
 21105                           ; Regs used in _i2c1_driver_sendACK: []
 21106  22CA  0024               	movlb	4	; select bank4
 21107  22CB  1296               	bcf	22,5	;volatile
 21108                           
 21109                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 21110  22CC  1616               	bsf	22,4	;volatile
 21111  22CD  0008               	return
 21112  22CE                     __end_of_i2c1_driver_sendACK:	
 21113                           
 21114                           	psect	text98
 21115  228D                     __ptext98:	
 21116 ;; *************** function _i2c1_driver_start *****************
 21117 ;; Defined at:
 21118 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 21119 ;; Parameters:    Size  Location     Type
 21120 ;;		None
 21121 ;; Auto vars:     Size  Location     Type
 21122 ;;		None
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  1    wreg      void 
 21125 ;; Registers used:
 21126 ;;		None
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/0
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21136 ;;Total ram usage:        0 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; Hardware stack levels required when called:    6
 21139 ;; This function calls:
 21140 ;;		Nothing
 21141 ;; This function is called by:
 21142 ;;		_i2c_masterOperation
 21143 ;; This function uses a non-reentrant model
 21144 ;;
 21145                           
 21146                           
 21147                           ;psect for function _i2c1_driver_start
 21148  228D                     _i2c1_driver_start:	
 21149                           
 21150                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 21151                           
 21152                           ;incstack = 0
 21153                           ; Regs used in _i2c1_driver_start: []
 21154  228D  0024               	movlb	4	; select bank4
 21155  228E  1416               	bsf	22,0	;volatile
 21156  228F  0008               	return
 21157  2290                     __end_of_i2c1_driver_start:	
 21158                           
 21159                           	psect	text99
 21160  1CE4                     __ptext99:	
 21161 ;; *************** function ___awdiv *****************
 21162 ;; Defined at:
 21163 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21164 ;; Parameters:    Size  Location     Type
 21165 ;;  divisor         2   17[BANK0 ] int 
 21166 ;;  dividend        2   19[BANK0 ] int 
 21167 ;; Auto vars:     Size  Location     Type
 21168 ;;  quotient        2   24[BANK0 ] int 
 21169 ;;  sign            1   23[BANK0 ] unsigned char 
 21170 ;;  counter         1   22[BANK0 ] unsigned char 
 21171 ;; Return value:  Size  Location     Type
 21172 ;;                  2   17[BANK0 ] int 
 21173 ;; Registers used:
 21174 ;;		wreg, status,2, status,0
 21175 ;; Tracked objects:
 21176 ;;		On entry : 0/0
 21177 ;;		On exit  : 0/0
 21178 ;;		Unchanged: 0/0
 21179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21181 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21183 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21184 ;;Total ram usage:        9 bytes
 21185 ;; Hardware stack levels used:    1
 21186 ;; Hardware stack levels required when called:    6
 21187 ;; This function calls:
 21188 ;;		Nothing
 21189 ;; This function is called by:
 21190 ;;		_drv_write_DC
 21191 ;;		_drv_outputSine
 21192 ;; This function uses a non-reentrant model
 21193 ;;
 21194                           
 21195                           
 21196                           ;psect for function ___awdiv
 21197  1CE4                     ___awdiv:	
 21198                           
 21199                           ;incstack = 0
 21200                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21201  1CE4  0020               	movlb	0	; select bank0
 21202  1CE5  01B7               	clrf	___awdiv@sign
 21203  1CE6  1FB2               	btfss	___awdiv@divisor+1,7
 21204  1CE7  2CEF               	goto	l5254
 21205  1CE8  09B1               	comf	___awdiv@divisor,f
 21206  1CE9  09B2               	comf	___awdiv@divisor+1,f
 21207  1CEA  0AB1               	incf	___awdiv@divisor,f
 21208  1CEB  1903               	skipnz
 21209  1CEC  0AB2               	incf	___awdiv@divisor+1,f
 21210  1CED  01B7               	clrf	___awdiv@sign
 21211  1CEE  0AB7               	incf	___awdiv@sign,f
 21212  1CEF                     l5254:	
 21213  1CEF  1FB4               	btfss	___awdiv@dividend+1,7
 21214  1CF0  2CFA               	goto	l5260
 21215  1CF1  09B3               	comf	___awdiv@dividend,f
 21216  1CF2  09B4               	comf	___awdiv@dividend+1,f
 21217  1CF3  0AB3               	incf	___awdiv@dividend,f
 21218  1CF4  1903               	skipnz
 21219  1CF5  0AB4               	incf	___awdiv@dividend+1,f
 21220  1CF6  3001               	movlw	1
 21221  1CF7  00B5               	movwf	??___awdiv
 21222  1CF8  0835               	movf	??___awdiv,w
 21223  1CF9  06B7               	xorwf	___awdiv@sign,f
 21224  1CFA                     l5260:	
 21225  1CFA  01B8               	clrf	___awdiv@quotient
 21226  1CFB  01B9               	clrf	___awdiv@quotient+1
 21227  1CFC  0831               	movf	___awdiv@divisor,w
 21228  1CFD  0432               	iorwf	___awdiv@divisor+1,w
 21229  1CFE  1903               	btfsc	3,2
 21230  1CFF  2D29               	goto	l5282
 21231  1D00  01B6               	clrf	___awdiv@counter
 21232  1D01  0AB6               	incf	___awdiv@counter,f
 21233  1D02                     l5270:	
 21234  1D02  1BB2               	btfsc	___awdiv@divisor+1,7
 21235  1D03  2D0E               	goto	l5272
 21236  1D04  3001               	movlw	1
 21237  1D05                     u4265:	
 21238  1D05  35B1               	lslf	___awdiv@divisor,f
 21239  1D06  0DB2               	rlf	___awdiv@divisor+1,f
 21240  1D07  0B89               	decfsz	9,f
 21241  1D08  2D05               	goto	u4265
 21242  1D09  3001               	movlw	1
 21243  1D0A  00B5               	movwf	??___awdiv
 21244  1D0B  0835               	movf	??___awdiv,w
 21245  1D0C  07B6               	addwf	___awdiv@counter,f
 21246  1D0D  2D02               	goto	l5270
 21247  1D0E                     l5272:	
 21248  1D0E  3001               	movlw	1
 21249  1D0F                     u4285:	
 21250  1D0F  35B8               	lslf	___awdiv@quotient,f
 21251  1D10  0DB9               	rlf	___awdiv@quotient+1,f
 21252  1D11  0B89               	decfsz	9,f
 21253  1D12  2D0F               	goto	u4285
 21254  1D13  0832               	movf	___awdiv@divisor+1,w
 21255  1D14  0234               	subwf	___awdiv@dividend+1,w
 21256  1D15  1D03               	skipz
 21257  1D16  2D19               	goto	u4295
 21258  1D17  0831               	movf	___awdiv@divisor,w
 21259  1D18  0233               	subwf	___awdiv@dividend,w
 21260  1D19                     u4295:	
 21261  1D19  1C03               	skipc
 21262  1D1A  2D20               	goto	l5278
 21263  1D1B  0831               	movf	___awdiv@divisor,w
 21264  1D1C  02B3               	subwf	___awdiv@dividend,f
 21265  1D1D  0832               	movf	___awdiv@divisor+1,w
 21266  1D1E  3BB4               	subwfb	___awdiv@dividend+1,f
 21267  1D1F  1438               	bsf	___awdiv@quotient,0
 21268  1D20                     l5278:	
 21269  1D20  3001               	movlw	1
 21270  1D21                     u4305:	
 21271  1D21  36B2               	lsrf	___awdiv@divisor+1,f
 21272  1D22  0CB1               	rrf	___awdiv@divisor,f
 21273  1D23  0B89               	decfsz	9,f
 21274  1D24  2D21               	goto	u4305
 21275  1D25  3001               	movlw	1
 21276  1D26  02B6               	subwf	___awdiv@counter,f
 21277  1D27  1D03               	btfss	3,2
 21278  1D28  2D0E               	goto	l5272
 21279  1D29                     l5282:	
 21280  1D29  0837               	movf	___awdiv@sign,w
 21281  1D2A  1903               	btfsc	3,2
 21282  1D2B  2D31               	goto	l5286
 21283  1D2C  09B8               	comf	___awdiv@quotient,f
 21284  1D2D  09B9               	comf	___awdiv@quotient+1,f
 21285  1D2E  0AB8               	incf	___awdiv@quotient,f
 21286  1D2F  1903               	skipnz
 21287  1D30  0AB9               	incf	___awdiv@quotient+1,f
 21288  1D31                     l5286:	
 21289  1D31  0839               	movf	___awdiv@quotient+1,w
 21290  1D32  00B2               	movwf	?___awdiv+1
 21291  1D33  0838               	movf	___awdiv@quotient,w
 21292  1D34  00B1               	movwf	?___awdiv
 21293  1D35  0008               	return
 21294  1D36                     __end_of___awdiv:	
 21295                           
 21296                           	psect	text100
 21297  1787                     __ptext100:	
 21298 ;; *************** function _calcHeaterPins *****************
 21299 ;; Defined at:
 21300 ;;		line 257 in file "main.c"
 21301 ;; Parameters:    Size  Location     Type
 21302 ;;		None
 21303 ;; Auto vars:     Size  Location     Type
 21304 ;;		None
 21305 ;; Return value:  Size  Location     Type
 21306 ;;                  1    wreg      void 
 21307 ;; Registers used:
 21308 ;;		wreg, status,2, status,0
 21309 ;; Tracked objects:
 21310 ;;		On entry : 0/0
 21311 ;;		On exit  : 0/0
 21312 ;;		Unchanged: 0/0
 21313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21317 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21318 ;;Total ram usage:        4 bytes
 21319 ;; Hardware stack levels used:    1
 21320 ;; Hardware stack levels required when called:    6
 21321 ;; This function calls:
 21322 ;;		Nothing
 21323 ;; This function is called by:
 21324 ;;		_doMove
 21325 ;; This function uses a non-reentrant model
 21326 ;;
 21327                           
 21328                           
 21329                           ;psect for function _calcHeaterPins
 21330  1787                     _calcHeaterPins:	
 21331                           
 21332                           ;main.c: 258: first_top = moveVector_downs & moveMask;
 21333                           
 21334                           ;incstack = 0
 21335                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 21336  1787  0021               	movlb	1	; select bank1
 21337  1788  0859               	movf	_moveMask^(0+128),w
 21338  1789  0561               	andwf	_moveVector_downs^(0+128),w
 21339  178A  0022               	movlb	2	; select bank2
 21340  178B  00D6               	movwf	_first_top^(0+256)
 21341  178C  0021               	movlb	1	; select bank1
 21342  178D  085A               	movf	(_moveMask+1)^(0+128),w
 21343  178E  0562               	andwf	(_moveVector_downs+1)^(0+128),w
 21344  178F  0022               	movlb	2	; select bank2
 21345  1790  00D7               	movwf	(_first_top+1)^(0+256)
 21346  1791  0021               	movlb	1	; select bank1
 21347  1792  085B               	movf	(_moveMask+2)^(0+128),w
 21348  1793  0563               	andwf	(_moveVector_downs+2)^(0+128),w
 21349  1794  0022               	movlb	2	; select bank2
 21350  1795  00D8               	movwf	(_first_top+2)^(0+256)
 21351  1796  0021               	movlb	1	; select bank1
 21352  1797  085C               	movf	(_moveMask+3)^(0+128),w
 21353  1798  0564               	andwf	(_moveVector_downs+3)^(0+128),w
 21354  1799  0022               	movlb	2	; select bank2
 21355  179A  00D9               	movwf	(_first_top+3)^(0+256)
 21356                           
 21357                           ;main.c: 259: first_bottom = (~moveVector_downs) & moveMask;
 21358  179B  0021               	movlb	1	; select bank1
 21359  179C  0961               	comf	_moveVector_downs^(0+128),w
 21360  179D  0020               	movlb	0	; select bank0
 21361  179E  00B1               	movwf	??_calcHeaterPins
 21362  179F  0021               	movlb	1	; select bank1
 21363  17A0  0962               	comf	(_moveVector_downs+1)^(0+128),w
 21364  17A1  0020               	movlb	0	; select bank0
 21365  17A2  00B2               	movwf	??_calcHeaterPins+1
 21366  17A3  0021               	movlb	1	; select bank1
 21367  17A4  0963               	comf	(_moveVector_downs+2)^(0+128),w
 21368  17A5  0020               	movlb	0	; select bank0
 21369  17A6  00B3               	movwf	??_calcHeaterPins+2
 21370  17A7  0021               	movlb	1	; select bank1
 21371  17A8  0964               	comf	(_moveVector_downs+3)^(0+128),w
 21372  17A9  0020               	movlb	0	; select bank0
 21373  17AA  00B4               	movwf	??_calcHeaterPins+3
 21374  17AB  0021               	movlb	1	; select bank1
 21375  17AC  0859               	movf	_moveMask^(0+128),w
 21376  17AD  0020               	movlb	0	; select bank0
 21377  17AE  0531               	andwf	??_calcHeaterPins,w
 21378  17AF  0022               	movlb	2	; select bank2
 21379  17B0  00DA               	movwf	_first_bottom^(0+256)
 21380  17B1  0021               	movlb	1	; select bank1
 21381  17B2  085A               	movf	(_moveMask+1)^(0+128),w
 21382  17B3  0020               	movlb	0	; select bank0
 21383  17B4  0532               	andwf	??_calcHeaterPins+1,w
 21384  17B5  0022               	movlb	2	; select bank2
 21385  17B6  00DB               	movwf	(_first_bottom+1)^(0+256)
 21386  17B7  0021               	movlb	1	; select bank1
 21387  17B8  085B               	movf	(_moveMask+2)^(0+128),w
 21388  17B9  0020               	movlb	0	; select bank0
 21389  17BA  0533               	andwf	??_calcHeaterPins+2,w
 21390  17BB  0022               	movlb	2	; select bank2
 21391  17BC  00DC               	movwf	(_first_bottom+2)^(0+256)
 21392  17BD  0021               	movlb	1	; select bank1
 21393  17BE  085C               	movf	(_moveMask+3)^(0+128),w
 21394  17BF  0020               	movlb	0	; select bank0
 21395  17C0  0534               	andwf	??_calcHeaterPins+3,w
 21396  17C1  0022               	movlb	2	; select bank2
 21397  17C2  00DD               	movwf	(_first_bottom+3)^(0+256)
 21398                           
 21399                           ;main.c: 260: second_top = moveVector_ups & moveMask;
 21400  17C3  0021               	movlb	1	; select bank1
 21401  17C4  0859               	movf	_moveMask^(0+128),w
 21402  17C5  0565               	andwf	_moveVector_ups^(0+128),w
 21403  17C6  0022               	movlb	2	; select bank2
 21404  17C7  00DE               	movwf	_second_top^(0+256)
 21405  17C8  0021               	movlb	1	; select bank1
 21406  17C9  085A               	movf	(_moveMask+1)^(0+128),w
 21407  17CA  0566               	andwf	(_moveVector_ups+1)^(0+128),w
 21408  17CB  0022               	movlb	2	; select bank2
 21409  17CC  00DF               	movwf	(_second_top+1)^(0+256)
 21410  17CD  0021               	movlb	1	; select bank1
 21411  17CE  085B               	movf	(_moveMask+2)^(0+128),w
 21412  17CF  0567               	andwf	(_moveVector_ups+2)^(0+128),w
 21413  17D0  0022               	movlb	2	; select bank2
 21414  17D1  00E0               	movwf	(_second_top+2)^(0+256)
 21415  17D2  0021               	movlb	1	; select bank1
 21416  17D3  085C               	movf	(_moveMask+3)^(0+128),w
 21417  17D4  0568               	andwf	(_moveVector_ups+3)^(0+128),w
 21418  17D5  0022               	movlb	2	; select bank2
 21419  17D6  00E1               	movwf	(_second_top+3)^(0+256)
 21420                           
 21421                           ;main.c: 261: second_bottom = (~moveVector_ups) & moveMask;
 21422  17D7  0021               	movlb	1	; select bank1
 21423  17D8  0965               	comf	_moveVector_ups^(0+128),w
 21424  17D9  0020               	movlb	0	; select bank0
 21425  17DA  00B1               	movwf	??_calcHeaterPins
 21426  17DB  0021               	movlb	1	; select bank1
 21427  17DC  0966               	comf	(_moveVector_ups+1)^(0+128),w
 21428  17DD  0020               	movlb	0	; select bank0
 21429  17DE  00B2               	movwf	??_calcHeaterPins+1
 21430  17DF  0021               	movlb	1	; select bank1
 21431  17E0  0967               	comf	(_moveVector_ups+2)^(0+128),w
 21432  17E1  0020               	movlb	0	; select bank0
 21433  17E2  00B3               	movwf	??_calcHeaterPins+2
 21434  17E3  0021               	movlb	1	; select bank1
 21435  17E4  0968               	comf	(_moveVector_ups+3)^(0+128),w
 21436  17E5  0020               	movlb	0	; select bank0
 21437  17E6  00B4               	movwf	??_calcHeaterPins+3
 21438  17E7  0021               	movlb	1	; select bank1
 21439  17E8  0859               	movf	_moveMask^(0+128),w
 21440  17E9  0020               	movlb	0	; select bank0
 21441  17EA  0531               	andwf	??_calcHeaterPins,w
 21442  17EB  0022               	movlb	2	; select bank2
 21443  17EC  00D2               	movwf	_second_bottom^(0+256)
 21444  17ED  0021               	movlb	1	; select bank1
 21445  17EE  085A               	movf	(_moveMask+1)^(0+128),w
 21446  17EF  0020               	movlb	0	; select bank0
 21447  17F0  0532               	andwf	??_calcHeaterPins+1,w
 21448  17F1  0022               	movlb	2	; select bank2
 21449  17F2  00D3               	movwf	(_second_bottom+1)^(0+256)
 21450  17F3  0021               	movlb	1	; select bank1
 21451  17F4  085B               	movf	(_moveMask+2)^(0+128),w
 21452  17F5  0020               	movlb	0	; select bank0
 21453  17F6  0533               	andwf	??_calcHeaterPins+2,w
 21454  17F7  0022               	movlb	2	; select bank2
 21455  17F8  00D4               	movwf	(_second_bottom+2)^(0+256)
 21456  17F9  0021               	movlb	1	; select bank1
 21457  17FA  085C               	movf	(_moveMask+3)^(0+128),w
 21458  17FB  0020               	movlb	0	; select bank0
 21459  17FC  0534               	andwf	??_calcHeaterPins+3,w
 21460  17FD  0022               	movlb	2	; select bank2
 21461  17FE  00D5               	movwf	(_second_bottom+3)^(0+256)
 21462  17FF  0008               	return
 21463  1800                     __end_of_calcHeaterPins:	
 21464                           
 21465                           	psect	text101
 21466  228A                     __ptext101:	
 21467 ;; *************** function _TMR2_StartTimer *****************
 21468 ;; Defined at:
 21469 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 21470 ;; Parameters:    Size  Location     Type
 21471 ;;		None
 21472 ;; Auto vars:     Size  Location     Type
 21473 ;;		None
 21474 ;; Return value:  Size  Location     Type
 21475 ;;                  1    wreg      void 
 21476 ;; Registers used:
 21477 ;;		None
 21478 ;; Tracked objects:
 21479 ;;		On entry : 0/0
 21480 ;;		On exit  : 0/0
 21481 ;;		Unchanged: 0/0
 21482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21487 ;;Total ram usage:        0 bytes
 21488 ;; Hardware stack levels used:    1
 21489 ;; Hardware stack levels required when called:    6
 21490 ;; This function calls:
 21491 ;;		Nothing
 21492 ;; This function is called by:
 21493 ;;		_doMove
 21494 ;; This function uses a non-reentrant model
 21495 ;;
 21496                           
 21497                           
 21498                           ;psect for function _TMR2_StartTimer
 21499  228A                     _TMR2_StartTimer:	
 21500                           
 21501                           ;tmr2.c: 88: T2CONbits.TMR2ON = 1;
 21502                           
 21503                           ;incstack = 0
 21504                           ; Regs used in _TMR2_StartTimer: []
 21505  228A  0020               	movlb	0	; select bank0
 21506  228B  151F               	bsf	31,2	;volatile
 21507  228C  0008               	return
 21508  228D                     __end_of_TMR2_StartTimer:	
 21509                           
 21510                           	psect	text102
 21511  2287                     __ptext102:	
 21512 ;; *************** function _TMR0_StartTimer *****************
 21513 ;; Defined at:
 21514 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 21515 ;; Parameters:    Size  Location     Type
 21516 ;;		None
 21517 ;; Auto vars:     Size  Location     Type
 21518 ;;		None
 21519 ;; Return value:  Size  Location     Type
 21520 ;;                  1    wreg      void 
 21521 ;; Registers used:
 21522 ;;		None
 21523 ;; Tracked objects:
 21524 ;;		On entry : 0/0
 21525 ;;		On exit  : 0/0
 21526 ;;		Unchanged: 0/0
 21527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21532 ;;Total ram usage:        0 bytes
 21533 ;; Hardware stack levels used:    1
 21534 ;; Hardware stack levels required when called:    6
 21535 ;; This function calls:
 21536 ;;		Nothing
 21537 ;; This function is called by:
 21538 ;;		_doMove
 21539 ;; This function uses a non-reentrant model
 21540 ;;
 21541                           
 21542                           
 21543                           ;psect for function _TMR0_StartTimer
 21544  2287                     _TMR0_StartTimer:	
 21545                           
 21546                           ;tmr0.c: 88: T0CON0bits.T0EN = 1;
 21547                           
 21548                           ;incstack = 0
 21549                           ; Regs used in _TMR0_StartTimer: []
 21550  2287  0020               	movlb	0	; select bank0
 21551  2288  1797               	bsf	23,7	;volatile
 21552  2289  0008               	return
 21553  228A                     __end_of_TMR0_StartTimer:	
 21554                           
 21555                           	psect	text103
 21556  2696                     __ptext103:	
 21557 ;; *************** function _LEDsOn *****************
 21558 ;; Defined at:
 21559 ;;		line 6 in file "LEDcomm.c"
 21560 ;; Parameters:    Size  Location     Type
 21561 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 21562 ;;  topOrBottom     2   40[BANK0 ] int 
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;		None
 21565 ;; Return value:  Size  Location     Type
 21566 ;;                  1    wreg      void 
 21567 ;; Registers used:
 21568 ;;		wreg, status,2, status,0, pclath, cstack
 21569 ;; Tracked objects:
 21570 ;;		On entry : 0/0
 21571 ;;		On exit  : 0/0
 21572 ;;		Unchanged: 0/0
 21573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21574 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21576 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21577 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21578 ;;Total ram usage:       10 bytes
 21579 ;; Hardware stack levels used:    1
 21580 ;; Hardware stack levels required when called:    8
 21581 ;; This function calls:
 21582 ;;		_send_2length_2bytes_IK
 21583 ;; This function is called by:
 21584 ;;		_LED_test_openshort
 21585 ;;		_doMove
 21586 ;;		_setHeaterToggle
 21587 ;;		_demoSequence
 21588 ;; This function uses a non-reentrant model
 21589 ;;
 21590                           
 21591                           
 21592                           ;psect for function _LEDsOn
 21593  2696                     _LEDsOn:	
 21594                           
 21595                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 21596                           
 21597                           ;incstack = 0
 21598                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 21599  2696  0020               	movlb	0	; select bank0
 21600  2697  0844               	movf	LEDsOn@LEDpins,w
 21601  2698  00CA               	movwf	??_LEDsOn
 21602  2699  0845               	movf	LEDsOn@LEDpins+1,w
 21603  269A  00CB               	movwf	??_LEDsOn+1
 21604  269B  0846               	movf	LEDsOn@LEDpins+2,w
 21605  269C  00CC               	movwf	??_LEDsOn+2
 21606  269D  0847               	movf	LEDsOn@LEDpins+3,w
 21607  269E  00CD               	movwf	??_LEDsOn+3
 21608  269F  3010               	movlw	16
 21609  26A0                     u7075:	
 21610  26A0  36CD               	lsrf	??_LEDsOn+3,f
 21611  26A1  0CCC               	rrf	??_LEDsOn+2,f
 21612  26A2  0CCB               	rrf	??_LEDsOn+1,f
 21613  26A3  0CCA               	rrf	??_LEDsOn,f
 21614  26A4  0B89               	decfsz	9,f
 21615  26A5  2EA0               	goto	u7075
 21616  26A6  084B               	movf	??_LEDsOn+1,w
 21617  26A7  00BD               	movwf	send_2length_2bytes_IK@data1+1
 21618  26A8  084A               	movf	??_LEDsOn,w
 21619  26A9  00BC               	movwf	send_2length_2bytes_IK@data1
 21620  26AA  0845               	movf	LEDsOn@LEDpins+1,w
 21621  26AB  00BF               	movwf	send_2length_2bytes_IK@data2+1
 21622  26AC  0844               	movf	LEDsOn@LEDpins,w
 21623  26AD  00BE               	movwf	send_2length_2bytes_IK@data2
 21624  26AE  01C0               	clrf	send_2length_2bytes_IK@latch_start
 21625  26AF  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 21626  26B0  0849               	movf	LEDsOn@topOrBottom+1,w
 21627  26B1  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 21628  26B2  0848               	movf	LEDsOn@topOrBottom,w
 21629  26B3  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 21630  26B4  31A4  24FF         	fcall	_send_2length_2bytes_IK
 21631  26B6  0008               	return
 21632  26B7                     __end_of_LEDsOn:	
 21633                           
 21634                           	psect	text104
 21635  24FF                     __ptext104:	
 21636 ;; *************** function _send_2length_2bytes_IK *****************
 21637 ;; Defined at:
 21638 ;;		line 70 in file "LEDcomm.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;  data1           2   28[BANK0 ] unsigned int 
 21641 ;;  data2           2   30[BANK0 ] unsigned int 
 21642 ;;  latch_start     1   32[BANK0 ] unsigned char 
 21643 ;;  topOrBottom     2   33[BANK0 ] int 
 21644 ;; Auto vars:     Size  Location     Type
 21645 ;;		None
 21646 ;; Return value:  Size  Location     Type
 21647 ;;                  1    wreg      void 
 21648 ;; Registers used:
 21649 ;;		wreg, status,2, status,0, pclath, cstack
 21650 ;; Tracked objects:
 21651 ;;		On entry : 0/0
 21652 ;;		On exit  : 0/0
 21653 ;;		Unchanged: 0/0
 21654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21655 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21658 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21659 ;;Total ram usage:        8 bytes
 21660 ;; Hardware stack levels used:    1
 21661 ;; Hardware stack levels required when called:    7
 21662 ;; This function calls:
 21663 ;;		_send_2bytes_latchless_IK
 21664 ;;		_send_last_2bytes_IK
 21665 ;; This function is called by:
 21666 ;;		_LEDsOn
 21667 ;;		_LEDsPwr
 21668 ;;		_LED_setBrightnessRange
 21669 ;;		_LED_test_openshort
 21670 ;;		_LED_readConfig
 21671 ;; This function uses a non-reentrant model
 21672 ;;
 21673                           
 21674                           
 21675                           ;psect for function _send_2length_2bytes_IK
 21676  24FF                     _send_2length_2bytes_IK:	
 21677                           
 21678                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 21679                           
 21680                           ;incstack = 0
 21681                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 21682  24FF  0020               	movlb	0	; select bank0
 21683  2500  083D               	movf	send_2length_2bytes_IK@data1+1,w
 21684  2501  00B2               	movwf	send_2bytes_latchless_IK@data+1
 21685  2502  083C               	movf	send_2length_2bytes_IK@data1,w
 21686  2503  00B1               	movwf	send_2bytes_latchless_IK@data
 21687  2504  3198  2091  31A4   	fcall	_send_2bytes_latchless_IK
 21688                           
 21689                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 21690  2507  0020               	movlb	0	; select bank0
 21691  2508  083F               	movf	send_2length_2bytes_IK@data2+1,w
 21692  2509  00B2               	movwf	send_last_2bytes_IK@data+1
 21693  250A  083E               	movf	send_2length_2bytes_IK@data2,w
 21694  250B  00B1               	movwf	send_last_2bytes_IK@data
 21695  250C  0840               	movf	send_2length_2bytes_IK@latch_start,w
 21696  250D  00C3               	movwf	??_send_2length_2bytes_IK
 21697  250E  0843               	movf	??_send_2length_2bytes_IK,w
 21698  250F  00B3               	movwf	send_last_2bytes_IK@latch_start
 21699  2510  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 21700  2511  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 21701  2512  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 21702  2513  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 21703  2514  319D  25DB         	fcall	_send_last_2bytes_IK
 21704  2516  0008               	return
 21705  2517                     __end_of_send_2length_2bytes_IK:	
 21706                           
 21707                           	psect	text105
 21708  1DDB                     __ptext105:	
 21709 ;; *************** function _send_last_2bytes_IK *****************
 21710 ;; Defined at:
 21711 ;;		line 19 in file "LEDcomm.c"
 21712 ;; Parameters:    Size  Location     Type
 21713 ;;  data            2   17[BANK0 ] unsigned int 
 21714 ;;  latch_start     1   19[BANK0 ] unsigned char 
 21715 ;;  topOrBottom     2   20[BANK0 ] int 
 21716 ;; Auto vars:     Size  Location     Type
 21717 ;;  j               2   26[BANK0 ] int 
 21718 ;; Return value:  Size  Location     Type
 21719 ;;                  1    wreg      void 
 21720 ;; Registers used:
 21721 ;;		wreg, status,2, status,0
 21722 ;; Tracked objects:
 21723 ;;		On entry : 0/0
 21724 ;;		On exit  : 0/0
 21725 ;;		Unchanged: 0/0
 21726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21727 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21729 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21730 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21731 ;;Total ram usage:       11 bytes
 21732 ;; Hardware stack levels used:    1
 21733 ;; Hardware stack levels required when called:    6
 21734 ;; This function calls:
 21735 ;;		Nothing
 21736 ;; This function is called by:
 21737 ;;		_send_2length_2bytes_IK
 21738 ;; This function uses a non-reentrant model
 21739 ;;
 21740                           
 21741                           
 21742                           ;psect for function _send_last_2bytes_IK
 21743  1DDB                     _send_last_2bytes_IK:	
 21744                           
 21745                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 21746                           
 21747                           ;incstack = 0
 21748                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 21749  1DDB  0020               	movlb	0	; select bank0
 21750  1DDC  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 21751  1DDD  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 21752  1DDE  1D03               	btfss	3,2
 21753  1DDF  2DE3               	goto	l210
 21754  1DE0  0022               	movlb	2	; select bank2
 21755  1DE1  120D               	bcf	13,4	;volatile
 21756  1DE2  2DE5               	goto	l7260
 21757  1DE3                     l210:	
 21758  1DE3  0022               	movlb	2	; select bank2
 21759  1DE4  100E               	bcf	14,0	;volatile
 21760  1DE5                     l7260:	
 21761                           
 21762                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 21763  1DE5  300F               	movlw	15
 21764  1DE6  0020               	movlb	0	; select bank0
 21765  1DE7  00BA               	movwf	send_last_2bytes_IK@j
 21766  1DE8  3000               	movlw	0
 21767  1DE9  00BB               	movwf	send_last_2bytes_IK@j+1
 21768  1DEA  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 21769  1DEB  2E26               	goto	l231
 21770  1DEC                     l214:	
 21771                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 21772                           
 21773  1DEC  0022               	movlb	2	; select bank2
 21774  1DED  110C               	bcf	12,2	;volatile
 21775                           
 21776                           ;LEDcomm.c: 28: if (data & 1 << j){
 21777  1DEE  3001               	movlw	1
 21778  1DEF  0020               	movlb	0	; select bank0
 21779  1DF0  00B6               	movwf	??_send_last_2bytes_IK
 21780  1DF1  3000               	movlw	0
 21781  1DF2  00B7               	movwf	??_send_last_2bytes_IK+1
 21782  1DF3  0A3A               	incf	send_last_2bytes_IK@j,w
 21783  1DF4  2DF7               	goto	u6774
 21784  1DF5                     u6775:	
 21785  1DF5  35B6               	lslf	??_send_last_2bytes_IK,f
 21786  1DF6  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 21787  1DF7                     u6774:	
 21788  1DF7  0B89               	decfsz	9,f
 21789  1DF8  2DF5               	goto	u6775
 21790  1DF9  0831               	movf	send_last_2bytes_IK@data,w
 21791  1DFA  0536               	andwf	??_send_last_2bytes_IK,w
 21792  1DFB  00B8               	movwf	??_send_last_2bytes_IK+2
 21793  1DFC  0832               	movf	send_last_2bytes_IK@data+1,w
 21794  1DFD  0537               	andwf	??_send_last_2bytes_IK+1,w
 21795  1DFE  00B9               	movwf	??_send_last_2bytes_IK+3
 21796  1DFF  0838               	movf	??_send_last_2bytes_IK+2,w
 21797  1E00  0439               	iorwf	??_send_last_2bytes_IK+3,w
 21798  1E01  1903               	btfsc	3,2
 21799  1E02  2E06               	goto	l220
 21800                           
 21801                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 21802  1E03  0022               	movlb	2	; select bank2
 21803  1E04  150E               	bsf	14,2	;volatile
 21804                           
 21805                           ;LEDcomm.c: 30: }
 21806  1E05  2E08               	goto	l7268
 21807  1E06                     l220:	
 21808                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 21809                           
 21810  1E06  0022               	movlb	2	; select bank2
 21811  1E07  110E               	bcf	14,2	;volatile
 21812  1E08                     l7268:	
 21813                           
 21814                           ;LEDcomm.c: 33: if( j == latch_start) {
 21815  1E08  0020               	movlb	0	; select bank0
 21816  1E09  0833               	movf	send_last_2bytes_IK@latch_start,w
 21817  1E0A  00B6               	movwf	??_send_last_2bytes_IK
 21818  1E0B  01B7               	clrf	??_send_last_2bytes_IK+1
 21819  1E0C  083B               	movf	send_last_2bytes_IK@j+1,w
 21820  1E0D  0637               	xorwf	??_send_last_2bytes_IK+1,w
 21821  1E0E  1D03               	skipz
 21822  1E0F  2E12               	goto	u6795
 21823  1E10  083A               	movf	send_last_2bytes_IK@j,w
 21824  1E11  0636               	xorwf	??_send_last_2bytes_IK,w
 21825  1E12                     u6795:	
 21826  1E12  1D03               	skipz
 21827  1E13  2E1D               	goto	l229
 21828                           
 21829                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 21830  1E14  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 21831  1E15  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 21832  1E16  1D03               	btfss	3,2
 21833  1E17  2E1B               	goto	l227
 21834  1E18  0022               	movlb	2	; select bank2
 21835  1E19  160D               	bsf	13,4	;volatile
 21836  1E1A  2E1D               	goto	l229
 21837  1E1B                     l227:	
 21838  1E1B  0022               	movlb	2	; select bank2
 21839  1E1C  140E               	bsf	14,0	;volatile
 21840  1E1D                     l229:	
 21841                           ;LEDcomm.c: 37: }
 21842                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 21843                           
 21844  1E1D  0022               	movlb	2	; select bank2
 21845  1E1E  150C               	bsf	12,2	;volatile
 21846  1E1F  30FF               	movlw	255
 21847  1E20  0020               	movlb	0	; select bank0
 21848  1E21  07BA               	addwf	send_last_2bytes_IK@j,f
 21849  1E22  30FF               	movlw	255
 21850  1E23  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 21851  1E24  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 21852  1E25  2DEC               	goto	l214
 21853  1E26                     l231:	
 21854                           ;LEDcomm.c: 41: }
 21855                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 21856                           
 21857  1E26  0022               	movlb	2	; select bank2
 21858  1E27  110C               	bcf	12,2	;volatile
 21859                           
 21860                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 21861  1E28  0020               	movlb	0	; select bank0
 21862  1E29  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 21863  1E2A  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 21864  1E2B  1D03               	btfss	3,2
 21865  1E2C  2E30               	goto	l237
 21866  1E2D  0022               	movlb	2	; select bank2
 21867  1E2E  120D               	bcf	13,4	;volatile
 21868  1E2F  0008               	return
 21869  1E30                     l237:	
 21870  1E30  0022               	movlb	2	; select bank2
 21871  1E31  100E               	bcf	14,0	;volatile
 21872  1E32  0008               	return
 21873  1E33                     __end_of_send_last_2bytes_IK:	
 21874                           
 21875                           	psect	text106
 21876  1891                     __ptext106:	
 21877 ;; *************** function _send_2bytes_latchless_IK *****************
 21878 ;; Defined at:
 21879 ;;		line 49 in file "LEDcomm.c"
 21880 ;; Parameters:    Size  Location     Type
 21881 ;;  data            2   17[BANK0 ] unsigned int 
 21882 ;; Auto vars:     Size  Location     Type
 21883 ;;  j               2   23[BANK0 ] int 
 21884 ;; Return value:  Size  Location     Type
 21885 ;;                  1    wreg      void 
 21886 ;; Registers used:
 21887 ;;		wreg, status,2, status,0
 21888 ;; Tracked objects:
 21889 ;;		On entry : 0/0
 21890 ;;		On exit  : 0/0
 21891 ;;		Unchanged: 0/0
 21892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21896 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21897 ;;Total ram usage:        8 bytes
 21898 ;; Hardware stack levels used:    1
 21899 ;; Hardware stack levels required when called:    6
 21900 ;; This function calls:
 21901 ;;		Nothing
 21902 ;; This function is called by:
 21903 ;;		_send_2length_2bytes_IK
 21904 ;; This function uses a non-reentrant model
 21905 ;;
 21906                           
 21907                           
 21908                           ;psect for function _send_2bytes_latchless_IK
 21909  1891                     _send_2bytes_latchless_IK:	
 21910                           
 21911                           ;incstack = 0
 21912                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 21913                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 21914  1891  0022               	movlb	2	; select bank2
 21915  1892  120D               	bcf	13,4	;volatile
 21916                           
 21917                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 21918  1893  300F               	movlw	15
 21919  1894  0020               	movlb	0	; select bank0
 21920  1895  00B7               	movwf	send_2bytes_latchless_IK@j
 21921  1896  3000               	movlw	0
 21922  1897  00B8               	movwf	send_2bytes_latchless_IK@j+1
 21923  1898  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 21924  1899  28BE               	goto	l256
 21925  189A                     l246:	
 21926                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 21927                           
 21928  189A  0022               	movlb	2	; select bank2
 21929  189B  110C               	bcf	12,2	;volatile
 21930                           
 21931                           ;LEDcomm.c: 56: if (data & 1 << j){
 21932  189C  3001               	movlw	1
 21933  189D  0020               	movlb	0	; select bank0
 21934  189E  00B3               	movwf	??_send_2bytes_latchless_IK
 21935  189F  3000               	movlw	0
 21936  18A0  00B4               	movwf	??_send_2bytes_latchless_IK+1
 21937  18A1  0A37               	incf	send_2bytes_latchless_IK@j,w
 21938  18A2  28A5               	goto	u6844
 21939  18A3                     u6845:	
 21940  18A3  35B3               	lslf	??_send_2bytes_latchless_IK,f
 21941  18A4  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 21942  18A5                     u6844:	
 21943  18A5  0B89               	decfsz	9,f
 21944  18A6  28A3               	goto	u6845
 21945  18A7  0831               	movf	send_2bytes_latchless_IK@data,w
 21946  18A8  0533               	andwf	??_send_2bytes_latchless_IK,w
 21947  18A9  00B5               	movwf	??_send_2bytes_latchless_IK+2
 21948  18AA  0832               	movf	send_2bytes_latchless_IK@data+1,w
 21949  18AB  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 21950  18AC  00B6               	movwf	??_send_2bytes_latchless_IK+3
 21951  18AD  0835               	movf	??_send_2bytes_latchless_IK+2,w
 21952  18AE  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 21953  18AF  1903               	btfsc	3,2
 21954  18B0  28B4               	goto	l252
 21955                           
 21956                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 21957  18B1  0022               	movlb	2	; select bank2
 21958  18B2  150E               	bsf	14,2	;volatile
 21959                           
 21960                           ;LEDcomm.c: 58: }
 21961  18B3  28B6               	goto	l254
 21962  18B4                     l252:	
 21963                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 21964                           
 21965  18B4  0022               	movlb	2	; select bank2
 21966  18B5  110E               	bcf	14,2	;volatile
 21967  18B6                     l254:	
 21968                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 21969                           
 21970  18B6  150C               	bsf	12,2	;volatile
 21971  18B7  30FF               	movlw	255
 21972  18B8  0020               	movlb	0	; select bank0
 21973  18B9  07B7               	addwf	send_2bytes_latchless_IK@j,f
 21974  18BA  30FF               	movlw	255
 21975  18BB  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 21976  18BC  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 21977  18BD  289A               	goto	l246
 21978  18BE                     l256:	
 21979                           ;LEDcomm.c: 64: }
 21980                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 21981                           
 21982  18BE  0022               	movlb	2	; select bank2
 21983  18BF  110C               	bcf	12,2	;volatile
 21984  18C0  0008               	return
 21985  18C1                     __end_of_send_2bytes_latchless_IK:	
 21986                           
 21987                           	psect	text107
 21988  24BD                     __ptext107:	
 21989 ;; *************** function _SYSTEM_Initialize *****************
 21990 ;; Defined at:
 21991 ;;		line 77 in file "mcc_generated_files/mcc.c"
 21992 ;; Parameters:    Size  Location     Type
 21993 ;;		None
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;		None
 21996 ;; Return value:  Size  Location     Type
 21997 ;;                  1    wreg      void 
 21998 ;; Registers used:
 21999 ;;		wreg, status,2, status,0, pclath, cstack
 22000 ;; Tracked objects:
 22001 ;;		On entry : 0/0
 22002 ;;		On exit  : 0/0
 22003 ;;		Unchanged: 0/0
 22004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22009 ;;Total ram usage:        0 bytes
 22010 ;; Hardware stack levels used:    1
 22011 ;; Hardware stack levels required when called:    8
 22012 ;; This function calls:
 22013 ;;		_EUSART_Initialize
 22014 ;;		_OSCILLATOR_Initialize
 22015 ;;		_PIN_MANAGER_Initialize
 22016 ;;		_PMD_Initialize
 22017 ;;		_TMR0_Initialize
 22018 ;;		_TMR2_Initialize
 22019 ;;		_WDT_Initialize
 22020 ;; This function is called by:
 22021 ;;		_main
 22022 ;; This function uses a non-reentrant model
 22023 ;;
 22024                           
 22025                           
 22026                           ;psect for function _SYSTEM_Initialize
 22027  24BD                     _SYSTEM_Initialize:	
 22028                           
 22029                           ;mcc.c: 80: PMD_Initialize();
 22030                           
 22031                           ;incstack = 0
 22032                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22033  24BD  31A3  232E  31A4   	fcall	_PMD_Initialize
 22034                           
 22035                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 22036  24C0  3199  2121  31A4   	fcall	_PIN_MANAGER_Initialize
 22037                           
 22038                           ;mcc.c: 82: OSCILLATOR_Initialize();
 22039  24C3  31A3  23AC  31A4   	fcall	_OSCILLATOR_Initialize
 22040                           
 22041                           ;mcc.c: 83: WDT_Initialize();
 22042  24C6  31A2  22C6  31A4   	fcall	_WDT_Initialize
 22043                           
 22044                           ;mcc.c: 84: TMR2_Initialize();
 22045  24C9  31A4  2484  31A4   	fcall	_TMR2_Initialize
 22046                           
 22047                           ;mcc.c: 85: TMR0_Initialize();
 22048  24CC  31A4  24A9  31A4   	fcall	_TMR0_Initialize
 22049                           
 22050                           ;mcc.c: 86: EUSART_Initialize();
 22051  24CF  31A5  2517         	fcall	_EUSART_Initialize
 22052  24D1  0008               	return
 22053  24D2                     __end_of_SYSTEM_Initialize:	
 22054                           
 22055                           	psect	text108
 22056  22C6                     __ptext108:	
 22057 ;; *************** function _WDT_Initialize *****************
 22058 ;; Defined at:
 22059 ;;		line 103 in file "mcc_generated_files/mcc.c"
 22060 ;; Parameters:    Size  Location     Type
 22061 ;;		None
 22062 ;; Auto vars:     Size  Location     Type
 22063 ;;		None
 22064 ;; Return value:  Size  Location     Type
 22065 ;;                  1    wreg      void 
 22066 ;; Registers used:
 22067 ;;		wreg
 22068 ;; Tracked objects:
 22069 ;;		On entry : 0/0
 22070 ;;		On exit  : 0/0
 22071 ;;		Unchanged: 0/0
 22072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22077 ;;Total ram usage:        0 bytes
 22078 ;; Hardware stack levels used:    1
 22079 ;; Hardware stack levels required when called:    6
 22080 ;; This function calls:
 22081 ;;		Nothing
 22082 ;; This function is called by:
 22083 ;;		_SYSTEM_Initialize
 22084 ;; This function uses a non-reentrant model
 22085 ;;
 22086                           
 22087                           
 22088                           ;psect for function _WDT_Initialize
 22089  22C6                     _WDT_Initialize:	
 22090                           
 22091                           ;mcc.c: 106: WDTCON = 0x16;
 22092                           
 22093                           ;incstack = 0
 22094                           ; Regs used in _WDT_Initialize: [wreg]
 22095  22C6  3016               	movlw	22
 22096  22C7  0021               	movlb	1	; select bank1
 22097  22C8  0097               	movwf	23	;volatile
 22098  22C9  0008               	return
 22099  22CA                     __end_of_WDT_Initialize:	
 22100                           
 22101                           	psect	text109
 22102  2484                     __ptext109:	
 22103 ;; *************** function _TMR2_Initialize *****************
 22104 ;; Defined at:
 22105 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22106 ;; Parameters:    Size  Location     Type
 22107 ;;		None
 22108 ;; Auto vars:     Size  Location     Type
 22109 ;;		None
 22110 ;; Return value:  Size  Location     Type
 22111 ;;                  1    wreg      void 
 22112 ;; Registers used:
 22113 ;;		wreg, status,2, status,0, pclath, cstack
 22114 ;; Tracked objects:
 22115 ;;		On entry : 0/0
 22116 ;;		On exit  : 0/0
 22117 ;;		Unchanged: 0/0
 22118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22123 ;;Total ram usage:        0 bytes
 22124 ;; Hardware stack levels used:    1
 22125 ;; Hardware stack levels required when called:    7
 22126 ;; This function calls:
 22127 ;;		_TMR2_SetInterruptHandler
 22128 ;; This function is called by:
 22129 ;;		_SYSTEM_Initialize
 22130 ;; This function uses a non-reentrant model
 22131 ;;
 22132                           
 22133                           
 22134                           ;psect for function _TMR2_Initialize
 22135  2484                     _TMR2_Initialize:	
 22136                           
 22137                           ;tmr2.c: 67: PR2 = 0x0F;
 22138                           
 22139                           ;incstack = 0
 22140                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22141  2484  300F               	movlw	15
 22142  2485  0020               	movlb	0	; select bank0
 22143  2486  009E               	movwf	30	;volatile
 22144                           
 22145                           ;tmr2.c: 70: TMR2 = 0x00;
 22146  2487  019D               	clrf	29	;volatile
 22147                           
 22148                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 22149  2488  1091               	bcf	17,1	;volatile
 22150                           
 22151                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
 22152  2489  0021               	movlb	1	; select bank1
 22153  248A  1491               	bsf	17,1	;volatile
 22154                           
 22155                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 22156  248B  3076               	movlw	low _TMR2_DefaultInterruptHandler
 22157  248C  0020               	movlb	0	; select bank0
 22158  248D  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 22159  248E  3023               	movlw	high _TMR2_DefaultInterruptHandler
 22160  248F  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 22161  2490  31A3  2388         	fcall	_TMR2_SetInterruptHandler
 22162                           
 22163                           ;tmr2.c: 82: T2CON = 0x4E;
 22164  2492  304E               	movlw	78
 22165  2493  0020               	movlb	0	; select bank0
 22166  2494  009F               	movwf	31	;volatile
 22167  2495  0008               	return
 22168  2496                     __end_of_TMR2_Initialize:	
 22169                           
 22170                           	psect	text110
 22171  2388                     __ptext110:	
 22172 ;; *************** function _TMR2_SetInterruptHandler *****************
 22173 ;; Defined at:
 22174 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 22175 ;; Parameters:    Size  Location     Type
 22176 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22177 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 22178 ;; Auto vars:     Size  Location     Type
 22179 ;;		None
 22180 ;; Return value:  Size  Location     Type
 22181 ;;                  1    wreg      void 
 22182 ;; Registers used:
 22183 ;;		wreg
 22184 ;; Tracked objects:
 22185 ;;		On entry : 0/0
 22186 ;;		On exit  : 0/0
 22187 ;;		Unchanged: 0/0
 22188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22192 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22193 ;;Total ram usage:        2 bytes
 22194 ;; Hardware stack levels used:    1
 22195 ;; Hardware stack levels required when called:    6
 22196 ;; This function calls:
 22197 ;;		Nothing
 22198 ;; This function is called by:
 22199 ;;		_TMR2_Initialize
 22200 ;; This function uses a non-reentrant model
 22201 ;;
 22202                           
 22203                           
 22204                           ;psect for function _TMR2_SetInterruptHandler
 22205  2388                     _TMR2_SetInterruptHandler:	
 22206                           
 22207                           ;tmr2.c: 131: TMR2_InterruptHandler = InterruptHandler;
 22208                           
 22209                           ;incstack = 0
 22210                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 22211  2388  0020               	movlb	0	; select bank0
 22212  2389  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 22213  238A  0023               	movlb	3	; select bank3
 22214  238B  00DA               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
 22215  238C  0020               	movlb	0	; select bank0
 22216  238D  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 22217  238E  0023               	movlb	3	; select bank3
 22218  238F  00D9               	movwf	_TMR2_InterruptHandler^(0+384)
 22219  2390  0008               	return
 22220  2391                     __end_of_TMR2_SetInterruptHandler:	
 22221                           
 22222                           	psect	text111
 22223  24A9                     __ptext111:	
 22224 ;; *************** function _TMR0_Initialize *****************
 22225 ;; Defined at:
 22226 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 22227 ;; Parameters:    Size  Location     Type
 22228 ;;		None
 22229 ;; Auto vars:     Size  Location     Type
 22230 ;;		None
 22231 ;; Return value:  Size  Location     Type
 22232 ;;                  1    wreg      void 
 22233 ;; Registers used:
 22234 ;;		wreg, status,2, status,0, pclath, cstack
 22235 ;; Tracked objects:
 22236 ;;		On entry : 0/0
 22237 ;;		On exit  : 0/0
 22238 ;;		Unchanged: 0/0
 22239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22244 ;;Total ram usage:        0 bytes
 22245 ;; Hardware stack levels used:    1
 22246 ;; Hardware stack levels required when called:    7
 22247 ;; This function calls:
 22248 ;;		_TMR0_SetInterruptHandler
 22249 ;; This function is called by:
 22250 ;;		_SYSTEM_Initialize
 22251 ;; This function uses a non-reentrant model
 22252 ;;
 22253                           
 22254                           
 22255                           ;psect for function _TMR0_Initialize
 22256  24A9                     _TMR0_Initialize:	
 22257                           
 22258                           ;tmr0.c: 64: T0CON1 = 0x58;
 22259                           
 22260                           ;incstack = 0
 22261                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22262  24A9  3058               	movlw	88
 22263  24AA  0020               	movlb	0	; select bank0
 22264  24AB  0098               	movwf	24	;volatile
 22265                           
 22266                           ;tmr0.c: 67: TMR0H = 0x61;
 22267  24AC  3061               	movlw	97
 22268  24AD  0096               	movwf	22	;volatile
 22269                           
 22270                           ;tmr0.c: 70: TMR0L = 0x00;
 22271  24AE  0195               	clrf	21	;volatile
 22272                           
 22273                           ;tmr0.c: 73: PIR0bits.TMR0IF = 0;
 22274  24AF  1290               	bcf	16,5	;volatile
 22275                           
 22276                           ;tmr0.c: 76: PIE0bits.TMR0IE = 1;
 22277  24B0  0021               	movlb	1	; select bank1
 22278  24B1  1690               	bsf	16,5	;volatile
 22279                           
 22280                           ;tmr0.c: 79: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 22281  24B2  3001               	movlw	low _TMR0_DefaultInterruptHandler
 22282  24B3  0020               	movlb	0	; select bank0
 22283  24B4  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22284  24B5  3008               	movlw	high _TMR0_DefaultInterruptHandler
 22285  24B6  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22286  24B7  31A3  237F         	fcall	_TMR0_SetInterruptHandler
 22287                           
 22288                           ;tmr0.c: 82: T0CON0 = 0x89;
 22289  24B9  3089               	movlw	137
 22290  24BA  0020               	movlb	0	; select bank0
 22291  24BB  0097               	movwf	23	;volatile
 22292  24BC  0008               	return
 22293  24BD                     __end_of_TMR0_Initialize:	
 22294                           
 22295                           	psect	text112
 22296  237F                     __ptext112:	
 22297 ;; *************** function _TMR0_SetInterruptHandler *****************
 22298 ;; Defined at:
 22299 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 22300 ;; Parameters:    Size  Location     Type
 22301 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22302 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;		None
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  1    wreg      void 
 22307 ;; Registers used:
 22308 ;;		wreg
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/0
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22317 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22318 ;;Total ram usage:        2 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; Hardware stack levels required when called:    6
 22321 ;; This function calls:
 22322 ;;		Nothing
 22323 ;; This function is called by:
 22324 ;;		_TMR0_Initialize
 22325 ;; This function uses a non-reentrant model
 22326 ;;
 22327                           
 22328                           
 22329                           ;psect for function _TMR0_SetInterruptHandler
 22330  237F                     _TMR0_SetInterruptHandler:	
 22331                           
 22332                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
 22333                           
 22334                           ;incstack = 0
 22335                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22336  237F  0020               	movlb	0	; select bank0
 22337  2380  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22338  2381  0022               	movlb	2	; select bank2
 22339  2382  00ED               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 22340  2383  0020               	movlb	0	; select bank0
 22341  2384  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22342  2385  0022               	movlb	2	; select bank2
 22343  2386  00EC               	movwf	_TMR0_InterruptHandler^(0+256)
 22344  2387  0008               	return
 22345  2388                     __end_of_TMR0_SetInterruptHandler:	
 22346                           
 22347                           	psect	text113
 22348  232E                     __ptext113:	
 22349 ;; *************** function _PMD_Initialize *****************
 22350 ;; Defined at:
 22351 ;;		line 109 in file "mcc_generated_files/mcc.c"
 22352 ;; Parameters:    Size  Location     Type
 22353 ;;		None
 22354 ;; Auto vars:     Size  Location     Type
 22355 ;;		None
 22356 ;; Return value:  Size  Location     Type
 22357 ;;                  1    wreg      void 
 22358 ;; Registers used:
 22359 ;;		status,2
 22360 ;; Tracked objects:
 22361 ;;		On entry : 0/0
 22362 ;;		On exit  : 0/0
 22363 ;;		Unchanged: 0/0
 22364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22369 ;;Total ram usage:        0 bytes
 22370 ;; Hardware stack levels used:    1
 22371 ;; Hardware stack levels required when called:    6
 22372 ;; This function calls:
 22373 ;;		Nothing
 22374 ;; This function is called by:
 22375 ;;		_SYSTEM_Initialize
 22376 ;; This function uses a non-reentrant model
 22377 ;;
 22378                           
 22379                           
 22380                           ;psect for function _PMD_Initialize
 22381  232E                     _PMD_Initialize:	
 22382                           
 22383                           ;mcc.c: 112: PMD0 = 0x00;
 22384                           
 22385                           ;incstack = 0
 22386                           ; Regs used in _PMD_Initialize: [status,2]
 22387  232E  0032               	movlb	18	; select bank18
 22388  232F  0191               	clrf	17	;volatile
 22389                           
 22390                           ;mcc.c: 114: PMD1 = 0x00;
 22391  2330  0192               	clrf	18	;volatile
 22392                           
 22393                           ;mcc.c: 116: PMD2 = 0x00;
 22394  2331  0193               	clrf	19	;volatile
 22395                           
 22396                           ;mcc.c: 118: PMD3 = 0x00;
 22397  2332  0194               	clrf	20	;volatile
 22398                           
 22399                           ;mcc.c: 120: PMD4 = 0x00;
 22400  2333  0195               	clrf	21	;volatile
 22401                           
 22402                           ;mcc.c: 122: PMD5 = 0x00;
 22403  2334  0196               	clrf	22	;volatile
 22404  2335  0008               	return
 22405  2336                     __end_of_PMD_Initialize:	
 22406                           
 22407                           	psect	text114
 22408  1921                     __ptext114:	
 22409 ;; *************** function _PIN_MANAGER_Initialize *****************
 22410 ;; Defined at:
 22411 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 22412 ;; Parameters:    Size  Location     Type
 22413 ;;		None
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;		None
 22416 ;; Return value:  Size  Location     Type
 22417 ;;                  1    wreg      void 
 22418 ;; Registers used:
 22419 ;;		wreg, status,2, status,0
 22420 ;; Tracked objects:
 22421 ;;		On entry : 0/0
 22422 ;;		On exit  : 0/0
 22423 ;;		Unchanged: 0/0
 22424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22429 ;;Total ram usage:        0 bytes
 22430 ;; Hardware stack levels used:    1
 22431 ;; Hardware stack levels required when called:    6
 22432 ;; This function calls:
 22433 ;;		Nothing
 22434 ;; This function is called by:
 22435 ;;		_SYSTEM_Initialize
 22436 ;; This function uses a non-reentrant model
 22437 ;;
 22438                           
 22439                           
 22440                           ;psect for function _PIN_MANAGER_Initialize
 22441  1921                     _PIN_MANAGER_Initialize:	
 22442                           
 22443                           ;pin_manager.c: 57: LATA = 0x00;
 22444                           
 22445                           ;incstack = 0
 22446                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 22447  1921  0022               	movlb	2	; select bank2
 22448  1922  018C               	clrf	12	;volatile
 22449                           
 22450                           ;pin_manager.c: 58: LATB = 0x00;
 22451  1923  018D               	clrf	13	;volatile
 22452                           
 22453                           ;pin_manager.c: 59: LATC = 0x00;
 22454  1924  018E               	clrf	14	;volatile
 22455                           
 22456                           ;pin_manager.c: 64: TRISA = 0x33;
 22457  1925  3033               	movlw	51
 22458  1926  0021               	movlb	1	; select bank1
 22459  1927  008C               	movwf	12	;volatile
 22460                           
 22461                           ;pin_manager.c: 65: TRISB = 0x60;
 22462  1928  3060               	movlw	96
 22463  1929  008D               	movwf	13	;volatile
 22464                           
 22465                           ;pin_manager.c: 66: TRISC = 0xF8;
 22466  192A  30F8               	movlw	248
 22467  192B  008E               	movwf	14	;volatile
 22468                           
 22469                           ;pin_manager.c: 71: ANSELC = 0x00;
 22470  192C  0023               	movlb	3	; select bank3
 22471  192D  018E               	clrf	14	;volatile
 22472                           
 22473                           ;pin_manager.c: 72: ANSELB = 0x00;
 22474  192E  018D               	clrf	13	;volatile
 22475                           
 22476                           ;pin_manager.c: 73: ANSELA = 0x00;
 22477  192F  018C               	clrf	12	;volatile
 22478                           
 22479                           ;pin_manager.c: 78: WPUB = 0x00;
 22480  1930  0024               	movlb	4	; select bank4
 22481  1931  018D               	clrf	13	;volatile
 22482                           
 22483                           ;pin_manager.c: 79: WPUA = 0x00;
 22484  1932  018C               	clrf	12	;volatile
 22485                           
 22486                           ;pin_manager.c: 80: WPUC = 0xC0;
 22487  1933  30C0               	movlw	192
 22488  1934  008E               	movwf	14	;volatile
 22489                           
 22490                           ;pin_manager.c: 85: ODCONA = 0x00;
 22491  1935  0025               	movlb	5	; select bank5
 22492  1936  018C               	clrf	12	;volatile
 22493                           
 22494                           ;pin_manager.c: 86: ODCONB = 0x00;
 22495  1937  018D               	clrf	13	;volatile
 22496                           
 22497                           ;pin_manager.c: 87: ODCONC = 0x00;
 22498  1938  018E               	clrf	14	;volatile
 22499                           
 22500                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 22501  1939  003C               	movlb	28	; select bank28
 22502  193A  0821               	movf	33,w	;volatile
 22503  193B  39E0               	andlw	-32
 22504  193C  380D               	iorlw	13
 22505  193D  00A1               	movwf	33	;volatile
 22506                           
 22507                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 22508  193E  0820               	movf	32,w	;volatile
 22509  193F  39E0               	andlw	-32
 22510  1940  380E               	iorlw	14
 22511  1941  00A0               	movwf	32	;volatile
 22512                           
 22513                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x17;
 22514  1942  0824               	movf	36,w	;volatile
 22515  1943  39E0               	andlw	-32
 22516  1944  3817               	iorlw	23
 22517  1945  00A4               	movwf	36	;volatile
 22518                           
 22519                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x14;
 22520  1946  003D               	movlb	29	; select bank29
 22521  1947  081F               	movf	31,w	;volatile
 22522  1948  39E0               	andlw	-32
 22523  1949  3814               	iorlw	20
 22524  194A  009F               	movwf	31	;volatile
 22525                           
 22526                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 22527  194B  081E               	movf	30,w	;volatile
 22528  194C  39E0               	andlw	-32
 22529  194D  3818               	iorlw	24
 22530  194E  009E               	movwf	30	;volatile
 22531                           
 22532                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 22533  194F  081D               	movf	29,w	;volatile
 22534  1950  39E0               	andlw	-32
 22535  1951  3819               	iorlw	25
 22536  1952  009D               	movwf	29	;volatile
 22537  1953  0008               	return
 22538  1954                     __end_of_PIN_MANAGER_Initialize:	
 22539                           
 22540                           	psect	text115
 22541  23AC                     __ptext115:	
 22542 ;; *************** function _OSCILLATOR_Initialize *****************
 22543 ;; Defined at:
 22544 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22545 ;; Parameters:    Size  Location     Type
 22546 ;;		None
 22547 ;; Auto vars:     Size  Location     Type
 22548 ;;		None
 22549 ;; Return value:  Size  Location     Type
 22550 ;;                  1    wreg      void 
 22551 ;; Registers used:
 22552 ;;		wreg, status,2
 22553 ;; Tracked objects:
 22554 ;;		On entry : 0/0
 22555 ;;		On exit  : 0/0
 22556 ;;		Unchanged: 0/0
 22557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22562 ;;Total ram usage:        0 bytes
 22563 ;; Hardware stack levels used:    1
 22564 ;; Hardware stack levels required when called:    6
 22565 ;; This function calls:
 22566 ;;		Nothing
 22567 ;; This function is called by:
 22568 ;;		_SYSTEM_Initialize
 22569 ;; This function uses a non-reentrant model
 22570 ;;
 22571                           
 22572                           
 22573                           ;psect for function _OSCILLATOR_Initialize
 22574  23AC                     _OSCILLATOR_Initialize:	
 22575                           
 22576                           ;mcc.c: 92: OSCCON1 = 0x62;
 22577                           
 22578                           ;incstack = 0
 22579                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 22580  23AC  3062               	movlw	98
 22581  23AD  0032               	movlb	18	; select bank18
 22582  23AE  0099               	movwf	25	;volatile
 22583                           
 22584                           ;mcc.c: 94: OSCCON3 = 0x00;
 22585  23AF  019B               	clrf	27	;volatile
 22586                           
 22587                           ;mcc.c: 96: OSCEN = 0x00;
 22588  23B0  019D               	clrf	29	;volatile
 22589                           
 22590                           ;mcc.c: 98: OSCFRQ = 0x03;
 22591  23B1  3003               	movlw	3
 22592  23B2  009F               	movwf	31	;volatile
 22593                           
 22594                           ;mcc.c: 100: OSCTUNE = 0x20;
 22595  23B3  3020               	movlw	32
 22596  23B4  009E               	movwf	30	;volatile
 22597  23B5  0008               	return
 22598  23B6                     __end_of_OSCILLATOR_Initialize:	
 22599                           
 22600                           	psect	text116
 22601  2517                     __ptext116:	
 22602 ;; *************** function _EUSART_Initialize *****************
 22603 ;; Defined at:
 22604 ;;		line 72 in file "mcc_generated_files/eusart.c"
 22605 ;; Parameters:    Size  Location     Type
 22606 ;;		None
 22607 ;; Auto vars:     Size  Location     Type
 22608 ;;		None
 22609 ;; Return value:  Size  Location     Type
 22610 ;;                  1    wreg      void 
 22611 ;; Registers used:
 22612 ;;		wreg, status,2
 22613 ;; Tracked objects:
 22614 ;;		On entry : 0/0
 22615 ;;		On exit  : 0/0
 22616 ;;		Unchanged: 0/0
 22617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22622 ;;Total ram usage:        1 bytes
 22623 ;; Hardware stack levels used:    1
 22624 ;; Hardware stack levels required when called:    6
 22625 ;; This function calls:
 22626 ;;		Nothing
 22627 ;; This function is called by:
 22628 ;;		_SYSTEM_Initialize
 22629 ;; This function uses a non-reentrant model
 22630 ;;
 22631                           
 22632                           
 22633                           ;psect for function _EUSART_Initialize
 22634  2517                     _EUSART_Initialize:	
 22635                           
 22636                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 22637                           
 22638                           ;incstack = 0
 22639                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 22640  2517  0021               	movlb	1	; select bank1
 22641  2518  1291               	bcf	17,5	;volatile
 22642                           
 22643                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 22644  2519  1211               	bcf	17,4	;volatile
 22645                           
 22646                           ;eusart.c: 80: BAUD1CON = 0x08;
 22647  251A  3008               	movlw	8
 22648  251B  0023               	movlb	3	; select bank3
 22649  251C  009F               	movwf	31	;volatile
 22650                           
 22651                           ;eusart.c: 83: RC1STA = 0x90;
 22652  251D  3090               	movlw	144
 22653  251E  009D               	movwf	29	;volatile
 22654                           
 22655                           ;eusart.c: 86: TX1STA = 0x24;
 22656  251F  3024               	movlw	36
 22657  2520  009E               	movwf	30	;volatile
 22658                           
 22659                           ;eusart.c: 89: SP1BRGL = 0x19;
 22660  2521  3019               	movlw	25
 22661  2522  009B               	movwf	27	;volatile
 22662                           
 22663                           ;eusart.c: 92: SP1BRGH = 0x00;
 22664  2523  019C               	clrf	28	;volatile
 22665                           
 22666                           ;eusart.c: 96: eusartTxHead = 0;
 22667  2524  01FD               	clrf	_eusartTxHead	;volatile
 22668                           
 22669                           ;eusart.c: 97: eusartTxTail = 0;
 22670  2525  0020               	movlb	0	; select bank0
 22671  2526  01D9               	clrf	_eusartTxTail	;volatile
 22672                           
 22673                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 22674  2527  3008               	movlw	8
 22675  2528  00B1               	movwf	??_EUSART_Initialize
 22676  2529  0831               	movf	??_EUSART_Initialize,w
 22677  252A  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 22678                           
 22679                           ;eusart.c: 100: eusartRxHead = 0;
 22680  252B  01D8               	clrf	_eusartRxHead	;volatile
 22681                           
 22682                           ;eusart.c: 101: eusartRxTail = 0;
 22683  252C  01D7               	clrf	_eusartRxTail	;volatile
 22684                           
 22685                           ;eusart.c: 102: eusartRxCount = 0;
 22686  252D  01D6               	clrf	_eusartRxCount	;volatile
 22687                           
 22688                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 22689  252E  0021               	movlb	1	; select bank1
 22690  252F  1691               	bsf	17,5	;volatile
 22691  2530  0008               	return
 22692  2531                     __end_of_EUSART_Initialize:	
 22693                           
 22694                           	psect	text117
 22695  2635                     __ptext117:	
 22696 ;; *************** function _EUSART_Read *****************
 22697 ;; Defined at:
 22698 ;;		line 108 in file "mcc_generated_files/eusart.c"
 22699 ;; Parameters:    Size  Location     Type
 22700 ;;		None
 22701 ;; Auto vars:     Size  Location     Type
 22702 ;;  readValue       1   18[BANK0 ] unsigned char 
 22703 ;; Return value:  Size  Location     Type
 22704 ;;                  1    wreg      unsigned char 
 22705 ;; Registers used:
 22706 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22707 ;; Tracked objects:
 22708 ;;		On entry : 0/0
 22709 ;;		On exit  : 0/0
 22710 ;;		Unchanged: 0/0
 22711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22714 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22716 ;;Total ram usage:        2 bytes
 22717 ;; Hardware stack levels used:    1
 22718 ;; Hardware stack levels required when called:    6
 22719 ;; This function calls:
 22720 ;;		Nothing
 22721 ;; This function is called by:
 22722 ;;		_main
 22723 ;;		_getch
 22724 ;; This function uses a non-reentrant model
 22725 ;;
 22726                           
 22727                           
 22728                           ;psect for function _EUSART_Read
 22729  2635                     _EUSART_Read:	
 22730                           
 22731                           ;eusart.c: 110: uint8_t readValue = 0;
 22732                           
 22733                           ;incstack = 0
 22734                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22735  2635  0020               	movlb	0	; select bank0
 22736  2636  01B2               	clrf	EUSART_Read@readValue
 22737  2637                     l6412:	
 22738                           ;eusart.c: 113: {
 22739                           
 22740                           ;eusart.c: 112: while(0 == eusartRxCount)
 22741                           
 22742  2637  0856               	movf	_eusartRxCount,w	;volatile
 22743  2638  1903               	btfsc	3,2
 22744  2639  2E37               	goto	l6412
 22745                           
 22746                           ;eusart.c: 114: }
 22747                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 22748  263A  0857               	movf	_eusartRxTail,w
 22749  263B  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 22750  263C  0086               	movwf	6
 22751  263D  3001               	movlw	1	; select bank3/4
 22752  263E  0087               	movwf	7
 22753  263F  0801               	movf	1,w
 22754  2640  00B1               	movwf	??_EUSART_Read
 22755  2641  0831               	movf	??_EUSART_Read,w
 22756  2642  00B2               	movwf	EUSART_Read@readValue
 22757  2643  3001               	movlw	1
 22758  2644  00B1               	movwf	??_EUSART_Read
 22759  2645  0831               	movf	??_EUSART_Read,w
 22760  2646  07D7               	addwf	_eusartRxTail,f	;volatile
 22761                           
 22762                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 22763  2647  3008               	movlw	8
 22764  2648  0257               	subwf	_eusartRxTail,w	;volatile
 22765  2649  1803               	btfsc	3,0
 22766                           
 22767                           ;eusart.c: 118: {
 22768                           ;eusart.c: 119: eusartRxTail = 0;
 22769  264A  01D7               	clrf	_eusartRxTail	;volatile
 22770                           
 22771                           ;eusart.c: 120: }
 22772                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 22773  264B  0021               	movlb	1	; select bank1
 22774  264C  1291               	bcf	17,5	;volatile
 22775                           
 22776                           ;eusart.c: 122: eusartRxCount--;
 22777  264D  3001               	movlw	1
 22778  264E  0020               	movlb	0	; select bank0
 22779  264F  02D6               	subwf	_eusartRxCount,f	;volatile
 22780                           
 22781                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 22782  2650  0021               	movlb	1	; select bank1
 22783  2651  1691               	bsf	17,5	;volatile
 22784                           
 22785                           ;eusart.c: 125: return readValue;
 22786  2652  0020               	movlb	0	; select bank0
 22787  2653  0832               	movf	EUSART_Read@readValue,w
 22788  2654  0008               	return
 22789  2655                     __end_of_EUSART_Read:	
 22790                           
 22791                           	psect	intentry
 22792  0004                     __pintentry:	
 22793 ;; *************** function _INTERRUPT_InterruptManager *****************
 22794 ;; Defined at:
 22795 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 22796 ;; Parameters:    Size  Location     Type
 22797 ;;		None
 22798 ;; Auto vars:     Size  Location     Type
 22799 ;;		None
 22800 ;; Return value:  Size  Location     Type
 22801 ;;                  1    wreg      void 
 22802 ;; Registers used:
 22803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22804 ;; Tracked objects:
 22805 ;;		On entry : 0/0
 22806 ;;		On exit  : 0/0
 22807 ;;		Unchanged: 0/0
 22808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22813 ;;Total ram usage:        1 bytes
 22814 ;; Hardware stack levels used:    1
 22815 ;; Hardware stack levels required when called:    5
 22816 ;; This function calls:
 22817 ;;		Absolute function
 22818 ;;		_EUSART_Receive_ISR
 22819 ;;		_EUSART_Transmit_ISR
 22820 ;;		_TMR0_ISR
 22821 ;;		_TMR2_ISR
 22822 ;;		_i2c_busCollisionISR
 22823 ;;		i1_i2c_ISR
 22824 ;; This function is called by:
 22825 ;;		Interrupt level 1
 22826 ;; This function uses a non-reentrant model
 22827 ;;
 22828                           
 22829  0004                     _INTERRUPT_InterruptManager:	
 22830                           
 22831                           ;incstack = 0
 22832 ;; hardware stack exceeded
 22833  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22834                           
 22835                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22836  0005  3180               	pagesel	$
 22837  0006  0020               	movlb	0	; select bank0
 22838  0007  087F               	movf	127,w
 22839  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 22840                           
 22841                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 22842  0009  0021               	movlb	1	; select bank1
 22843  000A  1E90               	btfss	16,5	;volatile
 22844  000B  2813               	goto	i1l351
 22845  000C  0020               	movlb	0	; select bank0
 22846  000D  1E90               	btfss	16,5	;volatile
 22847  000E  2813               	goto	i1l351
 22848                           
 22849                           ;interrupt_manager.c: 55: {
 22850                           ;interrupt_manager.c: 56: TMR0_ISR();
 22851  000F  31A4  243A  3180   	fcall	_TMR0_ISR
 22852                           
 22853                           ;interrupt_manager.c: 57: }
 22854  0012  284B               	goto	i1l365
 22855  0013                     i1l351:	
 22856                           
 22857                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 22858  0013  1F0B               	btfss	11,6	;volatile
 22859  0014  284B               	goto	i1l365
 22860                           
 22861                           ;interrupt_manager.c: 59: {
 22862                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 22863  0015  0021               	movlb	1	; select bank1
 22864  0016  1D11               	btfss	17,2	;volatile
 22865  0017  2822               	goto	i1l354
 22866  0018  0020               	movlb	0	; select bank0
 22867  0019  1D11               	btfss	17,2	;volatile
 22868  001A  2822               	goto	i1l354
 22869                           
 22870                           ;interrupt_manager.c: 61: {
 22871                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 22872  001B  0022               	movlb	2	; select bank2
 22873  001C  086B               	movf	(_i2c1_driver_busCollisionISR+1)^(0+256),w
 22874  001D  008A               	movwf	10
 22875  001E  086A               	movf	_i2c1_driver_busCollisionISR^(0+256),w
 22876  001F  000A               	callw
 22877  0020  3180               	pagesel	$
 22878                           
 22879                           ;interrupt_manager.c: 63: }
 22880  0021  284B               	goto	i1l365
 22881  0022                     i1l354:	
 22882                           
 22883                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 22884  0022  0021               	movlb	1	; select bank1
 22885  0023  1D91               	btfss	17,3	;volatile
 22886  0024  282F               	goto	i1l356
 22887  0025  0020               	movlb	0	; select bank0
 22888  0026  1D91               	btfss	17,3	;volatile
 22889  0027  282F               	goto	i1l356
 22890                           
 22891                           ;interrupt_manager.c: 65: {
 22892                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 22893  0028  0022               	movlb	2	; select bank2
 22894  0029  0869               	movf	(_i2c1_driver_i2cISR+1)^(0+256),w
 22895  002A  008A               	movwf	10
 22896  002B  0868               	movf	_i2c1_driver_i2cISR^(0+256),w
 22897  002C  000A               	callw
 22898  002D  3180               	pagesel	$
 22899                           
 22900                           ;interrupt_manager.c: 67: }
 22901  002E  284B               	goto	i1l365
 22902  002F                     i1l356:	
 22903                           
 22904                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 22905  002F  0021               	movlb	1	; select bank1
 22906  0030  1C91               	btfss	17,1	;volatile
 22907  0031  2839               	goto	i1l358
 22908  0032  0020               	movlb	0	; select bank0
 22909  0033  1C91               	btfss	17,1	;volatile
 22910  0034  2839               	goto	i1l358
 22911                           
 22912                           ;interrupt_manager.c: 69: {
 22913                           ;interrupt_manager.c: 70: TMR2_ISR();
 22914  0035  31A4  2447  3180   	fcall	_TMR2_ISR
 22915                           
 22916                           ;interrupt_manager.c: 71: }
 22917  0038  284B               	goto	i1l365
 22918  0039                     i1l358:	
 22919                           
 22920                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 22921  0039  0021               	movlb	1	; select bank1
 22922  003A  1E91               	btfss	17,5	;volatile
 22923  003B  2843               	goto	i1l360
 22924  003C  0020               	movlb	0	; select bank0
 22925  003D  1E91               	btfss	17,5	;volatile
 22926  003E  2843               	goto	i1l360
 22927                           
 22928                           ;interrupt_manager.c: 73: {
 22929                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 22930  003F  31A5  2566  3180   	fcall	_EUSART_Receive_ISR
 22931                           
 22932                           ;interrupt_manager.c: 75: }
 22933  0042  284B               	goto	i1l365
 22934  0043                     i1l360:	
 22935                           
 22936                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 22937  0043  0021               	movlb	1	; select bank1
 22938  0044  1E11               	btfss	17,4	;volatile
 22939  0045  284B               	goto	i1l365
 22940  0046  0020               	movlb	0	; select bank0
 22941  0047  1E11               	btfss	17,4	;volatile
 22942  0048  284B               	goto	i1l365
 22943                           
 22944                           ;interrupt_manager.c: 77: {
 22945                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 22946  0049  31A5  25BB         	fcall	_EUSART_Transmit_ISR
 22947  004B                     i1l365:	
 22948                           ;interrupt_manager.c: 85: else
 22949                           ;interrupt_manager.c: 86: {
 22950                           
 22951                           ;interrupt_manager.c: 83: }
 22952                           ;interrupt_manager.c: 84: }
 22953                           
 22954                           ;interrupt_manager.c: 80: else
 22955                           ;interrupt_manager.c: 81: {
 22956                           
 22957                           ;interrupt_manager.c: 79: }
 22958                           
 22959  004B  087C               	movf	??_INTERRUPT_InterruptManager,w
 22960  004C  0020               	movlb	0	; select bank0
 22961  004D  00FF               	movwf	127
 22962  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22963  004F  0009               	retfie
 22964  0050                     __end_of_INTERRUPT_InterruptManager:	
 22965                           
 22966                           	psect	text119
 22967  2615                     __ptext119:	
 22968 ;; *************** function i1_i2c_ISR *****************
 22969 ;; Defined at:
 22970 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 22971 ;; Parameters:    Size  Location     Type
 22972 ;;		None
 22973 ;; Auto vars:     Size  Location     Type
 22974 ;;		None
 22975 ;; Return value:  Size  Location     Type
 22976 ;;                  1    wreg      void 
 22977 ;; Registers used:
 22978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22979 ;; Tracked objects:
 22980 ;;		On entry : 0/0
 22981 ;;		On exit  : 0/0
 22982 ;;		Unchanged: 0/0
 22983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22988 ;;Total ram usage:        1 bytes
 22989 ;; Hardware stack levels used:    1
 22990 ;; Hardware stack levels required when called:    3
 22991 ;; This function calls:
 22992 ;;		i1_do_I2C_DO_ACK
 22993 ;;		i1_do_I2C_DO_ADDRESS_NACK
 22994 ;;		i1_do_I2C_DO_NACK_RESTART
 22995 ;;		i1_do_I2C_DO_NACK_STOP
 22996 ;;		i1_do_I2C_IDLE
 22997 ;;		i1_do_I2C_RCEN
 22998 ;;		i1_do_I2C_RESET
 22999 ;;		i1_do_I2C_RX
 23000 ;;		i1_do_I2C_SEND_ADR_READ
 23001 ;;		i1_do_I2C_SEND_ADR_WRITE
 23002 ;;		i1_do_I2C_SEND_RESTART
 23003 ;;		i1_do_I2C_SEND_RESTART_READ
 23004 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23005 ;;		i1_do_I2C_SEND_STOP
 23006 ;;		i1_do_I2C_TX
 23007 ;;		i1_do_I2C_TX_EMPTY
 23008 ;;		i1_i2c1_driver_isNACK
 23009 ;;		i1_mssp1_clearIRQ
 23010 ;; This function is called by:
 23011 ;; This function uses a non-reentrant model
 23012 ;;
 23013                           
 23014                           
 23015                           ;psect for function i1_i2c_ISR
 23016  2615                     i1_i2c_ISR:	
 23017  2615                     i1l8384:	
 23018                           ;incstack = 0
 23019                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23020                           
 23021                           
 23022                           ;i2c_master.c: 421: mssp1_clearIRQ();
 23023  2615  31A2  2284  31A6   	fcall	i1_mssp1_clearIRQ
 23024                           
 23025                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 23026  2618  0022               	movlb	2	; select bank2
 23027  2619  1DA0               	btfss	_i2c_status^(0+256),3
 23028  261A  2E25               	goto	i1l8392
 23029  261B  31A4  240A  31A6   	fcall	i1_i2c1_driver_isNACK
 23030  261E  1C03               	btfss	3,0
 23031  261F  2E25               	goto	i1l8392
 23032                           
 23033                           ;i2c_master.c: 428: {
 23034                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 23035  2620  300F               	movlw	15
 23036  2621  00F5               	movwf	??i1_i2c_ISR
 23037  2622  0875               	movf	??i1_i2c_ISR,w
 23038  2623  0022               	movlb	2	; select bank2
 23039  2624  00AA               	movwf	(_i2c_status^(0+256)+10)
 23040  2625                     i1l8392:	
 23041                           
 23042                           ;i2c_master.c: 430: }
 23043                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 23044  2625  0022               	movlb	2	; select bank2
 23045  2626  352A               	lslf	(_i2c_status^(0+256)+10),w
 23046  2627  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 23047  2628  0086               	movwf	6
 23048  2629  3002               	movlw	2	; select bank4/5
 23049  262A  0087               	movwf	7
 23050  262B  3F41               	moviw [1]fsr1
 23051  262C  008A               	movwf	10
 23052  262D  3F40               	moviw [0]fsr1
 23053  262E  000A               	callw
 23054  262F  31A6               	pagesel	$
 23055  2630  00F5               	movwf	??i1_i2c_ISR
 23056  2631  0875               	movf	??i1_i2c_ISR,w
 23057  2632  0022               	movlb	2	; select bank2
 23058  2633  00AA               	movwf	(_i2c_status^(0+256)+10)
 23059  2634  0008               	return
 23060  2635                     __end_ofi1_i2c_ISR:	
 23061                           
 23062                           	psect	text120
 23063  2284                     __ptext120:	
 23064 ;; *************** function i1_mssp1_clearIRQ *****************
 23065 ;; Defined at:
 23066 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 23067 ;; Parameters:    Size  Location     Type
 23068 ;;		None
 23069 ;; Auto vars:     Size  Location     Type
 23070 ;;		None
 23071 ;; Return value:  Size  Location     Type
 23072 ;;                  1    wreg      void 
 23073 ;; Registers used:
 23074 ;;		None
 23075 ;; Tracked objects:
 23076 ;;		On entry : 0/0
 23077 ;;		On exit  : 0/0
 23078 ;;		Unchanged: 0/0
 23079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23084 ;;Total ram usage:        0 bytes
 23085 ;; Hardware stack levels used:    1
 23086 ;; This function calls:
 23087 ;;		Nothing
 23088 ;; This function is called by:
 23089 ;;		i1_i2c_ISR
 23090 ;; This function uses a non-reentrant model
 23091 ;;
 23092                           
 23093                           
 23094                           ;psect for function i1_mssp1_clearIRQ
 23095  2284                     i1_mssp1_clearIRQ:	
 23096                           
 23097                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 23098                           
 23099                           ;incstack = 0
 23100                           ; Regs used in i1_mssp1_clearIRQ: []
 23101  2284  0020               	movlb	0	; select bank0
 23102  2285  1191               	bcf	17,3	;volatile
 23103  2286  0008               	return
 23104  2287                     __end_ofi1_mssp1_clearIRQ:	
 23105                           
 23106                           	psect	text121
 23107  1988                     __ptext121:	
 23108 ;; *************** function i1_do_I2C_RX *****************
 23109 ;; Defined at:
 23110 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 23111 ;; Parameters:    Size  Location     Type
 23112 ;;		None
 23113 ;; Auto vars:     Size  Location     Type
 23114 ;;		None
 23115 ;; Return value:  Size  Location     Type
 23116 ;;                  1    wreg      enum E8364
 23117 ;; Registers used:
 23118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23119 ;; Tracked objects:
 23120 ;;		On entry : 0/0
 23121 ;;		On exit  : 0/0
 23122 ;;		Unchanged: 0/0
 23123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23128 ;;Total ram usage:        1 bytes
 23129 ;; Hardware stack levels used:    1
 23130 ;; Hardware stack levels required when called:    2
 23131 ;; This function calls:
 23132 ;;		i1_do_I2C_DO_NACK_RESTART
 23133 ;;		i1_do_I2C_DO_NACK_STOP
 23134 ;;		i1_i2c1_driver_getRXData
 23135 ;;		i1_i2c1_driver_sendACK
 23136 ;;		i1_returnReset
 23137 ;;		i1_returnStop
 23138 ;; This function is called by:
 23139 ;; This function uses a non-reentrant model
 23140 ;;
 23141                           
 23142                           
 23143                           ;psect for function i1_do_I2C_RX
 23144  1988                     i1_do_I2C_RX:	
 23145  1988                     i1l8168:	
 23146                           ;incstack = 0
 23147                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23148                           
 23149                           
 23150                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 23151  1988  0022               	movlb	2	; select bank2
 23152  1989  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23153  198A  0086               	movwf	6
 23154  198B  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23155  198C  0087               	movwf	7
 23156  198D  31A2  227E  3199   	fcall	i1_i2c1_driver_getRXData
 23157  1990  0081               	movwf	1
 23158  1991  3001               	movlw	1
 23159  1992  0022               	movlb	2	; select bank2
 23160  1993  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 23161  1994  3000               	movlw	0
 23162  1995  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23163                           
 23164                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 23165  1996  3001               	movlw	1
 23166  1997  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23167  1998  3000               	movlw	0
 23168  1999  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23169  199A  0824               	movf	(_i2c_status^(0+256)+4),w
 23170  199B  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23171  199C  1903               	btfsc	3,2
 23172  199D  29A2               	goto	i1l761
 23173                           
 23174                           ;i2c_master.c: 361: {
 23175                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 23176  199E  31A2  22A2         	fcall	i1_i2c1_driver_sendACK
 23177                           
 23178                           ;i2c_master.c: 363: return I2C_RCEN;
 23179  19A0  3005               	movlw	5
 23180                           
 23181                           ;i2c_master.c: 364: }
 23182  19A1  0008               	return
 23183  19A2                     i1l761:	
 23184                           
 23185                           ;i2c_master.c: 365: else
 23186                           ;i2c_master.c: 366: {
 23187                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 23188  19A2  1520               	bsf	_i2c_status^(0+256),2
 23189                           
 23190                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23191  19A3  29AA               	goto	i1l8192
 23192  19A4                     i1l8182:	
 23193                           ;i2c_master.c: 369: {
 23194                           ;i2c_master.c: 370: case i2c_restart_write:
 23195                           
 23196                           
 23197                           ;i2c_master.c: 371: case i2c_restart_read:
 23198                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 23199  19A4  31A2  22C2         	fcall	i1_do_I2C_DO_NACK_RESTART
 23200  19A6  0008               	return
 23201  19A7                     i1l8186:	
 23202                           ;i2c_master.c: 374: case i2c_continue:
 23203                           
 23204                           ;i2c_master.c: 373: default:
 23205                           
 23206                           
 23207                           ;i2c_master.c: 375: case i2c_stop:
 23208                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 23209  19A7  31A2  22BE         	fcall	i1_do_I2C_DO_NACK_STOP
 23210                           
 23211                           ;i2c_master.c: 377: }
 23212  19A9  0008               	return
 23213  19AA                     i1l8192:	
 23214  19AA  0022               	movlb	2	; select bank2
 23215  19AB  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 23216  19AC  00F0               	movwf	??i1_do_I2C_RX
 23217  19AD  0870               	movf	??i1_do_I2C_RX,w
 23218  19AE  00F0               	movwf	i1returnReset@p
 23219  19AF  300C               	movlw	12
 23220  19B0  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23221  19B1  0086               	movwf	6
 23222  19B2  3001               	movlw	1	; select bank2/3
 23223  19B3  0087               	movwf	7
 23224  19B4  3F41               	moviw [1]fsr1
 23225  19B5  008A               	movwf	10
 23226  19B6  3F40               	moviw [0]fsr1
 23227  19B7  000A               	callw
 23228  19B8  3199               	pagesel	$
 23229                           
 23230                           ; Switch size 1, requested type "space"
 23231                           ; Number of cases is 4, Range of values is 1 to 4
 23232                           ; switch strategies available:
 23233                           ; Name         Instructions Cycles
 23234                           ; simple_byte           13     7 (average)
 23235                           ; direct_byte           17     9 (fixed)
 23236                           ; jumptable            263     9 (fixed)
 23237                           ;	Chosen strategy is simple_byte
 23238  19B9  3A01               	xorlw	1	; case 1
 23239  19BA  1903               	skipnz
 23240  19BB  29A7               	goto	i1l8186
 23241  19BC  3A03               	xorlw	3	; case 2
 23242  19BD  1903               	skipnz
 23243  19BE  29A4               	goto	i1l8182
 23244  19BF  3A01               	xorlw	1	; case 3
 23245  19C0  1903               	skipnz
 23246  19C1  29A4               	goto	i1l8182
 23247  19C2  3A07               	xorlw	7	; case 4
 23248  19C3  1903               	skipnz
 23249  19C4  29A7               	goto	i1l8186
 23250  19C5  29A7               	goto	i1l8186
 23251  19C6  0008               	return
 23252  19C7                     __end_ofi1_do_I2C_RX:	
 23253                           
 23254                           	psect	text122
 23255  1C46                     __ptext122:	
 23256 ;; *************** function i1_do_I2C_TX *****************
 23257 ;; Defined at:
 23258 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 23259 ;; Parameters:    Size  Location     Type
 23260 ;;		None
 23261 ;; Auto vars:     Size  Location     Type
 23262 ;;		None
 23263 ;; Return value:  Size  Location     Type
 23264 ;;                  1    wreg      enum E8364
 23265 ;; Registers used:
 23266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23267 ;; Tracked objects:
 23268 ;;		On entry : 0/0
 23269 ;;		On exit  : 0/0
 23270 ;;		Unchanged: 0/0
 23271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23276 ;;Total ram usage:        4 bytes
 23277 ;; Hardware stack levels used:    1
 23278 ;; Hardware stack levels required when called:    2
 23279 ;; This function calls:
 23280 ;;		i1_do_I2C_SEND_RESTART_READ
 23281 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23282 ;;		i1_do_I2C_SEND_STOP
 23283 ;;		i1_i2c1_driver_TXData
 23284 ;;		i1_i2c1_driver_isNACK
 23285 ;;		i1_returnReset
 23286 ;;		i1_returnStop
 23287 ;; This function is called by:
 23288 ;; This function uses a non-reentrant model
 23289 ;;
 23290                           
 23291                           
 23292                           ;psect for function i1_do_I2C_TX
 23293  1C46                     i1_do_I2C_TX:	
 23294  1C46                     i1l8138:	
 23295                           ;incstack = 0
 23296                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23297                           
 23298                           
 23299                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 23300  1C46  31A4  240A  319C   	fcall	i1_i2c1_driver_isNACK
 23301  1C49  1803               	btfsc	3,0
 23302  1C4A  2C55               	goto	i1l8156
 23303  1C4B  2C72               	goto	i1l745
 23304  1C4C                     i1l8142:	
 23305                           ;i2c_master.c: 338: {
 23306                           ;i2c_master.c: 339: case i2c_restart_read:
 23307                           
 23308                           ;i2c_master.c: 336: {
 23309                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 23310                           
 23311                           
 23312                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 23313  1C4C  31A2  22AA         	fcall	i1_do_I2C_SEND_RESTART_READ
 23314  1C4E  0008               	return
 23315  1C4F                     i1l8146:	
 23316                           ;i2c_master.c: 341: case i2c_restart_write:
 23317                           
 23318                           
 23319                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 23320  1C4F  31A2  22AE         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 23321  1C51  0008               	return
 23322  1C52                     i1l8150:	
 23323                           ;i2c_master.c: 344: case i2c_continue:
 23324                           
 23325                           ;i2c_master.c: 343: default:
 23326                           
 23327                           
 23328                           ;i2c_master.c: 345: case i2c_stop:
 23329                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 23330  1C52  31A2  22B6         	fcall	i1_do_I2C_SEND_STOP
 23331                           
 23332                           ;i2c_master.c: 347: }
 23333  1C54  0008               	return
 23334  1C55                     i1l8156:	
 23335  1C55  0022               	movlb	2	; select bank2
 23336  1C56  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 23337  1C57  00F1               	movwf	??i1_do_I2C_TX
 23338  1C58  0871               	movf	??i1_do_I2C_TX,w
 23339  1C59  00F0               	movwf	i1returnReset@p
 23340  1C5A  3012               	movlw	18
 23341  1C5B  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23342  1C5C  0086               	movwf	6
 23343  1C5D  3001               	movlw	1	; select bank2/3
 23344  1C5E  0087               	movwf	7
 23345  1C5F  3F41               	moviw [1]fsr1
 23346  1C60  008A               	movwf	10
 23347  1C61  3F40               	moviw [0]fsr1
 23348  1C62  000A               	callw
 23349  1C63  319C               	pagesel	$
 23350                           
 23351                           ; Switch size 1, requested type "space"
 23352                           ; Number of cases is 4, Range of values is 1 to 4
 23353                           ; switch strategies available:
 23354                           ; Name         Instructions Cycles
 23355                           ; simple_byte           13     7 (average)
 23356                           ; direct_byte           17     9 (fixed)
 23357                           ; jumptable            263     9 (fixed)
 23358                           ;	Chosen strategy is simple_byte
 23359  1C64  3A01               	xorlw	1	; case 1
 23360  1C65  1903               	skipnz
 23361  1C66  2C52               	goto	i1l8150
 23362  1C67  3A03               	xorlw	3	; case 2
 23363  1C68  1903               	skipnz
 23364  1C69  2C4C               	goto	i1l8142
 23365  1C6A  3A01               	xorlw	1	; case 3
 23366  1C6B  1903               	skipnz
 23367  1C6C  2C4F               	goto	i1l8146
 23368  1C6D  3A07               	xorlw	7	; case 4
 23369  1C6E  1903               	skipnz
 23370  1C6F  2C52               	goto	i1l8150
 23371  1C70  2C52               	goto	i1l8150
 23372                           
 23373                           ;i2c_master.c: 348: }
 23374  1C71  0008               	return
 23375  1C72                     i1l745:	
 23376                           
 23377                           ;i2c_master.c: 349: else
 23378                           ;i2c_master.c: 350: {
 23379                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 23380  1C72  0022               	movlb	2	; select bank2
 23381  1C73  11A0               	bcf	_i2c_status^(0+256),3
 23382                           
 23383                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 23384  1C74  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23385  1C75  00F2               	movwf	??i1_do_I2C_TX+1
 23386  1C76  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23387  1C77  00F1               	movwf	??i1_do_I2C_TX
 23388  1C78  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 23389  1C79  1903               	skipnz
 23390  1C7A  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23391  1C7B  0871               	movf	??i1_do_I2C_TX,w
 23392  1C7C  0084               	movwf	4
 23393  1C7D  0872               	movf	??i1_do_I2C_TX+1,w
 23394  1C7E  0085               	movwf	5
 23395  1C7F  0800               	movf	0,w	;code access
 23396  1C80  31A2  22E0  319C   	fcall	i1_i2c1_driver_TXData
 23397                           
 23398                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 23399  1C83  3001               	movlw	1
 23400  1C84  0022               	movlb	2	; select bank2
 23401  1C85  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23402  1C86  3000               	movlw	0
 23403  1C87  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23404  1C88  0824               	movf	(_i2c_status^(0+256)+4),w
 23405  1C89  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23406  1C8A  1D03               	btfss	3,2
 23407  1C8B  2C8E               	goto	i1l8164
 23408  1C8C  3006               	movlw	6
 23409  1C8D  2C8F               	goto	L35
 23410  1C8E                     i1l8164:	
 23411  1C8E  3003               	movlw	3
 23412  1C8F                     L35:	
 23413  1C8F  00F3               	movwf	i1_do_I2C_TX$1132
 23414  1C90  3000               	movlw	0
 23415  1C91  00F4               	movwf	i1_do_I2C_TX$1132+1
 23416  1C92  0873               	movf	i1_do_I2C_TX$1132,w
 23417  1C93  0008               	return
 23418  1C94                     __end_ofi1_do_I2C_TX:	
 23419                           
 23420                           	psect	text123
 23421  26FC                     __ptext123:	
 23422 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 23423 ;; Defined at:
 23424 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 23425 ;; Parameters:    Size  Location     Type
 23426 ;;		None
 23427 ;; Auto vars:     Size  Location     Type
 23428 ;;		None
 23429 ;; Return value:  Size  Location     Type
 23430 ;;                  1    wreg      enum E8364
 23431 ;; Registers used:
 23432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23433 ;; Tracked objects:
 23434 ;;		On entry : 0/0
 23435 ;;		On exit  : 0/0
 23436 ;;		Unchanged: 0/0
 23437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23442 ;;Total ram usage:        1 bytes
 23443 ;; Hardware stack levels used:    1
 23444 ;; Hardware stack levels required when called:    2
 23445 ;; This function calls:
 23446 ;;		i1_do_I2C_SEND_RESTART
 23447 ;;		i1_do_I2C_SEND_STOP
 23448 ;;		i1_returnReset
 23449 ;;		i1_returnStop
 23450 ;; This function is called by:
 23451 ;; This function uses a non-reentrant model
 23452 ;;
 23453                           
 23454                           
 23455                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 23456  26FC                     i1_do_I2C_DO_ADDRESS_NACK:	
 23457  26FC                     i1l8122:	
 23458                           ;incstack = 0
 23459                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23460                           
 23461                           
 23462                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 23463  26FC  0022               	movlb	2	; select bank2
 23464  26FD  11A0               	bcf	_i2c_status^(0+256),3
 23465                           
 23466                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 23467  26FE  3002               	movlw	2
 23468  26FF  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23469  2700  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23470  2701  00AB               	movwf	(_i2c_status^(0+256)+11)
 23471                           
 23472                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 23473  2702  2F09               	goto	i1l8136
 23474  2703                     i1l8126:	
 23475                           ;i2c_master.c: 324: {
 23476                           ;i2c_master.c: 325: case i2c_restart_read:
 23477                           
 23478                           
 23479                           ;i2c_master.c: 326: case i2c_restart_write:
 23480                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 23481  2703  31A2  22B2         	fcall	i1_do_I2C_SEND_RESTART
 23482  2705  0008               	return
 23483  2706                     i1l8130:	
 23484                           ;i2c_master.c: 328: default:
 23485                           
 23486                           
 23487                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 23488  2706  31A2  22B6         	fcall	i1_do_I2C_SEND_STOP
 23489                           
 23490                           ;i2c_master.c: 330: }
 23491  2708  0008               	return
 23492  2709                     i1l8136:	
 23493  2709  0022               	movlb	2	; select bank2
 23494  270A  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 23495  270B  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23496  270C  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23497  270D  00F0               	movwf	i1returnReset@p
 23498  270E  3010               	movlw	16
 23499  270F  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23500  2710  0086               	movwf	6
 23501  2711  3001               	movlw	1	; select bank2/3
 23502  2712  0087               	movwf	7
 23503  2713  3F41               	moviw [1]fsr1
 23504  2714  008A               	movwf	10
 23505  2715  3F40               	moviw [0]fsr1
 23506  2716  000A               	callw
 23507  2717  31A6               	pagesel	$
 23508                           
 23509                           ; Switch size 1, requested type "space"
 23510                           ; Number of cases is 2, Range of values is 2 to 3
 23511                           ; switch strategies available:
 23512                           ; Name         Instructions Cycles
 23513                           ; simple_byte            7     4 (average)
 23514                           ; direct_byte           13     9 (fixed)
 23515                           ; jumptable            263     9 (fixed)
 23516                           ;	Chosen strategy is simple_byte
 23517  2718  3A02               	xorlw	2	; case 2
 23518  2719  1903               	skipnz
 23519  271A  2F03               	goto	i1l8126
 23520  271B  3A01               	xorlw	1	; case 3
 23521  271C  1903               	skipnz
 23522  271D  2F03               	goto	i1l8126
 23523  271E  2F06               	goto	i1l8130
 23524  271F  0008               	return
 23525  2720                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 23526                           
 23527                           	psect	text124
 23528  22C2                     __ptext124:	
 23529 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 23530 ;; Defined at:
 23531 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 23532 ;; Parameters:    Size  Location     Type
 23533 ;;		None
 23534 ;; Auto vars:     Size  Location     Type
 23535 ;;		None
 23536 ;; Return value:  Size  Location     Type
 23537 ;;                  1    wreg      enum E8364
 23538 ;; Registers used:
 23539 ;;		wreg, status,2, status,0, pclath, cstack
 23540 ;; Tracked objects:
 23541 ;;		On entry : 0/0
 23542 ;;		On exit  : 0/0
 23543 ;;		Unchanged: 0/0
 23544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23549 ;;Total ram usage:        0 bytes
 23550 ;; Hardware stack levels used:    1
 23551 ;; Hardware stack levels required when called:    1
 23552 ;; This function calls:
 23553 ;;		i1_i2c1_driver_sendNACK
 23554 ;; This function is called by:
 23555 ;;		i1_do_I2C_RX
 23556 ;; This function uses a non-reentrant model
 23557 ;;
 23558                           
 23559                           
 23560                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 23561  22C2                     i1_do_I2C_DO_NACK_RESTART:	
 23562  22C2                     i1l7778:	
 23563                           ;incstack = 0
 23564                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 23565                           
 23566                           
 23567                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 23568  22C2  31A2  22A6         	fcall	i1_i2c1_driver_sendNACK
 23569                           
 23570                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 23571  22C4  3009               	movlw	9
 23572  22C5  0008               	return
 23573  22C6                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 23574                           
 23575                           	psect	text125
 23576  22BE                     __ptext125:	
 23577 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 23578 ;; Defined at:
 23579 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 23580 ;; Parameters:    Size  Location     Type
 23581 ;;		None
 23582 ;; Auto vars:     Size  Location     Type
 23583 ;;		None
 23584 ;; Return value:  Size  Location     Type
 23585 ;;                  1    wreg      enum E8364
 23586 ;; Registers used:
 23587 ;;		wreg, status,2, status,0, pclath, cstack
 23588 ;; Tracked objects:
 23589 ;;		On entry : 0/0
 23590 ;;		On exit  : 0/0
 23591 ;;		Unchanged: 0/0
 23592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23597 ;;Total ram usage:        0 bytes
 23598 ;; Hardware stack levels used:    1
 23599 ;; Hardware stack levels required when called:    1
 23600 ;; This function calls:
 23601 ;;		i1_i2c1_driver_sendNACK
 23602 ;; This function is called by:
 23603 ;;		i1_do_I2C_RX
 23604 ;; This function uses a non-reentrant model
 23605 ;;
 23606                           
 23607                           
 23608                           ;psect for function i1_do_I2C_DO_NACK_STOP
 23609  22BE                     i1_do_I2C_DO_NACK_STOP:	
 23610  22BE                     i1l7772:	
 23611                           ;incstack = 0
 23612                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 23613                           
 23614                           
 23615                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 23616  22BE  31A2  22A6         	fcall	i1_i2c1_driver_sendNACK
 23617                           
 23618                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 23619  22C0  300A               	movlw	10
 23620  22C1  0008               	return
 23621  22C2                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 23622                           
 23623                           	psect	text126
 23624  22BA                     __ptext126:	
 23625 ;; *************** function i1_do_I2C_DO_ACK *****************
 23626 ;; Defined at:
 23627 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 23628 ;; Parameters:    Size  Location     Type
 23629 ;;		None
 23630 ;; Auto vars:     Size  Location     Type
 23631 ;;		None
 23632 ;; Return value:  Size  Location     Type
 23633 ;;                  1    wreg      enum E8364
 23634 ;; Registers used:
 23635 ;;		wreg, status,2, status,0, pclath, cstack
 23636 ;; Tracked objects:
 23637 ;;		On entry : 0/0
 23638 ;;		On exit  : 0/0
 23639 ;;		Unchanged: 0/0
 23640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23645 ;;Total ram usage:        0 bytes
 23646 ;; Hardware stack levels used:    1
 23647 ;; Hardware stack levels required when called:    1
 23648 ;; This function calls:
 23649 ;;		i1_i2c1_driver_sendACK
 23650 ;; This function is called by:
 23651 ;; This function uses a non-reentrant model
 23652 ;;
 23653                           
 23654                           
 23655                           ;psect for function i1_do_I2C_DO_ACK
 23656  22BA                     i1_do_I2C_DO_ACK:	
 23657  22BA                     i1l8116:	
 23658                           ;incstack = 0
 23659                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 23660                           
 23661                           
 23662                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 23663  22BA  31A2  22A2         	fcall	i1_i2c1_driver_sendACK
 23664                           
 23665                           ;i2c_master.c: 302: return I2C_RCEN;
 23666  22BC  3005               	movlw	5
 23667  22BD  0008               	return
 23668  22BE                     __end_ofi1_do_I2C_DO_ACK:	
 23669                           
 23670                           	psect	text127
 23671  22F4                     __ptext127:	
 23672 ;; *************** function i1_do_I2C_RCEN *****************
 23673 ;; Defined at:
 23674 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 23675 ;; Parameters:    Size  Location     Type
 23676 ;;		None
 23677 ;; Auto vars:     Size  Location     Type
 23678 ;;		None
 23679 ;; Return value:  Size  Location     Type
 23680 ;;                  1    wreg      enum E8364
 23681 ;; Registers used:
 23682 ;;		wreg, status,2, status,0, pclath, cstack
 23683 ;; Tracked objects:
 23684 ;;		On entry : 0/0
 23685 ;;		On exit  : 0/0
 23686 ;;		Unchanged: 0/0
 23687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23692 ;;Total ram usage:        0 bytes
 23693 ;; Hardware stack levels used:    1
 23694 ;; Hardware stack levels required when called:    1
 23695 ;; This function calls:
 23696 ;;		i1_i2c1_driver_startRX
 23697 ;; This function is called by:
 23698 ;; This function uses a non-reentrant model
 23699 ;;
 23700                           
 23701                           
 23702                           ;psect for function i1_do_I2C_RCEN
 23703  22F4                     i1_do_I2C_RCEN:	
 23704  22F4                     i1l6252:	
 23705                           ;incstack = 0
 23706                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 23707                           
 23708                           
 23709                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 23710  22F4  0022               	movlb	2	; select bank2
 23711  22F5  11A0               	bcf	_i2c_status^(0+256),3
 23712                           
 23713                           ;i2c_master.c: 295: i2c1_driver_startRX();
 23714  22F6  31A2  227B         	fcall	i1_i2c1_driver_startRX
 23715                           
 23716                           ;i2c_master.c: 296: return I2C_RX;
 23717  22F8  3004               	movlw	4
 23718  22F9  0008               	return
 23719  22FA                     __end_ofi1_do_I2C_RCEN:	
 23720                           
 23721                           	psect	text128
 23722  231F                     __ptext128:	
 23723 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 23724 ;; Defined at:
 23725 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 23726 ;; Parameters:    Size  Location     Type
 23727 ;;		None
 23728 ;; Auto vars:     Size  Location     Type
 23729 ;;		None
 23730 ;; Return value:  Size  Location     Type
 23731 ;;                  1    wreg      enum E8364
 23732 ;; Registers used:
 23733 ;;		wreg, status,2, status,0, pclath, cstack
 23734 ;; Tracked objects:
 23735 ;;		On entry : 0/0
 23736 ;;		On exit  : 0/0
 23737 ;;		Unchanged: 0/0
 23738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23743 ;;Total ram usage:        0 bytes
 23744 ;; Hardware stack levels used:    1
 23745 ;; Hardware stack levels required when called:    1
 23746 ;; This function calls:
 23747 ;;		i1_i2c1_driver_TXData
 23748 ;; This function is called by:
 23749 ;; This function uses a non-reentrant model
 23750 ;;
 23751                           
 23752                           
 23753                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 23754  231F                     i1_do_I2C_SEND_ADR_WRITE:	
 23755  231F                     i1l8108:	
 23756                           ;incstack = 0
 23757                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 23758                           
 23759                           
 23760                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 23761  231F  0022               	movlb	2	; select bank2
 23762  2320  15A0               	bsf	_i2c_status^(0+256),3
 23763                           
 23764                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 23765  2321  3521               	lslf	(_i2c_status^(0+256)+1),w
 23766  2322  31A2  22E0         	fcall	i1_i2c1_driver_TXData
 23767                           
 23768                           ;i2c_master.c: 289: return I2C_TX;
 23769  2324  3003               	movlw	3
 23770  2325  0008               	return
 23771  2326                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 23772                           
 23773                           	psect	text129
 23774  2326                     __ptext129:	
 23775 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 23776 ;; Defined at:
 23777 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 23778 ;; Parameters:    Size  Location     Type
 23779 ;;		None
 23780 ;; Auto vars:     Size  Location     Type
 23781 ;;		None
 23782 ;; Return value:  Size  Location     Type
 23783 ;;                  1    wreg      enum E8364
 23784 ;; Registers used:
 23785 ;;		wreg, status,2, status,0, pclath, cstack
 23786 ;; Tracked objects:
 23787 ;;		On entry : 0/0
 23788 ;;		On exit  : 0/0
 23789 ;;		Unchanged: 0/0
 23790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23795 ;;Total ram usage:        0 bytes
 23796 ;; Hardware stack levels used:    1
 23797 ;; Hardware stack levels required when called:    1
 23798 ;; This function calls:
 23799 ;;		i1_i2c1_driver_TXData
 23800 ;; This function is called by:
 23801 ;; This function uses a non-reentrant model
 23802 ;;
 23803                           
 23804                           
 23805                           ;psect for function i1_do_I2C_SEND_ADR_READ
 23806  2326                     i1_do_I2C_SEND_ADR_READ:	
 23807  2326                     i1l8100:	
 23808                           ;incstack = 0
 23809                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 23810                           
 23811                           
 23812                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 23813  2326  0022               	movlb	2	; select bank2
 23814  2327  15A0               	bsf	_i2c_status^(0+256),3
 23815                           
 23816                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 23817  2328  1403               	setc
 23818  2329  0D21               	rlf	(_i2c_status^(0+256)+1),w
 23819  232A  31A2  22E0         	fcall	i1_i2c1_driver_TXData
 23820                           
 23821                           ;i2c_master.c: 282: return I2C_RCEN;
 23822  232C  3005               	movlw	5
 23823  232D  0008               	return
 23824  232E                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 23825                           
 23826                           	psect	text130
 23827  22B6                     __ptext130:	
 23828 ;; *************** function i1_do_I2C_SEND_STOP *****************
 23829 ;; Defined at:
 23830 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 23831 ;; Parameters:    Size  Location     Type
 23832 ;;		None
 23833 ;; Auto vars:     Size  Location     Type
 23834 ;;		None
 23835 ;; Return value:  Size  Location     Type
 23836 ;;                  1    wreg      enum E8364
 23837 ;; Registers used:
 23838 ;;		wreg, status,2, status,0, pclath, cstack
 23839 ;; Tracked objects:
 23840 ;;		On entry : 0/0
 23841 ;;		On exit  : 0/0
 23842 ;;		Unchanged: 0/0
 23843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23848 ;;Total ram usage:        0 bytes
 23849 ;; Hardware stack levels used:    1
 23850 ;; Hardware stack levels required when called:    1
 23851 ;; This function calls:
 23852 ;;		i1_i2c1_driver_stop
 23853 ;; This function is called by:
 23854 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23855 ;;		i1_do_I2C_TX
 23856 ;;		i1_do_I2C_TX_EMPTY
 23857 ;; This function uses a non-reentrant model
 23858 ;;
 23859                           
 23860                           
 23861                           ;psect for function i1_do_I2C_SEND_STOP
 23862  22B6                     i1_do_I2C_SEND_STOP:	
 23863  22B6                     i1l7766:	
 23864                           ;incstack = 0
 23865                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 23866                           
 23867                           
 23868                           ;i2c_master.c: 274: i2c1_driver_stop();
 23869  22B6  31A2  2278         	fcall	i1_i2c1_driver_stop
 23870                           
 23871                           ;i2c_master.c: 275: return I2C_IDLE;
 23872  22B8  3000               	movlw	0
 23873  22B9  0008               	return
 23874  22BA                     __end_ofi1_do_I2C_SEND_STOP:	
 23875                           
 23876                           	psect	text131
 23877  22B2                     __ptext131:	
 23878 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 23879 ;; Defined at:
 23880 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 23881 ;; Parameters:    Size  Location     Type
 23882 ;;		None
 23883 ;; Auto vars:     Size  Location     Type
 23884 ;;		None
 23885 ;; Return value:  Size  Location     Type
 23886 ;;                  1    wreg      enum E8364
 23887 ;; Registers used:
 23888 ;;		wreg, status,2, status,0, pclath, cstack
 23889 ;; Tracked objects:
 23890 ;;		On entry : 0/0
 23891 ;;		On exit  : 0/0
 23892 ;;		Unchanged: 0/0
 23893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23898 ;;Total ram usage:        0 bytes
 23899 ;; Hardware stack levels used:    1
 23900 ;; Hardware stack levels required when called:    1
 23901 ;; This function calls:
 23902 ;;		i1_i2c1_driver_restart
 23903 ;; This function is called by:
 23904 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23905 ;;		i1_do_I2C_TX_EMPTY
 23906 ;; This function uses a non-reentrant model
 23907 ;;
 23908                           
 23909                           
 23910                           ;psect for function i1_do_I2C_SEND_RESTART
 23911  22B2                     i1_do_I2C_SEND_RESTART:	
 23912  22B2                     i1l7760:	
 23913                           ;incstack = 0
 23914                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 23915                           
 23916                           
 23917                           ;i2c_master.c: 268: i2c1_driver_restart();
 23918  22B2  31A2  2275         	fcall	i1_i2c1_driver_restart
 23919                           
 23920                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 23921  22B4  3001               	movlw	1
 23922  22B5  0008               	return
 23923  22B6                     __end_ofi1_do_I2C_SEND_RESTART:	
 23924                           
 23925                           	psect	text132
 23926  22AE                     __ptext132:	
 23927 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 23928 ;; Defined at:
 23929 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 23930 ;; Parameters:    Size  Location     Type
 23931 ;;		None
 23932 ;; Auto vars:     Size  Location     Type
 23933 ;;		None
 23934 ;; Return value:  Size  Location     Type
 23935 ;;                  1    wreg      enum E8364
 23936 ;; Registers used:
 23937 ;;		wreg, status,2, status,0, pclath, cstack
 23938 ;; Tracked objects:
 23939 ;;		On entry : 0/0
 23940 ;;		On exit  : 0/0
 23941 ;;		Unchanged: 0/0
 23942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23947 ;;Total ram usage:        0 bytes
 23948 ;; Hardware stack levels used:    1
 23949 ;; Hardware stack levels required when called:    1
 23950 ;; This function calls:
 23951 ;;		i1_i2c1_driver_restart
 23952 ;; This function is called by:
 23953 ;;		i1_do_I2C_TX
 23954 ;; This function uses a non-reentrant model
 23955 ;;
 23956                           
 23957                           
 23958                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 23959  22AE                     i1_do_I2C_SEND_RESTART_WRITE:	
 23960  22AE                     i1l7754:	
 23961                           ;incstack = 0
 23962                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 23963                           
 23964                           
 23965                           ;i2c_master.c: 262: i2c1_driver_restart();
 23966  22AE  31A2  2275         	fcall	i1_i2c1_driver_restart
 23967                           
 23968                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 23969  22B0  3002               	movlw	2
 23970  22B1  0008               	return
 23971  22B2                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 23972                           
 23973                           	psect	text133
 23974  22AA                     __ptext133:	
 23975 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 23976 ;; Defined at:
 23977 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 23978 ;; Parameters:    Size  Location     Type
 23979 ;;		None
 23980 ;; Auto vars:     Size  Location     Type
 23981 ;;		None
 23982 ;; Return value:  Size  Location     Type
 23983 ;;                  1    wreg      enum E8364
 23984 ;; Registers used:
 23985 ;;		wreg, status,2, status,0, pclath, cstack
 23986 ;; Tracked objects:
 23987 ;;		On entry : 0/0
 23988 ;;		On exit  : 0/0
 23989 ;;		Unchanged: 0/0
 23990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23995 ;;Total ram usage:        0 bytes
 23996 ;; Hardware stack levels used:    1
 23997 ;; Hardware stack levels required when called:    1
 23998 ;; This function calls:
 23999 ;;		i1_i2c1_driver_restart
 24000 ;; This function is called by:
 24001 ;;		i1_do_I2C_TX
 24002 ;; This function uses a non-reentrant model
 24003 ;;
 24004                           
 24005                           
 24006                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 24007  22AA                     i1_do_I2C_SEND_RESTART_READ:	
 24008  22AA                     i1l7748:	
 24009                           ;incstack = 0
 24010                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 24011                           
 24012                           
 24013                           ;i2c_master.c: 256: i2c1_driver_restart();
 24014  22AA  31A2  2275         	fcall	i1_i2c1_driver_restart
 24015                           
 24016                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 24017  22AC  3001               	movlw	1
 24018  22AD  0008               	return
 24019  22AE                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 24020                           
 24021                           	psect	text134
 24022  22E5                     __ptext134:	
 24023 ;; *************** function i1_do_I2C_IDLE *****************
 24024 ;; Defined at:
 24025 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 24026 ;; Parameters:    Size  Location     Type
 24027 ;;		None
 24028 ;; Auto vars:     Size  Location     Type
 24029 ;;		None
 24030 ;; Return value:  Size  Location     Type
 24031 ;;                  1    wreg      enum E8364
 24032 ;; Registers used:
 24033 ;;		wreg, status,2
 24034 ;; Tracked objects:
 24035 ;;		On entry : 0/0
 24036 ;;		On exit  : 0/0
 24037 ;;		Unchanged: 0/0
 24038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24043 ;;Total ram usage:        0 bytes
 24044 ;; Hardware stack levels used:    1
 24045 ;; This function calls:
 24046 ;;		Nothing
 24047 ;; This function is called by:
 24048 ;; This function uses a non-reentrant model
 24049 ;;
 24050                           
 24051                           
 24052                           ;psect for function i1_do_I2C_IDLE
 24053  22E5                     i1_do_I2C_IDLE:	
 24054  22E5                     i1l6228:	
 24055                           ;incstack = 0
 24056                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 24057                           
 24058                           
 24059                           ;i2c_master.c: 249: i2c_status.busy = 0;
 24060  22E5  0022               	movlb	2	; select bank2
 24061  22E6  1020               	bcf	_i2c_status^(0+256),0
 24062                           
 24063                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 24064  22E7  01AB               	clrf	(_i2c_status^(0+256)+11)
 24065                           
 24066                           ;i2c_master.c: 251: return I2C_RESET;
 24067  22E8  300E               	movlw	14
 24068  22E9  0008               	return
 24069  22EA                     __end_ofi1_do_I2C_IDLE:	
 24070                           
 24071                           	psect	text135
 24072  2318                     __ptext135:	
 24073 ;; *************** function i1_do_I2C_RESET *****************
 24074 ;; Defined at:
 24075 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 24076 ;; Parameters:    Size  Location     Type
 24077 ;;		None
 24078 ;; Auto vars:     Size  Location     Type
 24079 ;;		None
 24080 ;; Return value:  Size  Location     Type
 24081 ;;                  1    wreg      enum E8364
 24082 ;; Registers used:
 24083 ;;		wreg, status,2, status,0, pclath, cstack
 24084 ;; Tracked objects:
 24085 ;;		On entry : 0/0
 24086 ;;		On exit  : 0/0
 24087 ;;		Unchanged: 0/0
 24088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24093 ;;Total ram usage:        0 bytes
 24094 ;; Hardware stack levels used:    1
 24095 ;; Hardware stack levels required when called:    1
 24096 ;; This function calls:
 24097 ;;		i1_i2c1_driver_resetBus
 24098 ;; This function is called by:
 24099 ;; This function uses a non-reentrant model
 24100 ;;
 24101                           
 24102                           
 24103                           ;psect for function i1_do_I2C_RESET
 24104  2318                     i1_do_I2C_RESET:	
 24105  2318                     i1l6218:	
 24106                           ;incstack = 0
 24107                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 24108                           
 24109                           
 24110                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 24111  2318  3198  202A         	fcall	i1_i2c1_driver_resetBus
 24112                           
 24113                           ;i2c_master.c: 242: i2c_status.busy = 0;
 24114  231A  0022               	movlb	2	; select bank2
 24115  231B  1020               	bcf	_i2c_status^(0+256),0
 24116                           
 24117                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 24118  231C  01AB               	clrf	(_i2c_status^(0+256)+11)
 24119                           
 24120                           ;i2c_master.c: 244: return I2C_RESET;
 24121  231D  300E               	movlw	14
 24122  231E  0008               	return
 24123  231F                     __end_ofi1_do_I2C_RESET:	
 24124                           
 24125                           	psect	text136
 24126  1838                     __ptext136:	
 24127 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 24128 ;; Defined at:
 24129 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 24130 ;; Parameters:    Size  Location     Type
 24131 ;;		None
 24132 ;; Auto vars:     Size  Location     Type
 24133 ;;		None
 24134 ;; Return value:  Size  Location     Type
 24135 ;;                  1    wreg      enum E8364
 24136 ;; Registers used:
 24137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24138 ;; Tracked objects:
 24139 ;;		On entry : 0/0
 24140 ;;		On exit  : 0/0
 24141 ;;		Unchanged: 0/0
 24142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24147 ;;Total ram usage:        1 bytes
 24148 ;; Hardware stack levels used:    1
 24149 ;; Hardware stack levels required when called:    2
 24150 ;; This function calls:
 24151 ;;		i1_do_I2C_SEND_RESTART
 24152 ;;		i1_do_I2C_SEND_STOP
 24153 ;;		i1_mssp1_setIRQ
 24154 ;;		i1_returnReset
 24155 ;;		i1_returnStop
 24156 ;; This function is called by:
 24157 ;; This function uses a non-reentrant model
 24158 ;;
 24159                           
 24160                           
 24161                           ;psect for function i1_do_I2C_TX_EMPTY
 24162  1838                     i1_do_I2C_TX_EMPTY:	
 24163  1838                     i1l8194:	
 24164                           ;incstack = 0
 24165                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24166                           
 24167                           
 24168                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 24169  1838  0022               	movlb	2	; select bank2
 24170  1839  1520               	bsf	_i2c_status^(0+256),2
 24171                           
 24172                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 24173  183A  2845               	goto	i1l8212
 24174  183B                     i1l8196:	
 24175                           ;i2c_master.c: 386: {
 24176                           ;i2c_master.c: 387: case i2c_restart_read:
 24177                           
 24178                           
 24179                           ;i2c_master.c: 388: case i2c_restart_write:
 24180                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 24181  183B  31A2  22B2         	fcall	i1_do_I2C_SEND_RESTART
 24182  183D  0008               	return
 24183  183E                     i1l8200:	
 24184                           ;i2c_master.c: 390: case i2c_continue:
 24185                           
 24186                           
 24187                           ;i2c_master.c: 391: mssp1_setIRQ();
 24188  183E  31A2  2281         	fcall	i1_mssp1_setIRQ
 24189                           
 24190                           ;i2c_master.c: 392: return I2C_TX;
 24191  1840  3003               	movlw	3
 24192  1841  0008               	return
 24193  1842                     i1l8206:	
 24194                           ;i2c_master.c: 394: case i2c_stop:
 24195                           
 24196                           ;i2c_master.c: 393: default:
 24197                           
 24198                           
 24199                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 24200  1842  31A2  22B6         	fcall	i1_do_I2C_SEND_STOP
 24201                           
 24202                           ;i2c_master.c: 396: }
 24203  1844  0008               	return
 24204  1845                     i1l8212:	
 24205  1845  0022               	movlb	2	; select bank2
 24206  1846  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 24207  1847  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 24208  1848  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 24209  1849  00F0               	movwf	i1returnReset@p
 24210  184A  300C               	movlw	12
 24211  184B  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24212  184C  0086               	movwf	6
 24213  184D  3001               	movlw	1	; select bank2/3
 24214  184E  0087               	movwf	7
 24215  184F  3F41               	moviw [1]fsr1
 24216  1850  008A               	movwf	10
 24217  1851  3F40               	moviw [0]fsr1
 24218  1852  000A               	callw
 24219  1853  3198               	pagesel	$
 24220                           
 24221                           ; Switch size 1, requested type "space"
 24222                           ; Number of cases is 4, Range of values is 1 to 4
 24223                           ; switch strategies available:
 24224                           ; Name         Instructions Cycles
 24225                           ; simple_byte           13     7 (average)
 24226                           ; direct_byte           17     9 (fixed)
 24227                           ; jumptable            263     9 (fixed)
 24228                           ;	Chosen strategy is simple_byte
 24229  1854  3A01               	xorlw	1	; case 1
 24230  1855  1903               	skipnz
 24231  1856  2842               	goto	i1l8206
 24232  1857  3A03               	xorlw	3	; case 2
 24233  1858  1903               	skipnz
 24234  1859  283B               	goto	i1l8196
 24235  185A  3A01               	xorlw	1	; case 3
 24236  185B  1903               	skipnz
 24237  185C  283B               	goto	i1l8196
 24238  185D  3A07               	xorlw	7	; case 4
 24239  185E  1903               	skipnz
 24240  185F  283E               	goto	i1l8200
 24241  1860  2842               	goto	i1l8206
 24242  1861  0008               	return
 24243  1862                     __end_ofi1_do_I2C_TX_EMPTY:	
 24244                           
 24245                           	psect	text137
 24246  2281                     __ptext137:	
 24247 ;; *************** function i1_mssp1_setIRQ *****************
 24248 ;; Defined at:
 24249 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 24250 ;; Parameters:    Size  Location     Type
 24251 ;;		None
 24252 ;; Auto vars:     Size  Location     Type
 24253 ;;		None
 24254 ;; Return value:  Size  Location     Type
 24255 ;;                  1    wreg      void 
 24256 ;; Registers used:
 24257 ;;		None
 24258 ;; Tracked objects:
 24259 ;;		On entry : 0/0
 24260 ;;		On exit  : 0/0
 24261 ;;		Unchanged: 0/0
 24262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24267 ;;Total ram usage:        0 bytes
 24268 ;; Hardware stack levels used:    1
 24269 ;; This function calls:
 24270 ;;		Nothing
 24271 ;; This function is called by:
 24272 ;;		i1_do_I2C_TX_EMPTY
 24273 ;; This function uses a non-reentrant model
 24274 ;;
 24275                           
 24276                           
 24277                           ;psect for function i1_mssp1_setIRQ
 24278  2281                     i1_mssp1_setIRQ:	
 24279                           
 24280                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 24281                           
 24282                           ;incstack = 0
 24283                           ; Regs used in i1_mssp1_setIRQ: []
 24284  2281  0020               	movlb	0	; select bank0
 24285  2282  1591               	bsf	17,3	;volatile
 24286  2283  0008               	return
 24287  2284                     __end_ofi1_mssp1_setIRQ:	
 24288                           
 24289                           	psect	text138
 24290  240A                     __ptext138:	
 24291 ;; *************** function i1_i2c1_driver_isNACK *****************
 24292 ;; Defined at:
 24293 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 24294 ;; Parameters:    Size  Location     Type
 24295 ;;		None
 24296 ;; Auto vars:     Size  Location     Type
 24297 ;;		None
 24298 ;; Return value:  Size  Location     Type
 24299 ;;		None               void
 24300 ;; Registers used:
 24301 ;;		wreg, status,2, status,0
 24302 ;; Tracked objects:
 24303 ;;		On entry : 0/0
 24304 ;;		On exit  : 0/0
 24305 ;;		Unchanged: 0/0
 24306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24311 ;;Total ram usage:        1 bytes
 24312 ;; Hardware stack levels used:    1
 24313 ;; This function calls:
 24314 ;;		Nothing
 24315 ;; This function is called by:
 24316 ;;		i1_do_I2C_TX
 24317 ;;		i1_i2c_ISR
 24318 ;; This function uses a non-reentrant model
 24319 ;;
 24320                           
 24321                           
 24322                           ;psect for function i1_i2c1_driver_isNACK
 24323  240A                     i1_i2c1_driver_isNACK:	
 24324                           
 24325                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 24326                           
 24327                           ;incstack = 0
 24328                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 24329  240A  0024               	movlb	4	; select bank4
 24330  240B  0816               	movf	22,w	;volatile
 24331  240C  39BF               	andlw	-65
 24332  240D  3840               	iorlw	64
 24333  240E  0096               	movwf	22	;volatile
 24334  240F  0E16               	swapf	22,w	;volatile
 24335  2410  0C89               	rrf	9,f
 24336  2411  0C89               	rrf	9,f
 24337  2412  3901               	andlw	1
 24338  2413  00F0               	movwf	??i1_i2c1_driver_isNACK
 24339  2414  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 24340  2415  0008               	return
 24341  2416                     __end_ofi1_i2c1_driver_isNACK:	
 24342                           
 24343                           	psect	text139
 24344  22E0                     __ptext139:	
 24345 ;; *************** function i1_i2c1_driver_TXData *****************
 24346 ;; Defined at:
 24347 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 24348 ;; Parameters:    Size  Location     Type
 24349 ;;  d               1    wreg     unsigned char 
 24350 ;; Auto vars:     Size  Location     Type
 24351 ;;  d               1    0[COMMON] unsigned char 
 24352 ;; Return value:  Size  Location     Type
 24353 ;;                  1    wreg      void 
 24354 ;; Registers used:
 24355 ;;		wreg
 24356 ;; Tracked objects:
 24357 ;;		On entry : 0/0
 24358 ;;		On exit  : 0/0
 24359 ;;		Unchanged: 0/0
 24360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24365 ;;Total ram usage:        1 bytes
 24366 ;; Hardware stack levels used:    1
 24367 ;; This function calls:
 24368 ;;		Nothing
 24369 ;; This function is called by:
 24370 ;;		i1_do_I2C_SEND_ADR_READ
 24371 ;;		i1_do_I2C_SEND_ADR_WRITE
 24372 ;;		i1_do_I2C_TX
 24373 ;; This function uses a non-reentrant model
 24374 ;;
 24375                           
 24376                           
 24377                           ;psect for function i1_i2c1_driver_TXData
 24378  22E0                     i1_i2c1_driver_TXData:	
 24379                           
 24380                           ;incstack = 0
 24381                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 24382                           ;i1i2c1_driver_TXData@d stored from wreg
 24383  22E0  00F0               	movwf	i1i2c1_driver_TXData@d
 24384                           
 24385                           ;i2c1_driver.c: 188: SSP1BUF = d;
 24386  22E1  0870               	movf	i1i2c1_driver_TXData@d,w
 24387  22E2  0024               	movlb	4	; select bank4
 24388  22E3  0091               	movwf	17	;volatile
 24389  22E4  0008               	return
 24390  22E5                     __end_ofi1_i2c1_driver_TXData:	
 24391                           
 24392                           	psect	text140
 24393  227E                     __ptext140:	
 24394 ;; *************** function i1_i2c1_driver_getRXData *****************
 24395 ;; Defined at:
 24396 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 24397 ;; Parameters:    Size  Location     Type
 24398 ;;		None
 24399 ;; Auto vars:     Size  Location     Type
 24400 ;;		None
 24401 ;; Return value:  Size  Location     Type
 24402 ;;                  1    wreg      unsigned char 
 24403 ;; Registers used:
 24404 ;;		wreg
 24405 ;; Tracked objects:
 24406 ;;		On entry : 0/0
 24407 ;;		On exit  : 0/0
 24408 ;;		Unchanged: 0/0
 24409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24414 ;;Total ram usage:        0 bytes
 24415 ;; Hardware stack levels used:    1
 24416 ;; This function calls:
 24417 ;;		Nothing
 24418 ;; This function is called by:
 24419 ;;		i1_do_I2C_RX
 24420 ;; This function uses a non-reentrant model
 24421 ;;
 24422                           
 24423                           
 24424                           ;psect for function i1_i2c1_driver_getRXData
 24425  227E                     i1_i2c1_driver_getRXData:	
 24426                           
 24427                           ;i2c1_driver.c: 173: return SSP1BUF;
 24428                           
 24429                           ;incstack = 0
 24430                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 24431  227E  0024               	movlb	4	; select bank4
 24432  227F  0811               	movf	17,w	;volatile
 24433  2280  0008               	return
 24434  2281                     __end_ofi1_i2c1_driver_getRXData:	
 24435                           
 24436                           	psect	text141
 24437  22A6                     __ptext141:	
 24438 ;; *************** function i1_i2c1_driver_sendNACK *****************
 24439 ;; Defined at:
 24440 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 24441 ;; Parameters:    Size  Location     Type
 24442 ;;		None
 24443 ;; Auto vars:     Size  Location     Type
 24444 ;;		None
 24445 ;; Return value:  Size  Location     Type
 24446 ;;                  1    wreg      void 
 24447 ;; Registers used:
 24448 ;;		None
 24449 ;; Tracked objects:
 24450 ;;		On entry : 0/0
 24451 ;;		On exit  : 0/0
 24452 ;;		Unchanged: 0/0
 24453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24458 ;;Total ram usage:        0 bytes
 24459 ;; Hardware stack levels used:    1
 24460 ;; This function calls:
 24461 ;;		Nothing
 24462 ;; This function is called by:
 24463 ;;		i1_do_I2C_DO_NACK_STOP
 24464 ;;		i1_do_I2C_DO_NACK_RESTART
 24465 ;; This function uses a non-reentrant model
 24466 ;;
 24467                           
 24468                           
 24469                           ;psect for function i1_i2c1_driver_sendNACK
 24470  22A6                     i1_i2c1_driver_sendNACK:	
 24471                           
 24472                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 24473                           
 24474                           ;incstack = 0
 24475                           ; Regs used in i1_i2c1_driver_sendNACK: []
 24476  22A6  0024               	movlb	4	; select bank4
 24477  22A7  1696               	bsf	22,5	;volatile
 24478                           
 24479                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 24480  22A8  1616               	bsf	22,4	;volatile
 24481  22A9  0008               	return
 24482  22AA                     __end_ofi1_i2c1_driver_sendNACK:	
 24483                           
 24484                           	psect	text142
 24485  182A                     __ptext142:	
 24486 ;; *************** function i1_i2c1_driver_resetBus *****************
 24487 ;; Defined at:
 24488 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 24489 ;; Parameters:    Size  Location     Type
 24490 ;;		None
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;		None
 24493 ;; Return value:  Size  Location     Type
 24494 ;;                  1    wreg      void 
 24495 ;; Registers used:
 24496 ;;		None
 24497 ;; Tracked objects:
 24498 ;;		On entry : 0/0
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24506 ;;Total ram usage:        0 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; This function calls:
 24509 ;;		Nothing
 24510 ;; This function is called by:
 24511 ;;		i1_do_I2C_RESET
 24512 ;; This function uses a non-reentrant model
 24513 ;;
 24514                           
 24515                           
 24516                           ;psect for function i1_i2c1_driver_resetBus
 24517  182A                     i1_i2c1_driver_resetBus:	
 24518                           
 24519                           ;incstack = 0
 24520                           ; Regs used in i1_i2c1_driver_resetBus: []
 24521  182A  0008               	return
 24522  182B                     __end_ofi1_i2c1_driver_resetBus:	
 24523                           
 24524                           	psect	text143
 24525  227B                     __ptext143:	
 24526 ;; *************** function i1_i2c1_driver_startRX *****************
 24527 ;; Defined at:
 24528 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 24529 ;; Parameters:    Size  Location     Type
 24530 ;;		None
 24531 ;; Auto vars:     Size  Location     Type
 24532 ;;		None
 24533 ;; Return value:  Size  Location     Type
 24534 ;;                  1    wreg      void 
 24535 ;; Registers used:
 24536 ;;		None
 24537 ;; Tracked objects:
 24538 ;;		On entry : 0/0
 24539 ;;		On exit  : 0/0
 24540 ;;		Unchanged: 0/0
 24541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24546 ;;Total ram usage:        0 bytes
 24547 ;; Hardware stack levels used:    1
 24548 ;; This function calls:
 24549 ;;		Nothing
 24550 ;; This function is called by:
 24551 ;;		i1_do_I2C_RCEN
 24552 ;; This function uses a non-reentrant model
 24553 ;;
 24554                           
 24555                           
 24556                           ;psect for function i1_i2c1_driver_startRX
 24557  227B                     i1_i2c1_driver_startRX:	
 24558                           
 24559                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 24560                           
 24561                           ;incstack = 0
 24562                           ; Regs used in i1_i2c1_driver_startRX: []
 24563  227B  0024               	movlb	4	; select bank4
 24564  227C  1596               	bsf	22,3	;volatile
 24565  227D  0008               	return
 24566  227E                     __end_ofi1_i2c1_driver_startRX:	
 24567                           
 24568                           	psect	text144
 24569  0002                     __ptext144:	
 24570 ;; *************** function i1_returnReset *****************
 24571 ;; Defined at:
 24572 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 24573 ;; Parameters:    Size  Location     Type
 24574 ;;  p               1    0[COMMON] PTR void 
 24575 ;;		 -> NULL(0), 
 24576 ;; Auto vars:     Size  Location     Type
 24577 ;;		None
 24578 ;; Return value:  Size  Location     Type
 24579 ;;                  1    wreg      enum E8198
 24580 ;; Registers used:
 24581 ;;		wreg
 24582 ;; Tracked objects:
 24583 ;;		On entry : 0/0
 24584 ;;		On exit  : 0/0
 24585 ;;		Unchanged: 0/0
 24586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24587 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24591 ;;Total ram usage:        1 bytes
 24592 ;; Hardware stack levels used:    1
 24593 ;; This function calls:
 24594 ;;		Nothing
 24595 ;; This function is called by:
 24596 ;; This function uses a non-reentrant model
 24597 ;;
 24598                           
 24599                           
 24600                           ;psect for function i1_returnReset
 24601  0002                     i1_returnReset:	
 24602  0002                     i1l7788:	
 24603                           ;incstack = 0
 24604                           ; Regs used in i1_returnReset: [wreg]
 24605                           
 24606                           
 24607                           ;i2c_master.c: 450: return i2c_reset_link;
 24608  0002  3005               	movlw	5
 24609  0003  0008               	return
 24610  0004                     __end_ofi1_returnReset:	
 24611                           
 24612                           	psect	text145
 24613  2267                     __ptext145:	
 24614 ;; *************** function i1_returnStop *****************
 24615 ;; Defined at:
 24616 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 24617 ;; Parameters:    Size  Location     Type
 24618 ;;  p               1    0[COMMON] PTR void 
 24619 ;;		 -> NULL(0), 
 24620 ;; Auto vars:     Size  Location     Type
 24621 ;;		None
 24622 ;; Return value:  Size  Location     Type
 24623 ;;                  1    wreg      enum E8198
 24624 ;; Registers used:
 24625 ;;		wreg
 24626 ;; Tracked objects:
 24627 ;;		On entry : 0/0
 24628 ;;		On exit  : 0/0
 24629 ;;		Unchanged: 0/0
 24630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24631 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24635 ;;Total ram usage:        1 bytes
 24636 ;; Hardware stack levels used:    1
 24637 ;; This function calls:
 24638 ;;		Nothing
 24639 ;; This function is called by:
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           
 24643                           
 24644                           ;psect for function i1_returnStop
 24645  2267                     i1_returnStop:	
 24646  2267                     i1l7784:	
 24647                           ;incstack = 0
 24648                           ; Regs used in i1_returnStop: [wreg]
 24649                           
 24650                           
 24651                           ;i2c_master.c: 445: return i2c_stop;
 24652  2267  3001               	movlw	1
 24653  2268  0008               	return
 24654  2269                     __end_ofi1_returnStop:	
 24655                           
 24656                           	psect	text146
 24657  2278                     __ptext146:	
 24658 ;; *************** function i1_i2c1_driver_stop *****************
 24659 ;; Defined at:
 24660 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 24661 ;; Parameters:    Size  Location     Type
 24662 ;;		None
 24663 ;; Auto vars:     Size  Location     Type
 24664 ;;		None
 24665 ;; Return value:  Size  Location     Type
 24666 ;;                  1    wreg      void 
 24667 ;; Registers used:
 24668 ;;		None
 24669 ;; Tracked objects:
 24670 ;;		On entry : 0/0
 24671 ;;		On exit  : 0/0
 24672 ;;		Unchanged: 0/0
 24673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24678 ;;Total ram usage:        0 bytes
 24679 ;; Hardware stack levels used:    1
 24680 ;; This function calls:
 24681 ;;		Nothing
 24682 ;; This function is called by:
 24683 ;;		i1_do_I2C_SEND_STOP
 24684 ;; This function uses a non-reentrant model
 24685 ;;
 24686                           
 24687                           
 24688                           ;psect for function i1_i2c1_driver_stop
 24689  2278                     i1_i2c1_driver_stop:	
 24690                           
 24691                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 24692                           
 24693                           ;incstack = 0
 24694                           ; Regs used in i1_i2c1_driver_stop: []
 24695  2278  0024               	movlb	4	; select bank4
 24696  2279  1516               	bsf	22,2	;volatile
 24697  227A  0008               	return
 24698  227B                     __end_ofi1_i2c1_driver_stop:	
 24699                           
 24700                           	psect	text147
 24701  2275                     __ptext147:	
 24702 ;; *************** function i1_i2c1_driver_restart *****************
 24703 ;; Defined at:
 24704 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 24705 ;; Parameters:    Size  Location     Type
 24706 ;;		None
 24707 ;; Auto vars:     Size  Location     Type
 24708 ;;		None
 24709 ;; Return value:  Size  Location     Type
 24710 ;;                  1    wreg      void 
 24711 ;; Registers used:
 24712 ;;		None
 24713 ;; Tracked objects:
 24714 ;;		On entry : 0/0
 24715 ;;		On exit  : 0/0
 24716 ;;		Unchanged: 0/0
 24717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24722 ;;Total ram usage:        0 bytes
 24723 ;; Hardware stack levels used:    1
 24724 ;; This function calls:
 24725 ;;		Nothing
 24726 ;; This function is called by:
 24727 ;;		i1_do_I2C_SEND_RESTART_READ
 24728 ;;		i1_do_I2C_SEND_RESTART_WRITE
 24729 ;;		i1_do_I2C_SEND_RESTART
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           
 24733                           
 24734                           ;psect for function i1_i2c1_driver_restart
 24735  2275                     i1_i2c1_driver_restart:	
 24736                           
 24737                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 24738                           
 24739                           ;incstack = 0
 24740                           ; Regs used in i1_i2c1_driver_restart: []
 24741  2275  0024               	movlb	4	; select bank4
 24742  2276  1496               	bsf	22,1	;volatile
 24743  2277  0008               	return
 24744  2278                     __end_ofi1_i2c1_driver_restart:	
 24745                           
 24746                           	psect	text148
 24747  22A2                     __ptext148:	
 24748 ;; *************** function i1_i2c1_driver_sendACK *****************
 24749 ;; Defined at:
 24750 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 24751 ;; Parameters:    Size  Location     Type
 24752 ;;		None
 24753 ;; Auto vars:     Size  Location     Type
 24754 ;;		None
 24755 ;; Return value:  Size  Location     Type
 24756 ;;                  1    wreg      void 
 24757 ;; Registers used:
 24758 ;;		None
 24759 ;; Tracked objects:
 24760 ;;		On entry : 0/0
 24761 ;;		On exit  : 0/0
 24762 ;;		Unchanged: 0/0
 24763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24768 ;;Total ram usage:        0 bytes
 24769 ;; Hardware stack levels used:    1
 24770 ;; This function calls:
 24771 ;;		Nothing
 24772 ;; This function is called by:
 24773 ;;		i1_do_I2C_DO_ACK
 24774 ;;		i1_do_I2C_RX
 24775 ;; This function uses a non-reentrant model
 24776 ;;
 24777                           
 24778                           
 24779                           ;psect for function i1_i2c1_driver_sendACK
 24780  22A2                     i1_i2c1_driver_sendACK:	
 24781                           
 24782                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 24783                           
 24784                           ;incstack = 0
 24785                           ; Regs used in i1_i2c1_driver_sendACK: []
 24786  22A2  0024               	movlb	4	; select bank4
 24787  22A3  1296               	bcf	22,5	;volatile
 24788                           
 24789                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 24790  22A4  1616               	bsf	22,4	;volatile
 24791  22A5  0008               	return
 24792  22A6                     __end_ofi1_i2c1_driver_sendACK:	
 24793                           
 24794                           	psect	text149
 24795  2272                     __ptext149:	
 24796 ;; *************** function _i2c_busCollisionISR *****************
 24797 ;; Defined at:
 24798 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 24799 ;; Parameters:    Size  Location     Type
 24800 ;;		None
 24801 ;; Auto vars:     Size  Location     Type
 24802 ;;		None
 24803 ;; Return value:  Size  Location     Type
 24804 ;;                  1    wreg      void 
 24805 ;; Registers used:
 24806 ;;		status,2, status,0, pclath, cstack
 24807 ;; Tracked objects:
 24808 ;;		On entry : 0/0
 24809 ;;		On exit  : 0/0
 24810 ;;		Unchanged: 0/0
 24811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24816 ;;Total ram usage:        0 bytes
 24817 ;; Hardware stack levels used:    1
 24818 ;; Hardware stack levels required when called:    1
 24819 ;; This function calls:
 24820 ;;		_i2c1_driver_clearBusCollision
 24821 ;; This function is called by:
 24822 ;;		_i2c_open
 24823 ;;		_INTERRUPT_InterruptManager
 24824 ;; This function uses a non-reentrant model
 24825 ;;
 24826                           
 24827                           
 24828                           ;psect for function _i2c_busCollisionISR
 24829  2272                     _i2c_busCollisionISR:	
 24830                           
 24831                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 24832                           
 24833                           ;incstack = 0
 24834                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 24835  2272  31A2  226F         	fcall	_i2c1_driver_clearBusCollision
 24836  2274  0008               	return
 24837  2275                     __end_of_i2c_busCollisionISR:	
 24838                           
 24839                           	psect	text150
 24840  226F                     __ptext150:	
 24841 ;; *************** function _i2c1_driver_clearBusCollision *****************
 24842 ;; Defined at:
 24843 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 24844 ;; Parameters:    Size  Location     Type
 24845 ;;		None
 24846 ;; Auto vars:     Size  Location     Type
 24847 ;;		None
 24848 ;; Return value:  Size  Location     Type
 24849 ;;                  1    wreg      void 
 24850 ;; Registers used:
 24851 ;;		None
 24852 ;; Tracked objects:
 24853 ;;		On entry : 0/0
 24854 ;;		On exit  : 0/0
 24855 ;;		Unchanged: 0/0
 24856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24861 ;;Total ram usage:        0 bytes
 24862 ;; Hardware stack levels used:    1
 24863 ;; This function calls:
 24864 ;;		Nothing
 24865 ;; This function is called by:
 24866 ;;		_i2c_busCollisionISR
 24867 ;; This function uses a non-reentrant model
 24868 ;;
 24869                           
 24870                           
 24871                           ;psect for function _i2c1_driver_clearBusCollision
 24872  226F                     _i2c1_driver_clearBusCollision:	
 24873                           
 24874                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 24875                           
 24876                           ;incstack = 0
 24877                           ; Regs used in _i2c1_driver_clearBusCollision: []
 24878  226F  0020               	movlb	0	; select bank0
 24879  2270  1111               	bcf	17,2	;volatile
 24880  2271  0008               	return
 24881  2272                     __end_of_i2c1_driver_clearBusCollision:	
 24882                           
 24883                           	psect	text151
 24884  2447                     __ptext151:	
 24885 ;; *************** function _TMR2_ISR *****************
 24886 ;; Defined at:
 24887 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 24888 ;; Parameters:    Size  Location     Type
 24889 ;;		None
 24890 ;; Auto vars:     Size  Location     Type
 24891 ;;		None
 24892 ;; Return value:  Size  Location     Type
 24893 ;;                  1    wreg      void 
 24894 ;; Registers used:
 24895 ;;		wreg, status,2, status,0, pclath, cstack
 24896 ;; Tracked objects:
 24897 ;;		On entry : 0/0
 24898 ;;		On exit  : 0/0
 24899 ;;		Unchanged: 0/0
 24900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24905 ;;Total ram usage:        0 bytes
 24906 ;; Hardware stack levels used:    1
 24907 ;; Hardware stack levels required when called:    2
 24908 ;; This function calls:
 24909 ;;		Absolute function
 24910 ;;		_TMR2_DefaultInterruptHandler
 24911 ;; This function is called by:
 24912 ;;		_INTERRUPT_InterruptManager
 24913 ;; This function uses a non-reentrant model
 24914 ;;
 24915                           
 24916                           
 24917                           ;psect for function _TMR2_ISR
 24918  2447                     _TMR2_ISR:	
 24919                           
 24920                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
 24921                           
 24922                           ;incstack = 0
 24923                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 24924  2447  0020               	movlb	0	; select bank0
 24925  2448  1091               	bcf	17,1	;volatile
 24926                           
 24927                           ;tmr2.c: 123: if(TMR2_InterruptHandler)
 24928  2449  0023               	movlb	3	; select bank3
 24929  244A  0859               	movf	_TMR2_InterruptHandler^(0+384),w
 24930  244B  045A               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 24931  244C  1903               	btfsc	3,2
 24932  244D  0008               	return
 24933                           
 24934                           ;tmr2.c: 124: {
 24935                           ;tmr2.c: 125: TMR2_InterruptHandler();
 24936  244E  085A               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 24937  244F  008A               	movwf	10
 24938  2450  0859               	movf	_TMR2_InterruptHandler^(0+384),w
 24939  2451  000A               	callw
 24940  2452  31A4               	pagesel	$
 24941  2453  0008               	return
 24942  2454                     __end_of_TMR2_ISR:	
 24943                           
 24944                           	psect	text152
 24945  2376                     __ptext152:	
 24946 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 24947 ;; Defined at:
 24948 ;;		line 134 in file "mcc_generated_files/tmr2.c"
 24949 ;; Parameters:    Size  Location     Type
 24950 ;;		None
 24951 ;; Auto vars:     Size  Location     Type
 24952 ;;		None
 24953 ;; Return value:  Size  Location     Type
 24954 ;;                  1    wreg      void 
 24955 ;; Registers used:
 24956 ;;		wreg, status,2, status,0, pclath, cstack
 24957 ;; Tracked objects:
 24958 ;;		On entry : 0/0
 24959 ;;		On exit  : 0/0
 24960 ;;		Unchanged: 0/0
 24961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24966 ;;Total ram usage:        0 bytes
 24967 ;; Hardware stack levels used:    1
 24968 ;; Hardware stack levels required when called:    1
 24969 ;; This function calls:
 24970 ;;		_TMR2_StopTimer
 24971 ;;		_TMR2_WriteTimer
 24972 ;; This function is called by:
 24973 ;;		_TMR2_Initialize
 24974 ;;		_TMR2_ISR
 24975 ;; This function uses a non-reentrant model
 24976 ;;
 24977                           
 24978                           
 24979                           ;psect for function _TMR2_DefaultInterruptHandler
 24980  2376                     _TMR2_DefaultInterruptHandler:	
 24981                           
 24982                           ;incstack = 0
 24983                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 24984                           ;tmr2.c: 138: do { LATCbits.LATC1 = 1; } while(0);
 24985  2376  0022               	movlb	2	; select bank2
 24986  2377  148E               	bsf	14,1	;volatile
 24987                           
 24988                           ;tmr2.c: 141: TMR2_StopTimer();
 24989  2378  31A2  226C  31A3   	fcall	_TMR2_StopTimer
 24990                           
 24991                           ;tmr2.c: 142: TMR2_WriteTimer(0);
 24992  237B  3000               	movlw	0
 24993  237C  31A2  22DB         	fcall	_TMR2_WriteTimer
 24994  237E  0008               	return
 24995  237F                     __end_of_TMR2_DefaultInterruptHandler:	
 24996                           
 24997                           	psect	text153
 24998  22DB                     __ptext153:	
 24999 ;; *************** function _TMR2_WriteTimer *****************
 25000 ;; Defined at:
 25001 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 25002 ;; Parameters:    Size  Location     Type
 25003 ;;  timerVal        1    wreg     unsigned char 
 25004 ;; Auto vars:     Size  Location     Type
 25005 ;;  timerVal        1    0[COMMON] unsigned char 
 25006 ;; Return value:  Size  Location     Type
 25007 ;;                  1    wreg      void 
 25008 ;; Registers used:
 25009 ;;		wreg
 25010 ;; Tracked objects:
 25011 ;;		On entry : 0/0
 25012 ;;		On exit  : 0/0
 25013 ;;		Unchanged: 0/0
 25014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25019 ;;Total ram usage:        1 bytes
 25020 ;; Hardware stack levels used:    1
 25021 ;; This function calls:
 25022 ;;		Nothing
 25023 ;; This function is called by:
 25024 ;;		_TMR2_DefaultInterruptHandler
 25025 ;; This function uses a non-reentrant model
 25026 ;;
 25027                           
 25028                           
 25029                           ;psect for function _TMR2_WriteTimer
 25030  22DB                     _TMR2_WriteTimer:	
 25031                           
 25032                           ;incstack = 0
 25033                           ; Regs used in _TMR2_WriteTimer: [wreg]
 25034                           ;TMR2_WriteTimer@timerVal stored from wreg
 25035  22DB  00F0               	movwf	TMR2_WriteTimer@timerVal
 25036                           
 25037                           ;tmr2.c: 109: TMR2 = timerVal;
 25038  22DC  0870               	movf	TMR2_WriteTimer@timerVal,w
 25039  22DD  0020               	movlb	0	; select bank0
 25040  22DE  009D               	movwf	29	;volatile
 25041  22DF  0008               	return
 25042  22E0                     __end_of_TMR2_WriteTimer:	
 25043                           
 25044                           	psect	text154
 25045  226C                     __ptext154:	
 25046 ;; *************** function _TMR2_StopTimer *****************
 25047 ;; Defined at:
 25048 ;;		line 91 in file "mcc_generated_files/tmr2.c"
 25049 ;; Parameters:    Size  Location     Type
 25050 ;;		None
 25051 ;; Auto vars:     Size  Location     Type
 25052 ;;		None
 25053 ;; Return value:  Size  Location     Type
 25054 ;;                  1    wreg      void 
 25055 ;; Registers used:
 25056 ;;		None
 25057 ;; Tracked objects:
 25058 ;;		On entry : 0/0
 25059 ;;		On exit  : 0/0
 25060 ;;		Unchanged: 0/0
 25061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25066 ;;Total ram usage:        0 bytes
 25067 ;; Hardware stack levels used:    1
 25068 ;; This function calls:
 25069 ;;		Nothing
 25070 ;; This function is called by:
 25071 ;;		_TMR2_DefaultInterruptHandler
 25072 ;; This function uses a non-reentrant model
 25073 ;;
 25074                           
 25075                           
 25076                           ;psect for function _TMR2_StopTimer
 25077  226C                     _TMR2_StopTimer:	
 25078                           
 25079                           ;tmr2.c: 94: T2CONbits.TMR2ON = 0;
 25080                           
 25081                           ;incstack = 0
 25082                           ; Regs used in _TMR2_StopTimer: []
 25083  226C  0020               	movlb	0	; select bank0
 25084  226D  111F               	bcf	31,2	;volatile
 25085  226E  0008               	return
 25086  226F                     __end_of_TMR2_StopTimer:	
 25087                           
 25088                           	psect	text155
 25089  243A                     __ptext155:	
 25090 ;; *************** function _TMR0_ISR *****************
 25091 ;; Defined at:
 25092 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 25093 ;; Parameters:    Size  Location     Type
 25094 ;;		None
 25095 ;; Auto vars:     Size  Location     Type
 25096 ;;		None
 25097 ;; Return value:  Size  Location     Type
 25098 ;;                  1    wreg      void 
 25099 ;; Registers used:
 25100 ;;		wreg, status,2, status,0, pclath, cstack
 25101 ;; Tracked objects:
 25102 ;;		On entry : 0/0
 25103 ;;		On exit  : 0/0
 25104 ;;		Unchanged: 0/0
 25105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25110 ;;Total ram usage:        0 bytes
 25111 ;; Hardware stack levels used:    1
 25112 ;; Hardware stack levels required when called:    4
 25113 ;; This function calls:
 25114 ;;		Absolute function
 25115 ;;		_TMR0_DefaultInterruptHandler
 25116 ;; This function is called by:
 25117 ;;		_INTERRUPT_InterruptManager
 25118 ;; This function uses a non-reentrant model
 25119 ;;
 25120                           
 25121                           
 25122                           ;psect for function _TMR0_ISR
 25123  243A                     _TMR0_ISR:	
 25124                           
 25125                           ;tmr0.c: 122: PIR0bits.TMR0IF = 0;
 25126                           
 25127                           ;incstack = 0
 25128 ;; hardware stack exceeded
 25129                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25130  243A  0020               	movlb	0	; select bank0
 25131  243B  1290               	bcf	16,5	;volatile
 25132                           
 25133                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
 25134  243C  0022               	movlb	2	; select bank2
 25135  243D  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 25136  243E  046D               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 25137  243F  1903               	btfsc	3,2
 25138  2440  0008               	return
 25139                           
 25140                           ;tmr0.c: 124: {
 25141                           ;tmr0.c: 125: TMR0_InterruptHandler();
 25142  2441  086D               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 25143  2442  008A               	movwf	10
 25144  2443  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 25145  2444  000A               	callw
 25146  2445  31A4               	pagesel	$
 25147  2446  0008               	return
 25148  2447                     __end_of_TMR0_ISR:	
 25149                           
 25150                           	psect	text156
 25151  0801                     __ptext156:	
 25152 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 25153 ;; Defined at:
 25154 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 25155 ;; Parameters:    Size  Location     Type
 25156 ;;		None
 25157 ;; Auto vars:     Size  Location     Type
 25158 ;;		None
 25159 ;; Return value:  Size  Location     Type
 25160 ;;                  1    wreg      void 
 25161 ;; Registers used:
 25162 ;;		wreg, status,2, status,0, pclath, cstack
 25163 ;; Tracked objects:
 25164 ;;		On entry : 0/0
 25165 ;;		On exit  : 0/0
 25166 ;;		Unchanged: 0/0
 25167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25172 ;;Total ram usage:        0 bytes
 25173 ;; Hardware stack levels used:    1
 25174 ;; Hardware stack levels required when called:    3
 25175 ;; This function calls:
 25176 ;;		_TMR0_StopTimer
 25177 ;;		_TMR0_Write8bitTimer
 25178 ;;		i1_LEDsOn
 25179 ;; This function is called by:
 25180 ;;		_TMR0_Initialize
 25181 ;;		_TMR0_ISR
 25182 ;; This function uses a non-reentrant model
 25183 ;;
 25184                           
 25185                           
 25186                           ;psect for function _TMR0_DefaultInterruptHandler
 25187  0801                     _TMR0_DefaultInterruptHandler:	
 25188                           
 25189                           ;tmr0.c: 141: LEDsOn(second_top, 1);
 25190                           
 25191                           ;incstack = 0
 25192 ;; hardware stack exceeded
 25193                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25194  0801  0022               	movlb	2	; select bank2
 25195  0802  0861               	movf	(_second_top+3)^(0+256),w
 25196  0803  0020               	movlb	0	; select bank0
 25197  0804  00AA               	movwf	i1LEDsOn@LEDpins+3
 25198  0805  0022               	movlb	2	; select bank2
 25199  0806  0860               	movf	(_second_top+2)^(0+256),w
 25200  0807  0020               	movlb	0	; select bank0
 25201  0808  00A9               	movwf	i1LEDsOn@LEDpins+2
 25202  0809  0022               	movlb	2	; select bank2
 25203  080A  085F               	movf	(_second_top+1)^(0+256),w
 25204  080B  0020               	movlb	0	; select bank0
 25205  080C  00A8               	movwf	i1LEDsOn@LEDpins+1
 25206  080D  0022               	movlb	2	; select bank2
 25207  080E  085E               	movf	_second_top^(0+256),w
 25208  080F  0020               	movlb	0	; select bank0
 25209  0810  00A7               	movwf	i1LEDsOn@LEDpins
 25210  0811  3001               	movlw	1
 25211  0812  00AB               	movwf	i1LEDsOn@topOrBottom
 25212  0813  3000               	movlw	0
 25213  0814  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25214  0815  31A6  2675  3188   	fcall	i1_LEDsOn
 25215                           
 25216                           ;tmr0.c: 142: LEDsOn(second_bottom,2);
 25217  0818  0022               	movlb	2	; select bank2
 25218  0819  0855               	movf	(_second_bottom+3)^(0+256),w
 25219  081A  0020               	movlb	0	; select bank0
 25220  081B  00AA               	movwf	i1LEDsOn@LEDpins+3
 25221  081C  0022               	movlb	2	; select bank2
 25222  081D  0854               	movf	(_second_bottom+2)^(0+256),w
 25223  081E  0020               	movlb	0	; select bank0
 25224  081F  00A9               	movwf	i1LEDsOn@LEDpins+2
 25225  0820  0022               	movlb	2	; select bank2
 25226  0821  0853               	movf	(_second_bottom+1)^(0+256),w
 25227  0822  0020               	movlb	0	; select bank0
 25228  0823  00A8               	movwf	i1LEDsOn@LEDpins+1
 25229  0824  0022               	movlb	2	; select bank2
 25230  0825  0852               	movf	_second_bottom^(0+256),w
 25231  0826  0020               	movlb	0	; select bank0
 25232  0827  00A7               	movwf	i1LEDsOn@LEDpins
 25233  0828  3002               	movlw	2
 25234  0829  00AB               	movwf	i1LEDsOn@topOrBottom
 25235  082A  3000               	movlw	0
 25236  082B  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25237  082C  31A6  2675  3188   	fcall	i1_LEDsOn
 25238                           
 25239                           ;tmr0.c: 144: do { LATCbits.LATC1 = 0; } while(0);
 25240  082F  0022               	movlb	2	; select bank2
 25241  0830  108E               	bcf	14,1	;volatile
 25242                           
 25243                           ;tmr0.c: 145: TMR0_StopTimer();
 25244  0831  31A2  2269  3188   	fcall	_TMR0_StopTimer
 25245                           
 25246                           ;tmr0.c: 146: TMR0_Write8bitTimer(0);
 25247  0834  3000               	movlw	0
 25248  0835  31A2  22D6         	fcall	_TMR0_Write8bitTimer
 25249  0837  0008               	return
 25250  0838                     __end_of_TMR0_DefaultInterruptHandler:	
 25251                           
 25252                           	psect	text157
 25253  2675                     __ptext157:	
 25254 ;; *************** function i1_LEDsOn *****************
 25255 ;; Defined at:
 25256 ;;		line 6 in file "LEDcomm.c"
 25257 ;; Parameters:    Size  Location     Type
 25258 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 25259 ;;  topOrBottom     2   11[BANK0 ] int 
 25260 ;; Auto vars:     Size  Location     Type
 25261 ;;		None
 25262 ;; Return value:  Size  Location     Type
 25263 ;;                  1    wreg      void 
 25264 ;; Registers used:
 25265 ;;		wreg, status,2, status,0, pclath, cstack
 25266 ;; Tracked objects:
 25267 ;;		On entry : 0/0
 25268 ;;		On exit  : 0/0
 25269 ;;		Unchanged: 0/0
 25270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25273 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25274 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25275 ;;Total ram usage:       10 bytes
 25276 ;; Hardware stack levels used:    1
 25277 ;; Hardware stack levels required when called:    2
 25278 ;; This function calls:
 25279 ;;		i1_send_2length_2bytes_IK
 25280 ;; This function is called by:
 25281 ;;		_TMR0_DefaultInterruptHandler
 25282 ;; This function uses a non-reentrant model
 25283 ;;
 25284                           
 25285                           
 25286                           ;psect for function i1_LEDsOn
 25287  2675                     i1_LEDsOn:	
 25288                           
 25289                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 25290                           
 25291                           ;incstack = 0
 25292 ;; hardware stack exceeded
 25293                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 25294  2675  0020               	movlb	0	; select bank0
 25295  2676  0827               	movf	i1LEDsOn@LEDpins,w
 25296  2677  00AD               	movwf	??i1_LEDsOn
 25297  2678  0828               	movf	i1LEDsOn@LEDpins+1,w
 25298  2679  00AE               	movwf	??i1_LEDsOn+1
 25299  267A  0829               	movf	i1LEDsOn@LEDpins+2,w
 25300  267B  00AF               	movwf	??i1_LEDsOn+2
 25301  267C  082A               	movf	i1LEDsOn@LEDpins+3,w
 25302  267D  00B0               	movwf	??i1_LEDsOn+3
 25303  267E  3010               	movlw	16
 25304  267F                     u508_25:	
 25305  267F  36B0               	lsrf	??i1_LEDsOn+3,f
 25306  2680  0CAF               	rrf	??i1_LEDsOn+2,f
 25307  2681  0CAE               	rrf	??i1_LEDsOn+1,f
 25308  2682  0CAD               	rrf	??i1_LEDsOn,f
 25309  2683  0B89               	decfsz	9,f
 25310  2684  2E7F               	goto	u508_25
 25311  2685  082E               	movf	??i1_LEDsOn+1,w
 25312  2686  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 25313  2687  082D               	movf	??i1_LEDsOn,w
 25314  2688  00A0               	movwf	i1send_2length_2bytes_IK@data1
 25315  2689  0828               	movf	i1LEDsOn@LEDpins+1,w
 25316  268A  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 25317  268B  0827               	movf	i1LEDsOn@LEDpins,w
 25318  268C  00A2               	movwf	i1send_2length_2bytes_IK@data2
 25319  268D  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 25320  268E  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 25321  268F  082C               	movf	i1LEDsOn@topOrBottom+1,w
 25322  2690  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 25323  2691  082B               	movf	i1LEDsOn@topOrBottom,w
 25324  2692  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 25325  2693  31A4  24E7         	fcall	i1_send_2length_2bytes_IK
 25326  2695  0008               	return
 25327  2696                     __end_ofi1_LEDsOn:	
 25328                           
 25329                           	psect	text158
 25330  24E7                     __ptext158:	
 25331 ;; *************** function i1_send_2length_2bytes_IK *****************
 25332 ;; Defined at:
 25333 ;;		line 70 in file "LEDcomm.c"
 25334 ;; Parameters:    Size  Location     Type
 25335 ;;  data1           2    0[BANK0 ] unsigned int 
 25336 ;;  data2           2    2[BANK0 ] unsigned int 
 25337 ;;  latch_start     1    4[BANK0 ] unsigned char 
 25338 ;;  topOrBottom     2    5[BANK0 ] int 
 25339 ;; Auto vars:     Size  Location     Type
 25340 ;;		None
 25341 ;; Return value:  Size  Location     Type
 25342 ;;                  1    wreg      void 
 25343 ;; Registers used:
 25344 ;;		wreg, status,2, status,0, pclath, cstack
 25345 ;; Tracked objects:
 25346 ;;		On entry : 0/0
 25347 ;;		On exit  : 0/0
 25348 ;;		Unchanged: 0/0
 25349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25350 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25353 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25354 ;;Total ram usage:        8 bytes
 25355 ;; Hardware stack levels used:    1
 25356 ;; Hardware stack levels required when called:    1
 25357 ;; This function calls:
 25358 ;;		i1_send_2bytes_latchless_IK
 25359 ;;		i1_send_last_2bytes_IK
 25360 ;; This function is called by:
 25361 ;;		i1_LEDsOn
 25362 ;; This function uses a non-reentrant model
 25363 ;;
 25364                           
 25365                           
 25366                           ;psect for function i1_send_2length_2bytes_IK
 25367  24E7                     i1_send_2length_2bytes_IK:	
 25368                           
 25369                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 25370                           
 25371                           ;incstack = 0
 25372 ;; hardware stack exceeded
 25373                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 25374  24E7  0020               	movlb	0	; select bank0
 25375  24E8  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 25376  24E9  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 25377  24EA  0820               	movf	i1send_2length_2bytes_IK@data1,w
 25378  24EB  00F0               	movwf	i1send_2bytes_latchless_IK@data
 25379  24EC  31A7  27D7  31A4   	fcall	i1_send_2bytes_latchless_IK
 25380                           
 25381                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 25382  24EF  0020               	movlb	0	; select bank0
 25383  24F0  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 25384  24F1  00F1               	movwf	i1send_last_2bytes_IK@data+1
 25385  24F2  0822               	movf	i1send_2length_2bytes_IK@data2,w
 25386  24F3  00F0               	movwf	i1send_last_2bytes_IK@data
 25387  24F4  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 25388  24F5  00FB               	movwf	??i1_send_2length_2bytes_IK
 25389  24F6  087B               	movf	??i1_send_2length_2bytes_IK,w
 25390  24F7  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 25391  24F8  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 25392  24F9  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 25393  24FA  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 25394  24FB  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 25395  24FC  319B  2317         	fcall	i1_send_last_2bytes_IK
 25396  24FE  0008               	return
 25397  24FF                     __end_ofi1_send_2length_2bytes_IK:	
 25398                           
 25399                           	psect	text159
 25400  1B17                     __ptext159:	
 25401 ;; *************** function i1_send_last_2bytes_IK *****************
 25402 ;; Defined at:
 25403 ;;		line 19 in file "LEDcomm.c"
 25404 ;; Parameters:    Size  Location     Type
 25405 ;;  data            2    0[COMMON] unsigned int 
 25406 ;;  latch_start     1    2[COMMON] unsigned char 
 25407 ;;  topOrBottom     2    3[COMMON] int 
 25408 ;; Auto vars:     Size  Location     Type
 25409 ;;  send_last_2b    2    9[COMMON] int 
 25410 ;; Return value:  Size  Location     Type
 25411 ;;                  1    wreg      void 
 25412 ;; Registers used:
 25413 ;;		wreg, status,2, status,0
 25414 ;; Tracked objects:
 25415 ;;		On entry : 0/0
 25416 ;;		On exit  : 0/0
 25417 ;;		Unchanged: 0/0
 25418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25419 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25421 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25422 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25423 ;;Total ram usage:       11 bytes
 25424 ;; Hardware stack levels used:    1
 25425 ;; This function calls:
 25426 ;;		Nothing
 25427 ;; This function is called by:
 25428 ;;		i1_send_2length_2bytes_IK
 25429 ;; This function uses a non-reentrant model
 25430 ;;
 25431                           
 25432                           
 25433                           ;psect for function i1_send_last_2bytes_IK
 25434  1B17                     i1_send_last_2bytes_IK:	
 25435                           
 25436                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25437                           
 25438                           ;incstack = 0
 25439 ;; hardware stack exceeded
 25440                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 25441  1B17  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25442  1B18  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25443  1B19  1D03               	btfss	3,2
 25444  1B1A  2B1E               	goto	i1l210
 25445  1B1B  0022               	movlb	2	; select bank2
 25446  1B1C  120D               	bcf	13,4	;volatile
 25447  1B1D  2B20               	goto	i1l5126
 25448  1B1E                     i1l210:	
 25449  1B1E  0022               	movlb	2	; select bank2
 25450  1B1F  100E               	bcf	14,0	;volatile
 25451  1B20                     i1l5126:	
 25452                           
 25453                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 25454  1B20  300F               	movlw	15
 25455  1B21  00F9               	movwf	i1send_last_2bytes_IK@j
 25456  1B22  3000               	movlw	0
 25457  1B23  00FA               	movwf	i1send_last_2bytes_IK@j+1
 25458  1B24  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 25459  1B25  2B57               	goto	i1l231
 25460  1B26                     i1l214:	
 25461                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 25462                           
 25463  1B26  110C               	bcf	12,2	;volatile
 25464                           
 25465                           ;LEDcomm.c: 28: if (data & 1 << j){
 25466  1B27  3001               	movlw	1
 25467  1B28  00F5               	movwf	??i1_send_last_2bytes_IK
 25468  1B29  3000               	movlw	0
 25469  1B2A  00F6               	movwf	??i1_send_last_2bytes_IK+1
 25470  1B2B  0A79               	incf	i1send_last_2bytes_IK@j,w
 25471  1B2C  2B2F               	goto	u388_24
 25472  1B2D                     u388_25:	
 25473  1B2D  35F5               	lslf	??i1_send_last_2bytes_IK,f
 25474  1B2E  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 25475  1B2F                     u388_24:	
 25476  1B2F  0B89               	decfsz	9,f
 25477  1B30  2B2D               	goto	u388_25
 25478  1B31  0870               	movf	i1send_last_2bytes_IK@data,w
 25479  1B32  0575               	andwf	??i1_send_last_2bytes_IK,w
 25480  1B33  00F7               	movwf	??i1_send_last_2bytes_IK+2
 25481  1B34  0871               	movf	i1send_last_2bytes_IK@data+1,w
 25482  1B35  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 25483  1B36  00F8               	movwf	??i1_send_last_2bytes_IK+3
 25484  1B37  0877               	movf	??i1_send_last_2bytes_IK+2,w
 25485  1B38  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 25486  1B39  1903               	btfsc	3,2
 25487  1B3A  2B3D               	goto	i1l220
 25488                           
 25489                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 25490  1B3B  150E               	bsf	14,2	;volatile
 25491                           
 25492                           ;LEDcomm.c: 30: }
 25493  1B3C  2B3E               	goto	i1l5134
 25494  1B3D                     i1l220:	
 25495                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 25496                           
 25497  1B3D  110E               	bcf	14,2	;volatile
 25498  1B3E                     i1l5134:	
 25499                           
 25500                           ;LEDcomm.c: 33: if( j == latch_start) {
 25501  1B3E  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 25502  1B3F  00F5               	movwf	??i1_send_last_2bytes_IK
 25503  1B40  01F6               	clrf	??i1_send_last_2bytes_IK+1
 25504  1B41  087A               	movf	i1send_last_2bytes_IK@j+1,w
 25505  1B42  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 25506  1B43  1D03               	skipz
 25507  1B44  2B47               	goto	u390_25
 25508  1B45  0879               	movf	i1send_last_2bytes_IK@j,w
 25509  1B46  0675               	xorwf	??i1_send_last_2bytes_IK,w
 25510  1B47                     u390_25:	
 25511  1B47  1D03               	skipz
 25512  1B48  2B50               	goto	i1l229
 25513                           
 25514                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 25515  1B49  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25516  1B4A  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25517  1B4B  1D03               	btfss	3,2
 25518  1B4C  2B4F               	goto	i1l227
 25519  1B4D  160D               	bsf	13,4	;volatile
 25520  1B4E  2B50               	goto	i1l229
 25521  1B4F                     i1l227:	
 25522  1B4F  140E               	bsf	14,0	;volatile
 25523  1B50                     i1l229:	
 25524                           ;LEDcomm.c: 37: }
 25525                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 25526                           
 25527  1B50  150C               	bsf	12,2	;volatile
 25528  1B51  30FF               	movlw	255
 25529  1B52  07F9               	addwf	i1send_last_2bytes_IK@j,f
 25530  1B53  30FF               	movlw	255
 25531  1B54  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 25532  1B55  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 25533  1B56  2B26               	goto	i1l214
 25534  1B57                     i1l231:	
 25535                           ;LEDcomm.c: 41: }
 25536                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 25537                           
 25538  1B57  110C               	bcf	12,2	;volatile
 25539                           
 25540                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25541  1B58  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25542  1B59  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25543  1B5A  1D03               	btfss	3,2
 25544  1B5B  2B5E               	goto	i1l237
 25545  1B5C  120D               	bcf	13,4	;volatile
 25546  1B5D  0008               	return
 25547  1B5E                     i1l237:	
 25548  1B5E  100E               	bcf	14,0	;volatile
 25549  1B5F  0008               	return
 25550  1B60                     __end_ofi1_send_last_2bytes_IK:	
 25551                           
 25552                           	psect	text160
 25553  27D7                     __ptext160:	
 25554 ;; *************** function i1_send_2bytes_latchless_IK *****************
 25555 ;; Defined at:
 25556 ;;		line 49 in file "LEDcomm.c"
 25557 ;; Parameters:    Size  Location     Type
 25558 ;;  data            2    0[COMMON] unsigned int 
 25559 ;; Auto vars:     Size  Location     Type
 25560 ;;  send_2bytes_    2    6[COMMON] int 
 25561 ;; Return value:  Size  Location     Type
 25562 ;;                  1    wreg      void 
 25563 ;; Registers used:
 25564 ;;		wreg, status,2, status,0
 25565 ;; Tracked objects:
 25566 ;;		On entry : 0/0
 25567 ;;		On exit  : 0/0
 25568 ;;		Unchanged: 0/0
 25569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25573 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25574 ;;Total ram usage:        8 bytes
 25575 ;; Hardware stack levels used:    1
 25576 ;; This function calls:
 25577 ;;		Nothing
 25578 ;; This function is called by:
 25579 ;;		i1_send_2length_2bytes_IK
 25580 ;; This function uses a non-reentrant model
 25581 ;;
 25582                           
 25583                           
 25584                           ;psect for function i1_send_2bytes_latchless_IK
 25585  27D7                     i1_send_2bytes_latchless_IK:	
 25586                           
 25587                           ;incstack = 0
 25588 ;; hardware stack exceeded
 25589                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 25590                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 25591  27D7  0022               	movlb	2	; select bank2
 25592  27D8  120D               	bcf	13,4	;volatile
 25593                           
 25594                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 25595  27D9  300F               	movlw	15
 25596  27DA  00F6               	movwf	i1send_2bytes_latchless_IK@j
 25597  27DB  3000               	movlw	0
 25598  27DC  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 25599  27DD  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 25600  27DE  2FFE               	goto	i1l256
 25601  27DF                     i1l246:	
 25602                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 25603                           
 25604  27DF  110C               	bcf	12,2	;volatile
 25605                           
 25606                           ;LEDcomm.c: 56: if (data & 1 << j){
 25607  27E0  3001               	movlw	1
 25608  27E1  00F2               	movwf	??i1_send_2bytes_latchless_IK
 25609  27E2  3000               	movlw	0
 25610  27E3  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 25611  27E4  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 25612  27E5  2FE8               	goto	u395_24
 25613  27E6                     u395_25:	
 25614  27E6  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 25615  27E7  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 25616  27E8                     u395_24:	
 25617  27E8  0B89               	decfsz	9,f
 25618  27E9  2FE6               	goto	u395_25
 25619  27EA  0870               	movf	i1send_2bytes_latchless_IK@data,w
 25620  27EB  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 25621  27EC  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 25622  27ED  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 25623  27EE  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 25624  27EF  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 25625  27F0  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 25626  27F1  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 25627  27F2  1903               	btfsc	3,2
 25628  27F3  2FF6               	goto	i1l252
 25629                           
 25630                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 25631  27F4  150E               	bsf	14,2	;volatile
 25632                           
 25633                           ;LEDcomm.c: 58: }
 25634  27F5  2FF7               	goto	i1l254
 25635  27F6                     i1l252:	
 25636                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 25637                           
 25638  27F6  110E               	bcf	14,2	;volatile
 25639  27F7                     i1l254:	
 25640                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 25641                           
 25642  27F7  150C               	bsf	12,2	;volatile
 25643  27F8  30FF               	movlw	255
 25644  27F9  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 25645  27FA  30FF               	movlw	255
 25646  27FB  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 25647  27FC  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 25648  27FD  2FDF               	goto	i1l246
 25649  27FE                     i1l256:	
 25650                           ;LEDcomm.c: 64: }
 25651                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 25652                           
 25653  27FE  110C               	bcf	12,2	;volatile
 25654  27FF  0008               	return
 25655  2800                     __end_ofi1_send_2bytes_latchless_IK:	
 25656                           
 25657                           	psect	text161
 25658  22D6                     __ptext161:	
 25659 ;; *************** function _TMR0_Write8bitTimer *****************
 25660 ;; Defined at:
 25661 ;;		line 107 in file "mcc_generated_files/tmr0.c"
 25662 ;; Parameters:    Size  Location     Type
 25663 ;;  timerVal        1    wreg     unsigned char 
 25664 ;; Auto vars:     Size  Location     Type
 25665 ;;  timerVal        1    0[COMMON] unsigned char 
 25666 ;; Return value:  Size  Location     Type
 25667 ;;                  1    wreg      void 
 25668 ;; Registers used:
 25669 ;;		wreg
 25670 ;; Tracked objects:
 25671 ;;		On entry : 0/0
 25672 ;;		On exit  : 0/0
 25673 ;;		Unchanged: 0/0
 25674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25679 ;;Total ram usage:        1 bytes
 25680 ;; Hardware stack levels used:    1
 25681 ;; This function calls:
 25682 ;;		Nothing
 25683 ;; This function is called by:
 25684 ;;		_TMR0_DefaultInterruptHandler
 25685 ;; This function uses a non-reentrant model
 25686 ;;
 25687                           
 25688                           
 25689                           ;psect for function _TMR0_Write8bitTimer
 25690  22D6                     _TMR0_Write8bitTimer:	
 25691                           
 25692                           ;incstack = 0
 25693                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 25694                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 25695  22D6  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 25696                           
 25697                           ;tmr0.c: 110: TMR0L = timerVal;
 25698  22D7  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 25699  22D8  0020               	movlb	0	; select bank0
 25700  22D9  0095               	movwf	21	;volatile
 25701  22DA  0008               	return
 25702  22DB                     __end_of_TMR0_Write8bitTimer:	
 25703                           
 25704                           	psect	text162
 25705  2269                     __ptext162:	
 25706 ;; *************** function _TMR0_StopTimer *****************
 25707 ;; Defined at:
 25708 ;;		line 91 in file "mcc_generated_files/tmr0.c"
 25709 ;; Parameters:    Size  Location     Type
 25710 ;;		None
 25711 ;; Auto vars:     Size  Location     Type
 25712 ;;		None
 25713 ;; Return value:  Size  Location     Type
 25714 ;;                  1    wreg      void 
 25715 ;; Registers used:
 25716 ;;		None
 25717 ;; Tracked objects:
 25718 ;;		On entry : 0/0
 25719 ;;		On exit  : 0/0
 25720 ;;		Unchanged: 0/0
 25721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25726 ;;Total ram usage:        0 bytes
 25727 ;; Hardware stack levels used:    1
 25728 ;; This function calls:
 25729 ;;		Nothing
 25730 ;; This function is called by:
 25731 ;;		_TMR0_DefaultInterruptHandler
 25732 ;; This function uses a non-reentrant model
 25733 ;;
 25734                           
 25735                           
 25736                           ;psect for function _TMR0_StopTimer
 25737  2269                     _TMR0_StopTimer:	
 25738                           
 25739                           ;tmr0.c: 94: T0CON0bits.T0EN = 0;
 25740                           
 25741                           ;incstack = 0
 25742                           ; Regs used in _TMR0_StopTimer: []
 25743  2269  0020               	movlb	0	; select bank0
 25744  226A  1397               	bcf	23,7	;volatile
 25745  226B  0008               	return
 25746  226C                     __end_of_TMR0_StopTimer:	
 25747                           
 25748                           	psect	text163
 25749  25BB                     __ptext163:	
 25750 ;; *************** function _EUSART_Transmit_ISR *****************
 25751 ;; Defined at:
 25752 ;;		line 161 in file "mcc_generated_files/eusart.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;		None
 25755 ;; Auto vars:     Size  Location     Type
 25756 ;;		None
 25757 ;; Return value:  Size  Location     Type
 25758 ;;                  1    wreg      void 
 25759 ;; Registers used:
 25760 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25761 ;; Tracked objects:
 25762 ;;		On entry : 0/0
 25763 ;;		On exit  : 0/0
 25764 ;;		Unchanged: 0/0
 25765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25770 ;;Total ram usage:        1 bytes
 25771 ;; Hardware stack levels used:    1
 25772 ;; This function calls:
 25773 ;;		Nothing
 25774 ;; This function is called by:
 25775 ;;		_INTERRUPT_InterruptManager
 25776 ;; This function uses a non-reentrant model
 25777 ;;
 25778                           
 25779                           
 25780                           ;psect for function _EUSART_Transmit_ISR
 25781  25BB                     _EUSART_Transmit_ISR:	
 25782                           
 25783                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 25784                           
 25785                           ;incstack = 0
 25786                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25787  25BB  3008               	movlw	8
 25788  25BC  0020               	movlb	0	; select bank0
 25789  25BD  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 25790  25BE  1803               	skipnc
 25791  25BF  2DD6               	goto	i1l427
 25792                           
 25793                           ;eusart.c: 166: {
 25794                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 25795  25C0  0859               	movf	_eusartTxTail,w
 25796  25C1  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 25797  25C2  0086               	movwf	6
 25798  25C3  3001               	movlw	1	; select bank3/4
 25799  25C4  0087               	movwf	7
 25800  25C5  0801               	movf	1,w
 25801  25C6  0023               	movlb	3	; select bank3
 25802  25C7  009A               	movwf	26	;volatile
 25803  25C8  3001               	movlw	1
 25804  25C9  00F0               	movwf	??_EUSART_Transmit_ISR
 25805  25CA  0870               	movf	??_EUSART_Transmit_ISR,w
 25806  25CB  0020               	movlb	0	; select bank0
 25807  25CC  07D9               	addwf	_eusartTxTail,f	;volatile
 25808                           
 25809                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 25810  25CD  3008               	movlw	8
 25811  25CE  0259               	subwf	_eusartTxTail,w	;volatile
 25812  25CF  1803               	btfsc	3,0
 25813                           
 25814                           ;eusart.c: 169: {
 25815                           ;eusart.c: 170: eusartTxTail = 0;
 25816  25D0  01D9               	clrf	_eusartTxTail	;volatile
 25817                           
 25818                           ;eusart.c: 171: }
 25819                           ;eusart.c: 172: eusartTxBufferRemaining++;
 25820  25D1  3001               	movlw	1
 25821  25D2  00F0               	movwf	??_EUSART_Transmit_ISR
 25822  25D3  0870               	movf	??_EUSART_Transmit_ISR,w
 25823  25D4  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 25824                           
 25825                           ;eusart.c: 173: }
 25826  25D5  0008               	return
 25827  25D6                     i1l427:	
 25828                           
 25829                           ;eusart.c: 174: else
 25830                           ;eusart.c: 175: {
 25831                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 25832  25D6  0021               	movlb	1	; select bank1
 25833  25D7  1211               	bcf	17,4	;volatile
 25834  25D8  0008               	return
 25835  25D9                     __end_of_EUSART_Transmit_ISR:	
 25836                           
 25837                           	psect	text164
 25838  2566                     __ptext164:	
 25839 ;; *************** function _EUSART_Receive_ISR *****************
 25840 ;; Defined at:
 25841 ;;		line 180 in file "mcc_generated_files/eusart.c"
 25842 ;; Parameters:    Size  Location     Type
 25843 ;;		None
 25844 ;; Auto vars:     Size  Location     Type
 25845 ;;		None
 25846 ;; Return value:  Size  Location     Type
 25847 ;;                  1    wreg      void 
 25848 ;; Registers used:
 25849 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25850 ;; Tracked objects:
 25851 ;;		On entry : 0/0
 25852 ;;		On exit  : 0/0
 25853 ;;		Unchanged: 0/0
 25854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25859 ;;Total ram usage:        1 bytes
 25860 ;; Hardware stack levels used:    1
 25861 ;; This function calls:
 25862 ;;		Nothing
 25863 ;; This function is called by:
 25864 ;;		_INTERRUPT_InterruptManager
 25865 ;; This function uses a non-reentrant model
 25866 ;;
 25867                           
 25868                           
 25869                           ;psect for function _EUSART_Receive_ISR
 25870  2566                     _EUSART_Receive_ISR:	
 25871                           
 25872                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 25873                           
 25874                           ;incstack = 0
 25875                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25876  2566  0023               	movlb	3	; select bank3
 25877  2567  1C9D               	btfss	29,1	;volatile
 25878  2568  2D6B               	goto	i1l6388
 25879                           
 25880                           ;eusart.c: 184: {
 25881                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 25882  2569  121D               	bcf	29,4	;volatile
 25883                           
 25884                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 25885  256A  161D               	bsf	29,4	;volatile
 25886  256B                     i1l6388:	
 25887                           
 25888                           ;eusart.c: 189: }
 25889                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 25890  256B  0819               	movf	25,w	;volatile
 25891  256C  00F0               	movwf	??_EUSART_Receive_ISR
 25892  256D  0020               	movlb	0	; select bank0
 25893  256E  0858               	movf	_eusartRxHead,w
 25894  256F  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 25895  2570  0086               	movwf	6
 25896  2571  3001               	movlw	1	; select bank3/4
 25897  2572  0087               	movwf	7
 25898  2573  0870               	movf	??_EUSART_Receive_ISR,w
 25899  2574  0081               	movwf	1
 25900  2575  3001               	movlw	1
 25901  2576  00F0               	movwf	??_EUSART_Receive_ISR
 25902  2577  0870               	movf	??_EUSART_Receive_ISR,w
 25903  2578  07D8               	addwf	_eusartRxHead,f	;volatile
 25904                           
 25905                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 25906  2579  3008               	movlw	8
 25907  257A  0258               	subwf	_eusartRxHead,w	;volatile
 25908  257B  1803               	btfsc	3,0
 25909                           
 25910                           ;eusart.c: 194: {
 25911                           ;eusart.c: 195: eusartRxHead = 0;
 25912  257C  01D8               	clrf	_eusartRxHead	;volatile
 25913                           
 25914                           ;eusart.c: 196: }
 25915                           ;eusart.c: 197: eusartRxCount++;
 25916  257D  3001               	movlw	1
 25917  257E  00F0               	movwf	??_EUSART_Receive_ISR
 25918  257F  0870               	movf	??_EUSART_Receive_ISR,w
 25919  2580  07D6               	addwf	_eusartRxCount,f	;volatile
 25920  2581  0008               	return
 25921  2582                     __end_of_EUSART_Receive_ISR:	
 25922  007E                     btemp	set	126	;btemp
 25923  007E                     int$flags	set	126
 25924  007E                     wtemp0	set	126


Data Sizes:
    Strings     556
    Constant    1048
    Data        44
    BSS         162
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     57      79
    BANK2            80      0      80
    BANK3            80      0      59
    BANK4            80     28      60
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           16      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2c_ISR$2737	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S929$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_78(CODE[5]), STR_77(CODE[5]), STR_76(CODE[7]), STR_75(CODE[8]), 
		 -> STR_74(CODE[5]), STR_73(CODE[5]), STR_72(CODE[13]), STR_71(CODE[7]), 
		 -> STR_70(CODE[8]), STR_69(CODE[15]), STR_68(CODE[14]), STR_67(CODE[12]), 
		 -> STR_66(CODE[8]), STR_65(CODE[8]), STR_64(CODE[2]), STR_63(CODE[5]), 
		 -> STR_62(CODE[5]), STR_61(CODE[2]), STR_60(CODE[4]), STR_59(CODE[4]), 
		 -> STR_58(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_80(CODE[23]), STR_79(CODE[3]), STR_55(CODE[17]), STR_54(CODE[17]), 
		 -> STR_53(CODE[18]), STR_52(CODE[18]), STR_51(CODE[17]), STR_50(CODE[28]), 
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[25]), STR_46(CODE[11]), 
		 -> STR_45(CODE[8]), STR_44(CODE[8]), STR_43(CODE[8]), STR_42(CODE[31]), 
		 -> STR_41(CODE[11]), STR_40(CODE[8]), STR_39(CODE[8]), STR_38(CODE[8]), 
		 -> STR_37(CODE[26]), STR_36(CODE[30]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[4]), STR_30(CODE[2]), 
		 -> STR_29(CODE[4]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[27]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[4]), 
		 -> STR_13(CODE[3]), STR_12(CODE[16]), STR_11(CODE[11]), STR_10(CODE[16]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[8]), 
		 -> STR_5(CODE[13]), STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[2]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    S929$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S929$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S929$data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _main_initialize->_LEDsPwr
    _drv_init->_drv_write
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _drv_reset->_drv_write
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setHeaterPreTime->___ftadd
    _setHeaterPostTime->___ftadd
    _setDrvPiezoOnTime->___ftadd
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _setDrvGain->_drv_write
    _commCheck->_LED_testComm
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_setBrightnessRange
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _doMove->_LEDsOn
    _drv_write_DC->_drv_write
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _main->_doRelMove
    _main_initialize->___fttol
    _drv_init->_drv_reset
    _execCmd->_commCheck
    _zeroPosition->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->___fttol
    _setHeaterPostTime->___fttol
    _setDrvPiezoOnTime->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _setDrvPeak->_printf
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _drv_read->_printf
    _drv_write->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  386995
                                             56 BANK1      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                    _main_initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    6762
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2132
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1920
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1564
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _main_initialize                                      2     2      0   49985
                                             29 BANK1      2     2      0
             _LED_setBrightnessRange
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _drv_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drv_init                                             5     1      4   24276
                                             22 BANK1      5     1      4
                          _drv_reset
                          _drv_write
                           _i2c_open
                     _i2c_setAddress
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddress                                       2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     216
                                             19 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setI2cISR                                2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setBusCollisionISR                       2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drv_reset                                            1     1      0    8893
                                             21 BANK1      1     1      0
                          _drv_write
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              1     1      0  243678
                                             52 BANK1      1     1      0
                          _commCheck
                             _doMove
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        12    10      2    6166
                                             41 BANK0      2     2      0
                                             21 BANK1     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    6144
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                          8     4      4    6314
                                             41 BANK0      4     4      0
                                             21 BANK1      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9324
                                             21 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9728
                                             21 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4   10040
                                             21 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     4     2      2   19247
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2   19247
                                             29 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   19247
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     687
                                             15 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4540
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4855
                                             41 BANK0      4     4      0
                                              6 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2999
                                             25 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   15083
                                             21 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           12     8      4    6314
                                             21 BANK1     12     8      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          6     4      2    6206
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    6135
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    6036
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    6135
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   39654
                                             49 BANK1      3     1      2
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                  11     7      4   12991
                                             21 BANK1     11     7      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12523
                                             44 BANK0      2     2      0
                                             41 BANK1      8     6      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (2) _LED_setBrightnessRange                              25    21      4    3476
                                             36 BANK0      8     4      4
                                              0 BANK1     17    17      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8698
                                             41 BANK0      1     1      0
                                             37 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         16    12      4    6203
                                             21 BANK1     16    12      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                           18    18      0   40008
                                             38 BANK1     18    18      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           36    36      0   40330
                                             38 BANK1      8     8      0
                                              0 BANK4     28    28      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                               7     5      2   33712
                                             31 BANK1      7     5      2
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                     _calcHeaterPins
                       _drv_write_DC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4   23876
                                             24 BANK1      7     3      4
                            ___awdiv
                          _drv_write
                         _fifo_check
                             _printf
 ---------------------------------------------------------------------------------
 (4) _fifo_check                                           2     2      0    8138
                                             45 BANK0      1     1      0
                                             23 BANK1      1     1      0
                           _drv_read
 ---------------------------------------------------------------------------------
 (5) _drv_read                                             6     4      2    8104
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8893
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    6036
                                              0 BANK1     21    15      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     832
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     556
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    3726
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0    1490
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     778
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0     778
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (15) i1_LEDsOn                                           10     4      6     756
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_2length_2bytes_IK                            8     1      7     586
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (17) i1_send_last_2bytes_IK                              11     6      5     278
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (17) i1_send_2bytes_latchless_IK                          8     6      2     116
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_Write8bitTimer                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _main_initialize
     _LED_setBrightnessRange
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _drv_init
       _drv_reset
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _i2c_open
         _i2c1_driver_open
         _i2c1_driver_setBusCollisionISR
         _i2c1_driver_setI2cISR
         _mssp1_clearIRQ
       _i2c_setAddress
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     39      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3B      11       73.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     1C      3C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     163      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     163      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              10      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 30 12:11:09 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
        __end_of_TMR2_SetInterruptHandler 2391                                         pc 0002  
            __end_ofdrv2665@drv_fifo_sine 11E8                    setLEDBrightnessRange@r 00B5  
           _do_I2C_SEND_RESTART$intlevel0 234A                         ??_getMotionStatus 0049  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0037  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 2346  
                            _startAbsMove 259E                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 2269                              ___ftadd@exp1 00AE  
                            ___ftadd@exp2 00AD                               i1_do_I2C_RX 1988  
                             i1_do_I2C_TX 1C46                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00AC                                       l210 1DE3  
                                     l202 1428                                       l220 1E06  
                                     l214 1DEC                                       l231 1E26  
                                     l303 1ECC                                       l227 1E1B  
                                     l252 18B4                                       l500 23F7  
                                     l237 1E30                                       l229 1E1D  
                                     l254 18B6                                       l246 189A  
                                     l415 2799                                       l256 18BE  
                                     l279 151F                                       l299 1E9E  
                                     l745 1E64                                       l761 1AAA  
                                     _PR2 001E                              __CFG_CPD$OFF 0000  
                i1_do_I2C_DO_NACK_RESTART 22C2              __size_of_i2c_masterOperation 0024  
                    _returnStop$intlevel0 22FE                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 2484                     __size_of_do_I2C_RESET 000B  
                                     wreg 0009                              _startRelMove 254B  
                         _setHeaterToggle 09C1                     __end_ofi1_returnReset 0004  
                         ?i1_mssp1_setIRQ 0070                        i1_i2c1_driver_stop 2278  
         i2c1_driver_setBusCollisionISR@f 0031                                      S8608 1800  
                setLEDBrightnessRange@tOB 00B7                         setDrvGain@setGain 00B8  
                            ?_EUSART_Read 0070                                      l2031 2531  
                                    l1307 1CDE                                      l1092 09BB  
                                    l1086 0977                                      l1089 09A5  
                                    l1460 06C7                                      l1461 071D  
                                    l1455 06C5                                      l1458 06E6  
                                    l1476 07D2                                      l1741 14C1  
                                    l1742 14C9                                      l1734 14AE  
                                    l1558 258B                                      l1825 091E  
                           i1returnStop@p 0070                                      l1765 0E6A  
                                    l7002 2362                                      l6202 15E7  
                                    l5260 1CFA                                      l7100 1E43  
                                    l6212 1624                                      l6204 15EB  
                                    l5270 1D02                                      l5254 1CEF  
                                    l7014 22FE                                      l6206 1614  
                                    l6142 13D5                                      l5272 1D0E  
                                    l7024 23E2                                      l7008 236A  
                                    l5600 08CA                                      l5282 1D29  
                                    l7018 2304                                      l7034 2395  
                                    l7042 241A                                      l7050 23ED  
                                    l7114 1E85                                      l7106 1E46  
                                    l6412 2637                                      l7132 1AAC  
                                    l7212 23FF                                      l7220 1D99  
                                    l7300 06C9                                      l8004 1755  
                                    l8012 177B                                      l5620 0908  
                                    l6172 1957                                      l6164 1414  
                                    l6156 13F1                                      l6148 13DA  
                                    l5286 1D31                                      l5278 1D20  
                                    l7150 186C                                      l7142 1AB2  
                                    l7118 1A90                                      l7230 1DC7  
                                    l7222 1DA7                                      l8006 1771  
                                    l5438 2585                                      l6174 195F  
                                    l6166 1415                                      l6510 05ED  
                                    l6502 05CF                                      l7144 1866  
                                    l7080 07E3                                      l7072 07D7  
                                    l7136 1AAF                                      l5632 092F  
                                    l8024 165F                                      l8032 168F  
                                    l6184 15C2                                      l7146 1869  
                                    l7162 1873                                      l7058 23BA  
                                    l7066 235A                                      l7234 1DD2  
                                    l7250 1A35                                      l7322 072C  
                                    l8050 1BEF                                      l5626 0915  
                                    l5618 08FA                                      l8026 1685  
                                    l5458 2461                                      l6186 15BA  
                                    l5642 2471                                      l6178 1982  
                                    l5650 18FE                                      l6530 0638  
                                    l6522 061A                                      l6514 05FC  
                                    l6506 05DE                                      l7260 1DE5  
                                    l7156 1870                                      l7076 07E0  
                                    l7092 1E3D                                      l7244 1A0F  
                                    l7180 27AE                                      l7332 0743  
                                    l7308 06F7                                      l7420 1B0B  
                                    l7412 1AED                                      l8044 1BB3  
                                    l5628 0921                                      l6196 15DF  
                                    l6188 15C7                                      l5660 18C6  
                                    l7086 07E6                                      l7246 1A1D  
                                    l7254 1A40                                      l7166 278E  
                                    l7342 0778                                      l7326 073D  
                                    l7350 06A6                                      l8310 0F84  
                                    l7430 0C0A                                      l8062 1C00  
                                    l8230 03A0                                      l5662 18CE  
                                    l5654 191C                                      l6542 066C  
                                    l6534 0647                                      l6526 0629  
                                    l6518 060B                                      l6470 0557  
                                    l6462 0534                                      l7096 1E40  
                                    l7088 1E37                                      l7440 0CC3  
                                    l8080 26EA                                      l8240 03FB  
                                    l8232 03B4                                      l5648 18F6  
                                    l6552 0697                                      l6544 0672  
                                    l7370 2737                                      l7338 0770  
                                    l8090 0A75                                      l8250 047A  
                                    l8242 040F                                      l8234 03BF  
                                    l8226 0378                                      l5666 18EC  
                                    l6538 0656                                      l6490 05A2  
                                    l6482 0584                                      l6474 0566  
                                    l6466 0548                                      l7268 1E08  
                                    l7196 27C6                                      l7188 27B5  
                                    l7348 077E                                      l8340 0146  
                                    l7532 1542                                      l8076 26DA  
                                    l8084 26F2                                      l8068 1C3C  
                                    l7612 26C2                                      l8260 04D5  
                                    l8252 0497                                      l8244 0423  
                                    l8236 03D3                                      l8228 038C  
                                    l6548 0684                                      l7374 2741  
                                    l7462 2482                                      l7526 1533  
                                    l8094 0ABE                                      l8078 26E2  
                                    l7470 1484                                      l7622 0DEA  
                                    l7710 0D4E                                      l8262 04E0  
                                    l8254 04B4                                      l8246 0440  
                                    l8238 03E7                                      l6494 05B1  
                                    l6486 0593                                      l6478 0575  
                                    l7368 2731                                      l7296 06C2  
                                    l8344 0158                                      l8336 00D4  
                                    l7528 153B                                      l7632 0E03  
                                    l8264 04EB                                      l8256 04BF  
                                    l8248 045D                                      l8370 02BA  
                                    l8290 0EF9                                      l7538 084C  
                                    l8098 0B0B                                      l8610 1A6A  
                                    l7474 148B                                      l7650 0E32  
                                    l7626 0DF2                                      l7722 0D74  
                                    l7714 0D5C                                      l8266 04F3  
                                    l8258 04CA                                      l6498 05C0  
                                    l8364 0186                                      l8292 0F09  
                                    l7484 14B3                                      l7476 1495  
                                    l7652 0E3E                                      l7644 0E1F  
                                    l8268 04FB                                      l7830 098D  
                                    l8358 0177                                      l7910 1A54  
                                    l7486 14BB                                      l7478 149A  
                                    l7662 0E5A                                      l7654 0E43  
                                    l7726 0D82                                      l8470 1569  
                                    l7912 1A59                                      l7904 1A4D  
                                    l7920 1A65                                      l7672 0E8E  
                                    l7664 0E66                                      l7656 0E47  
                                    l8480 1590                                      l7906 1A50  
                                    l7922 1A78                                      l7682 0EA9  
                                    l8490 1562                                      l8482 1595  
                                    l7596 1C9D                                      l7908 1A52  
                                    l7668 0E7C                                      l7692 0CED  
                                    l8492 1566                                      l6990 234A  
                                    l7598 1CD1                                      l7870 16F4  
                                    l6984 2342                                      l8496 15AE  
            TMR0_Load8bitPeriod@periodVal 0031                                      l6978 233A  
                                    l7890 1A00                                      l7698 0D06  
                                    l7874 1706                                      l7866 16AC  
                                    l6996 2352                                      l7990 0A31  
                                    l7984 09F6                           __end_of_LEDsPwr 147B  
                                    STR_1 2A5F                                      STR_2 2863  
                                    STR_3 294B                       drv_init@output_gain 00B6  
                                    STR_4 2979                                      STR_5 291E  
                                    STR_6 2A13                                      STR_7 2A69  
                                    STR_8 2A69                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u4305 1D21                                      u4265 1D05  
                                    u4515 258C                                      u7100 0C2A  
                                    _PMD0 0911                                      u4285 1D0F  
                                    u4525 2591                                      _PMD1 0912  
                                    u7110 0C41                                      _PMD2 0913  
                                    u4295 1D19                                      _PMD3 0914  
                                    u7120 0C42                                      _PMD4 0915  
                                    _PMD5 0916                                      u7034 1EAC  
                                    u7130 0C57                                      u8010 164D  
                                    u7035 1EAA                                      u7115 0C3D  
                                    u7140 0C58                                      u8020 1670  
                                    u7135 0C53                                      u7215 1490  
                                    u8015 1649                                      u8200 0F56  
                                    u7400 088B                                      u8040 1BCF  
                                    u8025 166C                                      u7090 0C29  
                                    u7410 08A5                                      u7075 26A0  
                                    u7155 0C90                                      u8115 0B04  
                                    u7235 14A9                                      u7315 1421  
                                    u8300 013C                                      u7420 08A6  
                                    u8045 1BCA                                      u7325 1436  
                                    u8310 013D                                      u8230 0FC6  
                                    u8070 1C1C                                      u7095 0C25  
                                    u7255 14B6                                      u4935 08D1  
                                    u7335 145E                                      u8400 0265  
                                    u8240 0FD0                                      u6705 1A12  
                                    u8305 0138                                      u8225 0FAD  
                                    u8250 0FD1                                      u6635 1D9C  
                                    u8235 0FC2                                      u8075 1C17  
                                    u8500 033A                                      u8420 0288  
                                    u8180 0F4B                                      u6725 1A2B  
                                    u7445 1CBC                                      u8325 0156  
                                    u4965 08FB                                      u8414 026D  
                                    u8350 01D3                                      u8190 0F55  
                                    u7390 088A                      ?_do_I2C_SEND_RESTART 0070  
                                    u6655 1DA8                                      u6735 1A36  
                                    u8415 026B                                      u8175 0F32  
                                    u7391 0888                                      u7295 14D0  
                                    u8360 01D4                                      u8280 00F4  
                                    u6665 1DBC                                      u8425 0284  
                                    u8353 01CF                                      u8345 0184  
                                    u8185 0F47                                      u7625 0E48  
                                    u8450 02ED                                      u6675 1DC8  
                                    u8435 02B8                                      u8275 00D2  
                                    u4995 0916                                      u6844 18A5  
                                    u8460 02FF                                      u8380 01F8  
                                    u6845 18A3                                      u8445 02CB  
                                    u8285 00F0                                      u7565 0E20  
                                    u7805 0D8A                                      u7725 0D16  
                                    u6774 1DF7                                      u8470 0300  
                                    u8390 0264                                      u8374 01DD  
                                    u7910 09D4                                      u6775 1DF5  
                                    u6935 0766                                      u8455 02E9  
                                    u8375 01DB                                      u7655 0E5B  
                                    u7735 0D28                                      u8480 0327  
                                    u7825 0981                                      u8393 0260  
                                    u8385 01F4                                      u8490 0339  
                                    u7930 0A0A                                      u7850 16C5  
                                    u6795 1E12                                      u7835 09AF  
                                    u7595 0E33                                      u7755 0D5D  
                                    u7915 09D0                                      u7940 1728  
                                    u8485 0323                                      u7765 0D64  
                                    u7845 16AA                                      u7935 0A06  
                                    u7855 16C1                                      u8807 1FBD  
                                    u7945 1724                                      u8817 1FCC  
                                    u7970 174A                                      u7795 0D83  
                                    u7875 1704                                      u8827 1FE0  
                                    u7980 1763                                      u8837 1FF3  
                                    u8847 1EC2                                      u7895 19D5  
                                    u7975 1746                                      u8857 0984  
                                    u7985 175F                                      u8867 09B2  
                                    u7995 1635                                      u8787 1550  
                                    u8877 1AEE                                      u8797 1FB1  
                                    u8887 23FB                                      _TMR2 001D  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0008  
                     ?i1_i2c1_driver_stop 0070                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _atoi 15B8                                      _main 1549  
                            ___ftpack@arg 0031                 __size_of_do_I2C_SEND_STOP 0008  
                  __size_of_do_I2C_DO_ACK 0008                              ___ftpack@exp 0034  
                         _TMR0_StartTimer 2287                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                       ??i1_do_I2C_DO_ACK 0070                             __CFG_BOREN$ON 0000  
                            ?_LED_getData 00B5                   i1_i2c1_driver_getRXData 227E  
                   ?_do_I2C_SEND_ADR_READ 0070                             __CFG_BORV$LOW 0000  
         ??_i2c1_driver_clearBusCollision 0070                                      start 0050  
                        _setHeaterPreTime 1F42                     __size_of_zeroPosition 0075  
                           _i2c_setBuffer 24D2                    LED_test_openshort@type 00B5  
                 ??_setLEDBrightnessRange 004C                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                              ___ftmul@cntr 00A4  
                _send_2bytes_latchless_IK 1891                           __end_of_i2c_ISR 27D7  
                            ___ftmul@sign 00A5                  ??_do_I2C_DO_NACK_RESTART 0031  
                           i1_do_I2C_IDLE 22E5                              ___fttol@exp1 00BC  
                           i1_do_I2C_RCEN 22F4                              ___fttol@lval 00B8  
                 __end_of_TMR0_Initialize 24BD                              _do_I2C_RESET 23DE  
                          i1returnReset@p 0070              __size_of_TMR0_Write8bitTimer 0005  
          ??_TMR0_DefaultInterruptHandler 007C                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 23B6  
                    ??i1_i2c1_driver_stop 0070                                     ?_atoi 0037  
                __end_of_i2c1_driver_open 23DE                                     ?_main 0070  
                         __end_of___awdiv 1D36                  __end_of_i2c1_driver_stop 2296  
                         __end_of___ftadd 0ECF                                     STR_10 293B  
                                   STR_11 29BB                                     STR_20 2A69  
                                   STR_12 292B                                     STR_21 2A69  
                                   STR_13 2A69                                     STR_30 2863  
                                   STR_22 2A69                                     STR_14 2A5B  
                                   STR_15 2A69                                     STR_31 2A5F  
                                   STR_23 2881                                     STR_32 2863  
                                   STR_24 2A69                                     STR_16 2A6C  
                                   STR_40 2A1B                                     STR_25 2A69  
                                   STR_17 2A69                                     STR_33 2A75  
                                   STR_41 29C6                             __CFG_WDTE$OFF 0000  
                                   STR_18 2A69                                     STR_26 2A6C  
                                   STR_34 2A34                                     STR_50 2865  
                                   STR_42 2828                      send_last_2bytes_IK@j 003A  
                                   STR_27 2A69                                     STR_19 2A69  
                                   STR_43 2A0B                                     STR_35 2A73  
                                   STR_51 291A                                     STR_44 2A03  
                                   STR_28 2A6C                                     STR_60 2A57  
                                   STR_52 28E6                                     STR_36 2847  
                                   STR_53 28E6                                     STR_45 2A1B  
                                   STR_29 2A5F                                     STR_61 2A55  
                                   STR_37 289C                                     STR_46 29C6  
                                   STR_62 2A36                                     STR_38 2A0B  
                                   STR_70 29F3                                     STR_54 28F8  
                                   STR_63 2A40                                     STR_71 2A2A  
                                   STR_39 2A03                                     STR_55 2909  
                                   STR_47 28B6                                     STR_56 2A21  
                                   STR_64 2A71                                     STR_48 29DA  
                                   STR_72 2996                                     STR_80 28CF  
                                   STR_57 2A21                                     STR_73 2A31  
                                   STR_65 29E3                                     STR_49 29D1  
                                   STR_58 2A4F                                     STR_74 2A3B  
                                   STR_66 29EB                                     STR_59 2A53  
                                   STR_75 29FB                                     STR_67 29AF  
                                   STR_76 2A23                                     STR_68 2988  
                                   STR_77 2A4A                                     STR_69 296A  
                                   STR_78 2A45                                     STR_79 28E3  
                         __end_of___lldiv 1DDB                           __end_of___ftmul 0DB5  
                         ___awdiv@divisor 0031                           __end_of___llmod 1A49  
                         __end_of___fttol 0938                                     _T2CON 001F  
              __end_of_i2c1_driver_TXData 230C                            __CFG_DEBUG$OFF 0000  
                        __end_ofi1_LEDsOn 2696                                     i1l210 1B1E  
                                   i1l220 1B3D                                     i1l214 1B26  
                                   i1l231 1B57                                     i1l227 1B4F  
                                   i1l252 27F6                                     i1l237 1B5E  
                                   i1l229 1B50                                     i1l254 27F7  
                                   i1l246 27DF                                     i1l351 0013  
                                   i1l256 27FE                                     i1l360 0043  
                                   i1l354 0022                                     i1l427 25D6  
                                   i1l356 002F                                     i1l365 004B  
                                   i1l358 0039                                     i1l745 1C72  
                                   i1l761 19A2                           ___awdiv@counter 0036  
                        __end_of_LEDpower 2A71                                     _OSCEN 091D  
                                   _TMR0H 0016                                     _TMR0L 0015  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                        __end_ofsin@coeff_a 296A  
                      __end_ofsin@coeff_b 29AF         __size_of_TMR0_SetInterruptHandler 0009  
           i1send_2length_2bytes_IK@data1 0020             i1send_2length_2bytes_IK@data2 0022  
               ?_TMR0_SetInterruptHandler 0031                               i2c_open@ret 0034  
                        __end_of_TMR0_ISR 2447                          __end_of_TMR2_ISR 2454  
                         __end_of_execCmd 050E                        __size_ofi1_i2c_ISR 0020  
                           ___awtoft@sign 003E                __end_of_i2c1_driver_isNACK 1838  
                         __end_of_dpowers 2828                            _WDT_Initialize 22C6  
                                   _errno 0162                           __end_of_isdigit 2463  
            ?i1_do_I2C_SEND_RESTART_WRITE 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                           ___ftpack@sign 0035                                     atoi@a 003C  
                                   atoi@s 003E                                     _putch 230C  
                   ??_do_I2C_SEND_RESTART 0031                 send_2bytes_latchless_IK@j 0037  
                       ?i1_mssp1_clearIRQ 0070    __end_of_i2c1_driver_setBusCollisionISR 23A3  
 __size_of_i2c1_driver_setBusCollisionISR 0009            _i2c1_driver_setBusCollisionISR 239A  
                            _zeroPosition 169C                                     pclath 000A  
                      setDrvPiezoOnTime@t 00BD                   __size_of_mssp1_clearIRQ 0003  
                    i1_i2c1_driver_TXData 22E0        __end_ofi1_send_2bytes_latchless_IK 2800  
              i1_send_2bytes_latchless_IK 27D7                      setLEDPwr@topOrBottom 00B7  
                          _i2c_setAddress 236E                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                        ??i1_mssp1_clearIRQ 0070  
                                   wtemp0 007E                           _TMR2_StartTimer 228A  
                         __end_of_stricmp 1988          __size_of_TMR2_LoadPeriodRegister 0005  
                         __end_of_strcspn 18F1                           __end_of_toupper 2473  
                       ??_main_initialize 00BD                            ?_i2c_setBuffer 0031  
                     _send_last_2bytes_IK 1DDB                      i1_i2c1_driver_isNACK 240A  
                       _setHeaterPostTime 1D36                             _fsmStateTable 0220  
                         __initialization 0052            __size_ofi1_do_I2C_SEND_RESTART 0004  
                              _i2c_poller 23FF             __end_ofi1_do_I2C_SEND_RESTART 22B6  
                          _remainingSteps 013E                              __end_of_atoi 1629  
                              _i2c_status 0120                            ?i1_do_I2C_IDLE 0070  
                            __end_of_main 15B8                        ?_setHeaterPostTime 00BD  
                          ?i1_do_I2C_RCEN 0070                 LED_readConfig@topOrBottom 00C5  
              __end_ofi1_do_I2C_SEND_STOP 22BA                          __end_of_i2c_open 1BAC  
                          ??_EUSART_Write 0031                   __end_of_TMR2_Initialize 2496  
             ?_INTERRUPT_InterruptManager 0070                             ?_LED_testComm 00C9  
                 __end_of_setHeaterToggle 0A54                            i1_do_I2C_RESET 2318  
                           _do_I2C_DO_ACK 2356                                    ??_atoi 0039  
                _TMR2_SetInterruptHandler 2388                                    ??_main 00D8  
                           ___fttol@sign1 00B7                       ??_setHeaterPostTime 004D  
           __size_of_i2c1_driver_sendNACK 0004                LED_test_openshort@readData 00BA  
                         _TMR2_WriteTimer 22DB                      ?_send_last_2bytes_IK 0031  
                           ?_drv_write_DC 00B8                                 ??_LEDsPwr 0048  
                  __end_of_WDT_Initialize 22CA             __size_of_i2c1_driver_resetBus 0001  
                             drv_read@reg 004B                        setHeaterPostTime@t 00BD  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                              ?_setMoveMask 00B5  
                      setHeaterToggle@num 00B5                          _piezo_on_time_ms 00E9  
                 __end_of_TMR0_StartTimer 228A                             _drv_fifo_sine 1000  
                        ___llmod@dividend 0043                      __size_of_getMoveMask 004D  
                        ___awdiv@dividend 0033                          __end_of___awtoft 26D9  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELB 018D                                    _ANSELC 018E  
                  __end_of_i2c_setAddress 2376                          __end_of___ftpack 14E0  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 0017  
                                  _T0CON1 0018                   ?i1_do_I2C_SEND_ADR_READ 0070  
                    drv2665@drv_fifo_sine 10F4                     ?i1_i2c1_driver_TXData 0070  
                                  _RC1REG 0199                                    _RC1STA 019D  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l5134 1B3E  
                                  i1l5126 1B20                                    i1l6218 2318  
                                  i1l6228 22E5                                    i1l8100 2326  
                                  i1l6252 22F4                                    i1l8200 183E  
                                  i1l8130 2706                                    i1l8122 26FC  
                                  i1l8212 1845                                    i1l8108 231F  
                                  i1l8116 22BA                                    i1l8206 1842  
                                  i1l8126 2703                                    i1l8150 1C52  
                                  i1l8142 1C4C                 ??i1_i2c1_driver_getRXData 0070  
                                  i1l8136 2709                                    i1l8146 1C4F  
                                  i1l8138 1C46                                    i1l6388 256B  
                                  i1l8164 1C8E                                    i1l8156 1C55  
                                  i1l8182 19A4                                    i1l8192 19AA  
                                  i1l8168 1988                                    i1l8194 1838  
                                  i1l8186 19A7                                    i1l8196 183B  
                                  i1l7760 22B2                                    i1l8392 2625  
                                  i1l8384 2615                                    i1l7754 22AE  
                                  i1l7748 22AA                                    i1l7772 22BE  
                                  i1l7766 22B6                                    i1l7784 2267  
                                  i1l7778 22C2                                    i1l7788 0002  
                                  _LEDsOn 2696             ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                                  u508_25 267F                                    u390_25 1B47  
                                  u395_24 27E8                                    u395_25 27E6  
                                  u388_24 1B2F                                    u388_25 1B2D  
                                  _OSCFRQ 091F                    ??_do_I2C_SEND_ADR_READ 0032  
                         drv_write_DC@val 00B8                                    _TX1REG 019A  
                    __size_of_getPosition 003F                                    _WDTCON 0097  
                                  _TX1STA 019E                                 ??_i2c_ISR 0036  
             __size_of_LED_test_openshort 0069                 __end_of_setHeaterPostTime 1D88  
                   ?i1_i2c1_driver_isNACK 0070                            __CFG_PWRTE$OFF 0000  
           LED_test_openshort@topOrBottom 00B7                     _i2c1_driver_getRXData 2299  
                     LED_getData@readData 00BF                   __size_of_LED_readConfig 0024  
                     _do_I2C_RX$intlevel0 1A90                     __size_ofi1_returnStop 0002  
             __end_of_do_I2C_DO_NACK_STOP 2366                         __end_ofi1_i2c_ISR 2635  
                                  ___wmul 2582                                 ??___awdiv 0035  
   __end_of_i2c1_driver_clearBusCollision 2272    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 226F                                 ??___ftadd 0049  
                          __CFG_STVREN$ON 0000                                    _doMove 0938  
                               ??___lldiv 0039                                 ??___ftmul 0045  
                               ??___llmod 0047                                 ??___fttol 00B3  
             i1send_2bytes_latchless_IK@j 0076           __size_of_do_I2C_DO_NACK_RESTART 0008  
                       startAbsMove@steps 00B5                          __end_of_drv_init 2000  
                        __end_of_drv_read 1B17                    __end_ofi1_do_I2C_RESET 231F  
                        __end_of_drv_sine 13CC                   ?_send_2length_2bytes_IK 003C  
                     _EUSART_Transmit_ISR 25BB                            ??_LED_testComm 004C  
                        ?_TMR0_Initialize 0070                          ___awdiv@quotient 0038  
                          ?_do_I2C_DO_ACK 0070                          __end_of_parseCmd 06A1  
                                  _printf 06A1                                    _strchr 2531  
                                  _strtok 13CC                                    _strspn 18F1  
                               ??_execCmd 004E                     ___ftmul@f3_as_product 00A1  
                  i2c1_driver_setI2cISR@f 0031                     i2c_setAddress@address 0032  
                   ??_send_last_2bytes_IK 0036               __end_of_i2c1_driver_sendACK 22CE  
                          _PMD_Initialize 232E            __end_of_do_I2C_DO_ADDRESS_NACK 07FE  
                          ??_drv_write_DC 00BC                                 ??_isdigit 0031  
                         ?_WDT_Initialize 0070               __end_of_i2c1_driver_restart 2293  
                            ?_returnReset 0031             _do_I2C_DO_NACK_STOP$intlevel0 2362  
                   _i2c1_driver_setI2cISR 23A3               __end_of_i2c1_driver_startRX 2299  
                      LEDsPwr@topOrBottom 0046         __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024  
          __end_ofi1_do_I2C_SEND_ADR_READ 232E                   __end_of_TMR2_StartTimer 228D  
TMR2_SetInterruptHandler@InterruptHandler 0031  TMR0_SetInterruptHandler@InterruptHandler 0031  
               ?i1_do_I2C_DO_ADDRESS_NACK 0070                                 ??_stricmp 0035  
                               ??_strcspn 003A                                 ??_toupper 0031  
                    ?_EUSART_Transmit_ISR 0070                           ?_i2c_setAddress 0070  
                       i1_do_I2C_TX_EMPTY 1838                      __size_of_EUSART_Read 0020  
                       _SYSTEM_Initialize 24BD            __size_ofi1_send_last_2bytes_IK 0049  
                 __end_of__initialization 00BC             __end_ofi1_send_last_2bytes_IK 1B60  
                         ??_i2c_setBuffer 0035            _do_I2C_SEND_ADR_READ$intlevel0 241A  
                        _do_I2C_SEND_STOP 234E                              i1_returnStop 2267  
                              ___ftadd@f1 00A6                                ___ftadd@f2 00A9  
                         _getMotionStatus 26D9                     i1_do_I2C_DO_NACK_STOP 22BE  
                      __size_of_do_I2C_RX 0044                        __size_of_do_I2C_TX 0059  
                      ?i1_do_I2C_TX_EMPTY 0070                        ?_SYSTEM_Initialize 0070  
                      __size_of_doAbsMove 02B0                          _moveVector_downs 00E1  
              __end_of_mssp1_IRQisEnabled 23CA                       _i2c_masterOperation 2720  
                __size_of_do_I2C_TX_EMPTY 002F                                ___awtoft@c 0039  
                               ?i1_LEDsOn 0027                           ??i1_do_I2C_IDLE 0070  
                         ??i1_do_I2C_RCEN 0070                                ___ftmul@f1 003F  
                              ___ftmul@f2 0042                __end_of_mssp1_waitForEvent 23FF  
                    __size_of_LED_getData 005B                                ___fttol@f1 00AF  
                             ?_i2c_poller 0070                            __pcstackCOMMON 0070  
              ??i1_do_I2C_DO_NACK_RESTART 0070                       _do_I2C_TX$intlevel0 1E37  
                     ??i1_do_I2C_TX_EMPTY 0070            __end_of_send_2length_2bytes_IK 2517  
                            __pidataBANK0 22D2                              __pidataBANK1 2312  
                            __pidataBANK2 07FE                              __pidataBANK4 2655  
                     ??_SYSTEM_Initialize 0033                                _absCommand 004E  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                      __size_of_doRelMove 0131                   __end_of_TMR2_WriteTimer 22E0  
                   i1_i2c1_driver_sendACK 22A2                     i1i2c1_driver_TXData@d 0070  
                         ?i1_do_I2C_RESET 0070                             __end_of_putch 2312  
                        ?_TMR2_Initialize 0070                     i1_i2c1_driver_restart 2275  
       __size_ofi1_send_2length_2bytes_IK 0018                    __end_of_PMD_Initialize 2336  
                        ?_setHeaterToggle 00B5                 ?i1_send_2length_2bytes_IK 0020  
                      __size_of_getActive 004D                              ?i1_do_I2C_RX 0070  
                            ?i1_do_I2C_TX 0070                     i1_i2c1_driver_startRX 227B  
                        ??i1_mssp1_setIRQ 0070                      ?_i2c_masterOperation 0070  
            ??i1_do_I2C_SEND_RESTART_READ 0070                        __size_of_commCheck 00C7  
                __end_of_setHeaterPreTime 1F9D                              LED_getData@j 00C3  
                         i1_do_I2C_DO_ACK 22BA               __end_of_TMR0_Load8bitPeriod 22EF  
               __end_ofi1_do_I2C_TX_EMPTY 1862                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 2366                    ??i1_i2c1_driver_TXData 0070  
                          _do_I2C_TX$1132 0034                 __end_of_SYSTEM_Initialize 24D2  
                   ??_EUSART_Transmit_ISR 0070                                   ??_putch 0033  
                          _mssp1_clearIRQ 229F                                __pbssBANK0 004E  
                              __pbssBANK1 00D9                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                   __size_of_calcHeaterPins 0079  
                     _TMR0_Write8bitTimer 22D6                ??_send_2bytes_latchless_IK 0033  
                    __end_of_EUSART_Write 27B1                                   ?_LEDsOn 0044  
                          _moveVector_ups 00E5                   _TMR2_LoadPeriodRegister 22EF  
                               ?_i2c_open 0070                   drv_write_DC@duration_ms 00BA  
                              _activeMask 00DD                  ??i1_i2c1_driver_sendNACK 0070  
                         drv2665@drv_sine 11E8                        __size_of_drv_reset 000A  
                  ??i1_i2c1_driver_isNACK 0070                __size_of_setHeaterPostTime 0052  
                      __size_of_drv_write 0024               __size_of_EUSART_Receive_ISR 001C  
                      __size_of_setLEDPwr 001E                    ?_i2c1_driver_getRXData 0070  
                ??i1_i2c1_driver_resetBus 0070                              drv_read@buff 004C  
                              ??i1_LEDsOn 002D                     _do_I2C_IDLE$intlevel0 2395  
                          _SSP1DATPPSbits 0E21              __size_of_i2c_busCollisionISR 0003  
                              __pmaintext 1549                                doAbsMove@i 00C8  
                           ??_do_I2C_IDLE 0031                        __size_of_setActive 0076  
                           ??_do_I2C_RCEN 0031          __end_of_TMR0_SetInterruptHandler 2388  
                 __size_of_TMR0_StopTimer 0003            __size_of_setLEDBrightnessRange 001E  
                                 ?___wmul 0031             __end_of_setLEDBrightnessRange 25F7  
                              ??_TMR0_ISR 007C                           __CFG_PPS1WAY$ON 0000  
                              _cmd_struct 01B0                                ??_TMR2_ISR 0071  
                                 ?_doMove 00BF                           ??_do_I2C_DO_ACK 0031  
                              __pintentry 0004                         startRelMove@steps 00B5  
                   setHeaterToggle@topOrB 00B7                      ?_TMR0_Write8bitTimer 0070  
                     i2c_setBuffer@buffer 0031                                 ?___awtoft 0039  
                               ?___ftpack 0031                            _SSP1CLKPPSbits 0E20  
                                 ?_printf 00A0                           ?_PMD_Initialize 0070  
                              _fifo_check 2473                                   ?_strchr 0031  
          ?_i2c1_driver_clearBusCollision 0070                                   ?_strtok 003F  
                                 ?_strspn 0038                     ??_i2c_masterOperation 0037  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 1AD0  
                       __end_of_do_I2C_TX 1E8C                         ?_i2c1_driver_stop 0070  
                           _eusartRxCount 0056                         __end_of_doAbsMove 0370  
                ?i1_do_I2C_SEND_ADR_WRITE 0070                                   _SP1BRGH 019C  
                                 _SP1BRGL 019B                    ?_i2c1_driver_setI2cISR 0031  
                                 _LEDsPwr 1417                        ??_i2c1_driver_open 0031  
                      ??_i2c1_driver_stop 0031                                   _OSCCON1 0919  
                                 _OSCCON3 091B                             ?_mssp1_setIRQ 0070  
                         _main_initialize 0B1B                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                    __end_of_mssp1_clearIRQ 22A2  
                                 _SSP1MSK 0213                   __end_of_getMotionStatus 26FC  
                 __size_of_TMR2_StopTimer 0003                       __size_of_i2c_poller 000B  
                        ?_TMR2_StartTimer 0070                   ??_do_I2C_SEND_ADR_WRITE 0032  
     _do_I2C_SEND_RESTART_WRITE$intlevel0 2342                         __end_of_doRelMove 1000  
             ??_do_I2C_SEND_RESTART_WRITE 0031                      __size_of_setMoveMask 0073  
                  ?i1_do_I2C_DO_NACK_STOP 0070                        _i2c1_driver_TXData 2306  
                    __end_of_LED_testComm 08B1                                ??_i2c_open 0033  
                               ?_drv_init 00B6                                 ?_drv_read 00B5  
                         __size_of_LEDsOn 0021                        _i2c1_driver_i2cISR 0168  
             ?i1_send_2bytes_latchless_IK 0070         LED_setBrightnessRange@topOrBottom 0046  
                       __end_of_getActive 1BF9                                   _i2c_ISR 27B1  
                               ?_parseCmd 0045                         __end_of_commCheck 0B1B  
                    __end_of_drv_write_DC 1CE4                     _returnReset$intlevel0 2304  
                   _do_I2C_RCEN$intlevel0 23BA                        _i2c1_driver_isNACK 182B  
                     ?_i2c1_driver_TXData 0070                              drv_write@reg 004B  
              ??_TMR2_SetInterruptHandler 0033                            _LED_readConfig 2768  
        _do_I2C_DO_ADDRESS_NACK$intlevel0 07D7                        __end_of_TMR0_RANGE 2A69  
                      __end_of_TMR2_RANGE 2A66                    ?i1_i2c1_driver_sendACK 0070  
                              doRelMove@j 00D6                    __size_ofi1_returnReset 0002  
                                 ___awdiv 1CE4                                   ___ftadd 0DB5  
                                 ___lldiv 1D88                 __size_ofi1_mssp1_clearIRQ 0003  
                         __size_of___wmul 001C                                   ___ftmul 0CD4  
                                 ___llmod 1A06                                   ___fttol 08B1  
                   ??_TMR0_Write8bitTimer 0070                           __size_of_doMove 0089  
                  ?i1_i2c1_driver_restart 0070                          ?_TMR2_WriteTimer 0070  
                       ??_do_I2C_TX_EMPTY 0031                       ?_i2c1_driver_isNACK 0070  
                                 _cmdRead 0164                    ?i1_i2c1_driver_startRX 0070  
                              ??___awtoft 003C                                ??___ftpack 0036  
                 __end_ofi1_do_I2C_DO_ACK 22BE                                   __ptext1 050E  
                                 __ptext2 13CC                                   __ptext3 18F1  
                                 __ptext4 18C1                                   __ptext5 2531  
                                 __ptext6 1954                                   __ptext7 2463  
                                 __ptext8 15B8                                   __ptext9 2454  
             __size_ofi1_i2c1_driver_stop 0003                       __end_of_do_I2C_IDLE 239A  
                         __size_of_printf 0132                       __end_of_do_I2C_RCEN 23C0  
                       __end_of_drv_reset 23D4                                   _execCmd 0370  
                         __size_of_strchr 001A                           __size_of_strtok 004B  
                         __size_of_strspn 0030                         __end_of_drv_write 2768  
                                 _dpowers 2800                  ??_LED_setBrightnessRange 00A0  
                   _OSCILLATOR_Initialize 23AC                                   _readIdx 0052  
                               _T2CONbits 001F                                   doMove@t 00C2  
                                 _isdigit 2454                            setActive@onOff 00B7  
                       __end_of_setLEDPwr 2615               __end_of_do_I2C_SEND_RESTART 234E  
                          ??_mssp1_setIRQ 0031                      ??_i2c1_driver_TXData 0031  
                ??_PIN_MANAGER_Initialize 0031                    i2c_masterOperation@ret 0039  
                      i1_do_I2C_SEND_STOP 22B6                   __end_ofdrv2665@drv_sine 12DA  
                       __end_of_setActive 1787                           ?_mssp1_clearIRQ 0070  
              _do_I2C_SEND_STOP$intlevel0 2352                __size_ofi1_do_I2C_TX_EMPTY 002A  
               ??_TMR2_LoadPeriodRegister 0031                  _do_I2C_SEND_RESTART_READ 2336  
              __size_of_SYSTEM_Initialize 0015                                _setDrvGain 1A49  
                       setActive@probeNum 00B5                                   clrloop0 2423  
                              _setDrvPeak 2496                                   _stricmp 1954  
                                 _strcspn 18C1                                   _toupper 2463  
                    __size_of_returnReset 0006                      end_of_initialization 00BC  
                    drv_init@idle_timeout 00B8                      ??_i2c1_driver_isNACK 0031  
                              _second_top 015E                                getActive@i 00B7  
             TMR0_Write8bitTimer@timerVal 0070                                ??_drv_init 00BA  
                              ??_drv_read 0049                              setLEDPwr@pwr 00B5  
                                 init_ram 242E              __end_of_i2c1_driver_sendNACK 22D2  
                     ?i1_do_I2C_SEND_STOP 0070                                   initloop 242F  
         __size_ofi1_i2c1_driver_sendNACK 0004                                ??_parseCmd 0046  
                  __end_of_LED_readConfig 278C                         _EUSART_Initialize 2517  
            __end_of_i2c1_driver_resetBus 0801                           ___lldiv@divisor 0031  
         __size_ofi1_i2c1_driver_resetBus 0001                           ___lldiv@counter 003E  
                      ?_EUSART_Initialize 0070                                   printf@c 00B4  
                                 printf@f 00A0                                _motionType 0055  
               _do_I2C_SEND_RESTART_WRITE 233E                         LEDsOn@topOrBottom 0048  
                   i1_do_I2C_SEND_RESTART 22B2          __end_ofi1_do_I2C_DO_ADDRESS_NACK 2720  
         __end_ofi1_do_I2C_SEND_ADR_WRITE 2326                       ??_EUSART_Initialize 0031  
                        ??_WDT_Initialize 0031                                 i1_i2c_ISR 2615  
                    ??i1_do_I2C_SEND_STOP 0070                                   strspn@i 003C  
                              _returnStop 22FA                   __end_of_main_initialize 0BF6  
                _TMR0_SetInterruptHandler 237F                               ?_fifo_check 0070  
                               _PORTCbits 000E                  __end_of_do_I2C_SEND_STOP 2356  
      __end_ofi1_do_I2C_SEND_RESTART_READ 22AE                i1_do_I2C_SEND_RESTART_READ 22AA  
                    __size_ofi1_do_I2C_RX 003F                      __size_ofi1_do_I2C_TX 004E  
                        ??_i2c_setAddress 0031                             ??_getMoveMask 0049  
                   __size_of_EUSART_Write 0025                             i1_returnReset 0002  
                             returnStop@p 0031                          ?_getMotionStatus 00B5  
                           ??_getPosition 0049                       LED_test_openshort@j 00BE  
                        __CFG_FEXTOSC$OFF 0000                            _calcHeaterPins 1787  
        __end_of_send_2bytes_latchless_IK 18C1                __end_of_LED_test_openshort 1549  
                 TMR2_WriteTimer@timerVal 0070                                 _RXPPSbits 0E24  
               __end_of_EUSART_Initialize 2531            send_last_2bytes_IK@latch_start 0033  
             LED_setBrightnessRange@range 0044                            __end_of_LEDsOn 26B7  
        __end_ofi1_send_2length_2bytes_IK 24FF                           ?_LED_readConfig 00C5  
           __size_of_do_I2C_SEND_ADR_READ 000C                          ??i1_do_I2C_RESET 0070  
                             ___ftmul@exp 00A0                              ??_i2c_poller 0037  
                          _TMR0_StopTimer 2269                               _do_I2C_IDLE 2391  
                             _do_I2C_RCEN 23B6                         __size_ofi1_LEDsOn 0021  
                 LED_testComm@topOrBottom 00C9      __end_of_TMR2_DefaultInterruptHandler 237F  
   __size_of_TMR2_DefaultInterruptHandler 0009              _TMR2_DefaultInterruptHandler 2376  
             __end_of_send_last_2bytes_IK 1E33                             ?_startAbsMove 00B5  
                          __end_of___wmul 259E                            __end_of_doMove 09C1  
                            _EUSART_Write 278C                         __size_of_TMR0_ISR 000D  
                              ?i1_i2c_ISR 0070                         __size_of_TMR2_ISR 000D  
                      _mssp1_IRQisEnabled 23C0                    i1_i2c1_driver_sendNACK 22A6  
                        ?i1_do_I2C_DO_ACK 0070                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0008          TMR2_LoadPeriodRegister@periodVal 0031  
                          __end_of_printf 07D3                        _mssp1_waitForEvent 23F4  
     __size_ofi1_send_2bytes_latchless_IK 0029                    i1_i2c1_driver_resetBus 182A  
                          __end_of_strchr 254B           __size_of_LED_setBrightnessRange 00DE  
                 ?_do_I2C_DO_NACK_RESTART 0070                            __end_of_strtok 1417  
                          __end_of_strspn 1921                         setHeaterPreTime@t 00BD  
                     start_initialization 0052                             ?_startRelMove 00B5  
                       ?_setHeaterPreTime 00BD                       _i2c_busCollisionISR 2272  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0033  
                     ?_mssp1_IRQisEnabled 0070                            ?i1_returnReset 0070  
                ?i1_i2c1_driver_getRXData 0070                    __end_of_calcHeaterPins 1800  
                   __size_of_LED_testComm 0079                            _TMR2_StopTimer 226C  
                           ??_EUSART_Read 0031       __end_ofi1_do_I2C_SEND_RESTART_WRITE 22B2  
             i1_do_I2C_SEND_RESTART_WRITE 22AE                              _first_bottom 015A  
                      ??_setHeaterPreTime 00BF                               ?_setDrvGain 00B5  
                             ?_setDrvPeak 00B5                       ?_mssp1_waitForEvent 0070  
                           _second_bottom 0152                               putch@txData 0033  
                      __end_of_i2c_poller 240A              __size_of_i2c1_driver_sendACK 0004  
                         i2c_open@address 0035                       __end_of_getMoveMask 1C46  
                 i2c_setBuffer@bufferSize 0033                                  ??_LEDsOn 004A  
                 ??_i2c1_driver_getRXData 0031                     __size_of_drv_write_DC 0050  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                         ___llmod@divisor 003F                             ??_LED_getData 00B9  
                     __size_of_fifo_check 0011                           ___llmod@counter 0048  
                   __end_of_i2c_setBuffer 24E7                       __end_of_getPosition 1A06  
                       __size_of_i2c_open 004C                    __end_of_TMR0_StopTimer 226C  
                     _heater_post_time_ms 00EB                     i1_send_last_2bytes_IK 1B17  
     LED_setBrightnessRange@LED_configReg 0048                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                      __end_of_mssp1_setIRQ 229F  
                            _drv_peak_val 016E                      ??_mssp1_IRQisEnabled 0031  
                        i1_do_I2C_TX$1132 0073                                LEDsPwr@pwr 0044  
                        ??_PMD_Initialize 0031                     __end_ofi1_do_I2C_IDLE 22EA  
                   __end_ofi1_do_I2C_RCEN 22FA                                  ??___wmul 0035  
                  ?i1_do_I2C_SEND_RESTART 0070                      ??_mssp1_waitForEvent 0031  
                                ??_doMove 00C1                          i1_mssp1_clearIRQ 2284  
                          ??_startAbsMove 0049                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005A                               __pdataBANK1 00E9  
                             __pdataBANK2 016E                               __pdataBANK4 0220  
               _do_I2C_TX_EMPTY$intlevel0 1866             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0031                         _setDrvPiezoOnTime 1EE7  
                            _LED_testComm 0838                                  ??_printf 00A6  
                 ??_i2c1_driver_setI2cISR 0033                          ?_main_initialize 0070  
                                ??_strchr 0035            i1send_2bytes_latchless_IK@data 0070  
          __end_of_do_I2C_DO_NACK_RESTART 236E                                  ??_strtok 0041  
                                ??_strspn 003A                      _i2c1_driver_sendNACK 22CE  
                       __size_of___awtoft 0022                         __size_of___ftpack 0065  
                      ?_setDrvPiezoOnTime 00BD                               __pbssBIGRAM 2790  
             __end_of_EUSART_Transmit_ISR 25D9                            ??_startRelMove 0049  
                i1_do_I2C_DO_ADDRESS_NACK 26FC                    __end_of_TMR2_StopTimer 226F  
                          setDrvGain@gain 00B5                               __pbssCOMMON 007D  
                                ?_LEDsPwr 0044                                 ___latbits 0003  
                    _i2c1_driver_resetBus 0800                              _drv_write_DC 1C94  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK4 0240                           fifo_check@reply 00B7  
       __size_ofi1_do_I2C_DO_NACK_RESTART 0004                  __size_of_TMR2_Initialize 0012  
                               _do_I2C_RX 1A8C                 ?i1_do_I2C_DO_NACK_RESTART 0070  
                               _do_I2C_TX 1E33                           ?_calcHeaterPins 0070  
                 ??i1_do_I2C_DO_NACK_STOP 0070                                 _doAbsMove 00C0  
                __size_of_setHeaterToggle 0093                              _isdigit$2134 0031  
                     ??_setDrvPiezoOnTime 00BF                             ?_zeroPosition 00B5  
                           LEDsOn@LEDpins 0044            __size_of_do_I2C_SEND_ADR_WRITE 000B  
           __size_ofi1_i2c1_driver_TXData 0005                __end_of_EUSART_Receive_ISR 2582  
           __end_of_do_I2C_SEND_ADR_WRITE 23F4                __size_of_EUSART_Initialize 001A  
               __size_of_i2c1_driver_open 000A                                sin@coeff_a 295B  
                              sin@coeff_b 29A3                              doMove@t_1559 00C4  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
         _do_I2C_SEND_ADR_WRITE$intlevel0 23ED          __size_ofi1_do_I2C_SEND_ADR_WRITE 0007  
                     __end_of_EUSART_Read 2655              __size_of_TMR0_Load8bitPeriod 0005  
                               _doRelMove 0ECF                           _do_I2C_TX_EMPTY 1862  
                       parseCmd@cmdString 0047                     _TMR0_InterruptHandler 016C  
                               __pnvBANK0 005E                                 __pnvBANK2 016C  
                               __pnvBANK3 01D9                    _LED_setBrightnessRange 0BF6  
                 ??i1_i2c1_driver_sendACK 0070                  __size_of_TMR0_StartTimer 0003  
                       __size_of_drv_init 0063                         __size_of_drv_read 0047  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
           __size_ofi1_i2c1_driver_isNACK 000C                    _PIN_MANAGER_Initialize 1921  
                 ??i1_i2c1_driver_restart 0070                                 _getActive 1BAC  
                       __size_of_parseCmd 0193                              setDrvPeak@pk 00B5  
                     __end_of_drv_address 2A78                      EUSART_Read@readValue 0032  
                 ??i1_i2c1_driver_startRX 0070                            ??_do_I2C_RESET 0031  
                i1_send_2length_2bytes_IK 24E7                       __end_of_LED_getData 1EE7  
                                ?___awdiv 0031                                 __ptext100 1787  
                               __ptext101 228A                                 __ptext110 2388  
                               __ptext102 2287                                 __ptext111 24A9  
                               __ptext103 2696                                 __ptext120 2284  
                               __ptext112 237F                                 __ptext104 24FF  
                               __ptext121 1988                                 __ptext113 232E  
                               __ptext105 1DDB                                 __ptext130 22B6  
                               __ptext122 1C46                                 __ptext114 1921  
                               __ptext106 1891                                 __ptext131 22B2  
                               __ptext123 26FC                                 __ptext115 23AC  
                               __ptext107 24BD                                 __ptext140 227E  
                               __ptext132 22AE                                 __ptext124 22C2  
                               __ptext116 2517                                 __ptext108 22C6  
                               __ptext141 22A6                                 __ptext133 22AA  
                               __ptext125 22BE                                 __ptext117 2635  
                               __ptext109 2484                                  ?___ftadd 00A6  
                               __ptext150 226F                                 __ptext142 182A  
                               __ptext134 22E5                                 __ptext126 22BA  
                               __ptext151 2447                                 __ptext143 227B  
                               __ptext135 2318                                 __ptext127 22F4  
                               __ptext119 2615                                 __ptext160 27D7  
                               __ptext152 2376                                 __ptext144 0002  
                               __ptext136 1838                                 __ptext128 231F  
                               __ptext161 22D6                                 __ptext153 22DB  
                               __ptext145 2267                                 __ptext137 2281  
                               __ptext129 2326                                 __ptext162 2269  
                               __ptext154 226C                                 __ptext146 2278  
                               __ptext138 240A                                 __ptext163 25BB  
                               __ptext155 243A                                 __ptext147 2275  
                               __ptext139 22E0                                 __ptext164 2566  
                               __ptext156 0801                                 __ptext148 22A2  
                               __ptext157 2675                                 __ptext149 2272  
                               __ptext158 24E7                                 __ptext159 1B17  
             __end_of_i2c_masterOperation 2744                                  ?___lldiv 0031  
                                ?___ftmul 003F                                  ?___llmod 003F  
                                ?___fttol 00AF                                 _commCheck 0A54  
               __end_of_setDrvPiezoOnTime 1F42                  ??_do_I2C_DO_ADDRESS_NACK 0031  
             _i2c1_driver_busCollisionISR 016A                              _eusartRxHead 0058  
                     __size_of_setDrvGain 0043         __size_of_send_2bytes_latchless_IK 0030  
                            _eusartTxHead 007D                       __size_of_setDrvPeak 0013  
                            _eusartRxTail 0057                 ?_send_2bytes_latchless_IK 0031  
                            _eusartTxTail 0059                           doAbsMove@i_1574 00CC  
                         doAbsMove@i_1576 00CA                     __end_of_do_I2C_DO_ACK 235E  
                   _setLEDBrightnessRange 25D9                               ??i1_i2c_ISR 0075  
            ??_INTERRUPT_InterruptManager 007C                                 __pswtext1 1800  
              ??_do_I2C_SEND_RESTART_READ 0031                     ?_i2c1_driver_sendNACK 0070  
         __end_ofi1_i2c1_driver_getRXData 2281                   _eusartTxBufferRemaining 005E  
                                ?_execCmd 0070                  ??i1_do_I2C_SEND_ADR_READ 0071  
                        ??_mssp1_clearIRQ 0031                                  _BAUD1CON 019F  
                         ??i1_returnReset 0071                                  ?_isdigit 0070  
                  LED_testComm@readResult 00CB                           ?_TMR2_StopTimer 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                               _first_top 0156                               _getMoveMask 1BF9  
                 send_last_2bytes_IK@data 0031                             ??_setMoveMask 0049  
                   __end_of_drv_fifo_sine 10F4                                 _drv_reset 23CA  
                       parseCmd@paramIter 0048                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                                 _drv_write 2744  
                              ?_doAbsMove 0070                         _i2c1_driver_start 228D  
                          ??_zeroPosition 00B7               send_2length_2bytes_IK@data1 003C  
             send_2length_2bytes_IK@data2 003E                                 _setLEDPwr 25F7  
          send_last_2bytes_IK@topOrBottom 0034                                  ?_stricmp 0033  
                                ?_strcspn 0038                                  ?_toupper 0070  
                             _getPosition 19C7                   __size_ofi1_mssp1_setIRQ 0003  
                          __size_of_putch 0006                         _i2c_ISR$intlevel0 27B5  
                      ?_i2c1_driver_start 0070                            _eusartRxBuffer 01A0  
                           zeroPosition@i 0049                                 _setActive 1711  
                       ??_TMR0_Initialize 0033                            _eusartTxBuffer 01A8  
                          ___wmul@product 0035                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
                  ?i1_send_last_2bytes_IK 0070                                ?_doRelMove 0070  
                ??_send_2length_2bytes_IK 0043                       __size_of_returnStop 0006  
               i1send_last_2bytes_IK@data 0070                                 clear_ram0 2422  
                                _PIE0bits 0090                                  _PIE1bits 0091  
                __size_of_TMR2_StartTimer 0003               __end_of_TMR0_Write8bitTimer 22DB  
                     ??_i2c1_driver_start 0031                                  i1_LEDsOn 2675  
     __size_of_INTERRUPT_InterruptManager 004C                                  _LEDpower 2A6F  
              ??_TMR0_SetInterruptHandler 0033                                  _PIR0bits 0010  
                                _PIR1bits 0011                                ?_getActive 00B5  
                  _currentPositions_steps 2790                        _heater_pre_time_ms 00ED  
                LED_testComm@oldConfigReg 00CD                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR0_ISR 243A  
                                _TMR2_ISR 2447                                ?_commCheck 00D1  
                                _SSP1STAT 0214                __end_ofi1_i2c1_driver_stop 227B  
                            ??_fifo_check 004D                         ___wmul@multiplier 0031  
                       ?_do_I2C_SEND_STOP 0070               ?i1_do_I2C_SEND_RESTART_READ 0070  
                              printf@flag 00B2                                printf@prec 00AC  
          ??_TMR2_DefaultInterruptHandler 0071         __size_of_TMR2_SetInterruptHandler 0009  
                __size_of_TMR2_WriteTimer 0005                 __end_of_i2c1_driver_start 2290  
                           ??_returnReset 0032                        ??_do_I2C_SEND_STOP 0031  
               ?_TMR2_SetInterruptHandler 0031               __size_of_i2c1_driver_TXData 0006  
                              ?_drv_reset 0070                          __size_of_LEDsPwr 0064  
       __end_of_do_I2C_SEND_RESTART_WRITE 2346                                ?_drv_write 0049  
                             _EUSART_Read 2635                   __end_of_do_I2C_TX_EMPTY 1891  
                       doAbsMove@allThere 00C6         send_2length_2bytes_IK@latch_start 0040  
     i1send_2length_2bytes_IK@latch_start 0024                                ?_setLEDPwr 00B5  
                        ??_LED_readConfig 0049                      __end_of_startAbsMove 25BB  
            __size_of_do_I2C_SEND_RESTART 0008               __size_of_i2c1_driver_isNACK 000D  
                 _do_I2C_DO_ACK$intlevel0 235A                                  _i2c_open 1B60  
                              ?_setActive 00B5                       __end_of_setMoveMask 169C  
                           ?i1_returnStop 0070                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0033                               _drv_address 2A77  
                       ??_setHeaterToggle 00B9                       _do_I2C_DO_NACK_STOP 235E  
                             _LED_getData 1E8C                          __size_of_i2c_ISR 0026  
                      __end_of_fifo_check 2484                           i1LEDsOn@LEDpins 0027  
                           drv_write@data 0049                             drv_write_DC@i 00BD  
                           drv_write@buff 004C                      __end_of_startRelMove 2566  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                      _LED_test_openshort 14E0                   ?i1_i2c1_driver_sendNACK 0070  
                 ??_OSCILLATOR_Initialize 0031                __size_of_setDrvPiezoOnTime 005B  
                  ?_setLEDBrightnessRange 00B5                         ??_TMR0_StartTimer 0031  
                     _i2c1_driver_sendACK 22CA                          __size_of___awdiv 0052  
                        __size_of___ftadd 011A           __size_of_do_I2C_DO_ADDRESS_NACK 002B  
        i1send_last_2bytes_IK@latch_start 0072                          __size_of___lldiv 0053  
                        __size_of___ftmul 00E1                       i2c1_driver_TXData@d 0031  
                        __size_of___llmod 0043                          __size_of___fttol 0087  
                  ??_i2c1_driver_sendNACK 0031                                  ___awtoft 26B7  
                 ?i1_i2c1_driver_resetBus 0070                                  ___ftpack 147B  
        ??_i2c1_driver_setBusCollisionISR 0033           ?_i2c1_driver_setBusCollisionISR 0031  
                           ??i1_do_I2C_RX 0070                             ??i1_do_I2C_TX 0071  
      _do_I2C_SEND_RESTART_READ$intlevel0 233A                       _i2c1_driver_restart 2290  
                               parseCmd@p 004A                                 parseCmd@s 0045  
             __size_ofi1_do_I2C_SEND_STOP 0004                             LEDsPwr@pwrAll 00A0  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 2296  
                     ?_LED_test_openshort 00B5              __end_of_do_I2C_SEND_ADR_READ 2422  
                  ??_i2c1_driver_resetBus 0031           __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                    _demoHeaterToggle_bot 0142                          __size_of_execCmd 019E  
                ?_TMR2_LoadPeriodRegister 0070                      _demoHeaterToggle_top 0146  
                              _T0CON0bits 0017                          __size_of_isdigit 000F  
                                _demoLong 005A                              _mssp1_setIRQ 229C  
                             ??_do_I2C_RX 0031                               ??_do_I2C_TX 0032  
                             ??_doAbsMove 0240                                  __ptext10 2582  
                                __ptext11 0B1B                                  __ptext20 169C  
                                __ptext12 1F9D                                  __ptext21 254B  
                                __ptext13 236E                                  __ptext30 22EF  
                                __ptext22 259E                                  __ptext14 1B60  
                                __ptext31 1EE7                                  __ptext23 1629  
                                __ptext15 23A3                                  __ptext40 1711  
                                __ptext32 08B1                                  __ptext24 25F7  
                                __ptext16 239A                                  __ptext41 19C7  
                                __ptext33 0CD4                                  __ptext25 1417  
                                __ptext17 23D4                                  __ptext50 1E8C  
                                __ptext42 1BF9                                  __ptext34 0DB5  
                                __ptext26 25D9                                  __ptext18 23CA  
                                __ptext51 0ECF                                  __ptext43 26D9  
                                __ptext35 26B7                                  __ptext27 09C1  
                                __ptext19 0370                                  __ptext60 278C  
                                __ptext52 00C0                                  __ptext44 1BAC  
                                __ptext36 147B                                  __ptext28 1F42  
                                __ptext61 1A06                                  __ptext53 0938  
                                __ptext45 0A54                                  __ptext37 22EA  
                                __ptext29 1D36                                  __ptext70 1A8C  
                                __ptext62 1D88                                  __ptext54 1C94  
                                __ptext46 14E0                                  __ptext38 2496  
                                __ptext71 1E33                                  __ptext63 24D2  
                                __ptext55 2473                                  __ptext47 0838  
                                __ptext39 1A49                                  __ptext80 2346  
                                __ptext72 07D3                                  __ptext64 2720  
                                __ptext56 1AD0                                  __ptext48 0BF6  
                                __ptext81 233E                                  __ptext73 2366  
                                __ptext65 23C0                                  __ptext57 2744  
                                __ptext49 2768                                  __ptext90 22CE  
                                __ptext82 2336                                  __ptext74 235E  
                                __ptext66 23FF                                  __ptext58 06A1  
                                __ptext91 0800                                  __ptext83 2391  
                                __ptext75 2356                                  __ptext67 23F4  
                                __ptext59 230C                                  __ptext92 2296  
                                __ptext84 23DE                                  __ptext76 23B6  
                                __ptext68 27B1                                  __ptext93 2300  
                                __ptext85 1862                                  __ptext77 23E9  
                                __ptext69 229F                                  __ptext94 22FA  
                                __ptext86 229C                                  __ptext78 2416  
                                __ptext95 2293                                  __ptext87 182B  
                                __ptext79 234E                                  __ptext96 2290  
                                __ptext88 2306                                  __ptext97 22CA  
                                __ptext89 2299                                  __ptext98 228D  
                                __ptext99 1CE4                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                              ??_setDrvGain 00B7  
                            ??_setDrvPeak 0049                  __end_ofi1_mssp1_clearIRQ 2287  
            send_2bytes_latchless_IK@data 0031                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 23E9                       i1LEDsOn@topOrBottom 002B  
                        __size_of_stricmp 0034                          __size_of_strcspn 0030  
                        __size_of_toupper 0010                            ??i1_returnStop 0071  
                 i1_do_I2C_SEND_ADR_WRITE 231F                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 2306                                  _drv_init 1F9D  
                                _drv_read 1AD0                                  _drv_sine 12DA  
                        _i2c1_driver_open 23D4                          _i2c1_driver_stop 2293  
                           __size_of_atoi 0071                             __size_of_main 006F  
                    ?_i2c1_driver_startRX 0070                                  _errorOut 0166  
                    ??_LED_test_openshort 00B9                                  _readdata 01C5  
          __size_of_i2c1_driver_getRXData 0003                               ??_doRelMove 00C6  
           __end_of_i2c1_driver_getRXData 229C                                  _parseCmd 050E  
         __size_of_send_2length_2bytes_IK 0018      __end_of_TMR0_DefaultInterruptHandler 0838  
   __size_of_TMR0_DefaultInterruptHandler 0037              _TMR0_DefaultInterruptHandler 0801  
                __size_of_getMotionStatus 0023                 __size_of_setHeaterPreTime 005B  
                 ??i1_do_I2C_SEND_RESTART 0070          __size_ofi1_i2c1_driver_getRXData 0003  
                                _moveMask 00D9                   i2c_masterOperation@read 0038  
                             ??_getActive 0049                                _RC1STAbits 019D  
    __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004            __end_ofi1_i2c1_driver_sendNACK 22AA  
                              _RB5PPSbits 0E9D                          setMoveMask@onOff 00B7  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
              ??i1_do_I2C_DO_ADDRESS_NACK 0070                                _RB7PPSbits 0E9F  
                                atoi@sign 003B                               ??_commCheck 00D3  
        __end_ofi1_do_I2C_DO_NACK_RESTART 22C6                         _LED_configReg_bot 014A  
          __end_ofi1_i2c1_driver_resetBus 182B                      __end_of_zeroPosition 1711  
                       _LED_configReg_top 014E                         ??_TMR2_StartTimer 0031  
      __end_of_INTERRUPT_InterruptManager 0050                _INTERRUPT_InterruptManager 0004  
                               printf@val 00AE                              _SSP1STATbits 0214  
                      __end_of_setDrvGain 1A8C          __end_of_do_I2C_SEND_RESTART_READ 233E  
                      __end_of_setDrvPeak 24A9                              ??_returnStop 0032  
                                execCmd@s 00D4                     ??_do_I2C_DO_NACK_STOP 0031  
                        ??_calcHeaterPins 0031                       _TMR0_Load8bitPeriod 22EA  
               mssp1_waitForEvent@timeout 0031            __size_of_i2c1_driver_setI2cISR 0009  
           __end_of_i2c1_driver_setI2cISR 23AC                                _INTCONbits 000B  
            __size_of_send_last_2bytes_IK 0058                               _NVMCON1bits 0895  
              __size_of_i2c1_driver_start 0003                               ??_drv_reset 00B5  
                             _setMoveMask 1629                       __end_ofi1_do_I2C_RX 19C7  
                          __pstringtext10 295B                            __pstringtext11 29A3  
                          __pstringtext20 28F8                            __pstringtext12 2828  
                     __end_ofi1_do_I2C_TX 1C94                            __pstringtext21 2909  
                          __pstringtext13 2847                            __pstringtext30 29AF  
                          __pstringtext22 291A                            __pstringtext14 2865  
                          __pstringtext31 29BB                            __pstringtext23 292B  
                          __pstringtext15 2881                            __pstringtext40 2A0B  
                          __pstringtext32 29C6                            __pstringtext24 293B  
                          __pstringtext16 289C                            __pstringtext41 2A13  
                          __pstringtext33 29D1                            __pstringtext25 294B  
                          __pstringtext17 28B6                            __pstringtext50 2A4A  
                          __pstringtext42 2A1B                            __pstringtext34 29DA  
                          __pstringtext26 296A                            __pstringtext18 28CF  
                          __pstringtext51 2A4F                            __pstringtext43 2A23  
                          __pstringtext35 29E3                            __pstringtext27 2979  
                          __pstringtext19 28E6                            __pstringtext60 2A75  
                          __pstringtext52 2A53                            __pstringtext44 2A2A  
                          __pstringtext36 29EB                            __pstringtext28 2988  
                          __pstringtext61 0000                            __pstringtext53 2A57  
                          __pstringtext45 2A31                            __pstringtext37 29F3  
                          __pstringtext29 2996                            __pstringtext54 2A5B  
                          __pstringtext46 2A36                            __pstringtext38 29FB  
                          __pstringtext55 2A5F                            __pstringtext47 2A3B  
                          __pstringtext39 2A03                            __pstringtext56 2A69  
                          __pstringtext48 2A40                            __pstringtext57 2A6C  
                          __pstringtext49 2A45                            __pstringtext58 2A71  
                          __pstringtext59 2A73                                  isdigit@c 0032  
                             ??_drv_write 004A                  __size_ofi1_do_I2C_DO_ACK 0004  
                             ??_setLEDPwr 004E                     ??_i2c1_driver_sendACK 0031  
                        ?_do_I2C_TX_EMPTY 0070                            i1_mssp1_setIRQ 2281  
                 __size_of_WDT_Initialize 0004                    _do_I2C_DO_ADDRESS_NACK 07D3  
          __size_ofi1_do_I2C_DO_NACK_STOP 0004                                  intlevel1 0000  
           __end_ofi1_do_I2C_DO_NACK_STOP 22C2                    _do_I2C_RESET$intlevel0 23E2  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0031  
                       ??_TMR2_WriteTimer 0070                   ?_LED_setBrightnessRange 0044  
                             ??_setActive 00B9                                 strchr@chr 0033  
                   ??_i2c1_driver_startRX 0031                                 strchr@ptr 0031  
              ??i1_send_2length_2bytes_IK 007B                          ___lldiv@dividend 0035  
                 ?_PIN_MANAGER_Initialize 0070                   __size_of_i2c_setAddress 0008  
                    ?_TMR0_Load8bitPeriod 0070              ??i1_send_2bytes_latchless_IK 0072  
                  i1_do_I2C_SEND_ADR_READ 2326                         __CFG_CLKOUTEN$OFF 0000  
                               stricmp@s1 0038                                 stricmp@s2 0033  
                               strcspn@s1 003E                                 strcspn@s2 0038  
                      __end_of_returnStop 2300                              getMoveMask@i 00B7  
     __size_ofi1_do_I2C_SEND_RESTART_READ 0004            __size_ofi1_i2c1_driver_sendACK 0004  
           ?_TMR0_DefaultInterruptHandler 0070             __end_ofi1_i2c1_driver_sendACK 22A6  
             __size_of_mssp1_IRQisEnabled 000A            __size_ofi1_i2c1_driver_restart 0003  
                                printf@ap 00B3             __end_ofi1_i2c1_driver_restart 2278  
                      _EUSART_Receive_ISR 2566               __size_of_mssp1_waitForEvent 000B  
          __size_ofi1_i2c1_driver_startRX 0003              __end_ofi1_i2c1_driver_TXData 22E5  
           __end_ofi1_i2c1_driver_startRX 227E                          ??_TMR2_StopTimer 0070  
         __end_of_TMR2_LoadPeriodRegister 22F4                             __pstringtext1 1000  
                           __pstringtext2 11E8                             __pstringtext3 12DA  
                           __pstringtext4 2800                             __pstringtext5 2A63  
                           __pstringtext6 2A66                             __pstringtext7 2A6F  
                           __pstringtext8 2A77                             __pstringtext9 10F4  
                 __size_ofi1_do_I2C_RESET 0007                    _send_2length_2bytes_IK 24FF  
                     ?_EUSART_Receive_ISR 0070              __end_ofi1_i2c1_driver_isNACK 2416  
                              _TMR0_RANGE 2A66                          ___lldiv@quotient 003A  
                         _TMR0_Initialize 24A9                                  stricmp@r 0037  
                              _TMR2_RANGE 2A63                                  strcspn@i 003C  
       send_2length_2bytes_IK@topOrBottom 0041       i1send_2length_2bytes_IK@topOrBottom 0025  
                  __size_of_i2c_setBuffer 0015                              ?_getMoveMask 00B5  
                   __size_of_startAbsMove 001D                                  toupper@c 0032  
                  __end_ofi1_mssp1_setIRQ 2284                               _returnReset 2300  
                                strtok@s1 0044                                  strtok@s2 003F  
                                strspn@s1 003E                                  strspn@s2 0038  
        _do_I2C_DO_NACK_RESTART$intlevel0 236A                                  strtok@sp 0054  
               ??i1_do_I2C_SEND_ADR_WRITE 0071                  __size_of_main_initialize 00DB  
          __end_of_LED_setBrightnessRange 0CD4                              getPosition@a 00B5  
                            ?_getPosition 00B5                    __size_ofi1_do_I2C_IDLE 0005  
                  __size_ofi1_do_I2C_RCEN 0006                   ??i1_send_last_2bytes_IK 0075  
                      EUSART_Write@txData 0032              __size_of_EUSART_Transmit_ISR 001E  
          __end_of_PIN_MANAGER_Initialize 1954               __end_of_i2c_busCollisionISR 2275  
                   __size_of_startRelMove 001B                     ??_TMR0_Load8bitPeriod 0031  
                     setMoveMask@probeNum 00B5                      ??_EUSART_Receive_ISR 0070  
                   _TMR2_InterruptHandler 01D9                     _do_I2C_SEND_ADR_WRITE 23E9  
                    _do_I2C_SEND_ADR_READ 2416  
