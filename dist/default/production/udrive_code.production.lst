

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jul 23 12:37:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	stringtext21,global,class=STRCODE,delta=2
    31                           	psect	stringtext22,global,class=STRCODE,delta=2
    32                           	psect	stringtext23,global,class=STRCODE,delta=2
    33                           	psect	stringtext24,global,class=STRCODE,delta=2
    34                           	psect	stringtext25,global,class=STRCODE,delta=2
    35                           	psect	stringtext26,global,class=STRCODE,delta=2
    36                           	psect	stringtext27,global,class=STRCODE,delta=2
    37                           	psect	stringtext28,global,class=STRCODE,delta=2
    38                           	psect	stringtext29,global,class=STRCODE,delta=2
    39                           	psect	stringtext30,global,class=STRCODE,delta=2
    40                           	psect	stringtext31,global,class=STRCODE,delta=2
    41                           	psect	stringtext32,global,class=STRCODE,delta=2
    42                           	psect	stringtext33,global,class=STRCODE,delta=2
    43                           	psect	stringtext34,global,class=STRCODE,delta=2
    44                           	psect	stringtext35,global,class=STRCODE,delta=2
    45                           	psect	stringtext36,global,class=STRCODE,delta=2
    46                           	psect	stringtext37,global,class=STRCODE,delta=2
    47                           	psect	stringtext38,global,class=STRCODE,delta=2
    48                           	psect	stringtext39,global,class=STRCODE,delta=2
    49                           	psect	stringtext40,global,class=STRCODE,delta=2
    50                           	psect	stringtext41,global,class=STRCODE,delta=2
    51                           	psect	stringtext42,global,class=STRCODE,delta=2
    52                           	psect	stringtext43,global,class=STRCODE,delta=2
    53                           	psect	stringtext44,global,class=STRCODE,delta=2
    54                           	psect	stringtext45,global,class=STRCODE,delta=2
    55                           	psect	stringtext46,global,class=STRCODE,delta=2
    56                           	psect	stringtext47,global,class=STRCODE,delta=2
    57                           	psect	stringtext48,global,class=STRCODE,delta=2
    58                           	psect	stringtext49,global,class=STRCODE,delta=2
    59                           	psect	stringtext50,global,class=STRCODE,delta=2
    60                           	psect	stringtext51,global,class=STRCODE,delta=2
    61                           	psect	stringtext52,global,class=STRCODE,delta=2
    62                           	psect	stringtext53,global,class=STRCODE,delta=2
    63                           	psect	stringtext54,global,class=STRCODE,delta=2
    64                           	psect	stringtext55,global,class=STRCODE,delta=2
    65                           	psect	stringtext56,global,class=STRCODE,delta=2
    66                           	psect	stringtext57,global,class=STRCODE,delta=2
    67                           	psect	stringtext58,global,class=STRCODE,delta=2
    68                           	psect	stringtext59,global,class=STRCODE,delta=2
    69                           	psect	stringtext60,global,class=STRCODE,delta=2
    70                           	psect	stringtext61,global,class=STRCODE,delta=2
    71                           	psect	cinit,global,class=CODE,merge=1,delta=2
    72                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    73                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    74                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    75                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    76                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    77                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    78                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    79                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    80                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    81                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    82                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    83                           	psect	inittext,global,class=CODE,delta=2
    84                           	psect	clrtext,global,class=CODE,delta=2
    85                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    86                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    87                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    88                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    89                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    90                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    91                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    92                           	psect	text1,local,class=CODE,merge=1,delta=2
    93                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
   101                           	psect	text10,local,class=CODE,merge=1,delta=2
   102                           	psect	text11,local,class=CODE,merge=1,delta=2
   103                           	psect	text12,local,class=CODE,merge=1,delta=2
   104                           	psect	text13,local,class=CODE,merge=1,delta=2
   105                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text16,local,class=CODE,merge=1,delta=2
   108                           	psect	text17,local,class=CODE,merge=1,delta=2
   109                           	psect	text18,local,class=CODE,merge=1,delta=2
   110                           	psect	swtext1,local,class=CONST,delta=2
   111                           	psect	text19,local,class=CODE,merge=1,delta=2
   112                           	psect	text20,local,class=CODE,merge=1,delta=2
   113                           	psect	text21,local,class=CODE,merge=1,delta=2
   114                           	psect	text22,local,class=CODE,merge=1,delta=2
   115                           	psect	text23,local,class=CODE,merge=1,delta=2
   116                           	psect	text24,local,class=CODE,merge=1,delta=2
   117                           	psect	text25,local,class=CODE,merge=1,delta=2
   118                           	psect	text26,local,class=CODE,merge=1,delta=2
   119                           	psect	text27,local,class=CODE,merge=1,delta=2
   120                           	psect	text28,local,class=CODE,merge=1,delta=2
   121                           	psect	text29,local,class=CODE,merge=1,delta=2
   122                           	psect	text30,local,class=CODE,merge=1,delta=2
   123                           	psect	text31,local,class=CODE,merge=1,delta=2
   124                           	psect	text32,local,class=CODE,merge=1,delta=2
   125                           	psect	text33,local,class=CODE,merge=1,delta=2
   126                           	psect	text34,local,class=CODE,merge=1,delta=2
   127                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   128                           	psect	text36,local,class=CODE,merge=1,delta=2
   129                           	psect	text37,local,class=CODE,merge=1,delta=2
   130                           	psect	text38,local,class=CODE,merge=1,delta=2
   131                           	psect	text39,local,class=CODE,merge=1,delta=2
   132                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   133                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
   135                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
   136                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
   137                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
   138                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
   139                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
   140                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
   141                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
   142                           	psect	text50,local,class=CODE,merge=1,delta=2
   143                           	psect	text51,local,class=CODE,merge=1,delta=2
   144                           	psect	text52,local,class=CODE,merge=1,delta=2
   145                           	psect	text53,local,class=CODE,merge=1,delta=2
   146                           	psect	text54,local,class=CODE,merge=1,delta=2
   147                           	psect	text55,local,class=CODE,merge=1,delta=2
   148                           	psect	text56,local,class=CODE,merge=1,delta=2
   149                           	psect	text57,local,class=CODE,merge=1,delta=2
   150                           	psect	text58,local,class=CODE,merge=1,delta=2
   151                           	psect	text59,local,class=CODE,merge=1,delta=2
   152                           	psect	text60,local,class=CODE,merge=1,delta=2
   153                           	psect	text61,local,class=CODE,merge=1,delta=2
   154                           	psect	text62,local,class=CODE,merge=1,delta=2
   155                           	psect	text63,local,class=CODE,merge=1,delta=2
   156                           	psect	text64,local,class=CODE,merge=1,delta=2
   157                           	psect	text65,local,class=CODE,merge=1,delta=2
   158                           	psect	text66,local,class=CODE,merge=1,delta=2
   159                           	psect	text67,local,class=CODE,merge=1,delta=2
   160                           	psect	text68,local,class=CODE,merge=1,delta=2
   161                           	psect	text69,local,class=CODE,merge=1,delta=2
   162                           	psect	text70,local,class=CODE,merge=1,delta=2
   163                           	psect	text71,local,class=CODE,merge=1,delta=2
   164                           	psect	text72,local,class=CODE,merge=1,delta=2,group=2
   165                           	psect	text73,local,class=CODE,merge=1,delta=2,group=2
   166                           	psect	text74,local,class=CODE,merge=1,delta=2
   167                           	psect	text75,local,class=CODE,merge=1,delta=2
   168                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
   169                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   170                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   171                           	psect	text79,local,class=CODE,merge=1,delta=2
   172                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text81,local,class=CODE,merge=1,delta=2
   174                           	psect	text82,local,class=CODE,merge=1,delta=2
   175                           	psect	text83,local,class=CODE,merge=1,delta=2
   176                           	psect	text84,local,class=CODE,merge=1,delta=2
   177                           	psect	text85,local,class=CODE,merge=1,delta=2
   178                           	psect	text86,local,class=CODE,merge=1,delta=2
   179                           	psect	text87,local,class=CODE,merge=1,delta=2
   180                           	psect	text88,local,class=CODE,merge=1,delta=2
   181                           	psect	text89,local,class=CODE,merge=1,delta=2
   182                           	psect	text90,local,class=CODE,merge=1,delta=2
   183                           	psect	text91,local,class=CODE,merge=1,delta=2
   184                           	psect	text92,local,class=CODE,merge=1,delta=2
   185                           	psect	text93,local,class=CODE,merge=1,delta=2
   186                           	psect	text94,local,class=CODE,merge=1,delta=2
   187                           	psect	text95,local,class=CODE,merge=1,delta=2
   188                           	psect	text96,local,class=CODE,merge=1,delta=2
   189                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   190                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   191                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   192                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   193                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   195                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text104,local,class=CODE,merge=1,delta=2
   197                           	psect	text105,local,class=CODE,merge=1,delta=2
   198                           	psect	text106,local,class=CODE,merge=1,inline,delta=2
   199                           	psect	text107,local,class=CODE,merge=1,inline,delta=2
   200                           	psect	text108,local,class=CODE,merge=1,inline,delta=2
   201                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   202                           	psect	text110,local,class=CODE,merge=1,delta=2,group=2
   203                           	psect	text111,local,class=CODE,merge=1,delta=2
   204                           	psect	text112,local,class=CODE,merge=1,delta=2
   205                           	psect	text113,local,class=CODE,merge=1,delta=2
   206                           	psect	text114,local,class=CODE,merge=1,delta=2
   207                           	psect	text115,local,class=CODE,merge=1,delta=2
   208                           	psect	text116,local,class=CODE,merge=1,delta=2
   209                           	psect	text117,local,class=CODE,merge=1,delta=2
   210                           	psect	text118,local,class=CODE,merge=1,delta=2
   211                           	psect	text119,local,class=CODE,merge=1,delta=2
   212                           	psect	text120,local,class=CODE,merge=1,delta=2
   213                           	psect	text121,local,class=CODE,merge=1,delta=2
   214                           	psect	text122,local,class=CODE,merge=1,delta=2
   215                           	psect	text123,local,class=CODE,merge=1,delta=2
   216                           	psect	text124,local,class=CODE,merge=1,delta=2
   217                           	psect	text125,local,class=CODE,merge=1,delta=2
   218                           	psect	text126,local,class=CODE,merge=1,delta=2
   219                           	psect	text127,local,class=CODE,merge=1,delta=2
   220                           	psect	text128,local,class=CODE,merge=1,delta=2
   221                           	psect	intentry,global,class=CODE,delta=2
   222                           	psect	text130,local,class=CODE,merge=1,delta=2
   223                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   224                           	psect	text132,local,class=CODE,merge=1,delta=2
   225                           	psect	text133,local,class=CODE,merge=1,delta=2
   226                           	psect	text134,local,class=CODE,merge=1,delta=2
   227                           	psect	text135,local,class=CODE,merge=1,delta=2
   228                           	psect	text136,local,class=CODE,merge=1,delta=2
   229                           	psect	text137,local,class=CODE,merge=1,delta=2
   230                           	psect	text138,local,class=CODE,merge=1,delta=2
   231                           	psect	text139,local,class=CODE,merge=1,delta=2
   232                           	psect	text140,local,class=CODE,merge=1,delta=2
   233                           	psect	text141,local,class=CODE,merge=1,delta=2
   234                           	psect	text142,local,class=CODE,merge=1,delta=2
   235                           	psect	text143,local,class=CODE,merge=1,delta=2
   236                           	psect	text144,local,class=CODE,merge=1,delta=2
   237                           	psect	text145,local,class=CODE,merge=1,delta=2
   238                           	psect	text146,local,class=CODE,merge=1,delta=2
   239                           	psect	text147,local,class=CODE,merge=1,delta=2
   240                           	psect	text148,local,class=CODE,merge=1,inline,delta=2
   241                           	psect	text149,local,class=CODE,merge=1,inline,delta=2
   242                           	psect	text150,local,class=CODE,merge=1,inline,delta=2
   243                           	psect	text151,local,class=CODE,merge=1,inline,delta=2
   244                           	psect	text152,local,class=CODE,merge=1,inline,delta=2
   245                           	psect	text153,local,class=CODE,merge=1,inline,delta=2
   246                           	psect	text154,local,class=CODE,merge=1,inline,delta=2
   247                           	psect	text155,local,class=CODE,merge=1,delta=2
   248                           	psect	text156,local,class=CODE,merge=1,delta=2
   249                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   250                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   251                           	psect	text159,local,class=CODE,merge=1,inline,delta=2
   252                           	psect	text160,local,class=CODE,merge=1,delta=2
   253                           	psect	text161,local,class=CODE,merge=1,inline,delta=2
   254                           	psect	text162,local,class=CODE,merge=1,delta=2
   255                           	psect	text163,local,class=CODE,merge=1,delta=2
   256                           	psect	text164,local,class=CODE,merge=1,delta=2
   257                           	psect	text165,local,class=CODE,merge=1,delta=2
   258                           	psect	text166,local,class=CODE,merge=1,delta=2
   259                           	psect	text167,local,class=CODE,merge=1,delta=2
   260                           	psect	text168,local,class=CODE,merge=1,delta=2
   261                           	psect	text169,local,class=CODE,merge=1,delta=2
   262                           	psect	text170,local,class=CODE,merge=1,delta=2
   263                           	psect	text171,local,class=CODE,merge=1,delta=2
   264                           	psect	text172,local,class=CODE,merge=1,delta=2
   265                           	psect	text173,local,class=CODE,merge=1,delta=2
   266                           	psect	text174,local,class=CODE,merge=1,delta=2
   267                           	psect	text175,local,class=CODE,merge=1,delta=2
   268                           	dabs	1,0xCA0,32
   269                           	dabs	1,0xC30,64
   270                           	dabs	1,0x2790,0,_currentPositions_steps
   271                           	dabs	1,0x7E,2
   272  0000                     
   273                           ; Version 1.45
   274                           ; Generated 16/11/2017 GMT
   275                           ; 
   276                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   277                           ; All rights reserved.
   278                           ; 
   279                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   280                           ; 
   281                           ; Redistribution and use in source and binary forms, with or without modification, are
   282                           ; permitted provided that the following conditions are met:
   283                           ; 
   284                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   285                           ;        conditions and the following disclaimer.
   286                           ; 
   287                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   288                           ;        of conditions and the following disclaimer in the documentation and/or other
   289                           ;        materials provided with the distribution.
   290                           ; 
   291                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   292                           ;        software without specific prior written permission.
   293                           ; 
   294                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   295                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   296                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   297                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   298                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   299                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   300                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   301                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   302                           ; 
   303                           ; 
   304                           ; Code-generator required, PIC16F18346 Definitions
   305                           ; 
   306                           ; SFR Addresses
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0097                     	;# 
   350  009B                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  0111                     	;# 
   360  0112                     	;# 
   361  0113                     	;# 
   362  0114                     	;# 
   363  0115                     	;# 
   364  0116                     	;# 
   365  0117                     	;# 
   366  0118                     	;# 
   367  0119                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  018E                     	;# 
   371  0197                     	;# 
   372  0199                     	;# 
   373  0199                     	;# 
   374  0199                     	;# 
   375  019A                     	;# 
   376  019A                     	;# 
   377  019A                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019B                     	;# 
   383  019C                     	;# 
   384  019C                     	;# 
   385  019C                     	;# 
   386  019D                     	;# 
   387  019D                     	;# 
   388  019D                     	;# 
   389  019E                     	;# 
   390  019E                     	;# 
   391  019E                     	;# 
   392  019F                     	;# 
   393  019F                     	;# 
   394  019F                     	;# 
   395  019F                     	;# 
   396  019F                     	;# 
   397  020C                     	;# 
   398  020D                     	;# 
   399  020E                     	;# 
   400  0211                     	;# 
   401  0211                     	;# 
   402  0212                     	;# 
   403  0212                     	;# 
   404  0213                     	;# 
   405  0213                     	;# 
   406  0214                     	;# 
   407  0214                     	;# 
   408  0215                     	;# 
   409  0215                     	;# 
   410  0215                     	;# 
   411  0215                     	;# 
   412  0216                     	;# 
   413  0216                     	;# 
   414  0217                     	;# 
   415  0217                     	;# 
   416  0219                     	;# 
   417  021A                     	;# 
   418  021B                     	;# 
   419  021C                     	;# 
   420  021D                     	;# 
   421  021D                     	;# 
   422  021E                     	;# 
   423  021F                     	;# 
   424  028C                     	;# 
   425  028D                     	;# 
   426  028E                     	;# 
   427  0291                     	;# 
   428  0291                     	;# 
   429  0292                     	;# 
   430  0293                     	;# 
   431  0294                     	;# 
   432  0295                     	;# 
   433  0295                     	;# 
   434  0296                     	;# 
   435  0297                     	;# 
   436  0298                     	;# 
   437  029F                     	;# 
   438  030C                     	;# 
   439  030D                     	;# 
   440  030E                     	;# 
   441  0311                     	;# 
   442  0311                     	;# 
   443  0312                     	;# 
   444  0313                     	;# 
   445  0314                     	;# 
   446  0315                     	;# 
   447  0315                     	;# 
   448  0316                     	;# 
   449  0317                     	;# 
   450  0318                     	;# 
   451  038C                     	;# 
   452  038D                     	;# 
   453  038E                     	;# 
   454  0391                     	;# 
   455  0392                     	;# 
   456  0393                     	;# 
   457  0394                     	;# 
   458  0395                     	;# 
   459  0396                     	;# 
   460  0397                     	;# 
   461  0398                     	;# 
   462  0399                     	;# 
   463  039A                     	;# 
   464  039C                     	;# 
   465  039D                     	;# 
   466  039E                     	;# 
   467  039F                     	;# 
   468  0411                     	;# 
   469  0411                     	;# 
   470  0412                     	;# 
   471  0413                     	;# 
   472  0414                     	;# 
   473  0415                     	;# 
   474  0416                     	;# 
   475  0417                     	;# 
   476  0418                     	;# 
   477  0418                     	;# 
   478  0419                     	;# 
   479  041A                     	;# 
   480  041B                     	;# 
   481  041C                     	;# 
   482  041D                     	;# 
   483  041E                     	;# 
   484  041F                     	;# 
   485  0498                     	;# 
   486  0498                     	;# 
   487  0499                     	;# 
   488  049A                     	;# 
   489  049B                     	;# 
   490  049B                     	;# 
   491  049C                     	;# 
   492  049D                     	;# 
   493  049E                     	;# 
   494  049F                     	;# 
   495  0617                     	;# 
   496  0618                     	;# 
   497  0619                     	;# 
   498  0619                     	;# 
   499  061A                     	;# 
   500  061B                     	;# 
   501  061C                     	;# 
   502  061C                     	;# 
   503  061F                     	;# 
   504  0691                     	;# 
   505  0692                     	;# 
   506  0693                     	;# 
   507  0694                     	;# 
   508  0695                     	;# 
   509  0696                     	;# 
   510  0697                     	;# 
   511  0698                     	;# 
   512  0699                     	;# 
   513  0711                     	;# 
   514  0712                     	;# 
   515  0713                     	;# 
   516  0714                     	;# 
   517  0715                     	;# 
   518  0716                     	;# 
   519  0717                     	;# 
   520  0718                     	;# 
   521  0719                     	;# 
   522  0891                     	;# 
   523  0891                     	;# 
   524  0891                     	;# 
   525  0891                     	;# 
   526  0891                     	;# 
   527  0891                     	;# 
   528  0892                     	;# 
   529  0892                     	;# 
   530  0892                     	;# 
   531  0893                     	;# 
   532  0893                     	;# 
   533  0893                     	;# 
   534  0893                     	;# 
   535  0893                     	;# 
   536  0893                     	;# 
   537  0894                     	;# 
   538  0894                     	;# 
   539  0894                     	;# 
   540  0895                     	;# 
   541  0895                     	;# 
   542  0895                     	;# 
   543  0896                     	;# 
   544  0896                     	;# 
   545  0896                     	;# 
   546  089B                     	;# 
   547  0911                     	;# 
   548  0912                     	;# 
   549  0913                     	;# 
   550  0914                     	;# 
   551  0915                     	;# 
   552  0916                     	;# 
   553  0918                     	;# 
   554  0919                     	;# 
   555  091A                     	;# 
   556  091B                     	;# 
   557  091C                     	;# 
   558  091D                     	;# 
   559  091E                     	;# 
   560  091F                     	;# 
   561  0E0F                     	;# 
   562  0E10                     	;# 
   563  0E11                     	;# 
   564  0E12                     	;# 
   565  0E13                     	;# 
   566  0E14                     	;# 
   567  0E15                     	;# 
   568  0E16                     	;# 
   569  0E17                     	;# 
   570  0E18                     	;# 
   571  0E19                     	;# 
   572  0E1A                     	;# 
   573  0E1B                     	;# 
   574  0E1C                     	;# 
   575  0E1D                     	;# 
   576  0E1E                     	;# 
   577  0E1F                     	;# 
   578  0E20                     	;# 
   579  0E21                     	;# 
   580  0E22                     	;# 
   581  0E24                     	;# 
   582  0E25                     	;# 
   583  0E28                     	;# 
   584  0E29                     	;# 
   585  0E2A                     	;# 
   586  0E2B                     	;# 
   587  0E2C                     	;# 
   588  0E2D                     	;# 
   589  0E2E                     	;# 
   590  0E2F                     	;# 
   591  0E90                     	;# 
   592  0E91                     	;# 
   593  0E92                     	;# 
   594  0E94                     	;# 
   595  0E95                     	;# 
   596  0E9C                     	;# 
   597  0E9D                     	;# 
   598  0E9E                     	;# 
   599  0E9F                     	;# 
   600  0EA0                     	;# 
   601  0EA1                     	;# 
   602  0EA2                     	;# 
   603  0EA3                     	;# 
   604  0EA4                     	;# 
   605  0EA5                     	;# 
   606  0EA6                     	;# 
   607  0EA7                     	;# 
   608  0F0F                     	;# 
   609  0F10                     	;# 
   610  0F11                     	;# 
   611  0F12                     	;# 
   612  0F13                     	;# 
   613  0F14                     	;# 
   614  0F15                     	;# 
   615  0F16                     	;# 
   616  0F17                     	;# 
   617  0F18                     	;# 
   618  0F19                     	;# 
   619  0F1A                     	;# 
   620  0F1B                     	;# 
   621  0F1C                     	;# 
   622  0F1D                     	;# 
   623  0F1E                     	;# 
   624  0F1F                     	;# 
   625  0F20                     	;# 
   626  0F21                     	;# 
   627  0F22                     	;# 
   628  0F23                     	;# 
   629  0F24                     	;# 
   630  0F25                     	;# 
   631  0F26                     	;# 
   632  0F27                     	;# 
   633  0F28                     	;# 
   634  0F29                     	;# 
   635  0F2A                     	;# 
   636  0F2B                     	;# 
   637  0F2C                     	;# 
   638  0F2D                     	;# 
   639  0F2E                     	;# 
   640  0F2F                     	;# 
   641  0F30                     	;# 
   642  0F31                     	;# 
   643  0F32                     	;# 
   644  0F33                     	;# 
   645  0F34                     	;# 
   646  0F35                     	;# 
   647  0F36                     	;# 
   648  0F37                     	;# 
   649  0FE4                     	;# 
   650  0FE5                     	;# 
   651  0FE6                     	;# 
   652  0FE7                     	;# 
   653  0FE8                     	;# 
   654  0FE9                     	;# 
   655  0FEA                     	;# 
   656  0FEB                     	;# 
   657  0FED                     	;# 
   658  0FEE                     	;# 
   659  0FEF                     	;# 
   660  0000                     	;# 
   661  0001                     	;# 
   662  0002                     	;# 
   663  0003                     	;# 
   664  0004                     	;# 
   665  0005                     	;# 
   666  0006                     	;# 
   667  0007                     	;# 
   668  0008                     	;# 
   669  0009                     	;# 
   670  000A                     	;# 
   671  000B                     	;# 
   672  000C                     	;# 
   673  000D                     	;# 
   674  000E                     	;# 
   675  0010                     	;# 
   676  0011                     	;# 
   677  0012                     	;# 
   678  0013                     	;# 
   679  0014                     	;# 
   680  0015                     	;# 
   681  0015                     	;# 
   682  0016                     	;# 
   683  0016                     	;# 
   684  0017                     	;# 
   685  0018                     	;# 
   686  0019                     	;# 
   687  0019                     	;# 
   688  001A                     	;# 
   689  001B                     	;# 
   690  001C                     	;# 
   691  001D                     	;# 
   692  001E                     	;# 
   693  001F                     	;# 
   694  008C                     	;# 
   695  008D                     	;# 
   696  008E                     	;# 
   697  0090                     	;# 
   698  0091                     	;# 
   699  0092                     	;# 
   700  0093                     	;# 
   701  0094                     	;# 
   702  0097                     	;# 
   703  009B                     	;# 
   704  009B                     	;# 
   705  009C                     	;# 
   706  009D                     	;# 
   707  009E                     	;# 
   708  009F                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  0111                     	;# 
   713  0112                     	;# 
   714  0113                     	;# 
   715  0114                     	;# 
   716  0115                     	;# 
   717  0116                     	;# 
   718  0117                     	;# 
   719  0118                     	;# 
   720  0119                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018E                     	;# 
   724  0197                     	;# 
   725  0199                     	;# 
   726  0199                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019A                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019B                     	;# 
   736  019C                     	;# 
   737  019C                     	;# 
   738  019C                     	;# 
   739  019D                     	;# 
   740  019D                     	;# 
   741  019D                     	;# 
   742  019E                     	;# 
   743  019E                     	;# 
   744  019E                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  019F                     	;# 
   749  019F                     	;# 
   750  020C                     	;# 
   751  020D                     	;# 
   752  020E                     	;# 
   753  0211                     	;# 
   754  0211                     	;# 
   755  0212                     	;# 
   756  0212                     	;# 
   757  0213                     	;# 
   758  0213                     	;# 
   759  0214                     	;# 
   760  0214                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0216                     	;# 
   766  0216                     	;# 
   767  0217                     	;# 
   768  0217                     	;# 
   769  0219                     	;# 
   770  021A                     	;# 
   771  021B                     	;# 
   772  021C                     	;# 
   773  021D                     	;# 
   774  021D                     	;# 
   775  021E                     	;# 
   776  021F                     	;# 
   777  028C                     	;# 
   778  028D                     	;# 
   779  028E                     	;# 
   780  0291                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0293                     	;# 
   784  0294                     	;# 
   785  0295                     	;# 
   786  0295                     	;# 
   787  0296                     	;# 
   788  0297                     	;# 
   789  0298                     	;# 
   790  029F                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  0311                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0315                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0317                     	;# 
   803  0318                     	;# 
   804  038C                     	;# 
   805  038D                     	;# 
   806  038E                     	;# 
   807  0391                     	;# 
   808  0392                     	;# 
   809  0393                     	;# 
   810  0394                     	;# 
   811  0395                     	;# 
   812  0396                     	;# 
   813  0397                     	;# 
   814  0398                     	;# 
   815  0399                     	;# 
   816  039A                     	;# 
   817  039C                     	;# 
   818  039D                     	;# 
   819  039E                     	;# 
   820  039F                     	;# 
   821  0411                     	;# 
   822  0411                     	;# 
   823  0412                     	;# 
   824  0413                     	;# 
   825  0414                     	;# 
   826  0415                     	;# 
   827  0416                     	;# 
   828  0417                     	;# 
   829  0418                     	;# 
   830  0418                     	;# 
   831  0419                     	;# 
   832  041A                     	;# 
   833  041B                     	;# 
   834  041C                     	;# 
   835  041D                     	;# 
   836  041E                     	;# 
   837  041F                     	;# 
   838  0498                     	;# 
   839  0498                     	;# 
   840  0499                     	;# 
   841  049A                     	;# 
   842  049B                     	;# 
   843  049B                     	;# 
   844  049C                     	;# 
   845  049D                     	;# 
   846  049E                     	;# 
   847  049F                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061C                     	;# 
   856  061F                     	;# 
   857  0691                     	;# 
   858  0692                     	;# 
   859  0693                     	;# 
   860  0694                     	;# 
   861  0695                     	;# 
   862  0696                     	;# 
   863  0697                     	;# 
   864  0698                     	;# 
   865  0699                     	;# 
   866  0711                     	;# 
   867  0712                     	;# 
   868  0713                     	;# 
   869  0714                     	;# 
   870  0715                     	;# 
   871  0716                     	;# 
   872  0717                     	;# 
   873  0718                     	;# 
   874  0719                     	;# 
   875  0891                     	;# 
   876  0891                     	;# 
   877  0891                     	;# 
   878  0891                     	;# 
   879  0891                     	;# 
   880  0891                     	;# 
   881  0892                     	;# 
   882  0892                     	;# 
   883  0892                     	;# 
   884  0893                     	;# 
   885  0893                     	;# 
   886  0893                     	;# 
   887  0893                     	;# 
   888  0893                     	;# 
   889  0893                     	;# 
   890  0894                     	;# 
   891  0894                     	;# 
   892  0894                     	;# 
   893  0895                     	;# 
   894  0895                     	;# 
   895  0895                     	;# 
   896  0896                     	;# 
   897  0896                     	;# 
   898  0896                     	;# 
   899  089B                     	;# 
   900  0911                     	;# 
   901  0912                     	;# 
   902  0913                     	;# 
   903  0914                     	;# 
   904  0915                     	;# 
   905  0916                     	;# 
   906  0918                     	;# 
   907  0919                     	;# 
   908  091A                     	;# 
   909  091B                     	;# 
   910  091C                     	;# 
   911  091D                     	;# 
   912  091E                     	;# 
   913  091F                     	;# 
   914  0E0F                     	;# 
   915  0E10                     	;# 
   916  0E11                     	;# 
   917  0E12                     	;# 
   918  0E13                     	;# 
   919  0E14                     	;# 
   920  0E15                     	;# 
   921  0E16                     	;# 
   922  0E17                     	;# 
   923  0E18                     	;# 
   924  0E19                     	;# 
   925  0E1A                     	;# 
   926  0E1B                     	;# 
   927  0E1C                     	;# 
   928  0E1D                     	;# 
   929  0E1E                     	;# 
   930  0E1F                     	;# 
   931  0E20                     	;# 
   932  0E21                     	;# 
   933  0E22                     	;# 
   934  0E24                     	;# 
   935  0E25                     	;# 
   936  0E28                     	;# 
   937  0E29                     	;# 
   938  0E2A                     	;# 
   939  0E2B                     	;# 
   940  0E2C                     	;# 
   941  0E2D                     	;# 
   942  0E2E                     	;# 
   943  0E2F                     	;# 
   944  0E90                     	;# 
   945  0E91                     	;# 
   946  0E92                     	;# 
   947  0E94                     	;# 
   948  0E95                     	;# 
   949  0E9C                     	;# 
   950  0E9D                     	;# 
   951  0E9E                     	;# 
   952  0E9F                     	;# 
   953  0EA0                     	;# 
   954  0EA1                     	;# 
   955  0EA2                     	;# 
   956  0EA3                     	;# 
   957  0EA4                     	;# 
   958  0EA5                     	;# 
   959  0EA6                     	;# 
   960  0EA7                     	;# 
   961  0F0F                     	;# 
   962  0F10                     	;# 
   963  0F11                     	;# 
   964  0F12                     	;# 
   965  0F13                     	;# 
   966  0F14                     	;# 
   967  0F15                     	;# 
   968  0F16                     	;# 
   969  0F17                     	;# 
   970  0F18                     	;# 
   971  0F19                     	;# 
   972  0F1A                     	;# 
   973  0F1B                     	;# 
   974  0F1C                     	;# 
   975  0F1D                     	;# 
   976  0F1E                     	;# 
   977  0F1F                     	;# 
   978  0F20                     	;# 
   979  0F21                     	;# 
   980  0F22                     	;# 
   981  0F23                     	;# 
   982  0F24                     	;# 
   983  0F25                     	;# 
   984  0F26                     	;# 
   985  0F27                     	;# 
   986  0F28                     	;# 
   987  0F29                     	;# 
   988  0F2A                     	;# 
   989  0F2B                     	;# 
   990  0F2C                     	;# 
   991  0F2D                     	;# 
   992  0F2E                     	;# 
   993  0F2F                     	;# 
   994  0F30                     	;# 
   995  0F31                     	;# 
   996  0F32                     	;# 
   997  0F33                     	;# 
   998  0F34                     	;# 
   999  0F35                     	;# 
  1000  0F36                     	;# 
  1001  0F37                     	;# 
  1002  0FE4                     	;# 
  1003  0FE5                     	;# 
  1004  0FE6                     	;# 
  1005  0FE7                     	;# 
  1006  0FE8                     	;# 
  1007  0FE9                     	;# 
  1008  0FEA                     	;# 
  1009  0FEB                     	;# 
  1010  0FED                     	;# 
  1011  0FEE                     	;# 
  1012  0FEF                     	;# 
  1013  0000                     	;# 
  1014  0001                     	;# 
  1015  0002                     	;# 
  1016  0003                     	;# 
  1017  0004                     	;# 
  1018  0005                     	;# 
  1019  0006                     	;# 
  1020  0007                     	;# 
  1021  0008                     	;# 
  1022  0009                     	;# 
  1023  000A                     	;# 
  1024  000B                     	;# 
  1025  000C                     	;# 
  1026  000D                     	;# 
  1027  000E                     	;# 
  1028  0010                     	;# 
  1029  0011                     	;# 
  1030  0012                     	;# 
  1031  0013                     	;# 
  1032  0014                     	;# 
  1033  0015                     	;# 
  1034  0015                     	;# 
  1035  0016                     	;# 
  1036  0016                     	;# 
  1037  0017                     	;# 
  1038  0018                     	;# 
  1039  0019                     	;# 
  1040  0019                     	;# 
  1041  001A                     	;# 
  1042  001B                     	;# 
  1043  001C                     	;# 
  1044  001D                     	;# 
  1045  001E                     	;# 
  1046  001F                     	;# 
  1047  008C                     	;# 
  1048  008D                     	;# 
  1049  008E                     	;# 
  1050  0090                     	;# 
  1051  0091                     	;# 
  1052  0092                     	;# 
  1053  0093                     	;# 
  1054  0094                     	;# 
  1055  0097                     	;# 
  1056  009B                     	;# 
  1057  009B                     	;# 
  1058  009C                     	;# 
  1059  009D                     	;# 
  1060  009E                     	;# 
  1061  009F                     	;# 
  1062  010C                     	;# 
  1063  010D                     	;# 
  1064  010E                     	;# 
  1065  0111                     	;# 
  1066  0112                     	;# 
  1067  0113                     	;# 
  1068  0114                     	;# 
  1069  0115                     	;# 
  1070  0116                     	;# 
  1071  0117                     	;# 
  1072  0118                     	;# 
  1073  0119                     	;# 
  1074  018C                     	;# 
  1075  018D                     	;# 
  1076  018E                     	;# 
  1077  0197                     	;# 
  1078  0199                     	;# 
  1079  0199                     	;# 
  1080  0199                     	;# 
  1081  019A                     	;# 
  1082  019A                     	;# 
  1083  019A                     	;# 
  1084  019B                     	;# 
  1085  019B                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019C                     	;# 
  1090  019C                     	;# 
  1091  019C                     	;# 
  1092  019D                     	;# 
  1093  019D                     	;# 
  1094  019D                     	;# 
  1095  019E                     	;# 
  1096  019E                     	;# 
  1097  019E                     	;# 
  1098  019F                     	;# 
  1099  019F                     	;# 
  1100  019F                     	;# 
  1101  019F                     	;# 
  1102  019F                     	;# 
  1103  020C                     	;# 
  1104  020D                     	;# 
  1105  020E                     	;# 
  1106  0211                     	;# 
  1107  0211                     	;# 
  1108  0212                     	;# 
  1109  0212                     	;# 
  1110  0213                     	;# 
  1111  0213                     	;# 
  1112  0214                     	;# 
  1113  0214                     	;# 
  1114  0215                     	;# 
  1115  0215                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0216                     	;# 
  1119  0216                     	;# 
  1120  0217                     	;# 
  1121  0217                     	;# 
  1122  0219                     	;# 
  1123  021A                     	;# 
  1124  021B                     	;# 
  1125  021C                     	;# 
  1126  021D                     	;# 
  1127  021D                     	;# 
  1128  021E                     	;# 
  1129  021F                     	;# 
  1130  028C                     	;# 
  1131  028D                     	;# 
  1132  028E                     	;# 
  1133  0291                     	;# 
  1134  0291                     	;# 
  1135  0292                     	;# 
  1136  0293                     	;# 
  1137  0294                     	;# 
  1138  0295                     	;# 
  1139  0295                     	;# 
  1140  0296                     	;# 
  1141  0297                     	;# 
  1142  0298                     	;# 
  1143  029F                     	;# 
  1144  030C                     	;# 
  1145  030D                     	;# 
  1146  030E                     	;# 
  1147  0311                     	;# 
  1148  0311                     	;# 
  1149  0312                     	;# 
  1150  0313                     	;# 
  1151  0314                     	;# 
  1152  0315                     	;# 
  1153  0315                     	;# 
  1154  0316                     	;# 
  1155  0317                     	;# 
  1156  0318                     	;# 
  1157  038C                     	;# 
  1158  038D                     	;# 
  1159  038E                     	;# 
  1160  0391                     	;# 
  1161  0392                     	;# 
  1162  0393                     	;# 
  1163  0394                     	;# 
  1164  0395                     	;# 
  1165  0396                     	;# 
  1166  0397                     	;# 
  1167  0398                     	;# 
  1168  0399                     	;# 
  1169  039A                     	;# 
  1170  039C                     	;# 
  1171  039D                     	;# 
  1172  039E                     	;# 
  1173  039F                     	;# 
  1174  0411                     	;# 
  1175  0411                     	;# 
  1176  0412                     	;# 
  1177  0413                     	;# 
  1178  0414                     	;# 
  1179  0415                     	;# 
  1180  0416                     	;# 
  1181  0417                     	;# 
  1182  0418                     	;# 
  1183  0418                     	;# 
  1184  0419                     	;# 
  1185  041A                     	;# 
  1186  041B                     	;# 
  1187  041C                     	;# 
  1188  041D                     	;# 
  1189  041E                     	;# 
  1190  041F                     	;# 
  1191  0498                     	;# 
  1192  0498                     	;# 
  1193  0499                     	;# 
  1194  049A                     	;# 
  1195  049B                     	;# 
  1196  049B                     	;# 
  1197  049C                     	;# 
  1198  049D                     	;# 
  1199  049E                     	;# 
  1200  049F                     	;# 
  1201  0617                     	;# 
  1202  0618                     	;# 
  1203  0619                     	;# 
  1204  0619                     	;# 
  1205  061A                     	;# 
  1206  061B                     	;# 
  1207  061C                     	;# 
  1208  061C                     	;# 
  1209  061F                     	;# 
  1210  0691                     	;# 
  1211  0692                     	;# 
  1212  0693                     	;# 
  1213  0694                     	;# 
  1214  0695                     	;# 
  1215  0696                     	;# 
  1216  0697                     	;# 
  1217  0698                     	;# 
  1218  0699                     	;# 
  1219  0711                     	;# 
  1220  0712                     	;# 
  1221  0713                     	;# 
  1222  0714                     	;# 
  1223  0715                     	;# 
  1224  0716                     	;# 
  1225  0717                     	;# 
  1226  0718                     	;# 
  1227  0719                     	;# 
  1228  0891                     	;# 
  1229  0891                     	;# 
  1230  0891                     	;# 
  1231  0891                     	;# 
  1232  0891                     	;# 
  1233  0891                     	;# 
  1234  0892                     	;# 
  1235  0892                     	;# 
  1236  0892                     	;# 
  1237  0893                     	;# 
  1238  0893                     	;# 
  1239  0893                     	;# 
  1240  0893                     	;# 
  1241  0893                     	;# 
  1242  0893                     	;# 
  1243  0894                     	;# 
  1244  0894                     	;# 
  1245  0894                     	;# 
  1246  0895                     	;# 
  1247  0895                     	;# 
  1248  0895                     	;# 
  1249  0896                     	;# 
  1250  0896                     	;# 
  1251  0896                     	;# 
  1252  089B                     	;# 
  1253  0911                     	;# 
  1254  0912                     	;# 
  1255  0913                     	;# 
  1256  0914                     	;# 
  1257  0915                     	;# 
  1258  0916                     	;# 
  1259  0918                     	;# 
  1260  0919                     	;# 
  1261  091A                     	;# 
  1262  091B                     	;# 
  1263  091C                     	;# 
  1264  091D                     	;# 
  1265  091E                     	;# 
  1266  091F                     	;# 
  1267  0E0F                     	;# 
  1268  0E10                     	;# 
  1269  0E11                     	;# 
  1270  0E12                     	;# 
  1271  0E13                     	;# 
  1272  0E14                     	;# 
  1273  0E15                     	;# 
  1274  0E16                     	;# 
  1275  0E17                     	;# 
  1276  0E18                     	;# 
  1277  0E19                     	;# 
  1278  0E1A                     	;# 
  1279  0E1B                     	;# 
  1280  0E1C                     	;# 
  1281  0E1D                     	;# 
  1282  0E1E                     	;# 
  1283  0E1F                     	;# 
  1284  0E20                     	;# 
  1285  0E21                     	;# 
  1286  0E22                     	;# 
  1287  0E24                     	;# 
  1288  0E25                     	;# 
  1289  0E28                     	;# 
  1290  0E29                     	;# 
  1291  0E2A                     	;# 
  1292  0E2B                     	;# 
  1293  0E2C                     	;# 
  1294  0E2D                     	;# 
  1295  0E2E                     	;# 
  1296  0E2F                     	;# 
  1297  0E90                     	;# 
  1298  0E91                     	;# 
  1299  0E92                     	;# 
  1300  0E94                     	;# 
  1301  0E95                     	;# 
  1302  0E9C                     	;# 
  1303  0E9D                     	;# 
  1304  0E9E                     	;# 
  1305  0E9F                     	;# 
  1306  0EA0                     	;# 
  1307  0EA1                     	;# 
  1308  0EA2                     	;# 
  1309  0EA3                     	;# 
  1310  0EA4                     	;# 
  1311  0EA5                     	;# 
  1312  0EA6                     	;# 
  1313  0EA7                     	;# 
  1314  0F0F                     	;# 
  1315  0F10                     	;# 
  1316  0F11                     	;# 
  1317  0F12                     	;# 
  1318  0F13                     	;# 
  1319  0F14                     	;# 
  1320  0F15                     	;# 
  1321  0F16                     	;# 
  1322  0F17                     	;# 
  1323  0F18                     	;# 
  1324  0F19                     	;# 
  1325  0F1A                     	;# 
  1326  0F1B                     	;# 
  1327  0F1C                     	;# 
  1328  0F1D                     	;# 
  1329  0F1E                     	;# 
  1330  0F1F                     	;# 
  1331  0F20                     	;# 
  1332  0F21                     	;# 
  1333  0F22                     	;# 
  1334  0F23                     	;# 
  1335  0F24                     	;# 
  1336  0F25                     	;# 
  1337  0F26                     	;# 
  1338  0F27                     	;# 
  1339  0F28                     	;# 
  1340  0F29                     	;# 
  1341  0F2A                     	;# 
  1342  0F2B                     	;# 
  1343  0F2C                     	;# 
  1344  0F2D                     	;# 
  1345  0F2E                     	;# 
  1346  0F2F                     	;# 
  1347  0F30                     	;# 
  1348  0F31                     	;# 
  1349  0F32                     	;# 
  1350  0F33                     	;# 
  1351  0F34                     	;# 
  1352  0F35                     	;# 
  1353  0F36                     	;# 
  1354  0F37                     	;# 
  1355  0FE4                     	;# 
  1356  0FE5                     	;# 
  1357  0FE6                     	;# 
  1358  0FE7                     	;# 
  1359  0FE8                     	;# 
  1360  0FE9                     	;# 
  1361  0FEA                     	;# 
  1362  0FEB                     	;# 
  1363  0FED                     	;# 
  1364  0FEE                     	;# 
  1365  0FEF                     	;# 
  1366  0000                     	;# 
  1367  0001                     	;# 
  1368  0002                     	;# 
  1369  0003                     	;# 
  1370  0004                     	;# 
  1371  0005                     	;# 
  1372  0006                     	;# 
  1373  0007                     	;# 
  1374  0008                     	;# 
  1375  0009                     	;# 
  1376  000A                     	;# 
  1377  000B                     	;# 
  1378  000C                     	;# 
  1379  000D                     	;# 
  1380  000E                     	;# 
  1381  0010                     	;# 
  1382  0011                     	;# 
  1383  0012                     	;# 
  1384  0013                     	;# 
  1385  0014                     	;# 
  1386  0015                     	;# 
  1387  0015                     	;# 
  1388  0016                     	;# 
  1389  0016                     	;# 
  1390  0017                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  0019                     	;# 
  1394  001A                     	;# 
  1395  001B                     	;# 
  1396  001C                     	;# 
  1397  001D                     	;# 
  1398  001E                     	;# 
  1399  001F                     	;# 
  1400  008C                     	;# 
  1401  008D                     	;# 
  1402  008E                     	;# 
  1403  0090                     	;# 
  1404  0091                     	;# 
  1405  0092                     	;# 
  1406  0093                     	;# 
  1407  0094                     	;# 
  1408  0097                     	;# 
  1409  009B                     	;# 
  1410  009B                     	;# 
  1411  009C                     	;# 
  1412  009D                     	;# 
  1413  009E                     	;# 
  1414  009F                     	;# 
  1415  010C                     	;# 
  1416  010D                     	;# 
  1417  010E                     	;# 
  1418  0111                     	;# 
  1419  0112                     	;# 
  1420  0113                     	;# 
  1421  0114                     	;# 
  1422  0115                     	;# 
  1423  0116                     	;# 
  1424  0117                     	;# 
  1425  0118                     	;# 
  1426  0119                     	;# 
  1427  018C                     	;# 
  1428  018D                     	;# 
  1429  018E                     	;# 
  1430  0197                     	;# 
  1431  0199                     	;# 
  1432  0199                     	;# 
  1433  0199                     	;# 
  1434  019A                     	;# 
  1435  019A                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019C                     	;# 
  1445  019D                     	;# 
  1446  019D                     	;# 
  1447  019D                     	;# 
  1448  019E                     	;# 
  1449  019E                     	;# 
  1450  019E                     	;# 
  1451  019F                     	;# 
  1452  019F                     	;# 
  1453  019F                     	;# 
  1454  019F                     	;# 
  1455  019F                     	;# 
  1456  020C                     	;# 
  1457  020D                     	;# 
  1458  020E                     	;# 
  1459  0211                     	;# 
  1460  0211                     	;# 
  1461  0212                     	;# 
  1462  0212                     	;# 
  1463  0213                     	;# 
  1464  0213                     	;# 
  1465  0214                     	;# 
  1466  0214                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  0219                     	;# 
  1476  021A                     	;# 
  1477  021B                     	;# 
  1478  021C                     	;# 
  1479  021D                     	;# 
  1480  021D                     	;# 
  1481  021E                     	;# 
  1482  021F                     	;# 
  1483  028C                     	;# 
  1484  028D                     	;# 
  1485  028E                     	;# 
  1486  0291                     	;# 
  1487  0291                     	;# 
  1488  0292                     	;# 
  1489  0293                     	;# 
  1490  0294                     	;# 
  1491  0295                     	;# 
  1492  0295                     	;# 
  1493  0296                     	;# 
  1494  0297                     	;# 
  1495  0298                     	;# 
  1496  029F                     	;# 
  1497  030C                     	;# 
  1498  030D                     	;# 
  1499  030E                     	;# 
  1500  0311                     	;# 
  1501  0311                     	;# 
  1502  0312                     	;# 
  1503  0313                     	;# 
  1504  0314                     	;# 
  1505  0315                     	;# 
  1506  0315                     	;# 
  1507  0316                     	;# 
  1508  0317                     	;# 
  1509  0318                     	;# 
  1510  038C                     	;# 
  1511  038D                     	;# 
  1512  038E                     	;# 
  1513  0391                     	;# 
  1514  0392                     	;# 
  1515  0393                     	;# 
  1516  0394                     	;# 
  1517  0395                     	;# 
  1518  0396                     	;# 
  1519  0397                     	;# 
  1520  0398                     	;# 
  1521  0399                     	;# 
  1522  039A                     	;# 
  1523  039C                     	;# 
  1524  039D                     	;# 
  1525  039E                     	;# 
  1526  039F                     	;# 
  1527  0411                     	;# 
  1528  0411                     	;# 
  1529  0412                     	;# 
  1530  0413                     	;# 
  1531  0414                     	;# 
  1532  0415                     	;# 
  1533  0416                     	;# 
  1534  0417                     	;# 
  1535  0418                     	;# 
  1536  0418                     	;# 
  1537  0419                     	;# 
  1538  041A                     	;# 
  1539  041B                     	;# 
  1540  041C                     	;# 
  1541  041D                     	;# 
  1542  041E                     	;# 
  1543  041F                     	;# 
  1544  0498                     	;# 
  1545  0498                     	;# 
  1546  0499                     	;# 
  1547  049A                     	;# 
  1548  049B                     	;# 
  1549  049B                     	;# 
  1550  049C                     	;# 
  1551  049D                     	;# 
  1552  049E                     	;# 
  1553  049F                     	;# 
  1554  0617                     	;# 
  1555  0618                     	;# 
  1556  0619                     	;# 
  1557  0619                     	;# 
  1558  061A                     	;# 
  1559  061B                     	;# 
  1560  061C                     	;# 
  1561  061C                     	;# 
  1562  061F                     	;# 
  1563  0691                     	;# 
  1564  0692                     	;# 
  1565  0693                     	;# 
  1566  0694                     	;# 
  1567  0695                     	;# 
  1568  0696                     	;# 
  1569  0697                     	;# 
  1570  0698                     	;# 
  1571  0699                     	;# 
  1572  0711                     	;# 
  1573  0712                     	;# 
  1574  0713                     	;# 
  1575  0714                     	;# 
  1576  0715                     	;# 
  1577  0716                     	;# 
  1578  0717                     	;# 
  1579  0718                     	;# 
  1580  0719                     	;# 
  1581  0891                     	;# 
  1582  0891                     	;# 
  1583  0891                     	;# 
  1584  0891                     	;# 
  1585  0891                     	;# 
  1586  0891                     	;# 
  1587  0892                     	;# 
  1588  0892                     	;# 
  1589  0892                     	;# 
  1590  0893                     	;# 
  1591  0893                     	;# 
  1592  0893                     	;# 
  1593  0893                     	;# 
  1594  0893                     	;# 
  1595  0893                     	;# 
  1596  0894                     	;# 
  1597  0894                     	;# 
  1598  0894                     	;# 
  1599  0895                     	;# 
  1600  0895                     	;# 
  1601  0895                     	;# 
  1602  0896                     	;# 
  1603  0896                     	;# 
  1604  0896                     	;# 
  1605  089B                     	;# 
  1606  0911                     	;# 
  1607  0912                     	;# 
  1608  0913                     	;# 
  1609  0914                     	;# 
  1610  0915                     	;# 
  1611  0916                     	;# 
  1612  0918                     	;# 
  1613  0919                     	;# 
  1614  091A                     	;# 
  1615  091B                     	;# 
  1616  091C                     	;# 
  1617  091D                     	;# 
  1618  091E                     	;# 
  1619  091F                     	;# 
  1620  0E0F                     	;# 
  1621  0E10                     	;# 
  1622  0E11                     	;# 
  1623  0E12                     	;# 
  1624  0E13                     	;# 
  1625  0E14                     	;# 
  1626  0E15                     	;# 
  1627  0E16                     	;# 
  1628  0E17                     	;# 
  1629  0E18                     	;# 
  1630  0E19                     	;# 
  1631  0E1A                     	;# 
  1632  0E1B                     	;# 
  1633  0E1C                     	;# 
  1634  0E1D                     	;# 
  1635  0E1E                     	;# 
  1636  0E1F                     	;# 
  1637  0E20                     	;# 
  1638  0E21                     	;# 
  1639  0E22                     	;# 
  1640  0E24                     	;# 
  1641  0E25                     	;# 
  1642  0E28                     	;# 
  1643  0E29                     	;# 
  1644  0E2A                     	;# 
  1645  0E2B                     	;# 
  1646  0E2C                     	;# 
  1647  0E2D                     	;# 
  1648  0E2E                     	;# 
  1649  0E2F                     	;# 
  1650  0E90                     	;# 
  1651  0E91                     	;# 
  1652  0E92                     	;# 
  1653  0E94                     	;# 
  1654  0E95                     	;# 
  1655  0E9C                     	;# 
  1656  0E9D                     	;# 
  1657  0E9E                     	;# 
  1658  0E9F                     	;# 
  1659  0EA0                     	;# 
  1660  0EA1                     	;# 
  1661  0EA2                     	;# 
  1662  0EA3                     	;# 
  1663  0EA4                     	;# 
  1664  0EA5                     	;# 
  1665  0EA6                     	;# 
  1666  0EA7                     	;# 
  1667  0F0F                     	;# 
  1668  0F10                     	;# 
  1669  0F11                     	;# 
  1670  0F12                     	;# 
  1671  0F13                     	;# 
  1672  0F14                     	;# 
  1673  0F15                     	;# 
  1674  0F16                     	;# 
  1675  0F17                     	;# 
  1676  0F18                     	;# 
  1677  0F19                     	;# 
  1678  0F1A                     	;# 
  1679  0F1B                     	;# 
  1680  0F1C                     	;# 
  1681  0F1D                     	;# 
  1682  0F1E                     	;# 
  1683  0F1F                     	;# 
  1684  0F20                     	;# 
  1685  0F21                     	;# 
  1686  0F22                     	;# 
  1687  0F23                     	;# 
  1688  0F24                     	;# 
  1689  0F25                     	;# 
  1690  0F26                     	;# 
  1691  0F27                     	;# 
  1692  0F28                     	;# 
  1693  0F29                     	;# 
  1694  0F2A                     	;# 
  1695  0F2B                     	;# 
  1696  0F2C                     	;# 
  1697  0F2D                     	;# 
  1698  0F2E                     	;# 
  1699  0F2F                     	;# 
  1700  0F30                     	;# 
  1701  0F31                     	;# 
  1702  0F32                     	;# 
  1703  0F33                     	;# 
  1704  0F34                     	;# 
  1705  0F35                     	;# 
  1706  0F36                     	;# 
  1707  0F37                     	;# 
  1708  0FE4                     	;# 
  1709  0FE5                     	;# 
  1710  0FE6                     	;# 
  1711  0FE7                     	;# 
  1712  0FE8                     	;# 
  1713  0FE9                     	;# 
  1714  0FEA                     	;# 
  1715  0FEB                     	;# 
  1716  0FED                     	;# 
  1717  0FEE                     	;# 
  1718  0FEF                     	;# 
  1719  0000                     	;# 
  1720  0001                     	;# 
  1721  0002                     	;# 
  1722  0003                     	;# 
  1723  0004                     	;# 
  1724  0005                     	;# 
  1725  0006                     	;# 
  1726  0007                     	;# 
  1727  0008                     	;# 
  1728  0009                     	;# 
  1729  000A                     	;# 
  1730  000B                     	;# 
  1731  000C                     	;# 
  1732  000D                     	;# 
  1733  000E                     	;# 
  1734  0010                     	;# 
  1735  0011                     	;# 
  1736  0012                     	;# 
  1737  0013                     	;# 
  1738  0014                     	;# 
  1739  0015                     	;# 
  1740  0015                     	;# 
  1741  0016                     	;# 
  1742  0016                     	;# 
  1743  0017                     	;# 
  1744  0018                     	;# 
  1745  0019                     	;# 
  1746  0019                     	;# 
  1747  001A                     	;# 
  1748  001B                     	;# 
  1749  001C                     	;# 
  1750  001D                     	;# 
  1751  001E                     	;# 
  1752  001F                     	;# 
  1753  008C                     	;# 
  1754  008D                     	;# 
  1755  008E                     	;# 
  1756  0090                     	;# 
  1757  0091                     	;# 
  1758  0092                     	;# 
  1759  0093                     	;# 
  1760  0094                     	;# 
  1761  0097                     	;# 
  1762  009B                     	;# 
  1763  009B                     	;# 
  1764  009C                     	;# 
  1765  009D                     	;# 
  1766  009E                     	;# 
  1767  009F                     	;# 
  1768  010C                     	;# 
  1769  010D                     	;# 
  1770  010E                     	;# 
  1771  0111                     	;# 
  1772  0112                     	;# 
  1773  0113                     	;# 
  1774  0114                     	;# 
  1775  0115                     	;# 
  1776  0116                     	;# 
  1777  0117                     	;# 
  1778  0118                     	;# 
  1779  0119                     	;# 
  1780  018C                     	;# 
  1781  018D                     	;# 
  1782  018E                     	;# 
  1783  0197                     	;# 
  1784  0199                     	;# 
  1785  0199                     	;# 
  1786  0199                     	;# 
  1787  019A                     	;# 
  1788  019A                     	;# 
  1789  019A                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019B                     	;# 
  1795  019C                     	;# 
  1796  019C                     	;# 
  1797  019C                     	;# 
  1798  019D                     	;# 
  1799  019D                     	;# 
  1800  019D                     	;# 
  1801  019E                     	;# 
  1802  019E                     	;# 
  1803  019E                     	;# 
  1804  019F                     	;# 
  1805  019F                     	;# 
  1806  019F                     	;# 
  1807  019F                     	;# 
  1808  019F                     	;# 
  1809  020C                     	;# 
  1810  020D                     	;# 
  1811  020E                     	;# 
  1812  0211                     	;# 
  1813  0211                     	;# 
  1814  0212                     	;# 
  1815  0212                     	;# 
  1816  0213                     	;# 
  1817  0213                     	;# 
  1818  0214                     	;# 
  1819  0214                     	;# 
  1820  0215                     	;# 
  1821  0215                     	;# 
  1822  0215                     	;# 
  1823  0215                     	;# 
  1824  0216                     	;# 
  1825  0216                     	;# 
  1826  0217                     	;# 
  1827  0217                     	;# 
  1828  0219                     	;# 
  1829  021A                     	;# 
  1830  021B                     	;# 
  1831  021C                     	;# 
  1832  021D                     	;# 
  1833  021D                     	;# 
  1834  021E                     	;# 
  1835  021F                     	;# 
  1836  028C                     	;# 
  1837  028D                     	;# 
  1838  028E                     	;# 
  1839  0291                     	;# 
  1840  0291                     	;# 
  1841  0292                     	;# 
  1842  0293                     	;# 
  1843  0294                     	;# 
  1844  0295                     	;# 
  1845  0295                     	;# 
  1846  0296                     	;# 
  1847  0297                     	;# 
  1848  0298                     	;# 
  1849  029F                     	;# 
  1850  030C                     	;# 
  1851  030D                     	;# 
  1852  030E                     	;# 
  1853  0311                     	;# 
  1854  0311                     	;# 
  1855  0312                     	;# 
  1856  0313                     	;# 
  1857  0314                     	;# 
  1858  0315                     	;# 
  1859  0315                     	;# 
  1860  0316                     	;# 
  1861  0317                     	;# 
  1862  0318                     	;# 
  1863  038C                     	;# 
  1864  038D                     	;# 
  1865  038E                     	;# 
  1866  0391                     	;# 
  1867  0392                     	;# 
  1868  0393                     	;# 
  1869  0394                     	;# 
  1870  0395                     	;# 
  1871  0396                     	;# 
  1872  0397                     	;# 
  1873  0398                     	;# 
  1874  0399                     	;# 
  1875  039A                     	;# 
  1876  039C                     	;# 
  1877  039D                     	;# 
  1878  039E                     	;# 
  1879  039F                     	;# 
  1880  0411                     	;# 
  1881  0411                     	;# 
  1882  0412                     	;# 
  1883  0413                     	;# 
  1884  0414                     	;# 
  1885  0415                     	;# 
  1886  0416                     	;# 
  1887  0417                     	;# 
  1888  0418                     	;# 
  1889  0418                     	;# 
  1890  0419                     	;# 
  1891  041A                     	;# 
  1892  041B                     	;# 
  1893  041C                     	;# 
  1894  041D                     	;# 
  1895  041E                     	;# 
  1896  041F                     	;# 
  1897  0498                     	;# 
  1898  0498                     	;# 
  1899  0499                     	;# 
  1900  049A                     	;# 
  1901  049B                     	;# 
  1902  049B                     	;# 
  1903  049C                     	;# 
  1904  049D                     	;# 
  1905  049E                     	;# 
  1906  049F                     	;# 
  1907  0617                     	;# 
  1908  0618                     	;# 
  1909  0619                     	;# 
  1910  0619                     	;# 
  1911  061A                     	;# 
  1912  061B                     	;# 
  1913  061C                     	;# 
  1914  061C                     	;# 
  1915  061F                     	;# 
  1916  0691                     	;# 
  1917  0692                     	;# 
  1918  0693                     	;# 
  1919  0694                     	;# 
  1920  0695                     	;# 
  1921  0696                     	;# 
  1922  0697                     	;# 
  1923  0698                     	;# 
  1924  0699                     	;# 
  1925  0711                     	;# 
  1926  0712                     	;# 
  1927  0713                     	;# 
  1928  0714                     	;# 
  1929  0715                     	;# 
  1930  0716                     	;# 
  1931  0717                     	;# 
  1932  0718                     	;# 
  1933  0719                     	;# 
  1934  0891                     	;# 
  1935  0891                     	;# 
  1936  0891                     	;# 
  1937  0891                     	;# 
  1938  0891                     	;# 
  1939  0891                     	;# 
  1940  0892                     	;# 
  1941  0892                     	;# 
  1942  0892                     	;# 
  1943  0893                     	;# 
  1944  0893                     	;# 
  1945  0893                     	;# 
  1946  0893                     	;# 
  1947  0893                     	;# 
  1948  0893                     	;# 
  1949  0894                     	;# 
  1950  0894                     	;# 
  1951  0894                     	;# 
  1952  0895                     	;# 
  1953  0895                     	;# 
  1954  0895                     	;# 
  1955  0896                     	;# 
  1956  0896                     	;# 
  1957  0896                     	;# 
  1958  089B                     	;# 
  1959  0911                     	;# 
  1960  0912                     	;# 
  1961  0913                     	;# 
  1962  0914                     	;# 
  1963  0915                     	;# 
  1964  0916                     	;# 
  1965  0918                     	;# 
  1966  0919                     	;# 
  1967  091A                     	;# 
  1968  091B                     	;# 
  1969  091C                     	;# 
  1970  091D                     	;# 
  1971  091E                     	;# 
  1972  091F                     	;# 
  1973  0E0F                     	;# 
  1974  0E10                     	;# 
  1975  0E11                     	;# 
  1976  0E12                     	;# 
  1977  0E13                     	;# 
  1978  0E14                     	;# 
  1979  0E15                     	;# 
  1980  0E16                     	;# 
  1981  0E17                     	;# 
  1982  0E18                     	;# 
  1983  0E19                     	;# 
  1984  0E1A                     	;# 
  1985  0E1B                     	;# 
  1986  0E1C                     	;# 
  1987  0E1D                     	;# 
  1988  0E1E                     	;# 
  1989  0E1F                     	;# 
  1990  0E20                     	;# 
  1991  0E21                     	;# 
  1992  0E22                     	;# 
  1993  0E24                     	;# 
  1994  0E25                     	;# 
  1995  0E28                     	;# 
  1996  0E29                     	;# 
  1997  0E2A                     	;# 
  1998  0E2B                     	;# 
  1999  0E2C                     	;# 
  2000  0E2D                     	;# 
  2001  0E2E                     	;# 
  2002  0E2F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E94                     	;# 
  2007  0E95                     	;# 
  2008  0E9C                     	;# 
  2009  0E9D                     	;# 
  2010  0E9E                     	;# 
  2011  0E9F                     	;# 
  2012  0EA0                     	;# 
  2013  0EA1                     	;# 
  2014  0EA2                     	;# 
  2015  0EA3                     	;# 
  2016  0EA4                     	;# 
  2017  0EA5                     	;# 
  2018  0EA6                     	;# 
  2019  0EA7                     	;# 
  2020  0F0F                     	;# 
  2021  0F10                     	;# 
  2022  0F11                     	;# 
  2023  0F12                     	;# 
  2024  0F13                     	;# 
  2025  0F14                     	;# 
  2026  0F15                     	;# 
  2027  0F16                     	;# 
  2028  0F17                     	;# 
  2029  0F18                     	;# 
  2030  0F19                     	;# 
  2031  0F1A                     	;# 
  2032  0F1B                     	;# 
  2033  0F1C                     	;# 
  2034  0F1D                     	;# 
  2035  0F1E                     	;# 
  2036  0F1F                     	;# 
  2037  0F20                     	;# 
  2038  0F21                     	;# 
  2039  0F22                     	;# 
  2040  0F23                     	;# 
  2041  0F24                     	;# 
  2042  0F25                     	;# 
  2043  0F26                     	;# 
  2044  0F27                     	;# 
  2045  0F28                     	;# 
  2046  0F29                     	;# 
  2047  0F2A                     	;# 
  2048  0F2B                     	;# 
  2049  0F2C                     	;# 
  2050  0F2D                     	;# 
  2051  0F2E                     	;# 
  2052  0F2F                     	;# 
  2053  0F30                     	;# 
  2054  0F31                     	;# 
  2055  0F32                     	;# 
  2056  0F33                     	;# 
  2057  0F34                     	;# 
  2058  0F35                     	;# 
  2059  0F36                     	;# 
  2060  0F37                     	;# 
  2061  0FE4                     	;# 
  2062  0FE5                     	;# 
  2063  0FE6                     	;# 
  2064  0FE7                     	;# 
  2065  0FE8                     	;# 
  2066  0FE9                     	;# 
  2067  0FEA                     	;# 
  2068  0FEB                     	;# 
  2069  0FED                     	;# 
  2070  0FEE                     	;# 
  2071  0FEF                     	;# 
  2072  0000                     	;# 
  2073  0001                     	;# 
  2074  0002                     	;# 
  2075  0003                     	;# 
  2076  0004                     	;# 
  2077  0005                     	;# 
  2078  0006                     	;# 
  2079  0007                     	;# 
  2080  0008                     	;# 
  2081  0009                     	;# 
  2082  000A                     	;# 
  2083  000B                     	;# 
  2084  000C                     	;# 
  2085  000D                     	;# 
  2086  000E                     	;# 
  2087  0010                     	;# 
  2088  0011                     	;# 
  2089  0012                     	;# 
  2090  0013                     	;# 
  2091  0014                     	;# 
  2092  0015                     	;# 
  2093  0015                     	;# 
  2094  0016                     	;# 
  2095  0016                     	;# 
  2096  0017                     	;# 
  2097  0018                     	;# 
  2098  0019                     	;# 
  2099  0019                     	;# 
  2100  001A                     	;# 
  2101  001B                     	;# 
  2102  001C                     	;# 
  2103  001D                     	;# 
  2104  001E                     	;# 
  2105  001F                     	;# 
  2106  008C                     	;# 
  2107  008D                     	;# 
  2108  008E                     	;# 
  2109  0090                     	;# 
  2110  0091                     	;# 
  2111  0092                     	;# 
  2112  0093                     	;# 
  2113  0094                     	;# 
  2114  0097                     	;# 
  2115  009B                     	;# 
  2116  009B                     	;# 
  2117  009C                     	;# 
  2118  009D                     	;# 
  2119  009E                     	;# 
  2120  009F                     	;# 
  2121  010C                     	;# 
  2122  010D                     	;# 
  2123  010E                     	;# 
  2124  0111                     	;# 
  2125  0112                     	;# 
  2126  0113                     	;# 
  2127  0114                     	;# 
  2128  0115                     	;# 
  2129  0116                     	;# 
  2130  0117                     	;# 
  2131  0118                     	;# 
  2132  0119                     	;# 
  2133  018C                     	;# 
  2134  018D                     	;# 
  2135  018E                     	;# 
  2136  0197                     	;# 
  2137  0199                     	;# 
  2138  0199                     	;# 
  2139  0199                     	;# 
  2140  019A                     	;# 
  2141  019A                     	;# 
  2142  019A                     	;# 
  2143  019B                     	;# 
  2144  019B                     	;# 
  2145  019B                     	;# 
  2146  019B                     	;# 
  2147  019B                     	;# 
  2148  019C                     	;# 
  2149  019C                     	;# 
  2150  019C                     	;# 
  2151  019D                     	;# 
  2152  019D                     	;# 
  2153  019D                     	;# 
  2154  019E                     	;# 
  2155  019E                     	;# 
  2156  019E                     	;# 
  2157  019F                     	;# 
  2158  019F                     	;# 
  2159  019F                     	;# 
  2160  019F                     	;# 
  2161  019F                     	;# 
  2162  020C                     	;# 
  2163  020D                     	;# 
  2164  020E                     	;# 
  2165  0211                     	;# 
  2166  0211                     	;# 
  2167  0212                     	;# 
  2168  0212                     	;# 
  2169  0213                     	;# 
  2170  0213                     	;# 
  2171  0214                     	;# 
  2172  0214                     	;# 
  2173  0215                     	;# 
  2174  0215                     	;# 
  2175  0215                     	;# 
  2176  0215                     	;# 
  2177  0216                     	;# 
  2178  0216                     	;# 
  2179  0217                     	;# 
  2180  0217                     	;# 
  2181  0219                     	;# 
  2182  021A                     	;# 
  2183  021B                     	;# 
  2184  021C                     	;# 
  2185  021D                     	;# 
  2186  021D                     	;# 
  2187  021E                     	;# 
  2188  021F                     	;# 
  2189  028C                     	;# 
  2190  028D                     	;# 
  2191  028E                     	;# 
  2192  0291                     	;# 
  2193  0291                     	;# 
  2194  0292                     	;# 
  2195  0293                     	;# 
  2196  0294                     	;# 
  2197  0295                     	;# 
  2198  0295                     	;# 
  2199  0296                     	;# 
  2200  0297                     	;# 
  2201  0298                     	;# 
  2202  029F                     	;# 
  2203  030C                     	;# 
  2204  030D                     	;# 
  2205  030E                     	;# 
  2206  0311                     	;# 
  2207  0311                     	;# 
  2208  0312                     	;# 
  2209  0313                     	;# 
  2210  0314                     	;# 
  2211  0315                     	;# 
  2212  0315                     	;# 
  2213  0316                     	;# 
  2214  0317                     	;# 
  2215  0318                     	;# 
  2216  038C                     	;# 
  2217  038D                     	;# 
  2218  038E                     	;# 
  2219  0391                     	;# 
  2220  0392                     	;# 
  2221  0393                     	;# 
  2222  0394                     	;# 
  2223  0395                     	;# 
  2224  0396                     	;# 
  2225  0397                     	;# 
  2226  0398                     	;# 
  2227  0399                     	;# 
  2228  039A                     	;# 
  2229  039C                     	;# 
  2230  039D                     	;# 
  2231  039E                     	;# 
  2232  039F                     	;# 
  2233  0411                     	;# 
  2234  0411                     	;# 
  2235  0412                     	;# 
  2236  0413                     	;# 
  2237  0414                     	;# 
  2238  0415                     	;# 
  2239  0416                     	;# 
  2240  0417                     	;# 
  2241  0418                     	;# 
  2242  0418                     	;# 
  2243  0419                     	;# 
  2244  041A                     	;# 
  2245  041B                     	;# 
  2246  041C                     	;# 
  2247  041D                     	;# 
  2248  041E                     	;# 
  2249  041F                     	;# 
  2250  0498                     	;# 
  2251  0498                     	;# 
  2252  0499                     	;# 
  2253  049A                     	;# 
  2254  049B                     	;# 
  2255  049B                     	;# 
  2256  049C                     	;# 
  2257  049D                     	;# 
  2258  049E                     	;# 
  2259  049F                     	;# 
  2260  0617                     	;# 
  2261  0618                     	;# 
  2262  0619                     	;# 
  2263  0619                     	;# 
  2264  061A                     	;# 
  2265  061B                     	;# 
  2266  061C                     	;# 
  2267  061C                     	;# 
  2268  061F                     	;# 
  2269  0691                     	;# 
  2270  0692                     	;# 
  2271  0693                     	;# 
  2272  0694                     	;# 
  2273  0695                     	;# 
  2274  0696                     	;# 
  2275  0697                     	;# 
  2276  0698                     	;# 
  2277  0699                     	;# 
  2278  0711                     	;# 
  2279  0712                     	;# 
  2280  0713                     	;# 
  2281  0714                     	;# 
  2282  0715                     	;# 
  2283  0716                     	;# 
  2284  0717                     	;# 
  2285  0718                     	;# 
  2286  0719                     	;# 
  2287  0891                     	;# 
  2288  0891                     	;# 
  2289  0891                     	;# 
  2290  0891                     	;# 
  2291  0891                     	;# 
  2292  0891                     	;# 
  2293  0892                     	;# 
  2294  0892                     	;# 
  2295  0892                     	;# 
  2296  0893                     	;# 
  2297  0893                     	;# 
  2298  0893                     	;# 
  2299  0893                     	;# 
  2300  0893                     	;# 
  2301  0893                     	;# 
  2302  0894                     	;# 
  2303  0894                     	;# 
  2304  0894                     	;# 
  2305  0895                     	;# 
  2306  0895                     	;# 
  2307  0895                     	;# 
  2308  0896                     	;# 
  2309  0896                     	;# 
  2310  0896                     	;# 
  2311  089B                     	;# 
  2312  0911                     	;# 
  2313  0912                     	;# 
  2314  0913                     	;# 
  2315  0914                     	;# 
  2316  0915                     	;# 
  2317  0916                     	;# 
  2318  0918                     	;# 
  2319  0919                     	;# 
  2320  091A                     	;# 
  2321  091B                     	;# 
  2322  091C                     	;# 
  2323  091D                     	;# 
  2324  091E                     	;# 
  2325  091F                     	;# 
  2326  0E0F                     	;# 
  2327  0E10                     	;# 
  2328  0E11                     	;# 
  2329  0E12                     	;# 
  2330  0E13                     	;# 
  2331  0E14                     	;# 
  2332  0E15                     	;# 
  2333  0E16                     	;# 
  2334  0E17                     	;# 
  2335  0E18                     	;# 
  2336  0E19                     	;# 
  2337  0E1A                     	;# 
  2338  0E1B                     	;# 
  2339  0E1C                     	;# 
  2340  0E1D                     	;# 
  2341  0E1E                     	;# 
  2342  0E1F                     	;# 
  2343  0E20                     	;# 
  2344  0E21                     	;# 
  2345  0E22                     	;# 
  2346  0E24                     	;# 
  2347  0E25                     	;# 
  2348  0E28                     	;# 
  2349  0E29                     	;# 
  2350  0E2A                     	;# 
  2351  0E2B                     	;# 
  2352  0E2C                     	;# 
  2353  0E2D                     	;# 
  2354  0E2E                     	;# 
  2355  0E2F                     	;# 
  2356  0E90                     	;# 
  2357  0E91                     	;# 
  2358  0E92                     	;# 
  2359  0E94                     	;# 
  2360  0E95                     	;# 
  2361  0E9C                     	;# 
  2362  0E9D                     	;# 
  2363  0E9E                     	;# 
  2364  0E9F                     	;# 
  2365  0EA0                     	;# 
  2366  0EA1                     	;# 
  2367  0EA2                     	;# 
  2368  0EA3                     	;# 
  2369  0EA4                     	;# 
  2370  0EA5                     	;# 
  2371  0EA6                     	;# 
  2372  0EA7                     	;# 
  2373  0F0F                     	;# 
  2374  0F10                     	;# 
  2375  0F11                     	;# 
  2376  0F12                     	;# 
  2377  0F13                     	;# 
  2378  0F14                     	;# 
  2379  0F15                     	;# 
  2380  0F16                     	;# 
  2381  0F17                     	;# 
  2382  0F18                     	;# 
  2383  0F19                     	;# 
  2384  0F1A                     	;# 
  2385  0F1B                     	;# 
  2386  0F1C                     	;# 
  2387  0F1D                     	;# 
  2388  0F1E                     	;# 
  2389  0F1F                     	;# 
  2390  0F20                     	;# 
  2391  0F21                     	;# 
  2392  0F22                     	;# 
  2393  0F23                     	;# 
  2394  0F24                     	;# 
  2395  0F25                     	;# 
  2396  0F26                     	;# 
  2397  0F27                     	;# 
  2398  0F28                     	;# 
  2399  0F29                     	;# 
  2400  0F2A                     	;# 
  2401  0F2B                     	;# 
  2402  0F2C                     	;# 
  2403  0F2D                     	;# 
  2404  0F2E                     	;# 
  2405  0F2F                     	;# 
  2406  0F30                     	;# 
  2407  0F31                     	;# 
  2408  0F32                     	;# 
  2409  0F33                     	;# 
  2410  0F34                     	;# 
  2411  0F35                     	;# 
  2412  0F36                     	;# 
  2413  0F37                     	;# 
  2414  0FE4                     	;# 
  2415  0FE5                     	;# 
  2416  0FE6                     	;# 
  2417  0FE7                     	;# 
  2418  0FE8                     	;# 
  2419  0FE9                     	;# 
  2420  0FEA                     	;# 
  2421  0FEB                     	;# 
  2422  0FED                     	;# 
  2423  0FEE                     	;# 
  2424  0FEF                     	;# 
  2425  0000                     	;# 
  2426  0001                     	;# 
  2427  0002                     	;# 
  2428  0003                     	;# 
  2429  0004                     	;# 
  2430  0005                     	;# 
  2431  0006                     	;# 
  2432  0007                     	;# 
  2433  0008                     	;# 
  2434  0009                     	;# 
  2435  000A                     	;# 
  2436  000B                     	;# 
  2437  000C                     	;# 
  2438  000D                     	;# 
  2439  000E                     	;# 
  2440  0010                     	;# 
  2441  0011                     	;# 
  2442  0012                     	;# 
  2443  0013                     	;# 
  2444  0014                     	;# 
  2445  0015                     	;# 
  2446  0015                     	;# 
  2447  0016                     	;# 
  2448  0016                     	;# 
  2449  0017                     	;# 
  2450  0018                     	;# 
  2451  0019                     	;# 
  2452  0019                     	;# 
  2453  001A                     	;# 
  2454  001B                     	;# 
  2455  001C                     	;# 
  2456  001D                     	;# 
  2457  001E                     	;# 
  2458  001F                     	;# 
  2459  008C                     	;# 
  2460  008D                     	;# 
  2461  008E                     	;# 
  2462  0090                     	;# 
  2463  0091                     	;# 
  2464  0092                     	;# 
  2465  0093                     	;# 
  2466  0094                     	;# 
  2467  0097                     	;# 
  2468  009B                     	;# 
  2469  009B                     	;# 
  2470  009C                     	;# 
  2471  009D                     	;# 
  2472  009E                     	;# 
  2473  009F                     	;# 
  2474  010C                     	;# 
  2475  010D                     	;# 
  2476  010E                     	;# 
  2477  0111                     	;# 
  2478  0112                     	;# 
  2479  0113                     	;# 
  2480  0114                     	;# 
  2481  0115                     	;# 
  2482  0116                     	;# 
  2483  0117                     	;# 
  2484  0118                     	;# 
  2485  0119                     	;# 
  2486  018C                     	;# 
  2487  018D                     	;# 
  2488  018E                     	;# 
  2489  0197                     	;# 
  2490  0199                     	;# 
  2491  0199                     	;# 
  2492  0199                     	;# 
  2493  019A                     	;# 
  2494  019A                     	;# 
  2495  019A                     	;# 
  2496  019B                     	;# 
  2497  019B                     	;# 
  2498  019B                     	;# 
  2499  019B                     	;# 
  2500  019B                     	;# 
  2501  019C                     	;# 
  2502  019C                     	;# 
  2503  019C                     	;# 
  2504  019D                     	;# 
  2505  019D                     	;# 
  2506  019D                     	;# 
  2507  019E                     	;# 
  2508  019E                     	;# 
  2509  019E                     	;# 
  2510  019F                     	;# 
  2511  019F                     	;# 
  2512  019F                     	;# 
  2513  019F                     	;# 
  2514  019F                     	;# 
  2515  020C                     	;# 
  2516  020D                     	;# 
  2517  020E                     	;# 
  2518  0211                     	;# 
  2519  0211                     	;# 
  2520  0212                     	;# 
  2521  0212                     	;# 
  2522  0213                     	;# 
  2523  0213                     	;# 
  2524  0214                     	;# 
  2525  0214                     	;# 
  2526  0215                     	;# 
  2527  0215                     	;# 
  2528  0215                     	;# 
  2529  0215                     	;# 
  2530  0216                     	;# 
  2531  0216                     	;# 
  2532  0217                     	;# 
  2533  0217                     	;# 
  2534  0219                     	;# 
  2535  021A                     	;# 
  2536  021B                     	;# 
  2537  021C                     	;# 
  2538  021D                     	;# 
  2539  021D                     	;# 
  2540  021E                     	;# 
  2541  021F                     	;# 
  2542  028C                     	;# 
  2543  028D                     	;# 
  2544  028E                     	;# 
  2545  0291                     	;# 
  2546  0291                     	;# 
  2547  0292                     	;# 
  2548  0293                     	;# 
  2549  0294                     	;# 
  2550  0295                     	;# 
  2551  0295                     	;# 
  2552  0296                     	;# 
  2553  0297                     	;# 
  2554  0298                     	;# 
  2555  029F                     	;# 
  2556  030C                     	;# 
  2557  030D                     	;# 
  2558  030E                     	;# 
  2559  0311                     	;# 
  2560  0311                     	;# 
  2561  0312                     	;# 
  2562  0313                     	;# 
  2563  0314                     	;# 
  2564  0315                     	;# 
  2565  0315                     	;# 
  2566  0316                     	;# 
  2567  0317                     	;# 
  2568  0318                     	;# 
  2569  038C                     	;# 
  2570  038D                     	;# 
  2571  038E                     	;# 
  2572  0391                     	;# 
  2573  0392                     	;# 
  2574  0393                     	;# 
  2575  0394                     	;# 
  2576  0395                     	;# 
  2577  0396                     	;# 
  2578  0397                     	;# 
  2579  0398                     	;# 
  2580  0399                     	;# 
  2581  039A                     	;# 
  2582  039C                     	;# 
  2583  039D                     	;# 
  2584  039E                     	;# 
  2585  039F                     	;# 
  2586  0411                     	;# 
  2587  0411                     	;# 
  2588  0412                     	;# 
  2589  0413                     	;# 
  2590  0414                     	;# 
  2591  0415                     	;# 
  2592  0416                     	;# 
  2593  0417                     	;# 
  2594  0418                     	;# 
  2595  0418                     	;# 
  2596  0419                     	;# 
  2597  041A                     	;# 
  2598  041B                     	;# 
  2599  041C                     	;# 
  2600  041D                     	;# 
  2601  041E                     	;# 
  2602  041F                     	;# 
  2603  0498                     	;# 
  2604  0498                     	;# 
  2605  0499                     	;# 
  2606  049A                     	;# 
  2607  049B                     	;# 
  2608  049B                     	;# 
  2609  049C                     	;# 
  2610  049D                     	;# 
  2611  049E                     	;# 
  2612  049F                     	;# 
  2613  0617                     	;# 
  2614  0618                     	;# 
  2615  0619                     	;# 
  2616  0619                     	;# 
  2617  061A                     	;# 
  2618  061B                     	;# 
  2619  061C                     	;# 
  2620  061C                     	;# 
  2621  061F                     	;# 
  2622  0691                     	;# 
  2623  0692                     	;# 
  2624  0693                     	;# 
  2625  0694                     	;# 
  2626  0695                     	;# 
  2627  0696                     	;# 
  2628  0697                     	;# 
  2629  0698                     	;# 
  2630  0699                     	;# 
  2631  0711                     	;# 
  2632  0712                     	;# 
  2633  0713                     	;# 
  2634  0714                     	;# 
  2635  0715                     	;# 
  2636  0716                     	;# 
  2637  0717                     	;# 
  2638  0718                     	;# 
  2639  0719                     	;# 
  2640  0891                     	;# 
  2641  0891                     	;# 
  2642  0891                     	;# 
  2643  0891                     	;# 
  2644  0891                     	;# 
  2645  0891                     	;# 
  2646  0892                     	;# 
  2647  0892                     	;# 
  2648  0892                     	;# 
  2649  0893                     	;# 
  2650  0893                     	;# 
  2651  0893                     	;# 
  2652  0893                     	;# 
  2653  0893                     	;# 
  2654  0893                     	;# 
  2655  0894                     	;# 
  2656  0894                     	;# 
  2657  0894                     	;# 
  2658  0895                     	;# 
  2659  0895                     	;# 
  2660  0895                     	;# 
  2661  0896                     	;# 
  2662  0896                     	;# 
  2663  0896                     	;# 
  2664  089B                     	;# 
  2665  0911                     	;# 
  2666  0912                     	;# 
  2667  0913                     	;# 
  2668  0914                     	;# 
  2669  0915                     	;# 
  2670  0916                     	;# 
  2671  0918                     	;# 
  2672  0919                     	;# 
  2673  091A                     	;# 
  2674  091B                     	;# 
  2675  091C                     	;# 
  2676  091D                     	;# 
  2677  091E                     	;# 
  2678  091F                     	;# 
  2679  0E0F                     	;# 
  2680  0E10                     	;# 
  2681  0E11                     	;# 
  2682  0E12                     	;# 
  2683  0E13                     	;# 
  2684  0E14                     	;# 
  2685  0E15                     	;# 
  2686  0E16                     	;# 
  2687  0E17                     	;# 
  2688  0E18                     	;# 
  2689  0E19                     	;# 
  2690  0E1A                     	;# 
  2691  0E1B                     	;# 
  2692  0E1C                     	;# 
  2693  0E1D                     	;# 
  2694  0E1E                     	;# 
  2695  0E1F                     	;# 
  2696  0E20                     	;# 
  2697  0E21                     	;# 
  2698  0E22                     	;# 
  2699  0E24                     	;# 
  2700  0E25                     	;# 
  2701  0E28                     	;# 
  2702  0E29                     	;# 
  2703  0E2A                     	;# 
  2704  0E2B                     	;# 
  2705  0E2C                     	;# 
  2706  0E2D                     	;# 
  2707  0E2E                     	;# 
  2708  0E2F                     	;# 
  2709  0E90                     	;# 
  2710  0E91                     	;# 
  2711  0E92                     	;# 
  2712  0E94                     	;# 
  2713  0E95                     	;# 
  2714  0E9C                     	;# 
  2715  0E9D                     	;# 
  2716  0E9E                     	;# 
  2717  0E9F                     	;# 
  2718  0EA0                     	;# 
  2719  0EA1                     	;# 
  2720  0EA2                     	;# 
  2721  0EA3                     	;# 
  2722  0EA4                     	;# 
  2723  0EA5                     	;# 
  2724  0EA6                     	;# 
  2725  0EA7                     	;# 
  2726  0F0F                     	;# 
  2727  0F10                     	;# 
  2728  0F11                     	;# 
  2729  0F12                     	;# 
  2730  0F13                     	;# 
  2731  0F14                     	;# 
  2732  0F15                     	;# 
  2733  0F16                     	;# 
  2734  0F17                     	;# 
  2735  0F18                     	;# 
  2736  0F19                     	;# 
  2737  0F1A                     	;# 
  2738  0F1B                     	;# 
  2739  0F1C                     	;# 
  2740  0F1D                     	;# 
  2741  0F1E                     	;# 
  2742  0F1F                     	;# 
  2743  0F20                     	;# 
  2744  0F21                     	;# 
  2745  0F22                     	;# 
  2746  0F23                     	;# 
  2747  0F24                     	;# 
  2748  0F25                     	;# 
  2749  0F26                     	;# 
  2750  0F27                     	;# 
  2751  0F28                     	;# 
  2752  0F29                     	;# 
  2753  0F2A                     	;# 
  2754  0F2B                     	;# 
  2755  0F2C                     	;# 
  2756  0F2D                     	;# 
  2757  0F2E                     	;# 
  2758  0F2F                     	;# 
  2759  0F30                     	;# 
  2760  0F31                     	;# 
  2761  0F32                     	;# 
  2762  0F33                     	;# 
  2763  0F34                     	;# 
  2764  0F35                     	;# 
  2765  0F36                     	;# 
  2766  0F37                     	;# 
  2767  0FE4                     	;# 
  2768  0FE5                     	;# 
  2769  0FE6                     	;# 
  2770  0FE7                     	;# 
  2771  0FE8                     	;# 
  2772  0FE9                     	;# 
  2773  0FEA                     	;# 
  2774  0FEB                     	;# 
  2775  0FED                     	;# 
  2776  0FEE                     	;# 
  2777  0FEF                     	;# 
  2778  0000                     	;# 
  2779  0001                     	;# 
  2780  0002                     	;# 
  2781  0003                     	;# 
  2782  0004                     	;# 
  2783  0005                     	;# 
  2784  0006                     	;# 
  2785  0007                     	;# 
  2786  0008                     	;# 
  2787  0009                     	;# 
  2788  000A                     	;# 
  2789  000B                     	;# 
  2790  000C                     	;# 
  2791  000D                     	;# 
  2792  000E                     	;# 
  2793  0010                     	;# 
  2794  0011                     	;# 
  2795  0012                     	;# 
  2796  0013                     	;# 
  2797  0014                     	;# 
  2798  0015                     	;# 
  2799  0015                     	;# 
  2800  0016                     	;# 
  2801  0016                     	;# 
  2802  0017                     	;# 
  2803  0018                     	;# 
  2804  0019                     	;# 
  2805  0019                     	;# 
  2806  001A                     	;# 
  2807  001B                     	;# 
  2808  001C                     	;# 
  2809  001D                     	;# 
  2810  001E                     	;# 
  2811  001F                     	;# 
  2812  008C                     	;# 
  2813  008D                     	;# 
  2814  008E                     	;# 
  2815  0090                     	;# 
  2816  0091                     	;# 
  2817  0092                     	;# 
  2818  0093                     	;# 
  2819  0094                     	;# 
  2820  0097                     	;# 
  2821  009B                     	;# 
  2822  009B                     	;# 
  2823  009C                     	;# 
  2824  009D                     	;# 
  2825  009E                     	;# 
  2826  009F                     	;# 
  2827  010C                     	;# 
  2828  010D                     	;# 
  2829  010E                     	;# 
  2830  0111                     	;# 
  2831  0112                     	;# 
  2832  0113                     	;# 
  2833  0114                     	;# 
  2834  0115                     	;# 
  2835  0116                     	;# 
  2836  0117                     	;# 
  2837  0118                     	;# 
  2838  0119                     	;# 
  2839  018C                     	;# 
  2840  018D                     	;# 
  2841  018E                     	;# 
  2842  0197                     	;# 
  2843  0199                     	;# 
  2844  0199                     	;# 
  2845  0199                     	;# 
  2846  019A                     	;# 
  2847  019A                     	;# 
  2848  019A                     	;# 
  2849  019B                     	;# 
  2850  019B                     	;# 
  2851  019B                     	;# 
  2852  019B                     	;# 
  2853  019B                     	;# 
  2854  019C                     	;# 
  2855  019C                     	;# 
  2856  019C                     	;# 
  2857  019D                     	;# 
  2858  019D                     	;# 
  2859  019D                     	;# 
  2860  019E                     	;# 
  2861  019E                     	;# 
  2862  019E                     	;# 
  2863  019F                     	;# 
  2864  019F                     	;# 
  2865  019F                     	;# 
  2866  019F                     	;# 
  2867  019F                     	;# 
  2868  020C                     	;# 
  2869  020D                     	;# 
  2870  020E                     	;# 
  2871  0211                     	;# 
  2872  0211                     	;# 
  2873  0212                     	;# 
  2874  0212                     	;# 
  2875  0213                     	;# 
  2876  0213                     	;# 
  2877  0214                     	;# 
  2878  0214                     	;# 
  2879  0215                     	;# 
  2880  0215                     	;# 
  2881  0215                     	;# 
  2882  0215                     	;# 
  2883  0216                     	;# 
  2884  0216                     	;# 
  2885  0217                     	;# 
  2886  0217                     	;# 
  2887  0219                     	;# 
  2888  021A                     	;# 
  2889  021B                     	;# 
  2890  021C                     	;# 
  2891  021D                     	;# 
  2892  021D                     	;# 
  2893  021E                     	;# 
  2894  021F                     	;# 
  2895  028C                     	;# 
  2896  028D                     	;# 
  2897  028E                     	;# 
  2898  0291                     	;# 
  2899  0291                     	;# 
  2900  0292                     	;# 
  2901  0293                     	;# 
  2902  0294                     	;# 
  2903  0295                     	;# 
  2904  0295                     	;# 
  2905  0296                     	;# 
  2906  0297                     	;# 
  2907  0298                     	;# 
  2908  029F                     	;# 
  2909  030C                     	;# 
  2910  030D                     	;# 
  2911  030E                     	;# 
  2912  0311                     	;# 
  2913  0311                     	;# 
  2914  0312                     	;# 
  2915  0313                     	;# 
  2916  0314                     	;# 
  2917  0315                     	;# 
  2918  0315                     	;# 
  2919  0316                     	;# 
  2920  0317                     	;# 
  2921  0318                     	;# 
  2922  038C                     	;# 
  2923  038D                     	;# 
  2924  038E                     	;# 
  2925  0391                     	;# 
  2926  0392                     	;# 
  2927  0393                     	;# 
  2928  0394                     	;# 
  2929  0395                     	;# 
  2930  0396                     	;# 
  2931  0397                     	;# 
  2932  0398                     	;# 
  2933  0399                     	;# 
  2934  039A                     	;# 
  2935  039C                     	;# 
  2936  039D                     	;# 
  2937  039E                     	;# 
  2938  039F                     	;# 
  2939  0411                     	;# 
  2940  0411                     	;# 
  2941  0412                     	;# 
  2942  0413                     	;# 
  2943  0414                     	;# 
  2944  0415                     	;# 
  2945  0416                     	;# 
  2946  0417                     	;# 
  2947  0418                     	;# 
  2948  0418                     	;# 
  2949  0419                     	;# 
  2950  041A                     	;# 
  2951  041B                     	;# 
  2952  041C                     	;# 
  2953  041D                     	;# 
  2954  041E                     	;# 
  2955  041F                     	;# 
  2956  0498                     	;# 
  2957  0498                     	;# 
  2958  0499                     	;# 
  2959  049A                     	;# 
  2960  049B                     	;# 
  2961  049B                     	;# 
  2962  049C                     	;# 
  2963  049D                     	;# 
  2964  049E                     	;# 
  2965  049F                     	;# 
  2966  0617                     	;# 
  2967  0618                     	;# 
  2968  0619                     	;# 
  2969  0619                     	;# 
  2970  061A                     	;# 
  2971  061B                     	;# 
  2972  061C                     	;# 
  2973  061C                     	;# 
  2974  061F                     	;# 
  2975  0691                     	;# 
  2976  0692                     	;# 
  2977  0693                     	;# 
  2978  0694                     	;# 
  2979  0695                     	;# 
  2980  0696                     	;# 
  2981  0697                     	;# 
  2982  0698                     	;# 
  2983  0699                     	;# 
  2984  0711                     	;# 
  2985  0712                     	;# 
  2986  0713                     	;# 
  2987  0714                     	;# 
  2988  0715                     	;# 
  2989  0716                     	;# 
  2990  0717                     	;# 
  2991  0718                     	;# 
  2992  0719                     	;# 
  2993  0891                     	;# 
  2994  0891                     	;# 
  2995  0891                     	;# 
  2996  0891                     	;# 
  2997  0891                     	;# 
  2998  0891                     	;# 
  2999  0892                     	;# 
  3000  0892                     	;# 
  3001  0892                     	;# 
  3002  0893                     	;# 
  3003  0893                     	;# 
  3004  0893                     	;# 
  3005  0893                     	;# 
  3006  0893                     	;# 
  3007  0893                     	;# 
  3008  0894                     	;# 
  3009  0894                     	;# 
  3010  0894                     	;# 
  3011  0895                     	;# 
  3012  0895                     	;# 
  3013  0895                     	;# 
  3014  0896                     	;# 
  3015  0896                     	;# 
  3016  0896                     	;# 
  3017  089B                     	;# 
  3018  0911                     	;# 
  3019  0912                     	;# 
  3020  0913                     	;# 
  3021  0914                     	;# 
  3022  0915                     	;# 
  3023  0916                     	;# 
  3024  0918                     	;# 
  3025  0919                     	;# 
  3026  091A                     	;# 
  3027  091B                     	;# 
  3028  091C                     	;# 
  3029  091D                     	;# 
  3030  091E                     	;# 
  3031  091F                     	;# 
  3032  0E0F                     	;# 
  3033  0E10                     	;# 
  3034  0E11                     	;# 
  3035  0E12                     	;# 
  3036  0E13                     	;# 
  3037  0E14                     	;# 
  3038  0E15                     	;# 
  3039  0E16                     	;# 
  3040  0E17                     	;# 
  3041  0E18                     	;# 
  3042  0E19                     	;# 
  3043  0E1A                     	;# 
  3044  0E1B                     	;# 
  3045  0E1C                     	;# 
  3046  0E1D                     	;# 
  3047  0E1E                     	;# 
  3048  0E1F                     	;# 
  3049  0E20                     	;# 
  3050  0E21                     	;# 
  3051  0E22                     	;# 
  3052  0E24                     	;# 
  3053  0E25                     	;# 
  3054  0E28                     	;# 
  3055  0E29                     	;# 
  3056  0E2A                     	;# 
  3057  0E2B                     	;# 
  3058  0E2C                     	;# 
  3059  0E2D                     	;# 
  3060  0E2E                     	;# 
  3061  0E2F                     	;# 
  3062  0E90                     	;# 
  3063  0E91                     	;# 
  3064  0E92                     	;# 
  3065  0E94                     	;# 
  3066  0E95                     	;# 
  3067  0E9C                     	;# 
  3068  0E9D                     	;# 
  3069  0E9E                     	;# 
  3070  0E9F                     	;# 
  3071  0EA0                     	;# 
  3072  0EA1                     	;# 
  3073  0EA2                     	;# 
  3074  0EA3                     	;# 
  3075  0EA4                     	;# 
  3076  0EA5                     	;# 
  3077  0EA6                     	;# 
  3078  0EA7                     	;# 
  3079  0F0F                     	;# 
  3080  0F10                     	;# 
  3081  0F11                     	;# 
  3082  0F12                     	;# 
  3083  0F13                     	;# 
  3084  0F14                     	;# 
  3085  0F15                     	;# 
  3086  0F16                     	;# 
  3087  0F17                     	;# 
  3088  0F18                     	;# 
  3089  0F19                     	;# 
  3090  0F1A                     	;# 
  3091  0F1B                     	;# 
  3092  0F1C                     	;# 
  3093  0F1D                     	;# 
  3094  0F1E                     	;# 
  3095  0F1F                     	;# 
  3096  0F20                     	;# 
  3097  0F21                     	;# 
  3098  0F22                     	;# 
  3099  0F23                     	;# 
  3100  0F24                     	;# 
  3101  0F25                     	;# 
  3102  0F26                     	;# 
  3103  0F27                     	;# 
  3104  0F28                     	;# 
  3105  0F29                     	;# 
  3106  0F2A                     	;# 
  3107  0F2B                     	;# 
  3108  0F2C                     	;# 
  3109  0F2D                     	;# 
  3110  0F2E                     	;# 
  3111  0F2F                     	;# 
  3112  0F30                     	;# 
  3113  0F31                     	;# 
  3114  0F32                     	;# 
  3115  0F33                     	;# 
  3116  0F34                     	;# 
  3117  0F35                     	;# 
  3118  0F36                     	;# 
  3119  0F37                     	;# 
  3120  0FE4                     	;# 
  3121  0FE5                     	;# 
  3122  0FE6                     	;# 
  3123  0FE7                     	;# 
  3124  0FE8                     	;# 
  3125  0FE9                     	;# 
  3126  0FEA                     	;# 
  3127  0FEB                     	;# 
  3128  0FED                     	;# 
  3129  0FEE                     	;# 
  3130  0FEF                     	;# 
  3131  0000                     	;# 
  3132  0001                     	;# 
  3133  0002                     	;# 
  3134  0003                     	;# 
  3135  0004                     	;# 
  3136  0005                     	;# 
  3137  0006                     	;# 
  3138  0007                     	;# 
  3139  0008                     	;# 
  3140  0009                     	;# 
  3141  000A                     	;# 
  3142  000B                     	;# 
  3143  000C                     	;# 
  3144  000D                     	;# 
  3145  000E                     	;# 
  3146  0010                     	;# 
  3147  0011                     	;# 
  3148  0012                     	;# 
  3149  0013                     	;# 
  3150  0014                     	;# 
  3151  0015                     	;# 
  3152  0015                     	;# 
  3153  0016                     	;# 
  3154  0016                     	;# 
  3155  0017                     	;# 
  3156  0018                     	;# 
  3157  0019                     	;# 
  3158  0019                     	;# 
  3159  001A                     	;# 
  3160  001B                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001E                     	;# 
  3164  001F                     	;# 
  3165  008C                     	;# 
  3166  008D                     	;# 
  3167  008E                     	;# 
  3168  0090                     	;# 
  3169  0091                     	;# 
  3170  0092                     	;# 
  3171  0093                     	;# 
  3172  0094                     	;# 
  3173  0097                     	;# 
  3174  009B                     	;# 
  3175  009B                     	;# 
  3176  009C                     	;# 
  3177  009D                     	;# 
  3178  009E                     	;# 
  3179  009F                     	;# 
  3180  010C                     	;# 
  3181  010D                     	;# 
  3182  010E                     	;# 
  3183  0111                     	;# 
  3184  0112                     	;# 
  3185  0113                     	;# 
  3186  0114                     	;# 
  3187  0115                     	;# 
  3188  0116                     	;# 
  3189  0117                     	;# 
  3190  0118                     	;# 
  3191  0119                     	;# 
  3192  018C                     	;# 
  3193  018D                     	;# 
  3194  018E                     	;# 
  3195  0197                     	;# 
  3196  0199                     	;# 
  3197  0199                     	;# 
  3198  0199                     	;# 
  3199  019A                     	;# 
  3200  019A                     	;# 
  3201  019A                     	;# 
  3202  019B                     	;# 
  3203  019B                     	;# 
  3204  019B                     	;# 
  3205  019B                     	;# 
  3206  019B                     	;# 
  3207  019C                     	;# 
  3208  019C                     	;# 
  3209  019C                     	;# 
  3210  019D                     	;# 
  3211  019D                     	;# 
  3212  019D                     	;# 
  3213  019E                     	;# 
  3214  019E                     	;# 
  3215  019E                     	;# 
  3216  019F                     	;# 
  3217  019F                     	;# 
  3218  019F                     	;# 
  3219  019F                     	;# 
  3220  019F                     	;# 
  3221  020C                     	;# 
  3222  020D                     	;# 
  3223  020E                     	;# 
  3224  0211                     	;# 
  3225  0211                     	;# 
  3226  0212                     	;# 
  3227  0212                     	;# 
  3228  0213                     	;# 
  3229  0213                     	;# 
  3230  0214                     	;# 
  3231  0214                     	;# 
  3232  0215                     	;# 
  3233  0215                     	;# 
  3234  0215                     	;# 
  3235  0215                     	;# 
  3236  0216                     	;# 
  3237  0216                     	;# 
  3238  0217                     	;# 
  3239  0217                     	;# 
  3240  0219                     	;# 
  3241  021A                     	;# 
  3242  021B                     	;# 
  3243  021C                     	;# 
  3244  021D                     	;# 
  3245  021D                     	;# 
  3246  021E                     	;# 
  3247  021F                     	;# 
  3248  028C                     	;# 
  3249  028D                     	;# 
  3250  028E                     	;# 
  3251  0291                     	;# 
  3252  0291                     	;# 
  3253  0292                     	;# 
  3254  0293                     	;# 
  3255  0294                     	;# 
  3256  0295                     	;# 
  3257  0295                     	;# 
  3258  0296                     	;# 
  3259  0297                     	;# 
  3260  0298                     	;# 
  3261  029F                     	;# 
  3262  030C                     	;# 
  3263  030D                     	;# 
  3264  030E                     	;# 
  3265  0311                     	;# 
  3266  0311                     	;# 
  3267  0312                     	;# 
  3268  0313                     	;# 
  3269  0314                     	;# 
  3270  0315                     	;# 
  3271  0315                     	;# 
  3272  0316                     	;# 
  3273  0317                     	;# 
  3274  0318                     	;# 
  3275  038C                     	;# 
  3276  038D                     	;# 
  3277  038E                     	;# 
  3278  0391                     	;# 
  3279  0392                     	;# 
  3280  0393                     	;# 
  3281  0394                     	;# 
  3282  0395                     	;# 
  3283  0396                     	;# 
  3284  0397                     	;# 
  3285  0398                     	;# 
  3286  0399                     	;# 
  3287  039A                     	;# 
  3288  039C                     	;# 
  3289  039D                     	;# 
  3290  039E                     	;# 
  3291  039F                     	;# 
  3292  0411                     	;# 
  3293  0411                     	;# 
  3294  0412                     	;# 
  3295  0413                     	;# 
  3296  0414                     	;# 
  3297  0415                     	;# 
  3298  0416                     	;# 
  3299  0417                     	;# 
  3300  0418                     	;# 
  3301  0418                     	;# 
  3302  0419                     	;# 
  3303  041A                     	;# 
  3304  041B                     	;# 
  3305  041C                     	;# 
  3306  041D                     	;# 
  3307  041E                     	;# 
  3308  041F                     	;# 
  3309  0498                     	;# 
  3310  0498                     	;# 
  3311  0499                     	;# 
  3312  049A                     	;# 
  3313  049B                     	;# 
  3314  049B                     	;# 
  3315  049C                     	;# 
  3316  049D                     	;# 
  3317  049E                     	;# 
  3318  049F                     	;# 
  3319  0617                     	;# 
  3320  0618                     	;# 
  3321  0619                     	;# 
  3322  0619                     	;# 
  3323  061A                     	;# 
  3324  061B                     	;# 
  3325  061C                     	;# 
  3326  061C                     	;# 
  3327  061F                     	;# 
  3328  0691                     	;# 
  3329  0692                     	;# 
  3330  0693                     	;# 
  3331  0694                     	;# 
  3332  0695                     	;# 
  3333  0696                     	;# 
  3334  0697                     	;# 
  3335  0698                     	;# 
  3336  0699                     	;# 
  3337  0711                     	;# 
  3338  0712                     	;# 
  3339  0713                     	;# 
  3340  0714                     	;# 
  3341  0715                     	;# 
  3342  0716                     	;# 
  3343  0717                     	;# 
  3344  0718                     	;# 
  3345  0719                     	;# 
  3346  0891                     	;# 
  3347  0891                     	;# 
  3348  0891                     	;# 
  3349  0891                     	;# 
  3350  0891                     	;# 
  3351  0891                     	;# 
  3352  0892                     	;# 
  3353  0892                     	;# 
  3354  0892                     	;# 
  3355  0893                     	;# 
  3356  0893                     	;# 
  3357  0893                     	;# 
  3358  0893                     	;# 
  3359  0893                     	;# 
  3360  0893                     	;# 
  3361  0894                     	;# 
  3362  0894                     	;# 
  3363  0894                     	;# 
  3364  0895                     	;# 
  3365  0895                     	;# 
  3366  0895                     	;# 
  3367  0896                     	;# 
  3368  0896                     	;# 
  3369  0896                     	;# 
  3370  089B                     	;# 
  3371  0911                     	;# 
  3372  0912                     	;# 
  3373  0913                     	;# 
  3374  0914                     	;# 
  3375  0915                     	;# 
  3376  0916                     	;# 
  3377  0918                     	;# 
  3378  0919                     	;# 
  3379  091A                     	;# 
  3380  091B                     	;# 
  3381  091C                     	;# 
  3382  091D                     	;# 
  3383  091E                     	;# 
  3384  091F                     	;# 
  3385  0E0F                     	;# 
  3386  0E10                     	;# 
  3387  0E11                     	;# 
  3388  0E12                     	;# 
  3389  0E13                     	;# 
  3390  0E14                     	;# 
  3391  0E15                     	;# 
  3392  0E16                     	;# 
  3393  0E17                     	;# 
  3394  0E18                     	;# 
  3395  0E19                     	;# 
  3396  0E1A                     	;# 
  3397  0E1B                     	;# 
  3398  0E1C                     	;# 
  3399  0E1D                     	;# 
  3400  0E1E                     	;# 
  3401  0E1F                     	;# 
  3402  0E20                     	;# 
  3403  0E21                     	;# 
  3404  0E22                     	;# 
  3405  0E24                     	;# 
  3406  0E25                     	;# 
  3407  0E28                     	;# 
  3408  0E29                     	;# 
  3409  0E2A                     	;# 
  3410  0E2B                     	;# 
  3411  0E2C                     	;# 
  3412  0E2D                     	;# 
  3413  0E2E                     	;# 
  3414  0E2F                     	;# 
  3415  0E90                     	;# 
  3416  0E91                     	;# 
  3417  0E92                     	;# 
  3418  0E94                     	;# 
  3419  0E95                     	;# 
  3420  0E9C                     	;# 
  3421  0E9D                     	;# 
  3422  0E9E                     	;# 
  3423  0E9F                     	;# 
  3424  0EA0                     	;# 
  3425  0EA1                     	;# 
  3426  0EA2                     	;# 
  3427  0EA3                     	;# 
  3428  0EA4                     	;# 
  3429  0EA5                     	;# 
  3430  0EA6                     	;# 
  3431  0EA7                     	;# 
  3432  0F0F                     	;# 
  3433  0F10                     	;# 
  3434  0F11                     	;# 
  3435  0F12                     	;# 
  3436  0F13                     	;# 
  3437  0F14                     	;# 
  3438  0F15                     	;# 
  3439  0F16                     	;# 
  3440  0F17                     	;# 
  3441  0F18                     	;# 
  3442  0F19                     	;# 
  3443  0F1A                     	;# 
  3444  0F1B                     	;# 
  3445  0F1C                     	;# 
  3446  0F1D                     	;# 
  3447  0F1E                     	;# 
  3448  0F1F                     	;# 
  3449  0F20                     	;# 
  3450  0F21                     	;# 
  3451  0F22                     	;# 
  3452  0F23                     	;# 
  3453  0F24                     	;# 
  3454  0F25                     	;# 
  3455  0F26                     	;# 
  3456  0F27                     	;# 
  3457  0F28                     	;# 
  3458  0F29                     	;# 
  3459  0F2A                     	;# 
  3460  0F2B                     	;# 
  3461  0F2C                     	;# 
  3462  0F2D                     	;# 
  3463  0F2E                     	;# 
  3464  0F2F                     	;# 
  3465  0F30                     	;# 
  3466  0F31                     	;# 
  3467  0F32                     	;# 
  3468  0F33                     	;# 
  3469  0F34                     	;# 
  3470  0F35                     	;# 
  3471  0F36                     	;# 
  3472  0F37                     	;# 
  3473  0FE4                     	;# 
  3474  0FE5                     	;# 
  3475  0FE6                     	;# 
  3476  0FE7                     	;# 
  3477  0FE8                     	;# 
  3478  0FE9                     	;# 
  3479  0FEA                     	;# 
  3480  0FEB                     	;# 
  3481  0FED                     	;# 
  3482  0FEE                     	;# 
  3483  0FEF                     	;# 
  3484  0000                     	;# 
  3485  0001                     	;# 
  3486  0002                     	;# 
  3487  0003                     	;# 
  3488  0004                     	;# 
  3489  0005                     	;# 
  3490  0006                     	;# 
  3491  0007                     	;# 
  3492  0008                     	;# 
  3493  0009                     	;# 
  3494  000A                     	;# 
  3495  000B                     	;# 
  3496  000C                     	;# 
  3497  000D                     	;# 
  3498  000E                     	;# 
  3499  0010                     	;# 
  3500  0011                     	;# 
  3501  0012                     	;# 
  3502  0013                     	;# 
  3503  0014                     	;# 
  3504  0015                     	;# 
  3505  0015                     	;# 
  3506  0016                     	;# 
  3507  0016                     	;# 
  3508  0017                     	;# 
  3509  0018                     	;# 
  3510  0019                     	;# 
  3511  0019                     	;# 
  3512  001A                     	;# 
  3513  001B                     	;# 
  3514  001C                     	;# 
  3515  001D                     	;# 
  3516  001E                     	;# 
  3517  001F                     	;# 
  3518  008C                     	;# 
  3519  008D                     	;# 
  3520  008E                     	;# 
  3521  0090                     	;# 
  3522  0091                     	;# 
  3523  0092                     	;# 
  3524  0093                     	;# 
  3525  0094                     	;# 
  3526  0097                     	;# 
  3527  009B                     	;# 
  3528  009B                     	;# 
  3529  009C                     	;# 
  3530  009D                     	;# 
  3531  009E                     	;# 
  3532  009F                     	;# 
  3533  010C                     	;# 
  3534  010D                     	;# 
  3535  010E                     	;# 
  3536  0111                     	;# 
  3537  0112                     	;# 
  3538  0113                     	;# 
  3539  0114                     	;# 
  3540  0115                     	;# 
  3541  0116                     	;# 
  3542  0117                     	;# 
  3543  0118                     	;# 
  3544  0119                     	;# 
  3545  018C                     	;# 
  3546  018D                     	;# 
  3547  018E                     	;# 
  3548  0197                     	;# 
  3549  0199                     	;# 
  3550  0199                     	;# 
  3551  0199                     	;# 
  3552  019A                     	;# 
  3553  019A                     	;# 
  3554  019A                     	;# 
  3555  019B                     	;# 
  3556  019B                     	;# 
  3557  019B                     	;# 
  3558  019B                     	;# 
  3559  019B                     	;# 
  3560  019C                     	;# 
  3561  019C                     	;# 
  3562  019C                     	;# 
  3563  019D                     	;# 
  3564  019D                     	;# 
  3565  019D                     	;# 
  3566  019E                     	;# 
  3567  019E                     	;# 
  3568  019E                     	;# 
  3569  019F                     	;# 
  3570  019F                     	;# 
  3571  019F                     	;# 
  3572  019F                     	;# 
  3573  019F                     	;# 
  3574  020C                     	;# 
  3575  020D                     	;# 
  3576  020E                     	;# 
  3577  0211                     	;# 
  3578  0211                     	;# 
  3579  0212                     	;# 
  3580  0212                     	;# 
  3581  0213                     	;# 
  3582  0213                     	;# 
  3583  0214                     	;# 
  3584  0214                     	;# 
  3585  0215                     	;# 
  3586  0215                     	;# 
  3587  0215                     	;# 
  3588  0215                     	;# 
  3589  0216                     	;# 
  3590  0216                     	;# 
  3591  0217                     	;# 
  3592  0217                     	;# 
  3593  0219                     	;# 
  3594  021A                     	;# 
  3595  021B                     	;# 
  3596  021C                     	;# 
  3597  021D                     	;# 
  3598  021D                     	;# 
  3599  021E                     	;# 
  3600  021F                     	;# 
  3601  028C                     	;# 
  3602  028D                     	;# 
  3603  028E                     	;# 
  3604  0291                     	;# 
  3605  0291                     	;# 
  3606  0292                     	;# 
  3607  0293                     	;# 
  3608  0294                     	;# 
  3609  0295                     	;# 
  3610  0295                     	;# 
  3611  0296                     	;# 
  3612  0297                     	;# 
  3613  0298                     	;# 
  3614  029F                     	;# 
  3615  030C                     	;# 
  3616  030D                     	;# 
  3617  030E                     	;# 
  3618  0311                     	;# 
  3619  0311                     	;# 
  3620  0312                     	;# 
  3621  0313                     	;# 
  3622  0314                     	;# 
  3623  0315                     	;# 
  3624  0315                     	;# 
  3625  0316                     	;# 
  3626  0317                     	;# 
  3627  0318                     	;# 
  3628  038C                     	;# 
  3629  038D                     	;# 
  3630  038E                     	;# 
  3631  0391                     	;# 
  3632  0392                     	;# 
  3633  0393                     	;# 
  3634  0394                     	;# 
  3635  0395                     	;# 
  3636  0396                     	;# 
  3637  0397                     	;# 
  3638  0398                     	;# 
  3639  0399                     	;# 
  3640  039A                     	;# 
  3641  039C                     	;# 
  3642  039D                     	;# 
  3643  039E                     	;# 
  3644  039F                     	;# 
  3645  0411                     	;# 
  3646  0411                     	;# 
  3647  0412                     	;# 
  3648  0413                     	;# 
  3649  0414                     	;# 
  3650  0415                     	;# 
  3651  0416                     	;# 
  3652  0417                     	;# 
  3653  0418                     	;# 
  3654  0418                     	;# 
  3655  0419                     	;# 
  3656  041A                     	;# 
  3657  041B                     	;# 
  3658  041C                     	;# 
  3659  041D                     	;# 
  3660  041E                     	;# 
  3661  041F                     	;# 
  3662  0498                     	;# 
  3663  0498                     	;# 
  3664  0499                     	;# 
  3665  049A                     	;# 
  3666  049B                     	;# 
  3667  049B                     	;# 
  3668  049C                     	;# 
  3669  049D                     	;# 
  3670  049E                     	;# 
  3671  049F                     	;# 
  3672  0617                     	;# 
  3673  0618                     	;# 
  3674  0619                     	;# 
  3675  0619                     	;# 
  3676  061A                     	;# 
  3677  061B                     	;# 
  3678  061C                     	;# 
  3679  061C                     	;# 
  3680  061F                     	;# 
  3681  0691                     	;# 
  3682  0692                     	;# 
  3683  0693                     	;# 
  3684  0694                     	;# 
  3685  0695                     	;# 
  3686  0696                     	;# 
  3687  0697                     	;# 
  3688  0698                     	;# 
  3689  0699                     	;# 
  3690  0711                     	;# 
  3691  0712                     	;# 
  3692  0713                     	;# 
  3693  0714                     	;# 
  3694  0715                     	;# 
  3695  0716                     	;# 
  3696  0717                     	;# 
  3697  0718                     	;# 
  3698  0719                     	;# 
  3699  0891                     	;# 
  3700  0891                     	;# 
  3701  0891                     	;# 
  3702  0891                     	;# 
  3703  0891                     	;# 
  3704  0891                     	;# 
  3705  0892                     	;# 
  3706  0892                     	;# 
  3707  0892                     	;# 
  3708  0893                     	;# 
  3709  0893                     	;# 
  3710  0893                     	;# 
  3711  0893                     	;# 
  3712  0893                     	;# 
  3713  0893                     	;# 
  3714  0894                     	;# 
  3715  0894                     	;# 
  3716  0894                     	;# 
  3717  0895                     	;# 
  3718  0895                     	;# 
  3719  0895                     	;# 
  3720  0896                     	;# 
  3721  0896                     	;# 
  3722  0896                     	;# 
  3723  089B                     	;# 
  3724  0911                     	;# 
  3725  0912                     	;# 
  3726  0913                     	;# 
  3727  0914                     	;# 
  3728  0915                     	;# 
  3729  0916                     	;# 
  3730  0918                     	;# 
  3731  0919                     	;# 
  3732  091A                     	;# 
  3733  091B                     	;# 
  3734  091C                     	;# 
  3735  091D                     	;# 
  3736  091E                     	;# 
  3737  091F                     	;# 
  3738  0E0F                     	;# 
  3739  0E10                     	;# 
  3740  0E11                     	;# 
  3741  0E12                     	;# 
  3742  0E13                     	;# 
  3743  0E14                     	;# 
  3744  0E15                     	;# 
  3745  0E16                     	;# 
  3746  0E17                     	;# 
  3747  0E18                     	;# 
  3748  0E19                     	;# 
  3749  0E1A                     	;# 
  3750  0E1B                     	;# 
  3751  0E1C                     	;# 
  3752  0E1D                     	;# 
  3753  0E1E                     	;# 
  3754  0E1F                     	;# 
  3755  0E20                     	;# 
  3756  0E21                     	;# 
  3757  0E22                     	;# 
  3758  0E24                     	;# 
  3759  0E25                     	;# 
  3760  0E28                     	;# 
  3761  0E29                     	;# 
  3762  0E2A                     	;# 
  3763  0E2B                     	;# 
  3764  0E2C                     	;# 
  3765  0E2D                     	;# 
  3766  0E2E                     	;# 
  3767  0E2F                     	;# 
  3768  0E90                     	;# 
  3769  0E91                     	;# 
  3770  0E92                     	;# 
  3771  0E94                     	;# 
  3772  0E95                     	;# 
  3773  0E9C                     	;# 
  3774  0E9D                     	;# 
  3775  0E9E                     	;# 
  3776  0E9F                     	;# 
  3777  0EA0                     	;# 
  3778  0EA1                     	;# 
  3779  0EA2                     	;# 
  3780  0EA3                     	;# 
  3781  0EA4                     	;# 
  3782  0EA5                     	;# 
  3783  0EA6                     	;# 
  3784  0EA7                     	;# 
  3785  0F0F                     	;# 
  3786  0F10                     	;# 
  3787  0F11                     	;# 
  3788  0F12                     	;# 
  3789  0F13                     	;# 
  3790  0F14                     	;# 
  3791  0F15                     	;# 
  3792  0F16                     	;# 
  3793  0F17                     	;# 
  3794  0F18                     	;# 
  3795  0F19                     	;# 
  3796  0F1A                     	;# 
  3797  0F1B                     	;# 
  3798  0F1C                     	;# 
  3799  0F1D                     	;# 
  3800  0F1E                     	;# 
  3801  0F1F                     	;# 
  3802  0F20                     	;# 
  3803  0F21                     	;# 
  3804  0F22                     	;# 
  3805  0F23                     	;# 
  3806  0F24                     	;# 
  3807  0F25                     	;# 
  3808  0F26                     	;# 
  3809  0F27                     	;# 
  3810  0F28                     	;# 
  3811  0F29                     	;# 
  3812  0F2A                     	;# 
  3813  0F2B                     	;# 
  3814  0F2C                     	;# 
  3815  0F2D                     	;# 
  3816  0F2E                     	;# 
  3817  0F2F                     	;# 
  3818  0F30                     	;# 
  3819  0F31                     	;# 
  3820  0F32                     	;# 
  3821  0F33                     	;# 
  3822  0F34                     	;# 
  3823  0F35                     	;# 
  3824  0F36                     	;# 
  3825  0F37                     	;# 
  3826  0FE4                     	;# 
  3827  0FE5                     	;# 
  3828  0FE6                     	;# 
  3829  0FE7                     	;# 
  3830  0FE8                     	;# 
  3831  0FE9                     	;# 
  3832  0FEA                     	;# 
  3833  0FEB                     	;# 
  3834  0FED                     	;# 
  3835  0FEE                     	;# 
  3836  0FEF                     	;# 
  3837  0000                     	;# 
  3838  0001                     	;# 
  3839  0002                     	;# 
  3840  0003                     	;# 
  3841  0004                     	;# 
  3842  0005                     	;# 
  3843  0006                     	;# 
  3844  0007                     	;# 
  3845  0008                     	;# 
  3846  0009                     	;# 
  3847  000A                     	;# 
  3848  000B                     	;# 
  3849  000C                     	;# 
  3850  000D                     	;# 
  3851  000E                     	;# 
  3852  0010                     	;# 
  3853  0011                     	;# 
  3854  0012                     	;# 
  3855  0013                     	;# 
  3856  0014                     	;# 
  3857  0015                     	;# 
  3858  0015                     	;# 
  3859  0016                     	;# 
  3860  0016                     	;# 
  3861  0017                     	;# 
  3862  0018                     	;# 
  3863  0019                     	;# 
  3864  0019                     	;# 
  3865  001A                     	;# 
  3866  001B                     	;# 
  3867  001C                     	;# 
  3868  001D                     	;# 
  3869  001E                     	;# 
  3870  001F                     	;# 
  3871  008C                     	;# 
  3872  008D                     	;# 
  3873  008E                     	;# 
  3874  0090                     	;# 
  3875  0091                     	;# 
  3876  0092                     	;# 
  3877  0093                     	;# 
  3878  0094                     	;# 
  3879  0097                     	;# 
  3880  009B                     	;# 
  3881  009B                     	;# 
  3882  009C                     	;# 
  3883  009D                     	;# 
  3884  009E                     	;# 
  3885  009F                     	;# 
  3886  010C                     	;# 
  3887  010D                     	;# 
  3888  010E                     	;# 
  3889  0111                     	;# 
  3890  0112                     	;# 
  3891  0113                     	;# 
  3892  0114                     	;# 
  3893  0115                     	;# 
  3894  0116                     	;# 
  3895  0117                     	;# 
  3896  0118                     	;# 
  3897  0119                     	;# 
  3898  018C                     	;# 
  3899  018D                     	;# 
  3900  018E                     	;# 
  3901  0197                     	;# 
  3902  0199                     	;# 
  3903  0199                     	;# 
  3904  0199                     	;# 
  3905  019A                     	;# 
  3906  019A                     	;# 
  3907  019A                     	;# 
  3908  019B                     	;# 
  3909  019B                     	;# 
  3910  019B                     	;# 
  3911  019B                     	;# 
  3912  019B                     	;# 
  3913  019C                     	;# 
  3914  019C                     	;# 
  3915  019C                     	;# 
  3916  019D                     	;# 
  3917  019D                     	;# 
  3918  019D                     	;# 
  3919  019E                     	;# 
  3920  019E                     	;# 
  3921  019E                     	;# 
  3922  019F                     	;# 
  3923  019F                     	;# 
  3924  019F                     	;# 
  3925  019F                     	;# 
  3926  019F                     	;# 
  3927  020C                     	;# 
  3928  020D                     	;# 
  3929  020E                     	;# 
  3930  0211                     	;# 
  3931  0211                     	;# 
  3932  0212                     	;# 
  3933  0212                     	;# 
  3934  0213                     	;# 
  3935  0213                     	;# 
  3936  0214                     	;# 
  3937  0214                     	;# 
  3938  0215                     	;# 
  3939  0215                     	;# 
  3940  0215                     	;# 
  3941  0215                     	;# 
  3942  0216                     	;# 
  3943  0216                     	;# 
  3944  0217                     	;# 
  3945  0217                     	;# 
  3946  0219                     	;# 
  3947  021A                     	;# 
  3948  021B                     	;# 
  3949  021C                     	;# 
  3950  021D                     	;# 
  3951  021D                     	;# 
  3952  021E                     	;# 
  3953  021F                     	;# 
  3954  028C                     	;# 
  3955  028D                     	;# 
  3956  028E                     	;# 
  3957  0291                     	;# 
  3958  0291                     	;# 
  3959  0292                     	;# 
  3960  0293                     	;# 
  3961  0294                     	;# 
  3962  0295                     	;# 
  3963  0295                     	;# 
  3964  0296                     	;# 
  3965  0297                     	;# 
  3966  0298                     	;# 
  3967  029F                     	;# 
  3968  030C                     	;# 
  3969  030D                     	;# 
  3970  030E                     	;# 
  3971  0311                     	;# 
  3972  0311                     	;# 
  3973  0312                     	;# 
  3974  0313                     	;# 
  3975  0314                     	;# 
  3976  0315                     	;# 
  3977  0315                     	;# 
  3978  0316                     	;# 
  3979  0317                     	;# 
  3980  0318                     	;# 
  3981  038C                     	;# 
  3982  038D                     	;# 
  3983  038E                     	;# 
  3984  0391                     	;# 
  3985  0392                     	;# 
  3986  0393                     	;# 
  3987  0394                     	;# 
  3988  0395                     	;# 
  3989  0396                     	;# 
  3990  0397                     	;# 
  3991  0398                     	;# 
  3992  0399                     	;# 
  3993  039A                     	;# 
  3994  039C                     	;# 
  3995  039D                     	;# 
  3996  039E                     	;# 
  3997  039F                     	;# 
  3998  0411                     	;# 
  3999  0411                     	;# 
  4000  0412                     	;# 
  4001  0413                     	;# 
  4002  0414                     	;# 
  4003  0415                     	;# 
  4004  0416                     	;# 
  4005  0417                     	;# 
  4006  0418                     	;# 
  4007  0418                     	;# 
  4008  0419                     	;# 
  4009  041A                     	;# 
  4010  041B                     	;# 
  4011  041C                     	;# 
  4012  041D                     	;# 
  4013  041E                     	;# 
  4014  041F                     	;# 
  4015  0498                     	;# 
  4016  0498                     	;# 
  4017  0499                     	;# 
  4018  049A                     	;# 
  4019  049B                     	;# 
  4020  049B                     	;# 
  4021  049C                     	;# 
  4022  049D                     	;# 
  4023  049E                     	;# 
  4024  049F                     	;# 
  4025  0617                     	;# 
  4026  0618                     	;# 
  4027  0619                     	;# 
  4028  0619                     	;# 
  4029  061A                     	;# 
  4030  061B                     	;# 
  4031  061C                     	;# 
  4032  061C                     	;# 
  4033  061F                     	;# 
  4034  0691                     	;# 
  4035  0692                     	;# 
  4036  0693                     	;# 
  4037  0694                     	;# 
  4038  0695                     	;# 
  4039  0696                     	;# 
  4040  0697                     	;# 
  4041  0698                     	;# 
  4042  0699                     	;# 
  4043  0711                     	;# 
  4044  0712                     	;# 
  4045  0713                     	;# 
  4046  0714                     	;# 
  4047  0715                     	;# 
  4048  0716                     	;# 
  4049  0717                     	;# 
  4050  0718                     	;# 
  4051  0719                     	;# 
  4052  0891                     	;# 
  4053  0891                     	;# 
  4054  0891                     	;# 
  4055  0891                     	;# 
  4056  0891                     	;# 
  4057  0891                     	;# 
  4058  0892                     	;# 
  4059  0892                     	;# 
  4060  0892                     	;# 
  4061  0893                     	;# 
  4062  0893                     	;# 
  4063  0893                     	;# 
  4064  0893                     	;# 
  4065  0893                     	;# 
  4066  0893                     	;# 
  4067  0894                     	;# 
  4068  0894                     	;# 
  4069  0894                     	;# 
  4070  0895                     	;# 
  4071  0895                     	;# 
  4072  0895                     	;# 
  4073  0896                     	;# 
  4074  0896                     	;# 
  4075  0896                     	;# 
  4076  089B                     	;# 
  4077  0911                     	;# 
  4078  0912                     	;# 
  4079  0913                     	;# 
  4080  0914                     	;# 
  4081  0915                     	;# 
  4082  0916                     	;# 
  4083  0918                     	;# 
  4084  0919                     	;# 
  4085  091A                     	;# 
  4086  091B                     	;# 
  4087  091C                     	;# 
  4088  091D                     	;# 
  4089  091E                     	;# 
  4090  091F                     	;# 
  4091  0E0F                     	;# 
  4092  0E10                     	;# 
  4093  0E11                     	;# 
  4094  0E12                     	;# 
  4095  0E13                     	;# 
  4096  0E14                     	;# 
  4097  0E15                     	;# 
  4098  0E16                     	;# 
  4099  0E17                     	;# 
  4100  0E18                     	;# 
  4101  0E19                     	;# 
  4102  0E1A                     	;# 
  4103  0E1B                     	;# 
  4104  0E1C                     	;# 
  4105  0E1D                     	;# 
  4106  0E1E                     	;# 
  4107  0E1F                     	;# 
  4108  0E20                     	;# 
  4109  0E21                     	;# 
  4110  0E22                     	;# 
  4111  0E24                     	;# 
  4112  0E25                     	;# 
  4113  0E28                     	;# 
  4114  0E29                     	;# 
  4115  0E2A                     	;# 
  4116  0E2B                     	;# 
  4117  0E2C                     	;# 
  4118  0E2D                     	;# 
  4119  0E2E                     	;# 
  4120  0E2F                     	;# 
  4121  0E90                     	;# 
  4122  0E91                     	;# 
  4123  0E92                     	;# 
  4124  0E94                     	;# 
  4125  0E95                     	;# 
  4126  0E9C                     	;# 
  4127  0E9D                     	;# 
  4128  0E9E                     	;# 
  4129  0E9F                     	;# 
  4130  0EA0                     	;# 
  4131  0EA1                     	;# 
  4132  0EA2                     	;# 
  4133  0EA3                     	;# 
  4134  0EA4                     	;# 
  4135  0EA5                     	;# 
  4136  0EA6                     	;# 
  4137  0EA7                     	;# 
  4138  0F0F                     	;# 
  4139  0F10                     	;# 
  4140  0F11                     	;# 
  4141  0F12                     	;# 
  4142  0F13                     	;# 
  4143  0F14                     	;# 
  4144  0F15                     	;# 
  4145  0F16                     	;# 
  4146  0F17                     	;# 
  4147  0F18                     	;# 
  4148  0F19                     	;# 
  4149  0F1A                     	;# 
  4150  0F1B                     	;# 
  4151  0F1C                     	;# 
  4152  0F1D                     	;# 
  4153  0F1E                     	;# 
  4154  0F1F                     	;# 
  4155  0F20                     	;# 
  4156  0F21                     	;# 
  4157  0F22                     	;# 
  4158  0F23                     	;# 
  4159  0F24                     	;# 
  4160  0F25                     	;# 
  4161  0F26                     	;# 
  4162  0F27                     	;# 
  4163  0F28                     	;# 
  4164  0F29                     	;# 
  4165  0F2A                     	;# 
  4166  0F2B                     	;# 
  4167  0F2C                     	;# 
  4168  0F2D                     	;# 
  4169  0F2E                     	;# 
  4170  0F2F                     	;# 
  4171  0F30                     	;# 
  4172  0F31                     	;# 
  4173  0F32                     	;# 
  4174  0F33                     	;# 
  4175  0F34                     	;# 
  4176  0F35                     	;# 
  4177  0F36                     	;# 
  4178  0F37                     	;# 
  4179  0FE4                     	;# 
  4180  0FE5                     	;# 
  4181  0FE6                     	;# 
  4182  0FE7                     	;# 
  4183  0FE8                     	;# 
  4184  0FE9                     	;# 
  4185  0FEA                     	;# 
  4186  0FEB                     	;# 
  4187  0FED                     	;# 
  4188  0FEE                     	;# 
  4189  0FEF                     	;# 
  4190  0000                     	;# 
  4191  0001                     	;# 
  4192  0002                     	;# 
  4193  0003                     	;# 
  4194  0004                     	;# 
  4195  0005                     	;# 
  4196  0006                     	;# 
  4197  0007                     	;# 
  4198  0008                     	;# 
  4199  0009                     	;# 
  4200  000A                     	;# 
  4201  000B                     	;# 
  4202  000C                     	;# 
  4203  000D                     	;# 
  4204  000E                     	;# 
  4205  0010                     	;# 
  4206  0011                     	;# 
  4207  0012                     	;# 
  4208  0013                     	;# 
  4209  0014                     	;# 
  4210  0015                     	;# 
  4211  0015                     	;# 
  4212  0016                     	;# 
  4213  0016                     	;# 
  4214  0017                     	;# 
  4215  0018                     	;# 
  4216  0019                     	;# 
  4217  0019                     	;# 
  4218  001A                     	;# 
  4219  001B                     	;# 
  4220  001C                     	;# 
  4221  001D                     	;# 
  4222  001E                     	;# 
  4223  001F                     	;# 
  4224  008C                     	;# 
  4225  008D                     	;# 
  4226  008E                     	;# 
  4227  0090                     	;# 
  4228  0091                     	;# 
  4229  0092                     	;# 
  4230  0093                     	;# 
  4231  0094                     	;# 
  4232  0097                     	;# 
  4233  009B                     	;# 
  4234  009B                     	;# 
  4235  009C                     	;# 
  4236  009D                     	;# 
  4237  009E                     	;# 
  4238  009F                     	;# 
  4239  010C                     	;# 
  4240  010D                     	;# 
  4241  010E                     	;# 
  4242  0111                     	;# 
  4243  0112                     	;# 
  4244  0113                     	;# 
  4245  0114                     	;# 
  4246  0115                     	;# 
  4247  0116                     	;# 
  4248  0117                     	;# 
  4249  0118                     	;# 
  4250  0119                     	;# 
  4251  018C                     	;# 
  4252  018D                     	;# 
  4253  018E                     	;# 
  4254  0197                     	;# 
  4255  0199                     	;# 
  4256  0199                     	;# 
  4257  0199                     	;# 
  4258  019A                     	;# 
  4259  019A                     	;# 
  4260  019A                     	;# 
  4261  019B                     	;# 
  4262  019B                     	;# 
  4263  019B                     	;# 
  4264  019B                     	;# 
  4265  019B                     	;# 
  4266  019C                     	;# 
  4267  019C                     	;# 
  4268  019C                     	;# 
  4269  019D                     	;# 
  4270  019D                     	;# 
  4271  019D                     	;# 
  4272  019E                     	;# 
  4273  019E                     	;# 
  4274  019E                     	;# 
  4275  019F                     	;# 
  4276  019F                     	;# 
  4277  019F                     	;# 
  4278  019F                     	;# 
  4279  019F                     	;# 
  4280  020C                     	;# 
  4281  020D                     	;# 
  4282  020E                     	;# 
  4283  0211                     	;# 
  4284  0211                     	;# 
  4285  0212                     	;# 
  4286  0212                     	;# 
  4287  0213                     	;# 
  4288  0213                     	;# 
  4289  0214                     	;# 
  4290  0214                     	;# 
  4291  0215                     	;# 
  4292  0215                     	;# 
  4293  0215                     	;# 
  4294  0215                     	;# 
  4295  0216                     	;# 
  4296  0216                     	;# 
  4297  0217                     	;# 
  4298  0217                     	;# 
  4299  0219                     	;# 
  4300  021A                     	;# 
  4301  021B                     	;# 
  4302  021C                     	;# 
  4303  021D                     	;# 
  4304  021D                     	;# 
  4305  021E                     	;# 
  4306  021F                     	;# 
  4307  028C                     	;# 
  4308  028D                     	;# 
  4309  028E                     	;# 
  4310  0291                     	;# 
  4311  0291                     	;# 
  4312  0292                     	;# 
  4313  0293                     	;# 
  4314  0294                     	;# 
  4315  0295                     	;# 
  4316  0295                     	;# 
  4317  0296                     	;# 
  4318  0297                     	;# 
  4319  0298                     	;# 
  4320  029F                     	;# 
  4321  030C                     	;# 
  4322  030D                     	;# 
  4323  030E                     	;# 
  4324  0311                     	;# 
  4325  0311                     	;# 
  4326  0312                     	;# 
  4327  0313                     	;# 
  4328  0314                     	;# 
  4329  0315                     	;# 
  4330  0315                     	;# 
  4331  0316                     	;# 
  4332  0317                     	;# 
  4333  0318                     	;# 
  4334  038C                     	;# 
  4335  038D                     	;# 
  4336  038E                     	;# 
  4337  0391                     	;# 
  4338  0392                     	;# 
  4339  0393                     	;# 
  4340  0394                     	;# 
  4341  0395                     	;# 
  4342  0396                     	;# 
  4343  0397                     	;# 
  4344  0398                     	;# 
  4345  0399                     	;# 
  4346  039A                     	;# 
  4347  039C                     	;# 
  4348  039D                     	;# 
  4349  039E                     	;# 
  4350  039F                     	;# 
  4351  0411                     	;# 
  4352  0411                     	;# 
  4353  0412                     	;# 
  4354  0413                     	;# 
  4355  0414                     	;# 
  4356  0415                     	;# 
  4357  0416                     	;# 
  4358  0417                     	;# 
  4359  0418                     	;# 
  4360  0418                     	;# 
  4361  0419                     	;# 
  4362  041A                     	;# 
  4363  041B                     	;# 
  4364  041C                     	;# 
  4365  041D                     	;# 
  4366  041E                     	;# 
  4367  041F                     	;# 
  4368  0498                     	;# 
  4369  0498                     	;# 
  4370  0499                     	;# 
  4371  049A                     	;# 
  4372  049B                     	;# 
  4373  049B                     	;# 
  4374  049C                     	;# 
  4375  049D                     	;# 
  4376  049E                     	;# 
  4377  049F                     	;# 
  4378  0617                     	;# 
  4379  0618                     	;# 
  4380  0619                     	;# 
  4381  0619                     	;# 
  4382  061A                     	;# 
  4383  061B                     	;# 
  4384  061C                     	;# 
  4385  061C                     	;# 
  4386  061F                     	;# 
  4387  0691                     	;# 
  4388  0692                     	;# 
  4389  0693                     	;# 
  4390  0694                     	;# 
  4391  0695                     	;# 
  4392  0696                     	;# 
  4393  0697                     	;# 
  4394  0698                     	;# 
  4395  0699                     	;# 
  4396  0711                     	;# 
  4397  0712                     	;# 
  4398  0713                     	;# 
  4399  0714                     	;# 
  4400  0715                     	;# 
  4401  0716                     	;# 
  4402  0717                     	;# 
  4403  0718                     	;# 
  4404  0719                     	;# 
  4405  0891                     	;# 
  4406  0891                     	;# 
  4407  0891                     	;# 
  4408  0891                     	;# 
  4409  0891                     	;# 
  4410  0891                     	;# 
  4411  0892                     	;# 
  4412  0892                     	;# 
  4413  0892                     	;# 
  4414  0893                     	;# 
  4415  0893                     	;# 
  4416  0893                     	;# 
  4417  0893                     	;# 
  4418  0893                     	;# 
  4419  0893                     	;# 
  4420  0894                     	;# 
  4421  0894                     	;# 
  4422  0894                     	;# 
  4423  0895                     	;# 
  4424  0895                     	;# 
  4425  0895                     	;# 
  4426  0896                     	;# 
  4427  0896                     	;# 
  4428  0896                     	;# 
  4429  089B                     	;# 
  4430  0911                     	;# 
  4431  0912                     	;# 
  4432  0913                     	;# 
  4433  0914                     	;# 
  4434  0915                     	;# 
  4435  0916                     	;# 
  4436  0918                     	;# 
  4437  0919                     	;# 
  4438  091A                     	;# 
  4439  091B                     	;# 
  4440  091C                     	;# 
  4441  091D                     	;# 
  4442  091E                     	;# 
  4443  091F                     	;# 
  4444  0E0F                     	;# 
  4445  0E10                     	;# 
  4446  0E11                     	;# 
  4447  0E12                     	;# 
  4448  0E13                     	;# 
  4449  0E14                     	;# 
  4450  0E15                     	;# 
  4451  0E16                     	;# 
  4452  0E17                     	;# 
  4453  0E18                     	;# 
  4454  0E19                     	;# 
  4455  0E1A                     	;# 
  4456  0E1B                     	;# 
  4457  0E1C                     	;# 
  4458  0E1D                     	;# 
  4459  0E1E                     	;# 
  4460  0E1F                     	;# 
  4461  0E20                     	;# 
  4462  0E21                     	;# 
  4463  0E22                     	;# 
  4464  0E24                     	;# 
  4465  0E25                     	;# 
  4466  0E28                     	;# 
  4467  0E29                     	;# 
  4468  0E2A                     	;# 
  4469  0E2B                     	;# 
  4470  0E2C                     	;# 
  4471  0E2D                     	;# 
  4472  0E2E                     	;# 
  4473  0E2F                     	;# 
  4474  0E90                     	;# 
  4475  0E91                     	;# 
  4476  0E92                     	;# 
  4477  0E94                     	;# 
  4478  0E95                     	;# 
  4479  0E9C                     	;# 
  4480  0E9D                     	;# 
  4481  0E9E                     	;# 
  4482  0E9F                     	;# 
  4483  0EA0                     	;# 
  4484  0EA1                     	;# 
  4485  0EA2                     	;# 
  4486  0EA3                     	;# 
  4487  0EA4                     	;# 
  4488  0EA5                     	;# 
  4489  0EA6                     	;# 
  4490  0EA7                     	;# 
  4491  0F0F                     	;# 
  4492  0F10                     	;# 
  4493  0F11                     	;# 
  4494  0F12                     	;# 
  4495  0F13                     	;# 
  4496  0F14                     	;# 
  4497  0F15                     	;# 
  4498  0F16                     	;# 
  4499  0F17                     	;# 
  4500  0F18                     	;# 
  4501  0F19                     	;# 
  4502  0F1A                     	;# 
  4503  0F1B                     	;# 
  4504  0F1C                     	;# 
  4505  0F1D                     	;# 
  4506  0F1E                     	;# 
  4507  0F1F                     	;# 
  4508  0F20                     	;# 
  4509  0F21                     	;# 
  4510  0F22                     	;# 
  4511  0F23                     	;# 
  4512  0F24                     	;# 
  4513  0F25                     	;# 
  4514  0F26                     	;# 
  4515  0F27                     	;# 
  4516  0F28                     	;# 
  4517  0F29                     	;# 
  4518  0F2A                     	;# 
  4519  0F2B                     	;# 
  4520  0F2C                     	;# 
  4521  0F2D                     	;# 
  4522  0F2E                     	;# 
  4523  0F2F                     	;# 
  4524  0F30                     	;# 
  4525  0F31                     	;# 
  4526  0F32                     	;# 
  4527  0F33                     	;# 
  4528  0F34                     	;# 
  4529  0F35                     	;# 
  4530  0F36                     	;# 
  4531  0F37                     	;# 
  4532  0FE4                     	;# 
  4533  0FE5                     	;# 
  4534  0FE6                     	;# 
  4535  0FE7                     	;# 
  4536  0FE8                     	;# 
  4537  0FE9                     	;# 
  4538  0FEA                     	;# 
  4539  0FEB                     	;# 
  4540  0FED                     	;# 
  4541  0FEE                     	;# 
  4542  0FEF                     	;_currentPositions_steps
  4543                           
  4544                           	psect	idataBANK0
  4545  2FA6                     __pidataBANK0:	
  4546                           
  4547                           ;initializer for _demoLong
  4548  2FA6  3401               	retlw	1
  4549  2FA7  3400               	retlw	0
  4550  2FA8  3400               	retlw	0
  4551  2FA9  3400               	retlw	0
  4552                           
  4553                           	psect	idataBANK1
  4554  2FEC                     __pidataBANK1:	
  4555                           
  4556                           ;initializer for _piezo_on_time_ms
  4557  2FEC  34C0               	retlw	192
  4558  2FED  3403               	retlw	3
  4559                           
  4560                           ;initializer for _heater_pre_time_ms
  4561  2FEE  341E               	retlw	30
  4562  2FEF  3400               	retlw	0
  4563                           
  4564                           ;initializer for _drv_peak_val
  4565  2FF0  347F               	retlw	127
  4566  2FF1  3400               	retlw	0
  4567                           
  4568                           	psect	idataBANK2
  4569  2FE6                     __pidataBANK2:	
  4570                           
  4571                           ;initializer for _inter_step_interval_ms
  4572  2FE6  34E8               	retlw	232
  4573  2FE7  3403               	retlw	3
  4574  2FE8  3400               	retlw	0
  4575  2FE9  3400               	retlw	0
  4576                           
  4577                           ;initializer for _heater_post_time_ms
  4578  2FEA  3428               	retlw	40
  4579  2FEB  3400               	retlw	0
  4580                           
  4581                           	psect	idataBANK4
  4582  23A2                     __pidataBANK4:	
  4583                           
  4584                           ;initializer for _fsmStateTable
  4585  23A2  349E               	retlw	low _do_I2C_IDLE
  4586  23A3  3420               	retlw	high _do_I2C_IDLE
  4587  23A4  342C               	retlw	low _do_I2C_SEND_ADR_READ
  4588  23A5  3421               	retlw	high _do_I2C_SEND_ADR_READ
  4589  23A6  34FF               	retlw	low _do_I2C_SEND_ADR_WRITE
  4590  23A7  3420               	retlw	high _do_I2C_SEND_ADR_WRITE
  4591  23A8  34B6               	retlw	low _do_I2C_TX
  4592  23A9  341D               	retlw	high _do_I2C_TX
  4593  23AA  34BB               	retlw	low _do_I2C_RX
  4594  23AB  3419               	retlw	high _do_I2C_RX
  4595  23AC  34CC               	retlw	low _do_I2C_RCEN
  4596  23AD  3420               	retlw	high _do_I2C_RCEN
  4597  23AE  34AB               	retlw	low _do_I2C_TX_EMPTY
  4598  23AF  3425               	retlw	high _do_I2C_TX_EMPTY
  4599  23B0  3443               	retlw	low _do_I2C_SEND_RESTART_READ
  4600  23B1  3420               	retlw	high _do_I2C_SEND_RESTART_READ
  4601  23B2  344B               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4602  23B3  3420               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4603  23B4  3453               	retlw	low _do_I2C_SEND_RESTART
  4604  23B5  3420               	retlw	high _do_I2C_SEND_RESTART
  4605  23B6  345B               	retlw	low _do_I2C_SEND_STOP
  4606  23B7  3420               	retlw	high _do_I2C_SEND_STOP
  4607  23B8  3463               	retlw	low _do_I2C_DO_ACK
  4608  23B9  3420               	retlw	high _do_I2C_DO_ACK
  4609  23BA  346B               	retlw	low _do_I2C_DO_NACK_STOP
  4610  23BB  3420               	retlw	high _do_I2C_DO_NACK_STOP
  4611  23BC  3473               	retlw	low _do_I2C_DO_NACK_RESTART
  4612  23BD  3420               	retlw	high _do_I2C_DO_NACK_RESTART
  4613  23BE  34F4               	retlw	low _do_I2C_RESET
  4614  23BF  3420               	retlw	high _do_I2C_RESET
  4615  23C0  3480               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4616  23C1  3425               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4617                           
  4618                           	psect	stringtext1
  4619  1000                     __pstringtext1:	
  4620  1000                     drv2665@drv_sine:	
  4621  1000  3400               	retlw	0
  4622  1001  3400               	retlw	0
  4623  1002  3410               	retlw	16
  4624  1003  3400               	retlw	0
  4625  1004  3420               	retlw	32
  4626  1005  3400               	retlw	0
  4627  1006  342E               	retlw	46
  4628  1007  3400               	retlw	0
  4629  1008  343C               	retlw	60
  4630  1009  3400               	retlw	0
  4631  100A  3448               	retlw	72
  4632  100B  3400               	retlw	0
  4633  100C  3453               	retlw	83
  4634  100D  3400               	retlw	0
  4635  100E  345B               	retlw	91
  4636  100F  3400               	retlw	0
  4637  1010  3461               	retlw	97
  4638  1011  3400               	retlw	0
  4639  1012  3465               	retlw	101
  4640  1013  3400               	retlw	0
  4641  1014  3466               	retlw	102
  4642  1015  3400               	retlw	0
  4643  1016  3465               	retlw	101
  4644  1017  3400               	retlw	0
  4645  1018  3461               	retlw	97
  4646  1019  3400               	retlw	0
  4647  101A  345B               	retlw	91
  4648  101B  3400               	retlw	0
  4649  101C  3453               	retlw	83
  4650  101D  3400               	retlw	0
  4651  101E  3448               	retlw	72
  4652  101F  3400               	retlw	0
  4653  1020  343C               	retlw	60
  4654  1021  3400               	retlw	0
  4655  1022  342E               	retlw	46
  4656  1023  3400               	retlw	0
  4657  1024  3420               	retlw	32
  4658  1025  3400               	retlw	0
  4659  1026  3410               	retlw	16
  4660  1027  3400               	retlw	0
  4661  1028  3400               	retlw	0
  4662  1029  3400               	retlw	0
  4663  102A  34F0               	retlw	240
  4664  102B  3400               	retlw	0
  4665  102C  34E0               	retlw	224
  4666  102D  3400               	retlw	0
  4667  102E  34D2               	retlw	210
  4668  102F  3400               	retlw	0
  4669  1030  34C4               	retlw	196
  4670  1031  3400               	retlw	0
  4671  1032  34B8               	retlw	184
  4672  1033  3400               	retlw	0
  4673  1034  34AD               	retlw	173
  4674  1035  3400               	retlw	0
  4675  1036  34A5               	retlw	165
  4676  1037  3400               	retlw	0
  4677  1038  349F               	retlw	159
  4678  1039  3400               	retlw	0
  4679  103A  349B               	retlw	155
  4680  103B  3400               	retlw	0
  4681  103C  349A               	retlw	154
  4682  103D  3400               	retlw	0
  4683  103E  349B               	retlw	155
  4684  103F  3400               	retlw	0
  4685  1040  349F               	retlw	159
  4686  1041  3400               	retlw	0
  4687  1042  34A5               	retlw	165
  4688  1043  3400               	retlw	0
  4689  1044  34AD               	retlw	173
  4690  1045  3400               	retlw	0
  4691  1046  34B8               	retlw	184
  4692  1047  3400               	retlw	0
  4693  1048  34C4               	retlw	196
  4694  1049  3400               	retlw	0
  4695  104A  34D2               	retlw	210
  4696  104B  3400               	retlw	0
  4697  104C  34E0               	retlw	224
  4698  104D  3400               	retlw	0
  4699  104E  34F0               	retlw	240
  4700  104F  3400               	retlw	0
  4701  1050  3400               	retlw	0
  4702  1051  3400               	retlw	0
  4703  1052  3410               	retlw	16
  4704  1053  3400               	retlw	0
  4705  1054  3420               	retlw	32
  4706  1055  3400               	retlw	0
  4707  1056  342E               	retlw	46
  4708  1057  3400               	retlw	0
  4709  1058  343C               	retlw	60
  4710  1059  3400               	retlw	0
  4711  105A  3448               	retlw	72
  4712  105B  3400               	retlw	0
  4713  105C  3453               	retlw	83
  4714  105D  3400               	retlw	0
  4715  105E  345B               	retlw	91
  4716  105F  3400               	retlw	0
  4717  1060  3461               	retlw	97
  4718  1061  3400               	retlw	0
  4719  1062  3465               	retlw	101
  4720  1063  3400               	retlw	0
  4721  1064  3466               	retlw	102
  4722  1065  3400               	retlw	0
  4723  1066  3465               	retlw	101
  4724  1067  3400               	retlw	0
  4725  1068  3461               	retlw	97
  4726  1069  3400               	retlw	0
  4727  106A  345B               	retlw	91
  4728  106B  3400               	retlw	0
  4729  106C  3453               	retlw	83
  4730  106D  3400               	retlw	0
  4731  106E  3448               	retlw	72
  4732  106F  3400               	retlw	0
  4733  1070  343C               	retlw	60
  4734  1071  3400               	retlw	0
  4735  1072  342E               	retlw	46
  4736  1073  3400               	retlw	0
  4737  1074  3420               	retlw	32
  4738  1075  3400               	retlw	0
  4739  1076  3410               	retlw	16
  4740  1077  3400               	retlw	0
  4741  1078  3400               	retlw	0
  4742  1079  3400               	retlw	0
  4743  107A  34F0               	retlw	240
  4744  107B  3400               	retlw	0
  4745  107C  34E0               	retlw	224
  4746  107D  3400               	retlw	0
  4747  107E  34D2               	retlw	210
  4748  107F  3400               	retlw	0
  4749  1080  34C4               	retlw	196
  4750  1081  3400               	retlw	0
  4751  1082  34B8               	retlw	184
  4752  1083  3400               	retlw	0
  4753  1084  34AD               	retlw	173
  4754  1085  3400               	retlw	0
  4755  1086  34A5               	retlw	165
  4756  1087  3400               	retlw	0
  4757  1088  349F               	retlw	159
  4758  1089  3400               	retlw	0
  4759  108A  349B               	retlw	155
  4760  108B  3400               	retlw	0
  4761  108C  349A               	retlw	154
  4762  108D  3400               	retlw	0
  4763  108E  349B               	retlw	155
  4764  108F  3400               	retlw	0
  4765  1090  349F               	retlw	159
  4766  1091  3400               	retlw	0
  4767  1092  34A5               	retlw	165
  4768  1093  3400               	retlw	0
  4769  1094  34AD               	retlw	173
  4770  1095  3400               	retlw	0
  4771  1096  34B8               	retlw	184
  4772  1097  3400               	retlw	0
  4773  1098  34C4               	retlw	196
  4774  1099  3400               	retlw	0
  4775  109A  34D2               	retlw	210
  4776  109B  3400               	retlw	0
  4777  109C  34E0               	retlw	224
  4778  109D  3400               	retlw	0
  4779  109E  34F0               	retlw	240
  4780  109F  3400               	retlw	0
  4781  10A0  3400               	retlw	0
  4782  10A1  3400               	retlw	0
  4783  10A2  3410               	retlw	16
  4784  10A3  3400               	retlw	0
  4785  10A4  3420               	retlw	32
  4786  10A5  3400               	retlw	0
  4787  10A6  342E               	retlw	46
  4788  10A7  3400               	retlw	0
  4789  10A8  343C               	retlw	60
  4790  10A9  3400               	retlw	0
  4791  10AA  3448               	retlw	72
  4792  10AB  3400               	retlw	0
  4793  10AC  3453               	retlw	83
  4794  10AD  3400               	retlw	0
  4795  10AE  345B               	retlw	91
  4796  10AF  3400               	retlw	0
  4797  10B0  3461               	retlw	97
  4798  10B1  3400               	retlw	0
  4799  10B2  3465               	retlw	101
  4800  10B3  3400               	retlw	0
  4801  10B4  3466               	retlw	102
  4802  10B5  3400               	retlw	0
  4803  10B6  3465               	retlw	101
  4804  10B7  3400               	retlw	0
  4805  10B8  3461               	retlw	97
  4806  10B9  3400               	retlw	0
  4807  10BA  345B               	retlw	91
  4808  10BB  3400               	retlw	0
  4809  10BC  3453               	retlw	83
  4810  10BD  3400               	retlw	0
  4811  10BE  3448               	retlw	72
  4812  10BF  3400               	retlw	0
  4813  10C0  343C               	retlw	60
  4814  10C1  3400               	retlw	0
  4815  10C2  342E               	retlw	46
  4816  10C3  3400               	retlw	0
  4817  10C4  3420               	retlw	32
  4818  10C5  3400               	retlw	0
  4819  10C6  3410               	retlw	16
  4820  10C7  3400               	retlw	0
  4821  10C8  3400               	retlw	0
  4822  10C9  3400               	retlw	0
  4823  10CA  34F0               	retlw	240
  4824  10CB  3400               	retlw	0
  4825  10CC  34E0               	retlw	224
  4826  10CD  3400               	retlw	0
  4827  10CE  34D2               	retlw	210
  4828  10CF  3400               	retlw	0
  4829  10D0  34C4               	retlw	196
  4830  10D1  3400               	retlw	0
  4831  10D2  34B8               	retlw	184
  4832  10D3  3400               	retlw	0
  4833  10D4  34AD               	retlw	173
  4834  10D5  3400               	retlw	0
  4835  10D6  34A5               	retlw	165
  4836  10D7  3400               	retlw	0
  4837  10D8  349F               	retlw	159
  4838  10D9  3400               	retlw	0
  4839  10DA  349B               	retlw	155
  4840  10DB  3400               	retlw	0
  4841  10DC  349A               	retlw	154
  4842  10DD  3400               	retlw	0
  4843  10DE  349B               	retlw	155
  4844  10DF  3400               	retlw	0
  4845  10E0  349F               	retlw	159
  4846  10E1  3400               	retlw	0
  4847  10E2  34A5               	retlw	165
  4848  10E3  3400               	retlw	0
  4849  10E4  34AD               	retlw	173
  4850  10E5  3400               	retlw	0
  4851  10E6  34B8               	retlw	184
  4852  10E7  3400               	retlw	0
  4853  10E8  34C4               	retlw	196
  4854  10E9  3400               	retlw	0
  4855  10EA  34D2               	retlw	210
  4856  10EB  3400               	retlw	0
  4857  10EC  34E0               	retlw	224
  4858  10ED  3400               	retlw	0
  4859  10EE  34F0               	retlw	240
  4860  10EF  3400               	retlw	0
  4861  10F0  3400               	retlw	0
  4862  10F1  3400               	retlw	0
  4863  10F2                     __end_ofdrv2665@drv_sine:	
  4864                           
  4865                           	psect	stringtext2
  4866  10F2                     __pstringtext2:	
  4867  10F2                     _drv_sine:	
  4868  10F2  3400               	retlw	0
  4869  10F3  3400               	retlw	0
  4870  10F4  3410               	retlw	16
  4871  10F5  3400               	retlw	0
  4872  10F6  3420               	retlw	32
  4873  10F7  3400               	retlw	0
  4874  10F8  342E               	retlw	46
  4875  10F9  3400               	retlw	0
  4876  10FA  343C               	retlw	60
  4877  10FB  3400               	retlw	0
  4878  10FC  3448               	retlw	72
  4879  10FD  3400               	retlw	0
  4880  10FE  3453               	retlw	83
  4881  10FF  3400               	retlw	0
  4882  1100  345B               	retlw	91
  4883  1101  3400               	retlw	0
  4884  1102  3461               	retlw	97
  4885  1103  3400               	retlw	0
  4886  1104  3465               	retlw	101
  4887  1105  3400               	retlw	0
  4888  1106  3466               	retlw	102
  4889  1107  3400               	retlw	0
  4890  1108  3465               	retlw	101
  4891  1109  3400               	retlw	0
  4892  110A  3461               	retlw	97
  4893  110B  3400               	retlw	0
  4894  110C  345B               	retlw	91
  4895  110D  3400               	retlw	0
  4896  110E  3453               	retlw	83
  4897  110F  3400               	retlw	0
  4898  1110  3448               	retlw	72
  4899  1111  3400               	retlw	0
  4900  1112  343C               	retlw	60
  4901  1113  3400               	retlw	0
  4902  1114  342E               	retlw	46
  4903  1115  3400               	retlw	0
  4904  1116  3420               	retlw	32
  4905  1117  3400               	retlw	0
  4906  1118  3410               	retlw	16
  4907  1119  3400               	retlw	0
  4908  111A  3400               	retlw	0
  4909  111B  3400               	retlw	0
  4910  111C  34F0               	retlw	240
  4911  111D  3400               	retlw	0
  4912  111E  34E0               	retlw	224
  4913  111F  3400               	retlw	0
  4914  1120  34D2               	retlw	210
  4915  1121  3400               	retlw	0
  4916  1122  34C4               	retlw	196
  4917  1123  3400               	retlw	0
  4918  1124  34B8               	retlw	184
  4919  1125  3400               	retlw	0
  4920  1126  34AD               	retlw	173
  4921  1127  3400               	retlw	0
  4922  1128  34A5               	retlw	165
  4923  1129  3400               	retlw	0
  4924  112A  349F               	retlw	159
  4925  112B  3400               	retlw	0
  4926  112C  349B               	retlw	155
  4927  112D  3400               	retlw	0
  4928  112E  349A               	retlw	154
  4929  112F  3400               	retlw	0
  4930  1130  349B               	retlw	155
  4931  1131  3400               	retlw	0
  4932  1132  349F               	retlw	159
  4933  1133  3400               	retlw	0
  4934  1134  34A5               	retlw	165
  4935  1135  3400               	retlw	0
  4936  1136  34AD               	retlw	173
  4937  1137  3400               	retlw	0
  4938  1138  34B8               	retlw	184
  4939  1139  3400               	retlw	0
  4940  113A  34C4               	retlw	196
  4941  113B  3400               	retlw	0
  4942  113C  34D2               	retlw	210
  4943  113D  3400               	retlw	0
  4944  113E  34E0               	retlw	224
  4945  113F  3400               	retlw	0
  4946  1140  34F0               	retlw	240
  4947  1141  3400               	retlw	0
  4948  1142  3400               	retlw	0
  4949  1143  3400               	retlw	0
  4950  1144  3410               	retlw	16
  4951  1145  3400               	retlw	0
  4952  1146  3420               	retlw	32
  4953  1147  3400               	retlw	0
  4954  1148  342E               	retlw	46
  4955  1149  3400               	retlw	0
  4956  114A  343C               	retlw	60
  4957  114B  3400               	retlw	0
  4958  114C  3448               	retlw	72
  4959  114D  3400               	retlw	0
  4960  114E  3453               	retlw	83
  4961  114F  3400               	retlw	0
  4962  1150  345B               	retlw	91
  4963  1151  3400               	retlw	0
  4964  1152  3461               	retlw	97
  4965  1153  3400               	retlw	0
  4966  1154  3465               	retlw	101
  4967  1155  3400               	retlw	0
  4968  1156  3466               	retlw	102
  4969  1157  3400               	retlw	0
  4970  1158  3465               	retlw	101
  4971  1159  3400               	retlw	0
  4972  115A  3461               	retlw	97
  4973  115B  3400               	retlw	0
  4974  115C  345B               	retlw	91
  4975  115D  3400               	retlw	0
  4976  115E  3453               	retlw	83
  4977  115F  3400               	retlw	0
  4978  1160  3448               	retlw	72
  4979  1161  3400               	retlw	0
  4980  1162  343C               	retlw	60
  4981  1163  3400               	retlw	0
  4982  1164  342E               	retlw	46
  4983  1165  3400               	retlw	0
  4984  1166  3420               	retlw	32
  4985  1167  3400               	retlw	0
  4986  1168  3410               	retlw	16
  4987  1169  3400               	retlw	0
  4988  116A  3400               	retlw	0
  4989  116B  3400               	retlw	0
  4990  116C  34F0               	retlw	240
  4991  116D  3400               	retlw	0
  4992  116E  34E0               	retlw	224
  4993  116F  3400               	retlw	0
  4994  1170  34D2               	retlw	210
  4995  1171  3400               	retlw	0
  4996  1172  34C4               	retlw	196
  4997  1173  3400               	retlw	0
  4998  1174  34B8               	retlw	184
  4999  1175  3400               	retlw	0
  5000  1176  34AD               	retlw	173
  5001  1177  3400               	retlw	0
  5002  1178  34A5               	retlw	165
  5003  1179  3400               	retlw	0
  5004  117A  349F               	retlw	159
  5005  117B  3400               	retlw	0
  5006  117C  349B               	retlw	155
  5007  117D  3400               	retlw	0
  5008  117E  349A               	retlw	154
  5009  117F  3400               	retlw	0
  5010  1180  349B               	retlw	155
  5011  1181  3400               	retlw	0
  5012  1182  349F               	retlw	159
  5013  1183  3400               	retlw	0
  5014  1184  34A5               	retlw	165
  5015  1185  3400               	retlw	0
  5016  1186  34AD               	retlw	173
  5017  1187  3400               	retlw	0
  5018  1188  34B8               	retlw	184
  5019  1189  3400               	retlw	0
  5020  118A  34C4               	retlw	196
  5021  118B  3400               	retlw	0
  5022  118C  34D2               	retlw	210
  5023  118D  3400               	retlw	0
  5024  118E  34E0               	retlw	224
  5025  118F  3400               	retlw	0
  5026  1190  34F0               	retlw	240
  5027  1191  3400               	retlw	0
  5028  1192  3400               	retlw	0
  5029  1193  3400               	retlw	0
  5030  1194  3410               	retlw	16
  5031  1195  3400               	retlw	0
  5032  1196  3420               	retlw	32
  5033  1197  3400               	retlw	0
  5034  1198  342E               	retlw	46
  5035  1199  3400               	retlw	0
  5036  119A  343C               	retlw	60
  5037  119B  3400               	retlw	0
  5038  119C  3448               	retlw	72
  5039  119D  3400               	retlw	0
  5040  119E  3453               	retlw	83
  5041  119F  3400               	retlw	0
  5042  11A0  345B               	retlw	91
  5043  11A1  3400               	retlw	0
  5044  11A2  3461               	retlw	97
  5045  11A3  3400               	retlw	0
  5046  11A4  3465               	retlw	101
  5047  11A5  3400               	retlw	0
  5048  11A6  3466               	retlw	102
  5049  11A7  3400               	retlw	0
  5050  11A8  3465               	retlw	101
  5051  11A9  3400               	retlw	0
  5052  11AA  3461               	retlw	97
  5053  11AB  3400               	retlw	0
  5054  11AC  345B               	retlw	91
  5055  11AD  3400               	retlw	0
  5056  11AE  3453               	retlw	83
  5057  11AF  3400               	retlw	0
  5058  11B0  3448               	retlw	72
  5059  11B1  3400               	retlw	0
  5060  11B2  343C               	retlw	60
  5061  11B3  3400               	retlw	0
  5062  11B4  342E               	retlw	46
  5063  11B5  3400               	retlw	0
  5064  11B6  3420               	retlw	32
  5065  11B7  3400               	retlw	0
  5066  11B8  3410               	retlw	16
  5067  11B9  3400               	retlw	0
  5068  11BA  3400               	retlw	0
  5069  11BB  3400               	retlw	0
  5070  11BC  34F0               	retlw	240
  5071  11BD  3400               	retlw	0
  5072  11BE  34E0               	retlw	224
  5073  11BF  3400               	retlw	0
  5074  11C0  34D2               	retlw	210
  5075  11C1  3400               	retlw	0
  5076  11C2  34C4               	retlw	196
  5077  11C3  3400               	retlw	0
  5078  11C4  34B8               	retlw	184
  5079  11C5  3400               	retlw	0
  5080  11C6  34AD               	retlw	173
  5081  11C7  3400               	retlw	0
  5082  11C8  34A5               	retlw	165
  5083  11C9  3400               	retlw	0
  5084  11CA  349F               	retlw	159
  5085  11CB  3400               	retlw	0
  5086  11CC  349B               	retlw	155
  5087  11CD  3400               	retlw	0
  5088  11CE  349A               	retlw	154
  5089  11CF  3400               	retlw	0
  5090  11D0  349B               	retlw	155
  5091  11D1  3400               	retlw	0
  5092  11D2  349F               	retlw	159
  5093  11D3  3400               	retlw	0
  5094  11D4  34A5               	retlw	165
  5095  11D5  3400               	retlw	0
  5096  11D6  34AD               	retlw	173
  5097  11D7  3400               	retlw	0
  5098  11D8  34B8               	retlw	184
  5099  11D9  3400               	retlw	0
  5100  11DA  34C4               	retlw	196
  5101  11DB  3400               	retlw	0
  5102  11DC  34D2               	retlw	210
  5103  11DD  3400               	retlw	0
  5104  11DE  34E0               	retlw	224
  5105  11DF  3400               	retlw	0
  5106  11E0  34F0               	retlw	240
  5107  11E1  3400               	retlw	0
  5108  11E2  3400               	retlw	0
  5109  11E3  3400               	retlw	0
  5110  11E4                     __end_of_drv_sine:	
  5111                           
  5112                           	psect	stringtext3
  5113  1800                     __pstringtext3:	
  5114  1800                     drv2665@drv_fifo_sine:	
  5115  1800  340B               	retlw	11
  5116  1801  3400               	retlw	0
  5117  1802  3410               	retlw	16
  5118  1803  3420               	retlw	32
  5119  1804  342E               	retlw	46
  5120  1805  343C               	retlw	60
  5121  1806  3448               	retlw	72
  5122  1807  3453               	retlw	83
  5123  1808  345B               	retlw	91
  5124  1809  3461               	retlw	97
  5125  180A  3465               	retlw	101
  5126  180B  3466               	retlw	102
  5127  180C  3465               	retlw	101
  5128  180D  3461               	retlw	97
  5129  180E  345B               	retlw	91
  5130  180F  3453               	retlw	83
  5131  1810  3448               	retlw	72
  5132  1811  343C               	retlw	60
  5133  1812  342E               	retlw	46
  5134  1813  3420               	retlw	32
  5135  1814  3410               	retlw	16
  5136  1815  3400               	retlw	0
  5137  1816  34F0               	retlw	240
  5138  1817  34E0               	retlw	224
  5139  1818  34D2               	retlw	210
  5140  1819  34C4               	retlw	196
  5141  181A  34B8               	retlw	184
  5142  181B  34AD               	retlw	173
  5143  181C  34A5               	retlw	165
  5144  181D  349F               	retlw	159
  5145  181E  349B               	retlw	155
  5146  181F  349A               	retlw	154
  5147  1820  349B               	retlw	155
  5148  1821  349F               	retlw	159
  5149  1822  34A5               	retlw	165
  5150  1823  34AD               	retlw	173
  5151  1824  34B8               	retlw	184
  5152  1825  34C4               	retlw	196
  5153  1826  34D2               	retlw	210
  5154  1827  34E0               	retlw	224
  5155  1828  34F0               	retlw	240
  5156  1829  3400               	retlw	0
  5157  182A  3410               	retlw	16
  5158  182B  3420               	retlw	32
  5159  182C  342E               	retlw	46
  5160  182D  343C               	retlw	60
  5161  182E  3448               	retlw	72
  5162  182F  3453               	retlw	83
  5163  1830  345B               	retlw	91
  5164  1831  3461               	retlw	97
  5165  1832  3465               	retlw	101
  5166  1833  3466               	retlw	102
  5167  1834  3465               	retlw	101
  5168  1835  3461               	retlw	97
  5169  1836  345B               	retlw	91
  5170  1837  3453               	retlw	83
  5171  1838  3448               	retlw	72
  5172  1839  343C               	retlw	60
  5173  183A  342E               	retlw	46
  5174  183B  3420               	retlw	32
  5175  183C  3410               	retlw	16
  5176  183D  3400               	retlw	0
  5177  183E  34F0               	retlw	240
  5178  183F  34E0               	retlw	224
  5179  1840  34D2               	retlw	210
  5180  1841  34C4               	retlw	196
  5181  1842  34B8               	retlw	184
  5182  1843  34AD               	retlw	173
  5183  1844  34A5               	retlw	165
  5184  1845  349F               	retlw	159
  5185  1846  349B               	retlw	155
  5186  1847  349A               	retlw	154
  5187  1848  349B               	retlw	155
  5188  1849  349F               	retlw	159
  5189  184A  34A5               	retlw	165
  5190  184B  34AD               	retlw	173
  5191  184C  34B8               	retlw	184
  5192  184D  34C4               	retlw	196
  5193  184E  34D2               	retlw	210
  5194  184F  34E0               	retlw	224
  5195  1850  34F0               	retlw	240
  5196  1851  3400               	retlw	0
  5197  1852  3410               	retlw	16
  5198  1853  3420               	retlw	32
  5199  1854  342E               	retlw	46
  5200  1855  343C               	retlw	60
  5201  1856  3448               	retlw	72
  5202  1857  3453               	retlw	83
  5203  1858  345B               	retlw	91
  5204  1859  3461               	retlw	97
  5205  185A  3465               	retlw	101
  5206  185B  3466               	retlw	102
  5207  185C  3465               	retlw	101
  5208  185D  3461               	retlw	97
  5209  185E  345B               	retlw	91
  5210  185F  3453               	retlw	83
  5211  1860  3448               	retlw	72
  5212  1861  343C               	retlw	60
  5213  1862  342E               	retlw	46
  5214  1863  3420               	retlw	32
  5215  1864  3410               	retlw	16
  5216  1865  3400               	retlw	0
  5217  1866  34F0               	retlw	240
  5218  1867  34E0               	retlw	224
  5219  1868  34D2               	retlw	210
  5220  1869  34C4               	retlw	196
  5221  186A  34B8               	retlw	184
  5222  186B  34AD               	retlw	173
  5223  186C  34A5               	retlw	165
  5224  186D  349F               	retlw	159
  5225  186E  349B               	retlw	155
  5226  186F  349A               	retlw	154
  5227  1870  349B               	retlw	155
  5228  1871  349F               	retlw	159
  5229  1872  34A5               	retlw	165
  5230  1873  34AD               	retlw	173
  5231  1874  34B8               	retlw	184
  5232  1875  34C4               	retlw	196
  5233  1876  34D2               	retlw	210
  5234  1877  34E0               	retlw	224
  5235  1878  34F0               	retlw	240
  5236  1879  3400               	retlw	0
  5237  187A                     __end_ofdrv2665@drv_fifo_sine:	
  5238                           
  5239                           	psect	stringtext4
  5240  187A                     __pstringtext4:	
  5241  187A                     _drv_fifo_sine:	
  5242  187A  340B               	retlw	11
  5243  187B  3400               	retlw	0
  5244  187C  3410               	retlw	16
  5245  187D  3420               	retlw	32
  5246  187E  342E               	retlw	46
  5247  187F  343C               	retlw	60
  5248  1880  3448               	retlw	72
  5249  1881  3453               	retlw	83
  5250  1882  345B               	retlw	91
  5251  1883  3461               	retlw	97
  5252  1884  3465               	retlw	101
  5253  1885  3466               	retlw	102
  5254  1886  3465               	retlw	101
  5255  1887  3461               	retlw	97
  5256  1888  345B               	retlw	91
  5257  1889  3453               	retlw	83
  5258  188A  3448               	retlw	72
  5259  188B  343C               	retlw	60
  5260  188C  342E               	retlw	46
  5261  188D  3420               	retlw	32
  5262  188E  3410               	retlw	16
  5263  188F  3400               	retlw	0
  5264  1890  34F0               	retlw	240
  5265  1891  34E0               	retlw	224
  5266  1892  34D2               	retlw	210
  5267  1893  34C4               	retlw	196
  5268  1894  34B8               	retlw	184
  5269  1895  34AD               	retlw	173
  5270  1896  34A5               	retlw	165
  5271  1897  349F               	retlw	159
  5272  1898  349B               	retlw	155
  5273  1899  349A               	retlw	154
  5274  189A  349B               	retlw	155
  5275  189B  349F               	retlw	159
  5276  189C  34A5               	retlw	165
  5277  189D  34AD               	retlw	173
  5278  189E  34B8               	retlw	184
  5279  189F  34C4               	retlw	196
  5280  18A0  34D2               	retlw	210
  5281  18A1  34E0               	retlw	224
  5282  18A2  34F0               	retlw	240
  5283  18A3  3400               	retlw	0
  5284  18A4  3410               	retlw	16
  5285  18A5  3420               	retlw	32
  5286  18A6  342E               	retlw	46
  5287  18A7  343C               	retlw	60
  5288  18A8  3448               	retlw	72
  5289  18A9  3453               	retlw	83
  5290  18AA  345B               	retlw	91
  5291  18AB  3461               	retlw	97
  5292  18AC  3465               	retlw	101
  5293  18AD  3466               	retlw	102
  5294  18AE  3465               	retlw	101
  5295  18AF  3461               	retlw	97
  5296  18B0  345B               	retlw	91
  5297  18B1  3453               	retlw	83
  5298  18B2  3448               	retlw	72
  5299  18B3  343C               	retlw	60
  5300  18B4  342E               	retlw	46
  5301  18B5  3420               	retlw	32
  5302  18B6  3410               	retlw	16
  5303  18B7  3400               	retlw	0
  5304  18B8  34F0               	retlw	240
  5305  18B9  34E0               	retlw	224
  5306  18BA  34D2               	retlw	210
  5307  18BB  34C4               	retlw	196
  5308  18BC  34B8               	retlw	184
  5309  18BD  34AD               	retlw	173
  5310  18BE  34A5               	retlw	165
  5311  18BF  349F               	retlw	159
  5312  18C0  349B               	retlw	155
  5313  18C1  349A               	retlw	154
  5314  18C2  349B               	retlw	155
  5315  18C3  349F               	retlw	159
  5316  18C4  34A5               	retlw	165
  5317  18C5  34AD               	retlw	173
  5318  18C6  34B8               	retlw	184
  5319  18C7  34C4               	retlw	196
  5320  18C8  34D2               	retlw	210
  5321  18C9  34E0               	retlw	224
  5322  18CA  34F0               	retlw	240
  5323  18CB  3400               	retlw	0
  5324  18CC  3410               	retlw	16
  5325  18CD  3420               	retlw	32
  5326  18CE  342E               	retlw	46
  5327  18CF  343C               	retlw	60
  5328  18D0  3448               	retlw	72
  5329  18D1  3453               	retlw	83
  5330  18D2  345B               	retlw	91
  5331  18D3  3461               	retlw	97
  5332  18D4  3465               	retlw	101
  5333  18D5  3466               	retlw	102
  5334  18D6  3465               	retlw	101
  5335  18D7  3461               	retlw	97
  5336  18D8  345B               	retlw	91
  5337  18D9  3453               	retlw	83
  5338  18DA  3448               	retlw	72
  5339  18DB  343C               	retlw	60
  5340  18DC  342E               	retlw	46
  5341  18DD  3420               	retlw	32
  5342  18DE  3410               	retlw	16
  5343  18DF  3400               	retlw	0
  5344  18E0  34F0               	retlw	240
  5345  18E1  34E0               	retlw	224
  5346  18E2  34D2               	retlw	210
  5347  18E3  34C4               	retlw	196
  5348  18E4  34B8               	retlw	184
  5349  18E5  34AD               	retlw	173
  5350  18E6  34A5               	retlw	165
  5351  18E7  349F               	retlw	159
  5352  18E8  349B               	retlw	155
  5353  18E9  349A               	retlw	154
  5354  18EA  349B               	retlw	155
  5355  18EB  349F               	retlw	159
  5356  18EC  34A5               	retlw	165
  5357  18ED  34AD               	retlw	173
  5358  18EE  34B8               	retlw	184
  5359  18EF  34C4               	retlw	196
  5360  18F0  34D2               	retlw	210
  5361  18F1  34E0               	retlw	224
  5362  18F2  34F0               	retlw	240
  5363  18F3  3400               	retlw	0
  5364  18F4                     __end_of_drv_fifo_sine:	
  5365                           
  5366                           	psect	stringtext5
  5367  2800                     __pstringtext5:	
  5368  2800                     _dpowers:	
  5369  2800  3401               	retlw	1
  5370  2801  3400               	retlw	0
  5371  2802  3400               	retlw	0
  5372  2803  3400               	retlw	0
  5373  2804  340A               	retlw	10
  5374  2805  3400               	retlw	0
  5375  2806  3400               	retlw	0
  5376  2807  3400               	retlw	0
  5377  2808  3464               	retlw	100
  5378  2809  3400               	retlw	0
  5379  280A  3400               	retlw	0
  5380  280B  3400               	retlw	0
  5381  280C  34E8               	retlw	232
  5382  280D  3403               	retlw	3
  5383  280E  3400               	retlw	0
  5384  280F  3400               	retlw	0
  5385  2810  3410               	retlw	16
  5386  2811  3427               	retlw	39
  5387  2812  3400               	retlw	0
  5388  2813  3400               	retlw	0
  5389  2814  34A0               	retlw	160
  5390  2815  3486               	retlw	134
  5391  2816  3401               	retlw	1
  5392  2817  3400               	retlw	0
  5393  2818  3440               	retlw	64
  5394  2819  3442               	retlw	66
  5395  281A  340F               	retlw	15
  5396  281B  3400               	retlw	0
  5397  281C  3480               	retlw	128
  5398  281D  3496               	retlw	150
  5399  281E  3498               	retlw	152
  5400  281F  3400               	retlw	0
  5401  2820  3400               	retlw	0
  5402  2821  34E1               	retlw	225
  5403  2822  34F5               	retlw	245
  5404  2823  3405               	retlw	5
  5405  2824  3400               	retlw	0
  5406  2825  34CA               	retlw	202
  5407  2826  349A               	retlw	154
  5408  2827  343B               	retlw	59
  5409  2828                     __end_of_dpowers:	
  5410                           
  5411                           	psect	stringtext6
  5412  3036                     __pstringtext6:	
  5413  3036                     _TMR2_RANGE:	
  5414  3036  3400               	retlw	0
  5415  3037  34C8               	retlw	200
  5416  3038  343F               	retlw	63
  5417  3039                     __end_of_TMR2_RANGE:	
  5418                           
  5419                           	psect	stringtext7
  5420  3039                     __pstringtext7:	
  5421  3039                     _TMR0_RANGE:	
  5422  3039  3400               	retlw	0
  5423  303A  34C8               	retlw	200
  5424  303B  343D               	retlw	61
  5425  303C                     __end_of_TMR0_RANGE:	
  5426                           
  5427                           	psect	stringtext8
  5428  3048                     __pstringtext8:	
  5429  3048                     _LEDpower:	
  5430  3048  343F               	retlw	63
  5431  3049  3400               	retlw	0
  5432  304A                     __end_of_LEDpower:	
  5433                           
  5434                           	psect	stringtext9
  5435  304C                     __pstringtext9:	
  5436  304C                     _drv_address:	
  5437  304C  3459               	retlw	89
  5438  304D                     __end_of_drv_address:	
  5439                           
  5440                           	psect	stringtext10
  5441  291F                     __pstringtext10:	
  5442  291F                     sin@coeff_a:	
  5443  291F  34F4               	retlw	244
  5444  2920  344A               	retlw	74
  5445  2921  3448               	retlw	72
  5446  2922  3495               	retlw	149
  5447  2923  3495               	retlw	149
  5448  2924  34C7               	retlw	199
  5449  2925  34C1               	retlw	193
  5450  2926  34DC               	retlw	220
  5451  2927  3445               	retlw	69
  5452  2928  34DC               	retlw	220
  5453  2929  346D               	retlw	109
  5454  292A  34C3               	retlw	195
  5455  292B  34B3               	retlw	179
  5456  292C  3433               	retlw	51
  5457  292D  3440               	retlw	64
  5458  292E                     __end_ofsin@coeff_a:	
  5459                           
  5460                           	psect	stringtext11
  5461  2967                     __pstringtext11:	
  5462  2967                     sin@coeff_b:	
  5463  2967  3434               	retlw	52
  5464  2968  3401               	retlw	1
  5465  2969  3448               	retlw	72
  5466  296A  349D               	retlw	157
  5467  296B  34B0               	retlw	176
  5468  296C  3445               	retlw	69
  5469  296D  3400               	retlw	0
  5470  296E  34DA               	retlw	218
  5471  296F  3442               	retlw	66
  5472  2970  3400               	retlw	0
  5473  2971  3480               	retlw	128
  5474  2972  343F               	retlw	63
  5475  2973                     __end_ofsin@coeff_b:	
  5476                           
  5477                           	psect	nvBANK0
  5478  005E                     __pnvBANK0:	
  5479  005E                     _eusartTxBufferRemaining:	
  5480  005E                     	ds	1
  5481                           
  5482                           	psect	nvBANK3
  5483  01E1                     __pnvBANK3:	
  5484  01E1                     _TMR2_InterruptHandler:	
  5485  01E1                     	ds	2
  5486  01E3                     _TMR0_InterruptHandler:	
  5487  01E3                     	ds	2
  5488  001F                     _T2CONbits	set	31
  5489  001F                     _T2CON	set	31
  5490  001D                     _TMR2	set	29
  5491  001E                     _PR2	set	30
  5492  0017                     _T0CON0bits	set	23
  5493  0017                     _T0CON0	set	23
  5494  0015                     _TMR0L	set	21
  5495  0016                     _TMR0H	set	22
  5496  0018                     _T0CON1	set	24
  5497  0011                     _PIR1bits	set	17
  5498  0010                     _PIR0bits	set	16
  5499  000E                     _PORTCbits	set	14
  5500  000B                     _INTCONbits	set	11
  5501  0091                     _PIE1bits	set	145
  5502  0090                     _PIE0bits	set	144
  5503  008E                     _TRISC	set	142
  5504  008D                     _TRISB	set	141
  5505  008C                     _TRISA	set	140
  5506  0097                     _WDTCON	set	151
  5507  010C                     _LATAbits	set	268
  5508  010E                     _LATCbits	set	270
  5509  010D                     _LATBbits	set	269
  5510  010E                     _LATC	set	270
  5511  010D                     _LATB	set	269
  5512  010C                     _LATA	set	268
  5513  0199                     _RC1REG	set	409
  5514  019D                     _RC1STAbits	set	413
  5515  019A                     _TX1REG	set	410
  5516  019C                     _SP1BRGH	set	412
  5517  019B                     _SP1BRGL	set	411
  5518  019E                     _TX1STA	set	414
  5519  019D                     _RC1STA	set	413
  5520  019F                     _BAUD1CON	set	415
  5521  018C                     _ANSELA	set	396
  5522  018D                     _ANSELB	set	397
  5523  018E                     _ANSELC	set	398
  5524  0214                     _SSP1STATbits	set	532
  5525  0213                     _SSP1MSK	set	531
  5526  0211                     _SSP1BUF	set	529
  5527  0216                     _SSP1CON2bits	set	534
  5528  0212                     _SSP1ADD	set	530
  5529  0216                     _SSP1CON2	set	534
  5530  0215                     _SSP1CON1	set	533
  5531  0214                     _SSP1STAT	set	532
  5532  0215                     _SSP1CON1bits	set	533
  5533  020E                     _WPUC	set	526
  5534  020C                     _WPUA	set	524
  5535  020D                     _WPUB	set	525
  5536  028E                     _ODCONC	set	654
  5537  028D                     _ODCONB	set	653
  5538  028C                     _ODCONA	set	652
  5539  0896                     _NVMCON2	set	2198
  5540  0893                     _NVMDATL	set	2195
  5541  0894                     _NVMDATH	set	2196
  5542  0895                     _NVMCON1bits	set	2197
  5543  0892                     _NVMADRH	set	2194
  5544  0891                     _NVMADRL	set	2193
  5545  0916                     _PMD5	set	2326
  5546  0915                     _PMD4	set	2325
  5547  0914                     _PMD3	set	2324
  5548  0913                     _PMD2	set	2323
  5549  0912                     _PMD1	set	2322
  5550  0911                     _PMD0	set	2321
  5551  091E                     _OSCTUNE	set	2334
  5552  091F                     _OSCFRQ	set	2335
  5553  091D                     _OSCEN	set	2333
  5554  091B                     _OSCCON3	set	2331
  5555  0919                     _OSCCON1	set	2329
  5556  0E24                     _RXPPSbits	set	3620
  5557  0E20                     _SSP1CLKPPSbits	set	3616
  5558  0E21                     _SSP1DATPPSbits	set	3617
  5559  0E9D                     _RB5PPSbits	set	3741
  5560  0E9E                     _RB6PPSbits	set	3742
  5561  0E9F                     _RB7PPSbits	set	3743
  5562                           
  5563                           	psect	stringtext12
  5564  2828                     __pstringtext12:	
  5565  2828                     STR_42:	
  5566  2828  340A               	retlw	10
  5567  2829  3474               	retlw	116	;'t'
  5568  282A  3465               	retlw	101	;'e'
  5569  282B  3473               	retlw	115	;'s'
  5570  282C  3474               	retlw	116	;'t'
  5571  282D  3469               	retlw	105	;'i'
  5572  282E  346E               	retlw	110	;'n'
  5573  282F  3467               	retlw	103	;'g'
  5574  2830  3420               	retlw	32	;' '
  5575  2831  3462               	retlw	98	;'b'
  5576  2832  346F               	retlw	111	;'o'
  5577  2833  3474               	retlw	116	;'t'
  5578  2834  3474               	retlw	116	;'t'
  5579  2835  346F               	retlw	111	;'o'
  5580  2836  346D               	retlw	109	;'m'
  5581  2837  3420               	retlw	32	;' '
  5582  2838  344C               	retlw	76	;'L'
  5583  2839  3445               	retlw	69	;'E'
  5584  283A  3444               	retlw	68	;'D'
  5585  283B  3420               	retlw	32	;' '
  5586  283C  3464               	retlw	100	;'d'
  5587  283D  3472               	retlw	114	;'r'
  5588  283E  3469               	retlw	105	;'i'
  5589  283F  3476               	retlw	118	;'v'
  5590  2840  3465               	retlw	101	;'e'
  5591  2841  3472               	retlw	114	;'r'
  5592  2842  342E               	retlw	46	;'.'
  5593  2843  342E               	retlw	46	;'.'
  5594  2844  342E               	retlw	46	;'.'
  5595  2845  340A               	retlw	10
  5596  2846  3400               	retlw	0
  5597                           
  5598                           	psect	stringtext13
  5599  2847                     __pstringtext13:	
  5600  2847                     STR_36:	
  5601  2847  340A               	retlw	10
  5602  2848  342D               	retlw	45	;'-'
  5603  2849  342D               	retlw	45	;'-'
  5604  284A  342D               	retlw	45	;'-'
  5605  284B  342D               	retlw	45	;'-'
  5606  284C  3473               	retlw	115	;'s'
  5607  284D  3474               	retlw	116	;'t'
  5608  284E  3461               	retlw	97	;'a'
  5609  284F  3472               	retlw	114	;'r'
  5610  2850  3474               	retlw	116	;'t'
  5611  2851  3469               	retlw	105	;'i'
  5612  2852  346E               	retlw	110	;'n'
  5613  2853  3467               	retlw	103	;'g'
  5614  2854  3420               	retlw	32	;' '
  5615  2855  3463               	retlw	99	;'c'
  5616  2856  346F               	retlw	111	;'o'
  5617  2857  346D               	retlw	109	;'m'
  5618  2858  346D               	retlw	109	;'m'
  5619  2859  3420               	retlw	32	;' '
  5620  285A  3474               	retlw	116	;'t'
  5621  285B  3465               	retlw	101	;'e'
  5622  285C  3473               	retlw	115	;'s'
  5623  285D  3474               	retlw	116	;'t'
  5624  285E  342D               	retlw	45	;'-'
  5625  285F  342D               	retlw	45	;'-'
  5626  2860  342D               	retlw	45	;'-'
  5627  2861  342D               	retlw	45	;'-'
  5628  2862  340A               	retlw	10
  5629  2863  340A               	retlw	10
  5630  2864  3400               	retlw	0
  5631                           
  5632                           	psect	stringtext14
  5633  2865                     __pstringtext14:	
  5634  2865                     STR_50:	
  5635  2865  342D               	retlw	45	;'-'
  5636  2866  342D               	retlw	45	;'-'
  5637  2867  342D               	retlw	45	;'-'
  5638  2868  342D               	retlw	45	;'-'
  5639  2869  3466               	retlw	102	;'f'
  5640  286A  3469               	retlw	105	;'i'
  5641  286B  346E               	retlw	110	;'n'
  5642  286C  3469               	retlw	105	;'i'
  5643  286D  3473               	retlw	115	;'s'
  5644  286E  3468               	retlw	104	;'h'
  5645  286F  3465               	retlw	101	;'e'
  5646  2870  3464               	retlw	100	;'d'
  5647  2871  3420               	retlw	32	;' '
  5648  2872  3463               	retlw	99	;'c'
  5649  2873  346F               	retlw	111	;'o'
  5650  2874  346D               	retlw	109	;'m'
  5651  2875  346D               	retlw	109	;'m'
  5652  2876  3420               	retlw	32	;' '
  5653  2877  3474               	retlw	116	;'t'
  5654  2878  3465               	retlw	101	;'e'
  5655  2879  3473               	retlw	115	;'s'
  5656  287A  3474               	retlw	116	;'t'
  5657  287B  342D               	retlw	45	;'-'
  5658  287C  342D               	retlw	45	;'-'
  5659  287D  342D               	retlw	45	;'-'
  5660  287E  342D               	retlw	45	;'-'
  5661  287F  340A               	retlw	10
  5662  2880  3400               	retlw	0
  5663                           
  5664                           	psect	stringtext15
  5665  2881                     __pstringtext15:	
  5666  2881                     STR_37:	
  5667  2881  3474               	retlw	116	;'t'
  5668  2882  3465               	retlw	101	;'e'
  5669  2883  3473               	retlw	115	;'s'
  5670  2884  3474               	retlw	116	;'t'
  5671  2885  3469               	retlw	105	;'i'
  5672  2886  346E               	retlw	110	;'n'
  5673  2887  3467               	retlw	103	;'g'
  5674  2888  3420               	retlw	32	;' '
  5675  2889  3474               	retlw	116	;'t'
  5676  288A  346F               	retlw	111	;'o'
  5677  288B  3470               	retlw	112	;'p'
  5678  288C  3420               	retlw	32	;' '
  5679  288D  344C               	retlw	76	;'L'
  5680  288E  3445               	retlw	69	;'E'
  5681  288F  3444               	retlw	68	;'D'
  5682  2890  3420               	retlw	32	;' '
  5683  2891  3464               	retlw	100	;'d'
  5684  2892  3472               	retlw	114	;'r'
  5685  2893  3469               	retlw	105	;'i'
  5686  2894  3476               	retlw	118	;'v'
  5687  2895  3465               	retlw	101	;'e'
  5688  2896  3472               	retlw	114	;'r'
  5689  2897  342E               	retlw	46	;'.'
  5690  2898  342E               	retlw	46	;'.'
  5691  2899  342E               	retlw	46	;'.'
  5692  289A  3400               	retlw	0
  5693                           
  5694                           	psect	stringtext16
  5695  289B                     __pstringtext16:	
  5696  289B                     STR_47:	
  5697  289B  340A               	retlw	10
  5698  289C  3474               	retlw	116	;'t'
  5699  289D  3465               	retlw	101	;'e'
  5700  289E  3473               	retlw	115	;'s'
  5701  289F  3474               	retlw	116	;'t'
  5702  28A0  3469               	retlw	105	;'i'
  5703  28A1  346E               	retlw	110	;'n'
  5704  28A2  3467               	retlw	103	;'g'
  5705  28A3  3420               	retlw	32	;' '
  5706  28A4  3470               	retlw	112	;'p'
  5707  28A5  3469               	retlw	105	;'i'
  5708  28A6  3465               	retlw	101	;'e'
  5709  28A7  347A               	retlw	122	;'z'
  5710  28A8  346F               	retlw	111	;'o'
  5711  28A9  3420               	retlw	32	;' '
  5712  28AA  3464               	retlw	100	;'d'
  5713  28AB  3472               	retlw	114	;'r'
  5714  28AC  3469               	retlw	105	;'i'
  5715  28AD  3476               	retlw	118	;'v'
  5716  28AE  3465               	retlw	101	;'e'
  5717  28AF  3472               	retlw	114	;'r'
  5718  28B0  342E               	retlw	46	;'.'
  5719  28B1  342E               	retlw	46	;'.'
  5720  28B2  342E               	retlw	46	;'.'
  5721  28B3  3400               	retlw	0
  5722                           
  5723                           	psect	stringtext17
  5724  28B4                     __pstringtext17:	
  5725  28B4                     STR_85:	
  5726  28B4  3455               	retlw	85	;'U'
  5727  28B5  344E               	retlw	78	;'N'
  5728  28B6  3452               	retlw	82	;'R'
  5729  28B7  3445               	retlw	69	;'E'
  5730  28B8  3443               	retlw	67	;'C'
  5731  28B9  344F               	retlw	79	;'O'
  5732  28BA  3447               	retlw	71	;'G'
  5733  28BB  344E               	retlw	78	;'N'
  5734  28BC  3449               	retlw	73	;'I'
  5735  28BD  345A               	retlw	90	;'Z'
  5736  28BE  3445               	retlw	69	;'E'
  5737  28BF  3444               	retlw	68	;'D'
  5738  28C0  3420               	retlw	32	;' '
  5739  28C1  3443               	retlw	67	;'C'
  5740  28C2  344F               	retlw	79	;'O'
  5741  28C3  344D               	retlw	77	;'M'
  5742  28C4  344D               	retlw	77	;'M'
  5743  28C5  3441               	retlw	65	;'A'
  5744  28C6  344E               	retlw	78	;'N'
  5745  28C7  3444               	retlw	68	;'D'
  5746  28C8  3421               	retlw	33	;'!'
  5747  28C9  340A               	retlw	10
  5748  28CA  3400               	retlw	0
  5749                           
  5750                           	psect	stringtext18
  5751  28CB                     __pstringtext18:	
  5752  28CB                     STR_52:	
  5753  28CB  3464               	retlw	100	;'d'
  5754  28CC  3472               	retlw	114	;'r'
  5755  28CD  3476               	retlw	118	;'v'
  5756  28CE  345F               	retlw	95	;'_'
  5757  28CF  3477               	retlw	119	;'w'
  5758  28D0  3472               	retlw	114	;'r'
  5759  28D1  3469               	retlw	105	;'i'
  5760  28D2  3474               	retlw	116	;'t'
  5761  28D3  3465               	retlw	101	;'e'
  5762  28D4  3420               	retlw	32	;' '
  5763  28D5  3465               	retlw	101	;'e'
  5764  28D6  3472               	retlw	114	;'r'
  5765  28D7  3472               	retlw	114	;'r'
  5766  28D8  346F               	retlw	111	;'o'
  5767  28D9  3472               	retlw	114	;'r'
  5768  28DA  3421               	retlw	33	;'!'
  5769  28DB  340A               	retlw	10
  5770  28DC  3400               	retlw	0
  5771                           
  5772                           	psect	stringtext19
  5773  28DD                     __pstringtext19:	
  5774  28DD                     STR_54:	
  5775  28DD  3464               	retlw	100	;'d'
  5776  28DE  3472               	retlw	114	;'r'
  5777  28DF  3476               	retlw	118	;'v'
  5778  28E0  345F               	retlw	95	;'_'
  5779  28E1  3472               	retlw	114	;'r'
  5780  28E2  3465               	retlw	101	;'e'
  5781  28E3  3461               	retlw	97	;'a'
  5782  28E4  3464               	retlw	100	;'d'
  5783  28E5  3420               	retlw	32	;' '
  5784  28E6  3465               	retlw	101	;'e'
  5785  28E7  3472               	retlw	114	;'r'
  5786  28E8  3472               	retlw	114	;'r'
  5787  28E9  346F               	retlw	111	;'o'
  5788  28EA  3472               	retlw	114	;'r'
  5789  28EB  3421               	retlw	33	;'!'
  5790  28EC  340A               	retlw	10
  5791  28ED  3400               	retlw	0
  5792                           
  5793                           	psect	stringtext20
  5794  28EE                     __pstringtext20:	
  5795  28EE                     STR_51:	
  5796  28EE  3464               	retlw	100	;'d'
  5797  28EF  3472               	retlw	114	;'r'
  5798  28F0  3476               	retlw	118	;'v'
  5799  28F1  3420               	retlw	32	;' '
  5800  28F2  3469               	retlw	105	;'i'
  5801  28F3  346E               	retlw	110	;'n'
  5802  28F4  3469               	retlw	105	;'i'
  5803  28F5  3474               	retlw	116	;'t'
  5804  28F6  3469               	retlw	105	;'i'
  5805  28F7  3461               	retlw	97	;'a'
  5806  28F8  346C               	retlw	108	;'l'
  5807  28F9  3469               	retlw	105	;'i'
  5808  28FA  347A               	retlw	122	;'z'
  5809  28FB  3465               	retlw	101	;'e'
  5810  28FC  3464               	retlw	100	;'d'
  5811  28FD  340A               	retlw	10
  5812  28FE  3400               	retlw	0
  5813                           
  5814                           	psect	stringtext21
  5815  28FF                     __pstringtext21:	
  5816  28FF                     STR_10:	
  5817  28FF  3461               	retlw	97	;'a'
  5818  2900  3462               	retlw	98	;'b'
  5819  2901  3473               	retlw	115	;'s'
  5820  2902  343A               	retlw	58	;':'
  5821  2903  3420               	retlw	32	;' '
  5822  2904  3461               	retlw	97	;'a'
  5823  2905  346C               	retlw	108	;'l'
  5824  2906  346C               	retlw	108	;'l'
  5825  2907  3420               	retlw	32	;' '
  5826  2908  3474               	retlw	116	;'t'
  5827  2909  3468               	retlw	104	;'h'
  5828  290A  3465               	retlw	101	;'e'
  5829  290B  3472               	retlw	114	;'r'
  5830  290C  3465               	retlw	101	;'e'
  5831  290D  340A               	retlw	10
  5832  290E  3400               	retlw	0
  5833                           
  5834                           	psect	stringtext22
  5835  290F                     __pstringtext22:	
  5836  290F                     STR_4:	
  5837  290F  3472               	retlw	114	;'r'
  5838  2910  3465               	retlw	101	;'e'
  5839  2911  3461               	retlw	97	;'a'
  5840  2912  3464               	retlw	100	;'d'
  5841  2913  3420               	retlw	32	;' '
  5842  2914  3464               	retlw	100	;'d'
  5843  2915  3461               	retlw	97	;'a'
  5844  2916  3474               	retlw	116	;'t'
  5845  2917  3461               	retlw	97	;'a'
  5846  2918  343A               	retlw	58	;':'
  5847  2919  3420               	retlw	32	;' '
  5848  291A  3425               	retlw	37	;'%'
  5849  291B  346C               	retlw	108	;'l'
  5850  291C  3475               	retlw	117	;'u'
  5851  291D  340A               	retlw	10
  5852  291E  3400               	retlw	0
  5853                           
  5854                           	psect	stringtext23
  5855  292E                     __pstringtext23:	
  5856  292E                     STR_70:	
  5857  292E  3468               	retlw	104	;'h'
  5858  292F  3465               	retlw	101	;'e'
  5859  2930  3461               	retlw	97	;'a'
  5860  2931  3474               	retlw	116	;'t'
  5861  2932  3465               	retlw	101	;'e'
  5862  2933  3472               	retlw	114	;'r'
  5863  2934  3470               	retlw	112	;'p'
  5864  2935  346F               	retlw	111	;'o'
  5865  2936  3473               	retlw	115	;'s'
  5866  2937  3474               	retlw	116	;'t'
  5867  2938  3474               	retlw	116	;'t'
  5868  2939  3469               	retlw	105	;'i'
  5869  293A  346D               	retlw	109	;'m'
  5870  293B  3465               	retlw	101	;'e'
  5871  293C  3400               	retlw	0
  5872                           
  5873                           	psect	stringtext24
  5874  293D                     __pstringtext24:	
  5875  293D                     STR_5:	
  5876  293D  340A               	retlw	10
  5877  293E  340A               	retlw	10
  5878  293F  3473               	retlw	115	;'s'
  5879  2940  3479               	retlw	121	;'y'
  5880  2941  3473               	retlw	115	;'s'
  5881  2942  3474               	retlw	116	;'t'
  5882  2943  3465               	retlw	101	;'e'
  5883  2944  346D               	retlw	109	;'m'
  5884  2945  3420               	retlw	32	;' '
  5885  2946  3464               	retlw	100	;'d'
  5886  2947  346F               	retlw	111	;'o'
  5887  2948  346E               	retlw	110	;'n'
  5888  2949  3465               	retlw	101	;'e'
  5889  294A  340A               	retlw	10
  5890  294B  3400               	retlw	0
  5891                           
  5892                           	psect	stringtext25
  5893  294C                     __pstringtext25:	
  5894  294C                     STR_69:	
  5895  294C  3468               	retlw	104	;'h'
  5896  294D  3465               	retlw	101	;'e'
  5897  294E  3461               	retlw	97	;'a'
  5898  294F  3474               	retlw	116	;'t'
  5899  2950  3465               	retlw	101	;'e'
  5900  2951  3472               	retlw	114	;'r'
  5901  2952  3470               	retlw	112	;'p'
  5902  2953  3472               	retlw	114	;'r'
  5903  2954  3465               	retlw	101	;'e'
  5904  2955  3474               	retlw	116	;'t'
  5905  2956  3469               	retlw	105	;'i'
  5906  2957  346D               	retlw	109	;'m'
  5907  2958  3465               	retlw	101	;'e'
  5908  2959  3400               	retlw	0
  5909                           
  5910                           	psect	stringtext26
  5911  295A                     __pstringtext26:	
  5912  295A                     STR_75:	
  5913  295A  3474               	retlw	116	;'t'
  5914  295B  346F               	retlw	111	;'o'
  5915  295C  3467               	retlw	103	;'g'
  5916  295D  3467               	retlw	103	;'g'
  5917  295E  346C               	retlw	108	;'l'
  5918  295F  3465               	retlw	101	;'e'
  5919  2960  3468               	retlw	104	;'h'
  5920  2961  3465               	retlw	101	;'e'
  5921  2962  3461               	retlw	97	;'a'
  5922  2963  3474               	retlw	116	;'t'
  5923  2964  3465               	retlw	101	;'e'
  5924  2965  3472               	retlw	114	;'r'
  5925  2966  3400               	retlw	0
  5926                           
  5927                           	psect	stringtext27
  5928  2973                     __pstringtext27:	
  5929  2973                     STR_68:	
  5930  2973  3470               	retlw	112	;'p'
  5931  2974  3469               	retlw	105	;'i'
  5932  2975  3465               	retlw	101	;'e'
  5933  2976  347A               	retlw	122	;'z'
  5934  2977  346F               	retlw	111	;'o'
  5935  2978  346F               	retlw	111	;'o'
  5936  2979  346E               	retlw	110	;'n'
  5937  297A  3474               	retlw	116	;'t'
  5938  297B  3469               	retlw	105	;'i'
  5939  297C  346D               	retlw	109	;'m'
  5940  297D  3465               	retlw	101	;'e'
  5941  297E  3400               	retlw	0
  5942                           
  5943                           	psect	stringtext28
  5944  297F                     __pstringtext28:	
  5945  297F                     STR_71:	
  5946  297F  3468               	retlw	104	;'h'
  5947  2980  3465               	retlw	101	;'e'
  5948  2981  3461               	retlw	97	;'a'
  5949  2982  3474               	retlw	116	;'t'
  5950  2983  3465               	retlw	101	;'e'
  5951  2984  3472               	retlw	114	;'r'
  5952  2985  3431               	retlw	49	;'1'
  5953  2986  346F               	retlw	111	;'o'
  5954  2987  3466               	retlw	102	;'f'
  5955  2988  3466               	retlw	102	;'f'
  5956  2989  3400               	retlw	0
  5957                           
  5958                           	psect	stringtext29
  5959  298A                     __pstringtext29:	
  5960  298A                     STR_76:	
  5961  298A  3474               	retlw	116	;'t'
  5962  298B  3469               	retlw	105	;'i'
  5963  298C  346D               	retlw	109	;'m'
  5964  298D  3465               	retlw	101	;'e'
  5965  298E  3468               	retlw	104	;'h'
  5966  298F  3465               	retlw	101	;'e'
  5967  2990  3461               	retlw	97	;'a'
  5968  2991  3474               	retlw	116	;'t'
  5969  2992  3465               	retlw	101	;'e'
  5970  2993  3472               	retlw	114	;'r'
  5971  2994  3400               	retlw	0
  5972                           
  5973                           	psect	stringtext30
  5974  2995                     __pstringtext30:	
  5975  2995                     STR_41:	
  5976  2995  340A               	retlw	10
  5977  2996  340A               	retlw	10
  5978  2997  3473               	retlw	115	;'s'
  5979  2998  3468               	retlw	104	;'h'
  5980  2999  346F               	retlw	111	;'o'
  5981  299A  3472               	retlw	114	;'r'
  5982  299B  3474               	retlw	116	;'t'
  5983  299C  3473               	retlw	115	;'s'
  5984  299D  343A               	retlw	58	;':'
  5985  299E  3420               	retlw	32	;' '
  5986  299F  3400               	retlw	0
  5987                           
  5988                           	psect	stringtext31
  5989  29A0                     __pstringtext31:	
  5990  29A0                     STR_72:	
  5991  29A0  3468               	retlw	104	;'h'
  5992  29A1  3465               	retlw	101	;'e'
  5993  29A2  3461               	retlw	97	;'a'
  5994  29A3  3474               	retlw	116	;'t'
  5995  29A4  3465               	retlw	101	;'e'
  5996  29A5  3472               	retlw	114	;'r'
  5997  29A6  3432               	retlw	50	;'2'
  5998  29A7  346F               	retlw	111	;'o'
  5999  29A8  346E               	retlw	110	;'n'
  6000  29A9  3400               	retlw	0
  6001                           
  6002                           	psect	stringtext32
  6003  29AA                     __pstringtext32:	
  6004  29AA                     STR_83:	
  6005  29AA  3473               	retlw	115	;'s'
  6006  29AB  346F               	retlw	111	;'o'
  6007  29AC  3466               	retlw	102	;'f'
  6008  29AD  3474               	retlw	116	;'t'
  6009  29AE  3472               	retlw	114	;'r'
  6010  29AF  3465               	retlw	101	;'e'
  6011  29B0  3473               	retlw	115	;'s'
  6012  29B1  3465               	retlw	101	;'e'
  6013  29B2  3474               	retlw	116	;'t'
  6014  29B3  3400               	retlw	0
  6015                           
  6016                           	psect	stringtext33
  6017  29B4                     __pstringtext33:	
  6018  29B4                     STR_49:	
  6019  29B4  3446               	retlw	70	;'F'
  6020  29B5  3441               	retlw	65	;'A'
  6021  29B6  3449               	retlw	73	;'I'
  6022  29B7  344C               	retlw	76	;'L'
  6023  29B8  3445               	retlw	69	;'E'
  6024  29B9  3444               	retlw	68	;'D'
  6025  29BA  340A               	retlw	10
  6026  29BB  340A               	retlw	10
  6027  29BC  3400               	retlw	0
  6028                           
  6029                           	psect	stringtext34
  6030  29BD                     __pstringtext34:	
  6031  29BD                     STR_48:	
  6032  29BD  3470               	retlw	112	;'p'
  6033  29BE  3461               	retlw	97	;'a'
  6034  29BF  3473               	retlw	115	;'s'
  6035  29C0  3473               	retlw	115	;'s'
  6036  29C1  3465               	retlw	101	;'e'
  6037  29C2  3464               	retlw	100	;'d'
  6038  29C3  340A               	retlw	10
  6039  29C4  340A               	retlw	10
  6040  29C5  3400               	retlw	0
  6041                           
  6042                           	psect	stringtext35
  6043  29C6                     __pstringtext35:	
  6044  29C6                     STR_66:	
  6045  29C6  3464               	retlw	100	;'d'
  6046  29C7  3472               	retlw	114	;'r'
  6047  29C8  3476               	retlw	118	;'v'
  6048  29C9  3450               	retlw	80	;'P'
  6049  29CA  3465               	retlw	101	;'e'
  6050  29CB  3461               	retlw	97	;'a'
  6051  29CC  346B               	retlw	107	;'k'
  6052  29CD  3400               	retlw	0
  6053                           
  6054                           	psect	stringtext36
  6055  29CE                     __pstringtext36:	
  6056  29CE                     STR_67:	
  6057  29CE  3464               	retlw	100	;'d'
  6058  29CF  3472               	retlw	114	;'r'
  6059  29D0  3476               	retlw	118	;'v'
  6060  29D1  3447               	retlw	71	;'G'
  6061  29D2  3461               	retlw	97	;'a'
  6062  29D3  3469               	retlw	105	;'i'
  6063  29D4  346E               	retlw	110	;'n'
  6064  29D5  3400               	retlw	0
  6065                           
  6066                           	psect	stringtext37
  6067  29D6                     __pstringtext37:	
  6068  29D6                     STR_73:	
  6069  29D6  346C               	retlw	108	;'l'
  6070  29D7  3465               	retlw	101	;'e'
  6071  29D8  3464               	retlw	100	;'d'
  6072  29D9  3467               	retlw	103	;'g'
  6073  29DA  3461               	retlw	97	;'a'
  6074  29DB  3469               	retlw	105	;'i'
  6075  29DC  346E               	retlw	110	;'n'
  6076  29DD  3400               	retlw	0
  6077                           
  6078                           	psect	stringtext38
  6079  29DE                     __pstringtext38:	
  6080  29DE                     STR_79:	
  6081  29DE  346D               	retlw	109	;'m'
  6082  29DF  3473               	retlw	115	;'s'
  6083  29E0  3474               	retlw	116	;'t'
  6084  29E1  3461               	retlw	97	;'a'
  6085  29E2  3474               	retlw	116	;'t'
  6086  29E3  3475               	retlw	117	;'u'
  6087  29E4  3473               	retlw	115	;'s'
  6088  29E5  3400               	retlw	0
  6089                           
  6090                           	psect	stringtext39
  6091  29E6                     __pstringtext39:	
  6092  29E6                     STR_39:	
  6093  29E6  3446               	retlw	70	;'F'
  6094  29E7  3441               	retlw	65	;'A'
  6095  29E8  3449               	retlw	73	;'I'
  6096  29E9  344C               	retlw	76	;'L'
  6097  29EA  3445               	retlw	69	;'E'
  6098  29EB  3444               	retlw	68	;'D'
  6099  29EC  340A               	retlw	10
  6100  29ED  3400               	retlw	0
  6101                           
  6102                           	psect	stringtext40
  6103  29EE                     __pstringtext40:	
  6104  29EE                     STR_38:	
  6105  29EE  3470               	retlw	112	;'p'
  6106  29EF  3461               	retlw	97	;'a'
  6107  29F0  3473               	retlw	115	;'s'
  6108  29F1  3473               	retlw	115	;'s'
  6109  29F2  3465               	retlw	101	;'e'
  6110  29F3  3464               	retlw	100	;'d'
  6111  29F4  340A               	retlw	10
  6112  29F5  3400               	retlw	0
  6113                           
  6114                           	psect	stringtext41
  6115  29F6                     __pstringtext41:	
  6116  29F6                     STR_40:	
  6117  29F6  346F               	retlw	111	;'o'
  6118  29F7  3470               	retlw	112	;'p'
  6119  29F8  3465               	retlw	101	;'e'
  6120  29F9  346E               	retlw	110	;'n'
  6121  29FA  3473               	retlw	115	;'s'
  6122  29FB  343A               	retlw	58	;':'
  6123  29FC  3420               	retlw	32	;' '
  6124  29FD  3400               	retlw	0
  6125                           
  6126                           	psect	stringtext42
  6127  29FE                     __pstringtext42:	
  6128  29FE                     STR_80:	
  6129  29FE  3464               	retlw	100	;'d'
  6130  29FF  346F               	retlw	111	;'o'
  6131  2A00  346D               	retlw	109	;'m'
  6132  2A01  346F               	retlw	111	;'o'
  6133  2A02  3476               	retlw	118	;'v'
  6134  2A03  3465               	retlw	101	;'e'
  6135  2A04  3400               	retlw	0
  6136                           
  6137                           	psect	stringtext43
  6138  2A05                     __pstringtext43:	
  6139  2A05                     STR_74:	
  6140  2A05  346C               	retlw	108	;'l'
  6141  2A06  3465               	retlw	101	;'e'
  6142  2A07  3464               	retlw	100	;'d'
  6143  2A08  3470               	retlw	112	;'p'
  6144  2A09  3477               	retlw	119	;'w'
  6145  2A0A  3472               	retlw	114	;'r'
  6146  2A0B  3400               	retlw	0
  6147                           
  6148                           	psect	stringtext44
  6149  3000                     __pstringtext44:	
  6150  3000                     STR_77:	
  6151  3000  3467               	retlw	103	;'g'
  6152  3001  3465               	retlw	101	;'e'
  6153  3002  3474               	retlw	116	;'t'
  6154  3003  3441               	retlw	65	;'A'
  6155  3004  3400               	retlw	0
  6156                           
  6157                           	psect	stringtext45
  6158  3005                     __pstringtext45:	
  6159  3005                     STR_63:	
  6160  3005  3473               	retlw	115	;'s'
  6161  3006  3465               	retlw	101	;'e'
  6162  3007  3474               	retlw	116	;'t'
  6163  3008  3441               	retlw	65	;'A'
  6164  3009  3400               	retlw	0
  6165                           
  6166                           	psect	stringtext46
  6167  300A                     __pstringtext46:	
  6168  300A                     STR_78:	
  6169  300A  3467               	retlw	103	;'g'
  6170  300B  3465               	retlw	101	;'e'
  6171  300C  3474               	retlw	116	;'t'
  6172  300D  344D               	retlw	77	;'M'
  6173  300E  3400               	retlw	0
  6174                           
  6175                           	psect	stringtext47
  6176  300F                     __pstringtext47:	
  6177  300F                     STR_64:	
  6178  300F  3473               	retlw	115	;'s'
  6179  3010  3465               	retlw	101	;'e'
  6180  3011  3474               	retlw	116	;'t'
  6181  3012  344D               	retlw	77	;'M'
  6182  3013  3400               	retlw	0
  6183                           
  6184                           	psect	stringtext48
  6185  3014                     __pstringtext48:	
  6186  3014                     STR_82:	
  6187  3014  3470               	retlw	112	;'p'
  6188  3015  3469               	retlw	105	;'i'
  6189  3016  346E               	retlw	110	;'n'
  6190  3017  3467               	retlw	103	;'g'
  6191  3018  3400               	retlw	0
  6192                           
  6193                           	psect	stringtext49
  6194  3019                     __pstringtext49:	
  6195  3019                     STR_81:	
  6196  3019  3463               	retlw	99	;'c'
  6197  301A  346F               	retlw	111	;'o'
  6198  301B  346D               	retlw	109	;'m'
  6199  301C  346D               	retlw	109	;'m'
  6200  301D  3400               	retlw	0
  6201                           
  6202                           	psect	stringtext50
  6203  301E                     __pstringtext50:	
  6204  301E                     STR_59:	
  6205  301E  3472               	retlw	114	;'r'
  6206  301F  3465               	retlw	101	;'e'
  6207  3020  346C               	retlw	108	;'l'
  6208  3021  3400               	retlw	0
  6209                           
  6210                           	psect	stringtext51
  6211  3022                     __pstringtext51:	
  6212  3022                     STR_60:	
  6213  3022  3461               	retlw	97	;'a'
  6214  3023  3462               	retlw	98	;'b'
  6215  3024  3473               	retlw	115	;'s'
  6216  3025  3400               	retlw	0
  6217                           
  6218                           	psect	stringtext52
  6219  3026                     __pstringtext52:	
  6220  3026                     STR_61:	
  6221  3026  3470               	retlw	112	;'p'
  6222  3027  346F               	retlw	111	;'o'
  6223  3028  3473               	retlw	115	;'s'
  6224  3029  3400               	retlw	0
  6225                           
  6226                           	psect	stringtext53
  6227  302A                     __pstringtext53:	
  6228  302A                     STR_55:	
  6229  302A  3425               	retlw	37	;'%'
  6230  302B  3469               	retlw	105	;'i'
  6231  302C  340A               	retlw	10
  6232  302D  3400               	retlw	0
  6233                           
  6234                           	psect	stringtext54
  6235  302E                     __pstringtext54:	
  6236  302E                     STR_12:	
  6237  302E  3425               	retlw	37	;'%'
  6238  302F  3464               	retlw	100	;'d'
  6239  3030  340A               	retlw	10
  6240  3031  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext55
  6243  3032                     __pstringtext55:	
  6244  3032                     STR_1:	
  6245  3032  3425               	retlw	37	;'%'
  6246  3033  3464               	retlw	100	;'d'
  6247  3034  3420               	retlw	32	;' '
  6248  3035  3400               	retlw	0
  6249                           
  6250                           	psect	stringtext56
  6251  303C                     __pstringtext56:	
  6252  303C                     STR_7:	
  6253  303C  3441               	retlw	65	;'A'
  6254  303D  340A               	retlw	10
  6255  303E  3400               	retlw	0
  6256                           
  6257                           	psect	stringtext57
  6258  303F                     __pstringtext57:	
  6259  303F                     STR_14:	
  6260  303F  3445               	retlw	69	;'E'
  6261  3040  340A               	retlw	10
  6262  3041  3400               	retlw	0
  6263                           
  6264                           	psect	stringtext58
  6265  3042                     __pstringtext58:	
  6266  3042                     STR_35:	
  6267  3042  344E               	retlw	78	;'N'
  6268  3043  340A               	retlw	10
  6269  3044  3400               	retlw	0
  6270                           
  6271                           	psect	stringtext59
  6272  3045                     __pstringtext59:	
  6273  3045                     STR_33:	
  6274  3045  3452               	retlw	82	;'R'
  6275  3046  340A               	retlw	10
  6276  3047  3400               	retlw	0
  6277                           
  6278                           	psect	stringtext60
  6279  304A                     __pstringtext60:	
  6280  304A                     STR_65:	
  6281  304A  347A               	retlw	122	;'z'
  6282  304B  3400               	retlw	0
  6283                           
  6284                           	psect	stringtext61
  6285  0000                     __pstringtext61:	
  6286  2863                     
  6287                           ; #config settings
  6288  0000                     
  6289                           	psect	cinit
  6290  0052                     start_initialization:	
  6291  0052                     __initialization:		;BIGRAM
  6292                           
  6293                           ; Initialize objects allocated to BANK0
  6294  0052  30A6               	movlw	low __pidataBANK0
  6295  0053  0084               	movwf	4
  6296  0054  30AF               	movlw	(high __pidataBANK0)| (0+128)
  6297  0055  0085               	movwf	5
  6298  0056  305A               	movlw	low __pdataBANK0
  6299  0057  0086               	movwf	6
  6300  0058  3000               	movlw	high __pdataBANK0
  6301  0059  0087               	movwf	7
  6302  005A  3000               	movlw	0
  6303  005B  00FF               	movwf	btemp+1
  6304  005C  3004               	movlw	4
  6305  005D  3187  27F4  3180   	fcall	init_ram
  6306                           
  6307                           ; Initialize objects allocated to BANK1
  6308  0060  30EC               	movlw	low __pidataBANK1
  6309  0061  0084               	movwf	4
  6310  0062  30AF               	movlw	(high __pidataBANK1)| (0+128)
  6311  0063  0085               	movwf	5
  6312  0064  30EA               	movlw	low __pdataBANK1
  6313  0065  0086               	movwf	6
  6314  0066  3000               	movlw	high __pdataBANK1
  6315  0067  0087               	movwf	7
  6316  0068  3000               	movlw	0
  6317  0069  00FF               	movwf	btemp+1
  6318  006A  3006               	movlw	6
  6319  006B  3187  27F4  3180   	fcall	init_ram
  6320                           
  6321                           ; Initialize objects allocated to BANK2
  6322  006E  30E6               	movlw	low __pidataBANK2
  6323  006F  0084               	movwf	4
  6324  0070  30AF               	movlw	(high __pidataBANK2)| (0+128)
  6325  0071  0085               	movwf	5
  6326  0072  3068               	movlw	low __pdataBANK2
  6327  0073  0086               	movwf	6
  6328  0074  3001               	movlw	high __pdataBANK2
  6329  0075  0087               	movwf	7
  6330  0076  3000               	movlw	0
  6331  0077  00FF               	movwf	btemp+1
  6332  0078  3006               	movlw	6
  6333  0079  3187  27F4  3180   	fcall	init_ram
  6334                           
  6335                           ; Initialize objects allocated to BANK4
  6336  007C  30A2               	movlw	low __pidataBANK4
  6337  007D  0084               	movwf	4
  6338  007E  30A3               	movlw	(high __pidataBANK4)| (0+128)
  6339  007F  0085               	movwf	5
  6340  0080  3048               	movlw	low __pdataBANK4
  6341  0081  0086               	movwf	6
  6342  0082  3002               	movlw	high __pdataBANK4
  6343  0083  0087               	movwf	7
  6344  0084  3000               	movlw	0
  6345  0085  00FF               	movwf	btemp+1
  6346  0086  3020               	movlw	32
  6347  0087  3187  27F4  3180   	fcall	init_ram
  6348                           
  6349                           ; Clear objects allocated to BIGRAM
  6350  008A  3090               	movlw	low (0+10128)
  6351  008B  0084               	movwf	4
  6352  008C  3027               	movlw	high (0+10128)
  6353  008D  0085               	movwf	5
  6354  008E  3060               	movlw	96
  6355  008F  00FE               	movwf	btemp
  6356  0090  3000               	movlw	0
  6357  0091  00FF               	movwf	btemp+1
  6358  0092  31A1  2138  3180   	fcall	clear_ram0
  6359                           
  6360                           ; Clear objects allocated to COMMON
  6361  0095  01FD               	clrf	__pbssCOMMON& (0+127)
  6362                           
  6363                           ; Clear objects allocated to BANK0
  6364  0096  304E               	movlw	low __pbssBANK0
  6365  0097  0084               	movwf	4
  6366  0098  3000               	movlw	high __pbssBANK0
  6367  0099  0085               	movwf	5
  6368  009A  300C               	movlw	12
  6369  009B  00FE               	movwf	btemp
  6370  009C  3000               	movlw	0
  6371  009D  00FF               	movwf	btemp+1
  6372  009E  31A1  2138  3180   	fcall	clear_ram0
  6373                           
  6374                           ; Clear objects allocated to BANK1
  6375  00A1  30DE               	movlw	low __pbssBANK1
  6376  00A2  0084               	movwf	4
  6377  00A3  3000               	movlw	high __pbssBANK1
  6378  00A4  0085               	movwf	5
  6379  00A5  300C               	movlw	12
  6380  00A6  00FE               	movwf	btemp
  6381  00A7  3000               	movlw	0
  6382  00A8  00FF               	movwf	btemp+1
  6383  00A9  31A1  2138  3180   	fcall	clear_ram0
  6384                           
  6385                           ; Clear objects allocated to BANK2
  6386  00AC  3020               	movlw	low __pbssBANK2
  6387  00AD  0084               	movwf	4
  6388  00AE  3001               	movlw	high __pbssBANK2
  6389  00AF  0085               	movwf	5
  6390  00B0  3048               	movlw	72
  6391  00B1  00FE               	movwf	btemp
  6392  00B2  3000               	movlw	0
  6393  00B3  00FF               	movwf	btemp+1
  6394  00B4  31A1  2138  3180   	fcall	clear_ram0
  6395                           
  6396                           ; Clear objects allocated to BANK3
  6397  00B7  30A0               	movlw	low __pbssBANK3
  6398  00B8  0084               	movwf	4
  6399  00B9  3001               	movlw	high __pbssBANK3
  6400  00BA  0085               	movwf	5
  6401  00BB  3041               	movlw	65
  6402  00BC  00FE               	movwf	btemp
  6403  00BD  3000               	movlw	0
  6404  00BE  00FF               	movwf	btemp+1
  6405  00BF  31A1  2138  3180   	fcall	clear_ram0
  6406                           
  6407                           ; Clear objects allocated to BANK4
  6408  00C2  3020               	movlw	low __pbssBANK4
  6409  00C3  0084               	movwf	4
  6410  00C4  3002               	movlw	high __pbssBANK4
  6411  00C5  0085               	movwf	5
  6412  00C6  3028               	movlw	40
  6413  00C7  00FE               	movwf	btemp
  6414  00C8  3000               	movlw	0
  6415  00C9  00FF               	movwf	btemp+1
  6416  00CA  31A1  2138  3180   	fcall	clear_ram0
  6417                           
  6418                           ; Clear objects allocated to BANK5
  6419  00CD  30A0               	movlw	low __pbssBANK5
  6420  00CE  0084               	movwf	4
  6421  00CF  3002               	movlw	high __pbssBANK5
  6422  00D0  0085               	movwf	5
  6423  00D1  3028               	movlw	40
  6424  00D2  00FE               	movwf	btemp
  6425  00D3  3000               	movlw	0
  6426  00D4  00FF               	movwf	btemp+1
  6427  00D5  31A1  2138         	fcall	clear_ram0
  6428  00D7                     end_of_initialization:	
  6429                           ;End of C runtime variable initialization code
  6430                           
  6431  00D7                     __end_of__initialization:	
  6432  00D7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6433  00D8  0020               	movlb	0
  6434  00D9  319F  2F92         	ljmp	_main	;jump to C main() function
  6435                           
  6436                           	psect	bssCOMMON
  6437  007D                     __pbssCOMMON:	
  6438  007D                     _eusartTxHead:	
  6439  007D                     	ds	1
  6440                           
  6441                           	psect	bssBANK0
  6442  004E                     __pbssBANK0:	
  6443  004E                     _moveVector_downs:	
  6444  004E                     	ds	4
  6445  0052                     _readIdx:	
  6446  0052                     	ds	2
  6447  0054                     strtok@sp:	
  6448  0054                     	ds	1
  6449  0055                     _motionType:	
  6450  0055                     	ds	1
  6451  0056                     _eusartRxCount:	
  6452  0056                     	ds	1
  6453  0057                     _eusartRxTail:	
  6454  0057                     	ds	1
  6455  0058                     _eusartRxHead:	
  6456  0058                     	ds	1
  6457  0059                     _eusartTxTail:	
  6458  0059                     	ds	1
  6459                           
  6460                           	psect	dataBANK0
  6461  005A                     __pdataBANK0:	
  6462  005A                     _demoLong:	
  6463  005A                     	ds	4
  6464                           
  6465                           	psect	bssBANK1
  6466  00DE                     __pbssBANK1:	
  6467  00DE                     _moveMask:	
  6468  00DE                     	ds	4
  6469  00E2                     _activeMask:	
  6470  00E2                     	ds	4
  6471  00E6                     _moveVector_ups:	
  6472  00E6                     	ds	4
  6473                           
  6474                           	psect	dataBANK1
  6475  00EA                     __pdataBANK1:	
  6476  00EA                     _piezo_on_time_ms:	
  6477  00EA                     	ds	2
  6478  00EC                     _heater_pre_time_ms:	
  6479  00EC                     	ds	2
  6480  00EE                     _drv_peak_val:	
  6481  00EE                     	ds	2
  6482                           
  6483                           	psect	bssBANK2
  6484  0120                     __pbssBANK2:	
  6485  0120                     _i2c_status:	
  6486  0120                     	ds	30
  6487  013E                     _absCommand:	
  6488  013E                     	ds	4
  6489  0142                     _remainingSteps:	
  6490  0142                     	ds	4
  6491  0146                     _LED_configReg_bot:	
  6492  0146                     	ds	4
  6493  014A                     _LED_configReg_top:	
  6494  014A                     	ds	4
  6495  014E                     _second_bottom:	
  6496  014E                     	ds	4
  6497  0152                     _first_top:	
  6498  0152                     	ds	4
  6499  0156                     _first_bottom:	
  6500  0156                     	ds	4
  6501  015A                     _second_top:	
  6502  015A                     	ds	4
  6503  015E                     _errno:	
  6504  015E                     	ds	2
  6505  0160                     _cmdRead:	
  6506  0160                     	ds	2
  6507  0162                     _errorOut:	
  6508  0162                     	ds	2
  6509  0164                     _i2c1_driver_i2cISR:	
  6510  0164                     	ds	2
  6511  0166                     _i2c1_driver_busCollisionISR:	
  6512  0166                     	ds	2
  6513                           
  6514                           	psect	dataBANK2
  6515  0168                     __pdataBANK2:	
  6516  0168                     _inter_step_interval_ms:	
  6517  0168                     	ds	4
  6518  016C                     _heater_post_time_ms:	
  6519  016C                     	ds	2
  6520                           
  6521                           	psect	bssBANK3
  6522  01A0                     __pbssBANK3:	
  6523  01A0                     _eusartRxBuffer:	
  6524  01A0                     	ds	8
  6525  01A8                     _eusartTxBuffer:	
  6526  01A8                     	ds	8
  6527  01B0                     _demoHeaterToggle_bot:	
  6528  01B0                     	ds	4
  6529  01B4                     _demoHeaterToggle_top:	
  6530  01B4                     	ds	4
  6531  01B8                     _cmd_struct:	
  6532  01B8                     	ds	21
  6533  01CD                     _readdata:	
  6534  01CD                     	ds	20
  6535                           
  6536                           	psect	bssBANK4
  6537  0220                     __pbssBANK4:	
  6538  0220                     _drv_fifo_upstroke:	
  6539  0220                     	ds	40
  6540                           
  6541                           	psect	dataBANK4
  6542  0248                     __pdataBANK4:	
  6543  0248                     _fsmStateTable:	
  6544  0248                     	ds	32
  6545                           
  6546                           	psect	bssBANK5
  6547  02A0                     __pbssBANK5:	
  6548  02A0                     _drv_fifo_downstroke:	
  6549  02A0                     	ds	40
  6550                           
  6551                           	psect	inittext
  6552  07F4                     init_ram:	
  6553  07F4  00FE               	movwf	126
  6554  07F5                     initloop:	
  6555  07F5  0012               	moviw fsr0++
  6556  07F6  001E               	movwi fsr1++
  6557  07F7  3001               	movlw	1
  6558  07F8  02FE               	subwf	126,f
  6559  07F9  3000               	movlw	0
  6560  07FA  3BFF               	subwfb	127,f
  6561  07FB  087F               	movf	127,w
  6562  07FC  047E               	iorwf	126,w
  6563  07FD  1903               	btfsc	3,2
  6564  07FE  3400               	retlw	0
  6565  07FF  2FF5               	goto	initloop
  6566                           
  6567                           	psect	clrtext
  6568  2138                     clear_ram0:	
  6569                           ;	Called with FSR0 containing the base address, and
  6570                           ;	btemp/btemp+1 has the size to clear
  6571                           
  6572  2138  0064               	clrwdt	;clear the watchdog before getting into this loop
  6573  2139                     clrloop0:	
  6574  2139  0180               	clrf	0	;clear RAM location pointed to by FSR
  6575  213A  3101               	addfsr 0,1
  6576  213B  3001               	movlw	1
  6577  213C  02FE               	subwf	126,f
  6578  213D  3000               	movlw	0
  6579  213E  3BFF               	subwfb	127,f
  6580  213F  087F               	movf	127,w
  6581  2140  047E               	iorwf	126,w
  6582  2141  1903               	btfsc	3,2
  6583  2142  3400               	retlw	0	;all done for this memory range, return
  6584  2143  2939               	goto	clrloop0	;have we reached the end yet?
  6585                           
  6586                           	psect	cstackBANK5
  6587  02C8                     __pcstackBANK5:	
  6588  02C8                     ??_doAbsMove:	
  6589                           
  6590                           ; 1 bytes @ 0x0
  6591  02C8                     	ds	28
  6592                           
  6593                           	psect	cstackBANK3
  6594  01E5                     __pcstackBANK3:	
  6595  01E5                     ?_drv_init:	
  6596  01E5                     drv_init@output_gain:	
  6597                           ; 1 bytes @ 0x0
  6598                           
  6599                           
  6600                           ; 2 bytes @ 0x0
  6601  01E5                     	ds	2
  6602  01E7                     drv_init@idle_timeout:	
  6603                           
  6604                           ; 2 bytes @ 0x2
  6605  01E7                     	ds	2
  6606                           
  6607                           	psect	cstackBANK2
  6608  016E                     __pcstackBANK2:	
  6609  016E                     execCmd@s:	
  6610                           
  6611                           ; 1 bytes @ 0x0
  6612  016E                     	ds	1
  6613  016F                     ??_main:	
  6614                           
  6615                           ; 1 bytes @ 0x1
  6616  016F                     	ds	1
  6617                           
  6618                           	psect	cstackBANK1
  6619  00A0                     __pcstackBANK1:	
  6620  00A0                     ??___ftmul:	
  6621  00A0                     ?_printf:	
  6622                           ; 1 bytes @ 0x0
  6623                           
  6624  00A0                     printf@f:	
  6625                           ; 2 bytes @ 0x0
  6626                           
  6627  00A0                     LEDsPwr@pwrAll:	
  6628                           ; 2 bytes @ 0x0
  6629                           
  6630  00A0                     LED_setBrightnessRange@LED_configReg:	
  6631                           ; 4 bytes @ 0x0
  6632                           
  6633                           
  6634                           ; 4 bytes @ 0x0
  6635  00A0                     	ds	4
  6636  00A4                     ___ftmul@exp:	
  6637                           
  6638                           ; 1 bytes @ 0x4
  6639  00A4                     	ds	1
  6640  00A5                     ___ftmul@f3_as_product:	
  6641                           
  6642                           ; 3 bytes @ 0x5
  6643  00A5                     	ds	1
  6644  00A6                     ??_printf:	
  6645                           
  6646                           ; 1 bytes @ 0x6
  6647  00A6                     	ds	2
  6648  00A8                     ___ftmul@cntr:	
  6649                           
  6650                           ; 1 bytes @ 0x8
  6651  00A8                     	ds	1
  6652  00A9                     ___ftmul@sign:	
  6653                           
  6654                           ; 1 bytes @ 0x9
  6655  00A9                     	ds	1
  6656  00AA                     ?___ftadd:	
  6657  00AA                     ___ftadd@f1:	
  6658                           ; 3 bytes @ 0xA
  6659                           
  6660                           
  6661                           ; 3 bytes @ 0xA
  6662  00AA                     	ds	2
  6663  00AC                     printf@prec:	
  6664                           
  6665                           ; 2 bytes @ 0xC
  6666  00AC                     	ds	1
  6667  00AD                     ___ftadd@f2:	
  6668                           
  6669                           ; 3 bytes @ 0xD
  6670  00AD                     	ds	1
  6671  00AE                     printf@val:	
  6672                           
  6673                           ; 4 bytes @ 0xE
  6674  00AE                     	ds	2
  6675  00B0                     ??___ftadd:	
  6676                           
  6677                           ; 1 bytes @ 0x10
  6678  00B0                     	ds	2
  6679  00B2                     printf@flag:	
  6680                           
  6681                           ; 1 bytes @ 0x12
  6682  00B2                     	ds	1
  6683  00B3                     printf@ap:	
  6684                           
  6685                           ; 1 bytes @ 0x13
  6686  00B3                     	ds	1
  6687  00B4                     printf@c:	
  6688  00B4                     ___ftadd@sign:	
  6689                           ; 1 bytes @ 0x14
  6690                           
  6691                           
  6692                           ; 1 bytes @ 0x14
  6693  00B4                     	ds	1
  6694  00B5                     ?_drv_write_DC:	
  6695  00B5                     ??_drv_reset:	
  6696                           ; 1 bytes @ 0x15
  6697                           
  6698  00B5                     ?_LED_test_openshort:	
  6699                           ; 1 bytes @ 0x15
  6700                           
  6701  00B5                     ?_drv_read:	
  6702                           ; 1 bytes @ 0x15
  6703                           
  6704  00B5                     ?_startRelMove:	
  6705                           ; 2 bytes @ 0x15
  6706                           
  6707  00B5                     ?_startAbsMove:	
  6708                           ; 2 bytes @ 0x15
  6709                           
  6710  00B5                     ?_stop:	
  6711                           ; 2 bytes @ 0x15
  6712                           
  6713  00B5                     ?_zeroPosition:	
  6714                           ; 2 bytes @ 0x15
  6715                           
  6716  00B5                     ?_getPosition:	
  6717                           ; 2 bytes @ 0x15
  6718                           
  6719  00B5                     ?_setDrvGain:	
  6720                           ; 2 bytes @ 0x15
  6721                           
  6722  00B5                     ?_setHeaterPreTime:	
  6723                           ; 2 bytes @ 0x15
  6724                           
  6725  00B5                     ?_setHeaterPostTime:	
  6726                           ; 2 bytes @ 0x15
  6727                           
  6728  00B5                     ?_setLEDBrightnessRange:	
  6729                           ; 2 bytes @ 0x15
  6730                           
  6731  00B5                     ?_setLEDPwr:	
  6732                           ; 2 bytes @ 0x15
  6733                           
  6734  00B5                     ?_setHeaterToggle:	
  6735                           ; 2 bytes @ 0x15
  6736                           
  6737  00B5                     ?_timedActiveHeatOn:	
  6738                           ; 2 bytes @ 0x15
  6739                           
  6740  00B5                     ?_setActive:	
  6741                           ; 2 bytes @ 0x15
  6742                           
  6743  00B5                     ?_setMoveMask:	
  6744                           ; 2 bytes @ 0x15
  6745                           
  6746  00B5                     ?_getActive:	
  6747                           ; 2 bytes @ 0x15
  6748                           
  6749  00B5                     ?_getMoveMask:	
  6750                           ; 2 bytes @ 0x15
  6751                           
  6752  00B5                     ?_getMotionStatus:	
  6753                           ; 2 bytes @ 0x15
  6754                           
  6755  00B5                     ?_LED_getData:	
  6756                           ; 2 bytes @ 0x15
  6757                           
  6758  00B5                     ___ftadd@exp2:	
  6759                           ; 4 bytes @ 0x15
  6760                           
  6761  00B5                     LED_test_openshort@type:	
  6762                           ; 1 bytes @ 0x15
  6763                           
  6764  00B5                     LED_getData@topOrBottom:	
  6765                           ; 2 bytes @ 0x15
  6766                           
  6767  00B5                     startRelMove@steps:	
  6768                           ; 2 bytes @ 0x15
  6769                           
  6770  00B5                     startAbsMove@steps:	
  6771                           ; 2 bytes @ 0x15
  6772                           
  6773  00B5                     getPosition@a:	
  6774                           ; 2 bytes @ 0x15
  6775                           
  6776  00B5                     setDrvGain@gain:	
  6777                           ; 2 bytes @ 0x15
  6778                           
  6779  00B5                     setHeaterPreTime@t:	
  6780                           ; 2 bytes @ 0x15
  6781                           
  6782  00B5                     setHeaterPostTime@t:	
  6783                           ; 2 bytes @ 0x15
  6784                           
  6785  00B5                     setLEDBrightnessRange@r:	
  6786                           ; 2 bytes @ 0x15
  6787                           
  6788  00B5                     setLEDPwr@pwr:	
  6789                           ; 2 bytes @ 0x15
  6790                           
  6791  00B5                     setHeaterToggle@num:	
  6792                           ; 2 bytes @ 0x15
  6793                           
  6794  00B5                     setActive@probeNum:	
  6795                           ; 2 bytes @ 0x15
  6796                           
  6797  00B5                     setMoveMask@probeNum:	
  6798                           ; 2 bytes @ 0x15
  6799                           
  6800  00B5                     drv_write_DC@val:	
  6801                           ; 2 bytes @ 0x15
  6802                           
  6803  00B5                     timedActiveHeatOn@onTime:	
  6804                           ; 2 bytes @ 0x15
  6805                           
  6806                           
  6807                           ; 4 bytes @ 0x15
  6808  00B5                     	ds	1
  6809  00B6                     ___ftadd@exp1:	
  6810                           
  6811                           ; 1 bytes @ 0x16
  6812  00B6                     	ds	1
  6813  00B7                     ??_zeroPosition:	
  6814  00B7                     ??_setDrvGain:	
  6815                           ; 1 bytes @ 0x17
  6816                           
  6817  00B7                     ?___fttol:	
  6818                           ; 1 bytes @ 0x17
  6819                           
  6820  00B7                     LED_test_openshort@topOrBottom:	
  6821                           ; 4 bytes @ 0x17
  6822                           
  6823  00B7                     setLEDBrightnessRange@tOB:	
  6824                           ; 2 bytes @ 0x17
  6825                           
  6826  00B7                     setLEDPwr@topOrBottom:	
  6827                           ; 2 bytes @ 0x17
  6828                           
  6829  00B7                     setHeaterToggle@topOrB:	
  6830                           ; 2 bytes @ 0x17
  6831                           
  6832  00B7                     setActive@onOff:	
  6833                           ; 2 bytes @ 0x17
  6834                           
  6835  00B7                     setMoveMask@onOff:	
  6836                           ; 2 bytes @ 0x17
  6837                           
  6838  00B7                     getActive@i:	
  6839                           ; 2 bytes @ 0x17
  6840                           
  6841  00B7                     getMoveMask@i:	
  6842                           ; 2 bytes @ 0x17
  6843                           
  6844  00B7                     drv_write_DC@duration_ms:	
  6845                           ; 2 bytes @ 0x17
  6846                           
  6847  00B7                     ___fttol@f1:	
  6848                           ; 2 bytes @ 0x17
  6849                           
  6850                           
  6851                           ; 3 bytes @ 0x17
  6852  00B7                     	ds	1
  6853  00B8                     setDrvGain@setGain:	
  6854                           
  6855                           ; 2 bytes @ 0x18
  6856  00B8                     	ds	1
  6857  00B9                     ??_LED_getData:	
  6858  00B9                     ??_drv_write_DC:	
  6859                           ; 1 bytes @ 0x19
  6860                           
  6861  00B9                     ??_LED_test_openshort:	
  6862                           ; 1 bytes @ 0x19
  6863                           
  6864  00B9                     ??_setHeaterToggle:	
  6865                           ; 1 bytes @ 0x19
  6866                           
  6867  00B9                     ??_setActive:	
  6868                           ; 1 bytes @ 0x19
  6869                           
  6870  00B9                     timedActiveHeatOn@topOrBorBoth:	
  6871                           ; 1 bytes @ 0x19
  6872                           
  6873                           
  6874                           ; 2 bytes @ 0x19
  6875  00B9                     	ds	1
  6876  00BA                     LED_test_openshort@j:	
  6877  00BA                     drv_write_DC@i:	
  6878                           ; 2 bytes @ 0x1A
  6879                           
  6880                           
  6881                           ; 2 bytes @ 0x1A
  6882  00BA                     	ds	1
  6883  00BB                     ??_timedActiveHeatOn:	
  6884  00BB                     ??___fttol:	
  6885                           ; 1 bytes @ 0x1B
  6886                           
  6887                           
  6888                           ; 1 bytes @ 0x1B
  6889  00BB                     	ds	1
  6890  00BC                     ?_doMove:	
  6891                           
  6892                           ; 2 bytes @ 0x1C
  6893  00BC                     	ds	2
  6894  00BE                     ??_doMove:	
  6895                           
  6896                           ; 1 bytes @ 0x1E
  6897  00BE                     	ds	1
  6898  00BF                     ___fttol@sign1:	
  6899                           
  6900                           ; 1 bytes @ 0x1F
  6901  00BF                     	ds	1
  6902  00C0                     timedActiveHeatOn@t:	
  6903  00C0                     LED_getData@readData:	
  6904                           ; 2 bytes @ 0x20
  6905                           
  6906  00C0                     ___fttol@lval:	
  6907                           ; 4 bytes @ 0x20
  6908                           
  6909                           
  6910                           ; 4 bytes @ 0x20
  6911  00C0                     	ds	3
  6912  00C3                     doMove@t:	
  6913                           
  6914                           ; 2 bytes @ 0x23
  6915  00C3                     	ds	1
  6916  00C4                     ___fttol@exp1:	
  6917  00C4                     LED_getData@j:	
  6918                           ; 1 bytes @ 0x24
  6919                           
  6920                           
  6921                           ; 2 bytes @ 0x24
  6922  00C4                     	ds	1
  6923  00C5                     ?_setDrvPiezoOnTime:	
  6924  00C5                     ?_setH1OffTime:	
  6925                           ; 2 bytes @ 0x25
  6926                           
  6927  00C5                     ?_setH2OnTime:	
  6928                           ; 2 bytes @ 0x25
  6929                           
  6930  00C5                     ?_trunc:	
  6931                           ; 2 bytes @ 0x25
  6932                           
  6933  00C5                     doMove@t_1585:	
  6934                           ; 3 bytes @ 0x25
  6935                           
  6936  00C5                     setDrvPiezoOnTime@t:	
  6937                           ; 2 bytes @ 0x25
  6938                           
  6939  00C5                     setH1OffTime@t:	
  6940                           ; 2 bytes @ 0x25
  6941                           
  6942  00C5                     setH2OnTime@t:	
  6943                           ; 2 bytes @ 0x25
  6944                           
  6945  00C5                     trunc@x:	
  6946                           ; 2 bytes @ 0x25
  6947                           
  6948                           
  6949                           ; 3 bytes @ 0x25
  6950  00C5                     	ds	1
  6951  00C6                     ?_LED_readConfig:	
  6952  00C6                     LED_readConfig@topOrBottom:	
  6953                           ; 4 bytes @ 0x26
  6954                           
  6955                           
  6956                           ; 2 bytes @ 0x26
  6957  00C6                     	ds	1
  6958  00C7                     doMove@t_1586:	
  6959                           
  6960                           ; 2 bytes @ 0x27
  6961  00C7                     	ds	1
  6962  00C8                     trunc@i:	
  6963                           
  6964                           ; 3 bytes @ 0x28
  6965  00C8                     	ds	1
  6966  00C9                     ??_doRelMove:	
  6967  00C9                     doAbsMove@allThere:	
  6968                           ; 1 bytes @ 0x29
  6969                           
  6970                           
  6971                           ; 2 bytes @ 0x29
  6972  00C9                     	ds	1
  6973  00CA                     ?_LED_testComm:	
  6974  00CA                     LED_testComm@topOrBottom:	
  6975                           ; 2 bytes @ 0x2A
  6976                           
  6977                           
  6978                           ; 2 bytes @ 0x2A
  6979  00CA                     	ds	1
  6980  00CB                     doAbsMove@i:	
  6981  00CB                     trunc@expon:	
  6982                           ; 2 bytes @ 0x2B
  6983                           
  6984                           
  6985                           ; 2 bytes @ 0x2B
  6986  00CB                     	ds	1
  6987  00CC                     ??_LED_testComm:	
  6988                           
  6989                           ; 1 bytes @ 0x2C
  6990  00CC                     	ds	1
  6991  00CD                     ?_round:	
  6992  00CD                     doAbsMove@i_1603:	
  6993                           ; 3 bytes @ 0x2D
  6994                           
  6995  00CD                     round@x:	
  6996                           ; 2 bytes @ 0x2D
  6997                           
  6998                           
  6999                           ; 3 bytes @ 0x2D
  7000  00CD                     	ds	1
  7001  00CE                     LED_testComm@readResult:	
  7002                           
  7003                           ; 2 bytes @ 0x2E
  7004  00CE                     	ds	1
  7005  00CF                     doAbsMove@i_1601:	
  7006                           
  7007                           ; 2 bytes @ 0x2F
  7008  00CF                     	ds	1
  7009  00D0                     round@f:	
  7010  00D0                     LED_testComm@oldConfigReg:	
  7011                           ; 3 bytes @ 0x30
  7012                           
  7013                           
  7014                           ; 4 bytes @ 0x30
  7015  00D0                     	ds	3
  7016  00D3                     ?_calcUpstroke:	
  7017  00D3                     ?_calcDownstroke:	
  7018                           ; 1 bytes @ 0x33
  7019                           
  7020  00D3                     calcUpstroke@maxVal:	
  7021                           ; 1 bytes @ 0x33
  7022                           
  7023  00D3                     calcDownstroke@maxVal:	
  7024                           ; 2 bytes @ 0x33
  7025                           
  7026                           
  7027                           ; 2 bytes @ 0x33
  7028  00D3                     	ds	1
  7029  00D4                     ?_commCheck:	
  7030                           
  7031                           ; 2 bytes @ 0x34
  7032  00D4                     	ds	1
  7033  00D5                     ??_calcUpstroke:	
  7034  00D5                     ??_calcDownstroke:	
  7035                           ; 1 bytes @ 0x35
  7036                           
  7037                           
  7038                           ; 1 bytes @ 0x35
  7039  00D5                     	ds	1
  7040  00D6                     ??_commCheck:	
  7041                           
  7042                           ; 1 bytes @ 0x36
  7043  00D6                     	ds	1
  7044  00D7                     _calcUpstroke$2823:	
  7045  00D7                     _calcDownstroke$2824:	
  7046                           ; 3 bytes @ 0x37
  7047                           
  7048                           
  7049                           ; 3 bytes @ 0x37
  7050  00D7                     	ds	2
  7051  00D9                     doRelMove@j:	
  7052                           
  7053                           ; 2 bytes @ 0x39
  7054  00D9                     	ds	1
  7055  00DA                     calcUpstroke@i:	
  7056  00DA                     calcDownstroke@i:	
  7057                           ; 2 bytes @ 0x3A
  7058                           
  7059                           
  7060                           ; 2 bytes @ 0x3A
  7061  00DA                     	ds	2
  7062  00DC                     ??_drv_init:	
  7063  00DC                     ?_setDrvPeak:	
  7064                           ; 1 bytes @ 0x3C
  7065                           
  7066  00DC                     setDrvPeak@pk:	
  7067                           ; 2 bytes @ 0x3C
  7068                           
  7069                           
  7070                           ; 2 bytes @ 0x3C
  7071  00DC                     	ds	2
  7072                           
  7073                           	psect	cstackCOMMON
  7074  0070                     __pcstackCOMMON:	
  7075  0070                     ?_isdigit:	
  7076  0070                     ?_mssp1_IRQisEnabled:	
  7077                           ; 1 bit 
  7078                           
  7079  0070                     ?_i2c1_driver_open:	
  7080                           ; 1 bit 
  7081                           
  7082  0070                     ?_i2c1_driver_isNACK:	
  7083                           ; 1 bit 
  7084                           
  7085  0070                     ?i1_i2c1_driver_isNACK:	
  7086                           ; 1 bit 
  7087                           
  7088  0070                     ?_PMD_Initialize:	
  7089                           ; 1 bit 
  7090                           
  7091  0070                     ?_PIN_MANAGER_Initialize:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094  0070                     ?_OSCILLATOR_Initialize:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097  0070                     ?_WDT_Initialize:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100  0070                     ?_TMR2_Initialize:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103  0070                     ?_TMR0_Initialize:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106  0070                     ?_EUSART_Initialize:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109  0070                     ?_TMR0_ISR:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112  0070                     ?_TMR2_ISR:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115  0070                     ?_EUSART_Receive_ISR:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118  0070                     ??_EUSART_Receive_ISR:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121  0070                     ?_EUSART_Transmit_ISR:	
  7122                           ; 1 bytes @ 0x0
  7123                           
  7124  0070                     ??_EUSART_Transmit_ISR:	
  7125                           ; 1 bytes @ 0x0
  7126                           
  7127  0070                     ?_i2c_busCollisionISR:	
  7128                           ; 1 bytes @ 0x0
  7129                           
  7130  0070                     ??_i2c_busCollisionISR:	
  7131                           ; 1 bytes @ 0x0
  7132                           
  7133  0070                     ?_i2c_ISR:	
  7134                           ; 1 bytes @ 0x0
  7135                           
  7136  0070                     ?_i2c_poller:	
  7137                           ; 1 bytes @ 0x0
  7138                           
  7139  0070                     ?_TMR0_DefaultInterruptHandler:	
  7140                           ; 1 bytes @ 0x0
  7141                           
  7142  0070                     ?_TMR2_DefaultInterruptHandler:	
  7143                           ; 1 bytes @ 0x0
  7144                           
  7145  0070                     ?_main_initialize:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148  0070                     ?_doRelMove:	
  7149                           ; 1 bytes @ 0x0
  7150                           
  7151  0070                     ?_doAbsMove:	
  7152                           ; 1 bytes @ 0x0
  7153                           
  7154  0070                     ?_calcHeaterPins:	
  7155                           ; 1 bytes @ 0x0
  7156                           
  7157  0070                     ?_drv_write_wvfrm:	
  7158                           ; 1 bytes @ 0x0
  7159                           
  7160  0070                     ?_drv_reset:	
  7161                           ; 1 bytes @ 0x0
  7162                           
  7163  0070                     ?_toupper:	
  7164                           ; 1 bytes @ 0x0
  7165                           
  7166  0070                     ?_SYSTEM_Initialize:	
  7167                           ; 1 bytes @ 0x0
  7168                           
  7169  0070                     ?_INTERRUPT_InterruptManager:	
  7170                           ; 1 bytes @ 0x0
  7171                           
  7172  0070                     ?_EUSART_Read:	
  7173                           ; 1 bytes @ 0x0
  7174                           
  7175  0070                     ?_EUSART_Write:	
  7176                           ; 1 bytes @ 0x0
  7177                           
  7178  0070                     ?_putch:	
  7179                           ; 1 bytes @ 0x0
  7180                           
  7181  0070                     ?_mssp1_clearIRQ:	
  7182                           ; 1 bytes @ 0x0
  7183                           
  7184  0070                     ?_mssp1_setIRQ:	
  7185                           ; 1 bytes @ 0x0
  7186                           
  7187  0070                     ?_mssp1_waitForEvent:	
  7188                           ; 1 bytes @ 0x0
  7189                           
  7190  0070                     ?_i2c1_driver_resetBus:	
  7191                           ; 1 bytes @ 0x0
  7192                           
  7193  0070                     ?_i2c1_driver_start:	
  7194                           ; 1 bytes @ 0x0
  7195                           
  7196  0070                     ?_i2c1_driver_restart:	
  7197                           ; 1 bytes @ 0x0
  7198                           
  7199  0070                     ?_i2c1_driver_stop:	
  7200                           ; 1 bytes @ 0x0
  7201                           
  7202  0070                     ?_i2c1_driver_startRX:	
  7203                           ; 1 bytes @ 0x0
  7204                           
  7205  0070                     ?_i2c1_driver_getRXData:	
  7206                           ; 1 bytes @ 0x0
  7207                           
  7208  0070                     ?_i2c1_driver_TXData:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0070                     ?_i2c1_driver_sendACK:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0070                     ?_i2c1_driver_sendNACK:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0070                     ?_i2c1_driver_clearBusCollision:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0070                     ??_i2c1_driver_clearBusCollision:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0070                     ?_i2c_open:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0070                     ?_i2c_setAddress:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0070                     ?_i2c_masterOperation:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0070                     ?_do_I2C_RESET:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0070                     ?_do_I2C_IDLE:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ?_do_I2C_SEND_RESTART:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?_do_I2C_SEND_STOP:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ?_do_I2C_SEND_ADR_READ:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ?_do_I2C_RCEN:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ?_do_I2C_DO_ACK:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ?_do_I2C_DO_NACK_STOP:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ?_do_I2C_TX:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     ?_do_I2C_RX:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     ?_do_I2C_TX_EMPTY:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     ?_TMR0_StartTimer:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0070                     ?_TMR0_StopTimer:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0070                     ??_TMR0_StopTimer:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0070                     ?_TMR0_Write8bitTimer:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0070                     ??_TMR0_Write8bitTimer:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0070                     ?_TMR0_Load8bitPeriod:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0070                     ?_TMR2_StartTimer:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0070                     ?_TMR2_StopTimer:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0070                     ??_TMR2_StopTimer:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0070                     ?_TMR2_WriteTimer:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0070                     ??_TMR2_WriteTimer:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0070                     ?_TMR2_LoadPeriodRegister:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0070                     ?_main:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0070                     ?i1_send_last_2bytes_IK:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0070                     ?i1_send_2bytes_latchless_IK:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0070                     ?i1_mssp1_clearIRQ:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0070                     ??i1_mssp1_clearIRQ:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0070                     ?i1_mssp1_setIRQ:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0070                     ??i1_mssp1_setIRQ:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0070                     ?i1_i2c1_driver_resetBus:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0070                     ??i1_i2c1_driver_resetBus:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0070                     ?i1_i2c1_driver_restart:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0070                     ??i1_i2c1_driver_restart:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0070                     ?i1_i2c1_driver_stop:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0070                     ??i1_i2c1_driver_stop:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0070                     ??i1_i2c1_driver_isNACK:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0070                     ?i1_i2c1_driver_startRX:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0070                     ??i1_i2c1_driver_startRX:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0070                     ?i1_i2c1_driver_getRXData:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0070                     ??i1_i2c1_driver_getRXData:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0070                     ?i1_i2c1_driver_TXData:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0070                     ??i1_i2c1_driver_TXData:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0070                     ?i1_i2c1_driver_sendACK:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0070                     ??i1_i2c1_driver_sendACK:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0070                     ?i1_i2c1_driver_sendNACK:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0070                     ??i1_i2c1_driver_sendNACK:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0070                     ?i1_do_I2C_RESET:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0070                     ??i1_do_I2C_RESET:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0070                     ?i1_do_I2C_IDLE:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0070                     ??i1_do_I2C_IDLE:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0070                     ?i1_do_I2C_SEND_RESTART:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0070                     ??i1_do_I2C_SEND_RESTART:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0070                     ?i1_do_I2C_SEND_STOP:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0070                     ??i1_do_I2C_SEND_STOP:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0070                     ?i1_do_I2C_RCEN:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0070                     ??i1_do_I2C_RCEN:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0070                     ?i1_do_I2C_DO_ACK:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0070                     ??i1_do_I2C_DO_ACK:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0070                     ?i1_do_I2C_TX:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0070                     ?i1_do_I2C_RX:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0070                     ??i1_do_I2C_RX:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0070                     ?i1_do_I2C_TX_EMPTY:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0070                     ??i1_do_I2C_TX_EMPTY:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0070                     ?i1_i2c_ISR:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0070                     ?i1_returnStop:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0070                     ?i1_returnReset:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0070                     ?_execCmd:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0070                     TMR0_Write8bitTimer@timerVal:	
  7488                           ; 2 bytes @ 0x0
  7489                           
  7490  0070                     TMR2_WriteTimer@timerVal:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493  0070                     i1i2c1_driver_TXData@d:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496  0070                     i1returnStop@p:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499  0070                     i1returnReset@p:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502  0070                     i1send_last_2bytes_IK@data:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505  0070                     i1send_2bytes_latchless_IK@data:	
  7506                           ; 2 bytes @ 0x0
  7507                           
  7508                           
  7509                           ; 2 bytes @ 0x0
  7510  0070                     	ds	1
  7511  0071                     ??_TMR2_ISR:	
  7512  0071                     ??_TMR2_DefaultInterruptHandler:	
  7513                           ; 1 bytes @ 0x1
  7514                           
  7515  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7516                           ; 1 bytes @ 0x1
  7517                           
  7518  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7519                           ; 1 bytes @ 0x1
  7520                           
  7521  0071                     ??i1_do_I2C_TX:	
  7522                           ; 1 bytes @ 0x1
  7523                           
  7524  0071                     ??i1_returnStop:	
  7525                           ; 1 bytes @ 0x1
  7526                           
  7527  0071                     ??i1_returnReset:	
  7528                           ; 1 bytes @ 0x1
  7529                           
  7530                           
  7531                           ; 1 bytes @ 0x1
  7532  0071                     	ds	1
  7533  0072                     ??i1_send_2bytes_latchless_IK:	
  7534  0072                     i1send_last_2bytes_IK@latch_start:	
  7535                           ; 1 bytes @ 0x2
  7536                           
  7537                           
  7538                           ; 1 bytes @ 0x2
  7539  0072                     	ds	1
  7540  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7541  0073                     i1_do_I2C_TX$1134:	
  7542                           ; 2 bytes @ 0x3
  7543                           
  7544                           
  7545                           ; 2 bytes @ 0x3
  7546  0073                     	ds	2
  7547  0075                     ??i1_send_last_2bytes_IK:	
  7548  0075                     ??i1_i2c_ISR:	
  7549                           ; 1 bytes @ 0x5
  7550                           
  7551                           
  7552                           ; 1 bytes @ 0x5
  7553  0075                     	ds	1
  7554  0076                     i1send_2bytes_latchless_IK@j:	
  7555                           
  7556                           ; 2 bytes @ 0x6
  7557  0076                     	ds	3
  7558  0079                     i1send_last_2bytes_IK@j:	
  7559                           
  7560                           ; 2 bytes @ 0x9
  7561  0079                     	ds	2
  7562  007B                     ??i1_send_2length_2bytes_IK:	
  7563                           
  7564                           ; 1 bytes @ 0xB
  7565  007B                     	ds	1
  7566  007C                     ??_TMR0_ISR:	
  7567  007C                     ??_TMR0_DefaultInterruptHandler:	
  7568                           ; 1 bytes @ 0xC
  7569                           
  7570  007C                     ??_INTERRUPT_InterruptManager:	
  7571                           ; 1 bytes @ 0xC
  7572                           
  7573                           
  7574                           ; 1 bytes @ 0xC
  7575  007C                     	ds	1
  7576                           
  7577                           	psect	cstackBANK0
  7578  0020                     __pcstackBANK0:	
  7579  0020                     ?i1_send_2length_2bytes_IK:	
  7580  0020                     i1send_2length_2bytes_IK@data1:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583                           
  7584                           ; 2 bytes @ 0x0
  7585  0020                     	ds	2
  7586  0022                     i1send_2length_2bytes_IK@data2:	
  7587                           
  7588                           ; 2 bytes @ 0x2
  7589  0022                     	ds	2
  7590  0024                     i1send_2length_2bytes_IK@latch_start:	
  7591                           
  7592                           ; 1 bytes @ 0x4
  7593  0024                     	ds	1
  7594  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7595                           
  7596                           ; 2 bytes @ 0x5
  7597  0025                     	ds	2
  7598  0027                     ?i1_LEDsOn:	
  7599  0027                     i1LEDsOn@LEDpins:	
  7600                           ; 1 bytes @ 0x7
  7601                           
  7602                           
  7603                           ; 4 bytes @ 0x7
  7604  0027                     	ds	4
  7605  002B                     i1LEDsOn@topOrBottom:	
  7606                           
  7607                           ; 2 bytes @ 0xB
  7608  002B                     	ds	2
  7609  002D                     ??i1_LEDsOn:	
  7610                           
  7611                           ; 1 bytes @ 0xD
  7612  002D                     	ds	4
  7613  0031                     ??_PMD_Initialize:	
  7614  0031                     ??_PIN_MANAGER_Initialize:	
  7615                           ; 1 bytes @ 0x11
  7616                           
  7617  0031                     ??_OSCILLATOR_Initialize:	
  7618                           ; 1 bytes @ 0x11
  7619                           
  7620  0031                     ??_WDT_Initialize:	
  7621                           ; 1 bytes @ 0x11
  7622                           
  7623  0031                     ??_EUSART_Initialize:	
  7624                           ; 1 bytes @ 0x11
  7625                           
  7626  0031                     ?_returnStop:	
  7627                           ; 1 bytes @ 0x11
  7628                           
  7629  0031                     ?_returnReset:	
  7630                           ; 1 bytes @ 0x11
  7631                           
  7632  0031                     ?_TMR0_SetInterruptHandler:	
  7633                           ; 1 bytes @ 0x11
  7634                           
  7635  0031                     ?_TMR2_SetInterruptHandler:	
  7636                           ; 1 bytes @ 0x11
  7637                           
  7638  0031                     ??_calcHeaterPins:	
  7639                           ; 1 bytes @ 0x11
  7640                           
  7641  0031                     ??_isdigit:	
  7642                           ; 1 bytes @ 0x11
  7643                           
  7644  0031                     ??_toupper:	
  7645                           ; 1 bytes @ 0x11
  7646                           
  7647  0031                     ?_send_last_2bytes_IK:	
  7648                           ; 1 bytes @ 0x11
  7649                           
  7650  0031                     ?_send_2bytes_latchless_IK:	
  7651                           ; 1 bytes @ 0x11
  7652                           
  7653  0031                     ??_EUSART_Read:	
  7654                           ; 1 bytes @ 0x11
  7655                           
  7656  0031                     ??_EUSART_Write:	
  7657                           ; 1 bytes @ 0x11
  7658                           
  7659  0031                     ??_mssp1_IRQisEnabled:	
  7660                           ; 1 bytes @ 0x11
  7661                           
  7662  0031                     ??_mssp1_clearIRQ:	
  7663                           ; 1 bytes @ 0x11
  7664                           
  7665  0031                     ??_mssp1_setIRQ:	
  7666                           ; 1 bytes @ 0x11
  7667                           
  7668  0031                     ??_mssp1_waitForEvent:	
  7669                           ; 1 bytes @ 0x11
  7670                           
  7671  0031                     ??_i2c1_driver_open:	
  7672                           ; 1 bytes @ 0x11
  7673                           
  7674  0031                     ??_i2c1_driver_resetBus:	
  7675                           ; 1 bytes @ 0x11
  7676                           
  7677  0031                     ??_i2c1_driver_start:	
  7678                           ; 1 bytes @ 0x11
  7679                           
  7680  0031                     ??_i2c1_driver_restart:	
  7681                           ; 1 bytes @ 0x11
  7682                           
  7683  0031                     ??_i2c1_driver_stop:	
  7684                           ; 1 bytes @ 0x11
  7685                           
  7686  0031                     ??_i2c1_driver_isNACK:	
  7687                           ; 1 bytes @ 0x11
  7688                           
  7689  0031                     ??_i2c1_driver_startRX:	
  7690                           ; 1 bytes @ 0x11
  7691                           
  7692  0031                     ??_i2c1_driver_getRXData:	
  7693                           ; 1 bytes @ 0x11
  7694                           
  7695  0031                     ??_i2c1_driver_TXData:	
  7696                           ; 1 bytes @ 0x11
  7697                           
  7698  0031                     ??_i2c1_driver_sendACK:	
  7699                           ; 1 bytes @ 0x11
  7700                           
  7701  0031                     ??_i2c1_driver_sendNACK:	
  7702                           ; 1 bytes @ 0x11
  7703                           
  7704  0031                     ?_i2c1_driver_setBusCollisionISR:	
  7705                           ; 1 bytes @ 0x11
  7706                           
  7707  0031                     ?_i2c1_driver_setI2cISR:	
  7708                           ; 1 bytes @ 0x11
  7709                           
  7710  0031                     ??_i2c_setAddress:	
  7711                           ; 1 bytes @ 0x11
  7712                           
  7713  0031                     ?_i2c_setBuffer:	
  7714                           ; 1 bytes @ 0x11
  7715                           
  7716  0031                     ??_do_I2C_RESET:	
  7717                           ; 1 bytes @ 0x11
  7718                           
  7719  0031                     ??_do_I2C_IDLE:	
  7720                           ; 1 bytes @ 0x11
  7721                           
  7722  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7723                           ; 1 bytes @ 0x11
  7724                           
  7725  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7726                           ; 1 bytes @ 0x11
  7727                           
  7728  0031                     ??_do_I2C_SEND_RESTART:	
  7729                           ; 1 bytes @ 0x11
  7730                           
  7731  0031                     ??_do_I2C_SEND_STOP:	
  7732                           ; 1 bytes @ 0x11
  7733                           
  7734  0031                     ??_do_I2C_RCEN:	
  7735                           ; 1 bytes @ 0x11
  7736                           
  7737  0031                     ??_do_I2C_DO_ACK:	
  7738                           ; 1 bytes @ 0x11
  7739                           
  7740  0031                     ??_do_I2C_DO_NACK_STOP:	
  7741                           ; 1 bytes @ 0x11
  7742                           
  7743  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7744                           ; 1 bytes @ 0x11
  7745                           
  7746  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7747                           ; 1 bytes @ 0x11
  7748                           
  7749  0031                     ??_do_I2C_RX:	
  7750                           ; 1 bytes @ 0x11
  7751                           
  7752  0031                     ??_do_I2C_TX_EMPTY:	
  7753                           ; 1 bytes @ 0x11
  7754                           
  7755  0031                     ??_TMR0_StartTimer:	
  7756                           ; 1 bytes @ 0x11
  7757                           
  7758  0031                     ??_TMR0_Load8bitPeriod:	
  7759                           ; 1 bytes @ 0x11
  7760                           
  7761  0031                     ??_TMR2_StartTimer:	
  7762                           ; 1 bytes @ 0x11
  7763                           
  7764  0031                     ??_TMR2_LoadPeriodRegister:	
  7765                           ; 1 bytes @ 0x11
  7766                           
  7767  0031                     ?_strchr:	
  7768                           ; 1 bytes @ 0x11
  7769                           
  7770  0031                     ?___wmul:	
  7771                           ; 2 bytes @ 0x11
  7772                           
  7773  0031                     ?___ftpack:	
  7774                           ; 2 bytes @ 0x11
  7775                           
  7776  0031                     ?_frexp:	
  7777                           ; 3 bytes @ 0x11
  7778                           
  7779  0031                     ?___lldiv:	
  7780                           ; 3 bytes @ 0x11
  7781                           
  7782  0031                     mssp1_waitForEvent@timeout:	
  7783                           ; 4 bytes @ 0x11
  7784                           
  7785  0031                     i2c1_driver_TXData@d:	
  7786                           ; 1 bytes @ 0x11
  7787                           
  7788  0031                     returnStop@p:	
  7789                           ; 1 bytes @ 0x11
  7790                           
  7791  0031                     returnReset@p:	
  7792                           ; 1 bytes @ 0x11
  7793                           
  7794  0031                     TMR0_Load8bitPeriod@periodVal:	
  7795                           ; 1 bytes @ 0x11
  7796                           
  7797  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7798                           ; 1 bytes @ 0x11
  7799                           
  7800  0031                     _isdigit$2203:	
  7801                           ; 1 bytes @ 0x11
  7802                           
  7803  0031                     send_last_2bytes_IK@data:	
  7804                           ; 1 bytes @ 0x11
  7805                           
  7806  0031                     send_2bytes_latchless_IK@data:	
  7807                           ; 2 bytes @ 0x11
  7808                           
  7809  0031                     i2c1_driver_setBusCollisionISR@f:	
  7810                           ; 2 bytes @ 0x11
  7811                           
  7812  0031                     i2c1_driver_setI2cISR@f:	
  7813                           ; 2 bytes @ 0x11
  7814                           
  7815  0031                     i2c_setBuffer@buffer:	
  7816                           ; 2 bytes @ 0x11
  7817                           
  7818  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7819                           ; 2 bytes @ 0x11
  7820                           
  7821  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7822                           ; 2 bytes @ 0x11
  7823                           
  7824  0031                     ___wmul@multiplier:	
  7825                           ; 2 bytes @ 0x11
  7826                           
  7827  0031                     strchr@ptr:	
  7828                           ; 2 bytes @ 0x11
  7829                           
  7830  0031                     ___ftpack@arg:	
  7831                           ; 2 bytes @ 0x11
  7832                           
  7833  0031                     frexp@value:	
  7834                           ; 3 bytes @ 0x11
  7835                           
  7836  0031                     ___lldiv@divisor:	
  7837                           ; 3 bytes @ 0x11
  7838                           
  7839                           
  7840                           ; 4 bytes @ 0x11
  7841  0031                     	ds	1
  7842  0032                     ??_returnStop:	
  7843  0032                     ??_returnReset:	
  7844                           ; 1 bytes @ 0x12
  7845                           
  7846  0032                     ??_do_I2C_SEND_ADR_READ:	
  7847                           ; 1 bytes @ 0x12
  7848                           
  7849  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7850                           ; 1 bytes @ 0x12
  7851                           
  7852  0032                     ??_do_I2C_TX:	
  7853                           ; 1 bytes @ 0x12
  7854                           
  7855  0032                     EUSART_Read@readValue:	
  7856                           ; 1 bytes @ 0x12
  7857                           
  7858  0032                     EUSART_Write@txData:	
  7859                           ; 1 bytes @ 0x12
  7860                           
  7861  0032                     i2c_setAddress@address:	
  7862                           ; 1 bytes @ 0x12
  7863                           
  7864  0032                     isdigit@c:	
  7865                           ; 1 bytes @ 0x12
  7866                           
  7867  0032                     toupper@c:	
  7868                           ; 1 bytes @ 0x12
  7869                           
  7870                           
  7871                           ; 1 bytes @ 0x12
  7872  0032                     	ds	1
  7873  0033                     ??_TMR2_Initialize:	
  7874  0033                     ??_TMR0_Initialize:	
  7875                           ; 1 bytes @ 0x13
  7876                           
  7877  0033                     ??_TMR0_SetInterruptHandler:	
  7878                           ; 1 bytes @ 0x13
  7879                           
  7880  0033                     ??_TMR2_SetInterruptHandler:	
  7881                           ; 1 bytes @ 0x13
  7882                           
  7883  0033                     ??_SYSTEM_Initialize:	
  7884                           ; 1 bytes @ 0x13
  7885                           
  7886  0033                     ??_send_2bytes_latchless_IK:	
  7887                           ; 1 bytes @ 0x13
  7888                           
  7889  0033                     ??_putch:	
  7890                           ; 1 bytes @ 0x13
  7891                           
  7892  0033                     ??_i2c1_driver_setBusCollisionISR:	
  7893                           ; 1 bytes @ 0x13
  7894                           
  7895  0033                     ??_i2c1_driver_setI2cISR:	
  7896                           ; 1 bytes @ 0x13
  7897                           
  7898  0033                     ??_i2c_open:	
  7899                           ; 1 bytes @ 0x13
  7900                           
  7901  0033                     ?_stricmp:	
  7902                           ; 1 bytes @ 0x13
  7903                           
  7904  0033                     send_last_2bytes_IK@latch_start:	
  7905                           ; 2 bytes @ 0x13
  7906                           
  7907  0033                     putch@txData:	
  7908                           ; 1 bytes @ 0x13
  7909                           
  7910  0033                     i2c_setBuffer@bufferSize:	
  7911                           ; 1 bytes @ 0x13
  7912                           
  7913  0033                     ___wmul@multiplicand:	
  7914                           ; 2 bytes @ 0x13
  7915                           
  7916  0033                     stricmp@s2:	
  7917                           ; 2 bytes @ 0x13
  7918                           
  7919  0033                     strchr@chr:	
  7920                           ; 2 bytes @ 0x13
  7921                           
  7922                           
  7923                           ; 2 bytes @ 0x13
  7924  0033                     	ds	1
  7925  0034                     i2c_open@ret:	
  7926  0034                     ___ftpack@exp:	
  7927                           ; 1 bytes @ 0x14
  7928                           
  7929  0034                     frexp@eptr:	
  7930                           ; 1 bytes @ 0x14
  7931                           
  7932  0034                     send_last_2bytes_IK@topOrBottom:	
  7933                           ; 1 bytes @ 0x14
  7934                           
  7935  0034                     _do_I2C_TX$1134:	
  7936                           ; 2 bytes @ 0x14
  7937                           
  7938                           
  7939                           ; 2 bytes @ 0x14
  7940  0034                     	ds	1
  7941  0035                     ??_stricmp:	
  7942  0035                     ??_frexp:	
  7943                           ; 1 bytes @ 0x15
  7944                           
  7945  0035                     ??_strchr:	
  7946                           ; 1 bytes @ 0x15
  7947                           
  7948  0035                     ??_i2c_setBuffer:	
  7949                           ; 1 bytes @ 0x15
  7950                           
  7951  0035                     ??___wmul:	
  7952                           ; 1 bytes @ 0x15
  7953                           
  7954  0035                     i2c_open@address:	
  7955                           ; 1 bytes @ 0x15
  7956                           
  7957  0035                     ___ftpack@sign:	
  7958                           ; 1 bytes @ 0x15
  7959                           
  7960  0035                     ___wmul@product:	
  7961                           ; 1 bytes @ 0x15
  7962                           
  7963  0035                     ___lldiv@dividend:	
  7964                           ; 2 bytes @ 0x15
  7965                           
  7966                           
  7967                           ; 4 bytes @ 0x15
  7968  0035                     	ds	1
  7969  0036                     ??_i2c_ISR:	
  7970  0036                     ??___ftpack:	
  7971                           ; 1 bytes @ 0x16
  7972                           
  7973  0036                     ??_send_last_2bytes_IK:	
  7974                           ; 1 bytes @ 0x16
  7975                           
  7976                           
  7977                           ; 1 bytes @ 0x16
  7978  0036                     	ds	1
  7979  0037                     ??_i2c_poller:	
  7980  0037                     ??_i2c_masterOperation:	
  7981                           ; 1 bytes @ 0x17
  7982                           
  7983  0037                     ?_atoi:	
  7984                           ; 1 bytes @ 0x17
  7985                           
  7986  0037                     ?___awdiv:	
  7987                           ; 2 bytes @ 0x17
  7988                           
  7989  0037                     stricmp@r:	
  7990                           ; 2 bytes @ 0x17
  7991                           
  7992  0037                     send_2bytes_latchless_IK@j:	
  7993                           ; 1 bytes @ 0x17
  7994                           
  7995  0037                     ___awdiv@divisor:	
  7996                           ; 2 bytes @ 0x17
  7997                           
  7998                           
  7999                           ; 2 bytes @ 0x17
  8000  0037                     	ds	1
  8001  0038                     ?_strspn:	
  8002  0038                     ?_strcspn:	
  8003                           ; 2 bytes @ 0x18
  8004                           
  8005  0038                     i2c_masterOperation@read:	
  8006                           ; 2 bytes @ 0x18
  8007                           
  8008  0038                     stricmp@s1:	
  8009                           ; 1 bytes @ 0x18
  8010                           
  8011  0038                     strcspn@s2:	
  8012                           ; 1 bytes @ 0x18
  8013                           
  8014  0038                     strspn@s2:	
  8015                           ; 2 bytes @ 0x18
  8016                           
  8017                           
  8018                           ; 2 bytes @ 0x18
  8019  0038                     	ds	1
  8020  0039                     ??_atoi:	
  8021  0039                     ??___lldiv:	
  8022                           ; 1 bytes @ 0x19
  8023                           
  8024  0039                     ?___altoft:	
  8025                           ; 1 bytes @ 0x19
  8026                           
  8027  0039                     i2c_masterOperation@ret:	
  8028                           ; 3 bytes @ 0x19
  8029                           
  8030  0039                     ___awdiv@dividend:	
  8031                           ; 1 bytes @ 0x19
  8032                           
  8033  0039                     ___altoft@c:	
  8034                           ; 2 bytes @ 0x19
  8035                           
  8036                           
  8037                           ; 4 bytes @ 0x19
  8038  0039                     	ds	1
  8039  003A                     ??_drv_write_wvfrm:	
  8040  003A                     ??_strspn:	
  8041                           ; 1 bytes @ 0x1A
  8042                           
  8043  003A                     ??_strcspn:	
  8044                           ; 1 bytes @ 0x1A
  8045                           
  8046  003A                     drv_write_wvfrm@upOrDown:	
  8047                           ; 1 bytes @ 0x1A
  8048                           
  8049  003A                     send_last_2bytes_IK@j:	
  8050                           ; 1 bytes @ 0x1A
  8051                           
  8052  003A                     ___lldiv@quotient:	
  8053                           ; 2 bytes @ 0x1A
  8054                           
  8055                           
  8056                           ; 4 bytes @ 0x1A
  8057  003A                     	ds	1
  8058  003B                     ??___awdiv:	
  8059  003B                     atoi@sign:	
  8060                           ; 1 bytes @ 0x1B
  8061                           
  8062                           
  8063                           ; 1 bytes @ 0x1B
  8064  003B                     	ds	1
  8065  003C                     ?_send_2length_2bytes_IK:	
  8066  003C                     ___awdiv@counter:	
  8067                           ; 1 bytes @ 0x1C
  8068                           
  8069  003C                     send_2length_2bytes_IK@data1:	
  8070                           ; 1 bytes @ 0x1C
  8071                           
  8072  003C                     atoi@a:	
  8073                           ; 2 bytes @ 0x1C
  8074                           
  8075  003C                     strcspn@i:	
  8076                           ; 2 bytes @ 0x1C
  8077                           
  8078  003C                     strspn@i:	
  8079                           ; 2 bytes @ 0x1C
  8080                           
  8081                           
  8082                           ; 2 bytes @ 0x1C
  8083  003C                     	ds	1
  8084  003D                     ??___altoft:	
  8085  003D                     ___awdiv@sign:	
  8086                           ; 1 bytes @ 0x1D
  8087                           
  8088                           
  8089                           ; 1 bytes @ 0x1D
  8090  003D                     	ds	1
  8091  003E                     atoi@s:	
  8092  003E                     ___lldiv@counter:	
  8093                           ; 1 bytes @ 0x1E
  8094                           
  8095  003E                     strcspn@s1:	
  8096                           ; 1 bytes @ 0x1E
  8097                           
  8098  003E                     strspn@s1:	
  8099                           ; 1 bytes @ 0x1E
  8100                           
  8101  003E                     send_2length_2bytes_IK@data2:	
  8102                           ; 1 bytes @ 0x1E
  8103                           
  8104  003E                     ___awdiv@quotient:	
  8105                           ; 2 bytes @ 0x1E
  8106                           
  8107                           
  8108                           ; 2 bytes @ 0x1E
  8109  003E                     	ds	1
  8110  003F                     ?_strtok:	
  8111  003F                     ?___llmod:	
  8112                           ; 1 bytes @ 0x1F
  8113                           
  8114  003F                     ___altoft@exp:	
  8115                           ; 4 bytes @ 0x1F
  8116                           
  8117  003F                     strtok@s2:	
  8118                           ; 1 bytes @ 0x1F
  8119                           
  8120  003F                     ___llmod@divisor:	
  8121                           ; 2 bytes @ 0x1F
  8122                           
  8123                           
  8124                           ; 4 bytes @ 0x1F
  8125  003F                     	ds	1
  8126  0040                     ?___awtoft:	
  8127  0040                     send_2length_2bytes_IK@latch_start:	
  8128                           ; 3 bytes @ 0x20
  8129                           
  8130  0040                     ___altoft@sign:	
  8131                           ; 1 bytes @ 0x20
  8132                           
  8133  0040                     ___awtoft@c:	
  8134                           ; 1 bytes @ 0x20
  8135                           
  8136                           
  8137                           ; 2 bytes @ 0x20
  8138  0040                     	ds	1
  8139  0041                     ??_strtok:	
  8140  0041                     ?___ftneg:	
  8141                           ; 1 bytes @ 0x21
  8142                           
  8143  0041                     send_2length_2bytes_IK@topOrBottom:	
  8144                           ; 3 bytes @ 0x21
  8145                           
  8146  0041                     ___ftneg@f1:	
  8147                           ; 2 bytes @ 0x21
  8148                           
  8149                           
  8150                           ; 3 bytes @ 0x21
  8151  0041                     	ds	2
  8152  0043                     ??_send_2length_2bytes_IK:	
  8153  0043                     ??___awtoft:	
  8154                           ; 1 bytes @ 0x23
  8155                           
  8156  0043                     ___llmod@dividend:	
  8157                           ; 1 bytes @ 0x23
  8158                           
  8159                           
  8160                           ; 4 bytes @ 0x23
  8161  0043                     	ds	1
  8162  0044                     ?_LEDsOn:	
  8163  0044                     ?_LEDsPwr:	
  8164                           ; 1 bytes @ 0x24
  8165                           
  8166  0044                     ?_LED_setBrightnessRange:	
  8167                           ; 1 bytes @ 0x24
  8168                           
  8169  0044                     ??___ftneg:	
  8170                           ; 1 bytes @ 0x24
  8171                           
  8172  0044                     strtok@s1:	
  8173                           ; 1 bytes @ 0x24
  8174                           
  8175  0044                     LEDsPwr@pwr:	
  8176                           ; 1 bytes @ 0x24
  8177                           
  8178  0044                     LED_setBrightnessRange@range:	
  8179                           ; 2 bytes @ 0x24
  8180                           
  8181  0044                     LEDsOn@LEDpins:	
  8182                           ; 2 bytes @ 0x24
  8183                           
  8184                           
  8185                           ; 4 bytes @ 0x24
  8186  0044                     	ds	1
  8187  0045                     ?_parseCmd:	
  8188  0045                     parseCmd@s:	
  8189                           ; 1 bytes @ 0x25
  8190                           
  8191  0045                     ___awtoft@sign:	
  8192                           ; 1 bytes @ 0x25
  8193                           
  8194                           
  8195                           ; 1 bytes @ 0x25
  8196  0045                     	ds	1
  8197  0046                     ??_parseCmd:	
  8198  0046                     ?___ftmul:	
  8199                           ; 1 bytes @ 0x26
  8200                           
  8201  0046                     LEDsPwr@topOrBottom:	
  8202                           ; 3 bytes @ 0x26
  8203                           
  8204  0046                     LED_setBrightnessRange@topOrBottom:	
  8205                           ; 2 bytes @ 0x26
  8206                           
  8207  0046                     ___ftmul@f1:	
  8208                           ; 2 bytes @ 0x26
  8209                           
  8210                           
  8211                           ; 3 bytes @ 0x26
  8212  0046                     	ds	1
  8213  0047                     ??___llmod:	
  8214  0047                     parseCmd@cmdString:	
  8215                           ; 1 bytes @ 0x27
  8216                           
  8217                           
  8218                           ; 1 bytes @ 0x27
  8219  0047                     	ds	1
  8220  0048                     ??_LEDsPwr:	
  8221  0048                     ??_LED_setBrightnessRange:	
  8222                           ; 1 bytes @ 0x28
  8223                           
  8224  0048                     ___llmod@counter:	
  8225                           ; 1 bytes @ 0x28
  8226                           
  8227  0048                     LEDsOn@topOrBottom:	
  8228                           ; 1 bytes @ 0x28
  8229                           
  8230  0048                     parseCmd@paramIter:	
  8231                           ; 2 bytes @ 0x28
  8232                           
  8233                           
  8234                           ; 2 bytes @ 0x28
  8235  0048                     	ds	1
  8236  0049                     ?_drv_write:	
  8237  0049                     ??_drv_read:	
  8238                           ; 1 bytes @ 0x29
  8239                           
  8240  0049                     ??_LED_readConfig:	
  8241                           ; 1 bytes @ 0x29
  8242                           
  8243  0049                     ??_startRelMove:	
  8244                           ; 1 bytes @ 0x29
  8245                           
  8246  0049                     ??_startAbsMove:	
  8247                           ; 1 bytes @ 0x29
  8248                           
  8249  0049                     ??_stop:	
  8250                           ; 1 bytes @ 0x29
  8251                           
  8252  0049                     ??_getPosition:	
  8253                           ; 1 bytes @ 0x29
  8254                           
  8255  0049                     ??_setHeaterPreTime:	
  8256                           ; 1 bytes @ 0x29
  8257                           
  8258  0049                     ??_setHeaterPostTime:	
  8259                           ; 1 bytes @ 0x29
  8260                           
  8261  0049                     ??_setMoveMask:	
  8262                           ; 1 bytes @ 0x29
  8263                           
  8264  0049                     ??_getActive:	
  8265                           ; 1 bytes @ 0x29
  8266                           
  8267  0049                     ??_getMoveMask:	
  8268                           ; 1 bytes @ 0x29
  8269                           
  8270  0049                     ??_getMotionStatus:	
  8271                           ; 1 bytes @ 0x29
  8272                           
  8273  0049                     drv_write@data:	
  8274                           ; 1 bytes @ 0x29
  8275                           
  8276  0049                     zeroPosition@i:	
  8277                           ; 1 bytes @ 0x29
  8278                           
  8279  0049                     ___ftmul@f2:	
  8280                           ; 2 bytes @ 0x29
  8281                           
  8282                           
  8283                           ; 3 bytes @ 0x29
  8284  0049                     	ds	1
  8285  004A                     ??_drv_write:	
  8286  004A                     ??_LEDsOn:	
  8287                           ; 1 bytes @ 0x2A
  8288                           
  8289  004A                     parseCmd@p:	
  8290                           ; 1 bytes @ 0x2A
  8291                           
  8292                           
  8293                           ; 1 bytes @ 0x2A
  8294  004A                     	ds	1
  8295  004B                     drv_write@reg:	
  8296  004B                     drv_read@reg:	
  8297                           ; 1 bytes @ 0x2B
  8298                           
  8299                           
  8300                           ; 1 bytes @ 0x2B
  8301  004B                     	ds	1
  8302  004C                     ??_trunc:	
  8303  004C                     ??_setDrvPiezoOnTime:	
  8304                           ; 1 bytes @ 0x2C
  8305                           
  8306  004C                     ??_setH1OffTime:	
  8307                           ; 1 bytes @ 0x2C
  8308                           
  8309  004C                     ??_setH2OnTime:	
  8310                           ; 1 bytes @ 0x2C
  8311                           
  8312  004C                     drv_read@buff:	
  8313                           ; 1 bytes @ 0x2C
  8314                           
  8315  004C                     drv_write@buff:	
  8316                           ; 1 bytes @ 0x2C
  8317                           
  8318                           
  8319                           ; 2 bytes @ 0x2C
  8320  004C                     	ds	1
  8321  004D                     ??_round:	
  8322  004D                     ??_setDrvPeak:	
  8323                           ; 1 bytes @ 0x2D
  8324                           
  8325                           
  8326                           ; 1 bytes @ 0x2D
  8327  004D                     	ds	1
  8328  004E                     ??_main_initialize:	
  8329  004E                     ??_execCmd:	
  8330                           ; 1 bytes @ 0x2E
  8331                           
  8332  004E                     ??_setLEDBrightnessRange:	
  8333                           ; 1 bytes @ 0x2E
  8334                           
  8335  004E                     ??_setLEDPwr:	
  8336                           ; 1 bytes @ 0x2E
  8337                           
  8338                           
  8339                           	psect	maintext
  8340  1F92                     __pmaintext:	
  8341                           ; 1 bytes @ 0x2E
  8342 ;;
  8343 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8344 ;;
  8345 ;; *************** function _main *****************
  8346 ;; Defined at:
  8347 ;;		line 132 in file "main.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : B1F/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8365 ;;Total ram usage:        1 bytes
  8366 ;; Hardware stack levels required when called:   16
  8367 ;; This function calls:
  8368 ;;		_EUSART_Read
  8369 ;;		_SYSTEM_Initialize
  8370 ;;		_doAbsMove
  8371 ;;		_doRelMove
  8372 ;;		_execCmd
  8373 ;;		_main_initialize
  8374 ;;		_parseCmd
  8375 ;;		_printf
  8376 ;; This function is called by:
  8377 ;;		Startup code after reset
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           
  8382                           ;psect for function _main
  8383  1F92                     _main:	
  8384                           
  8385                           ;main.c: 135: SYSTEM_Initialize();
  8386                           
  8387                           ;incstack = 0
  8388                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8389  1F92  31A1  21D2  319F   	fcall	_SYSTEM_Initialize
  8390                           
  8391                           ;main.c: 136: _delay((unsigned long)((500)*(1000000/4000.0)));
  8392  1F95  30A3               	movlw	163
  8393  1F96  0022               	movlb	2	; select bank2
  8394  1F97  00EF               	movwf	??_main^(0+256)
  8395  1F98  3055               	movlw	85
  8396  1F99                     u10087:	
  8397  1F99  0B89               	decfsz	9,f
  8398  1F9A  2F99               	goto	u10087
  8399  1F9B  0BEF               	decfsz	??_main^(0+256),f
  8400  1F9C  2F99               	goto	u10087
  8401                           
  8402                           ;main.c: 142: (INTCONbits.GIE = 1);
  8403  1F9D  178B               	bsf	11,7	;volatile
  8404                           
  8405                           ;main.c: 145: (INTCONbits.PEIE = 1);
  8406  1F9E  170B               	bsf	11,6	;volatile
  8407                           
  8408                           ;main.c: 146: printf("\n\nsystem done\n");
  8409  1F9F  303D               	movlw	low (STR_5| (0+32768))
  8410  1FA0  0021               	movlb	1	; select bank1
  8411  1FA1  00A0               	movwf	printf@f^(0+128)
  8412  1FA2  30A9               	movlw	high (STR_5| (0+32768))
  8413  1FA3  00A1               	movwf	(printf@f^(0+128)+1)
  8414  1FA4  318E  26CE  319F   	fcall	_printf
  8415                           
  8416                           ;main.c: 152: main_initialize();
  8417  1FA7  318A  22E2  319F   	fcall	_main_initialize
  8418                           
  8419                           ;main.c: 175: }
  8420                           ;main.c: 178: switch(motionType){
  8421  1FAA  2FB2               	goto	l9540
  8422  1FAB                     l9560:	
  8423                           ;main.c: 179: case REL_MOVE: doRelMove(); break;
  8424                           
  8425  1FAB  318D  25A3  319F   	fcall	_doRelMove
  8426  1FAE  2FB2               	goto	l9540
  8427  1FAF                     l9562:	
  8428                           ;main.c: 180: case ABS_MOVE: doAbsMove(); break;
  8429                           
  8430  1FAF  3180  20DB  319F   	fcall	_doAbsMove
  8431  1FB2                     l9540:	
  8432                           ;main.c: 154: while (1)
  8433                           
  8434                           ;main.c: 182: }
  8435                           
  8436                           ;main.c: 181: default: break;
  8437                           
  8438                           
  8439                           ;main.c: 155: {
  8440                           ;main.c: 157: if (eusartRxCount!=0) {
  8441  1FB2  0020               	movlb	0	; select bank0
  8442  1FB3  0856               	movf	_eusartRxCount,w	;volatile
  8443  1FB4  1903               	btfsc	3,2
  8444  1FB5  2FDE               	goto	l9552
  8445                           
  8446                           ;main.c: 158: readdata[readIdx] = EUSART_Read();
  8447  1FB6  31A3  2382  319F   	fcall	_EUSART_Read
  8448  1FB9  0022               	movlb	2	; select bank2
  8449  1FBA  00EF               	movwf	??_main^(0+256)
  8450  1FBB  0020               	movlb	0	; select bank0
  8451  1FBC  0852               	movf	_readIdx,w
  8452  1FBD  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8453  1FBE  0086               	movwf	6
  8454  1FBF  3001               	movlw	1	; select bank3/4
  8455  1FC0  0087               	movwf	7
  8456  1FC1  0022               	movlb	2	; select bank2
  8457  1FC2  086F               	movf	??_main^(0+256),w
  8458  1FC3  0081               	movwf	1
  8459                           
  8460                           ;main.c: 159: if(readdata[readIdx] == '\n'){
  8461  1FC4  0020               	movlb	0	; select bank0
  8462  1FC5  0852               	movf	_readIdx,w
  8463  1FC6  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8464  1FC7  0086               	movwf	6
  8465  1FC8  3001               	movlw	1	; select bank3/4
  8466  1FC9  0087               	movwf	7
  8467  1FCA  300A               	movlw	10
  8468  1FCB  0601               	xorwf	1,w
  8469  1FCC  1D03               	btfss	3,2
  8470  1FCD  2FD9               	goto	l9550
  8471                           
  8472                           ;main.c: 160: readdata[readIdx] = 0;
  8473  1FCE  0852               	movf	_readIdx,w
  8474  1FCF  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8475  1FD0  0086               	movwf	6
  8476  1FD1  3001               	movlw	1	; select bank3/4
  8477  1FD2  0087               	movwf	7
  8478  1FD3  0181               	clrf	1
  8479                           
  8480                           ;main.c: 161: cmdRead = 1;
  8481  1FD4  3001               	movlw	1
  8482  1FD5  0022               	movlb	2	; select bank2
  8483  1FD6  00E0               	movwf	_cmdRead^(0+256)
  8484  1FD7  3000               	movlw	0
  8485  1FD8  00E1               	movwf	(_cmdRead^(0+256)+1)
  8486  1FD9                     l9550:	
  8487                           
  8488                           ;main.c: 162: }
  8489                           ;main.c: 163: readIdx++;
  8490  1FD9  3001               	movlw	1
  8491  1FDA  0020               	movlb	0	; select bank0
  8492  1FDB  07D2               	addwf	_readIdx,f
  8493  1FDC  3000               	movlw	0
  8494  1FDD  3DD3               	addwfc	_readIdx+1,f
  8495  1FDE                     l9552:	
  8496                           
  8497                           ;main.c: 164: }
  8498                           ;main.c: 167: if(cmdRead){
  8499  1FDE  0022               	movlb	2	; select bank2
  8500  1FDF  0860               	movf	_cmdRead^(0+256),w
  8501  1FE0  0461               	iorwf	(_cmdRead+1)^(0+256),w
  8502  1FE1  1903               	btfsc	3,2
  8503  1FE2  2FF6               	goto	l9566
  8504                           
  8505                           ;main.c: 169: parseCmd(readdata, &cmd_struct);
  8506  1FE3  30B8               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8507  1FE4  00EF               	movwf	??_main^(0+256)
  8508  1FE5  086F               	movf	??_main^(0+256),w
  8509  1FE6  0020               	movlb	0	; select bank0
  8510  1FE7  00C5               	movwf	parseCmd@s
  8511  1FE8  30CD               	movlw	(low (_readdata| (0+256)))& (0+255)
  8512  1FE9  3185  258B  319F   	fcall	_parseCmd
  8513                           
  8514                           ;main.c: 171: cmdRead = 0;
  8515  1FEC  0022               	movlb	2	; select bank2
  8516  1FED  01E0               	clrf	_cmdRead^(0+256)
  8517  1FEE  01E1               	clrf	(_cmdRead+1)^(0+256)
  8518                           
  8519                           ;main.c: 172: readIdx=0;
  8520  1FEF  0020               	movlb	0	; select bank0
  8521  1FF0  01D2               	clrf	_readIdx
  8522  1FF1  01D3               	clrf	_readIdx+1
  8523                           
  8524                           ;main.c: 173: execCmd(&cmd_struct);
  8525  1FF2  30B8               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8526  1FF3  3183  238E  319F   	fcall	_execCmd
  8527  1FF6                     l9566:	
  8528  1FF6  0020               	movlb	0	; select bank0
  8529  1FF7  0855               	movf	_motionType,w
  8530                           
  8531                           ; Switch size 1, requested type "space"
  8532                           ; Number of cases is 2, Range of values is 1 to 2
  8533                           ; switch strategies available:
  8534                           ; Name         Instructions Cycles
  8535                           ; simple_byte            7     4 (average)
  8536                           ; direct_byte           13     9 (fixed)
  8537                           ; jumptable            263     9 (fixed)
  8538                           ;	Chosen strategy is simple_byte
  8539  1FF8  3A01               	xorlw	1	; case 1
  8540  1FF9  1903               	skipnz
  8541  1FFA  2FAB               	goto	l9560
  8542  1FFB  3A03               	xorlw	3	; case 2
  8543  1FFC  1903               	skipnz
  8544  1FFD  2FAF               	goto	l9562
  8545  1FFE  2FB2               	goto	l9540
  8546  1FFF  2FB2               	goto	l9540
  8547  2000                     __end_of_main:	
  8548                           
  8549                           	psect	text1
  8550  058B                     __ptext1:	
  8551 ;; *************** function _parseCmd *****************
  8552 ;; Defined at:
  8553 ;;		line 5 in file "cmd_parser.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  cmdString       1    wreg     PTR unsigned char 
  8556 ;;		 -> readdata(20), 
  8557 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8558 ;;		 -> cmd_struct(21), 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8561 ;;		 -> readdata(20), 
  8562 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8563 ;;		 -> readdata(20), NULL(0), 
  8564 ;;  paramIter       2   40[BANK0 ] int 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8574 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8575 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8577 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8578 ;;Total ram usage:        6 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:    9
  8581 ;; This function calls:
  8582 ;;		_atoi
  8583 ;;		_stricmp
  8584 ;;		_strtok
  8585 ;; This function is called by:
  8586 ;;		_main
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           
  8591                           ;psect for function _parseCmd
  8592  058B                     _parseCmd:	
  8593                           
  8594                           ;incstack = 0
  8595                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8596                           ;parseCmd@cmdString stored from wreg
  8597  058B  0020               	movlb	0	; select bank0
  8598  058C  00C7               	movwf	parseCmd@cmdString
  8599                           
  8600                           ;cmd_parser.c: 6: int paramIter = 0;
  8601  058D  01C8               	clrf	parseCmd@paramIter
  8602  058E  01C9               	clrf	parseCmd@paramIter+1
  8603                           
  8604                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8605  058F  30FC               	movlw	low ((STR_40+6)| (0+32768))
  8606  0590  00BF               	movwf	strtok@s2
  8607  0591  30A9               	movlw	high ((STR_40+6)| (0+32768))
  8608  0592  00C0               	movwf	strtok@s2+1
  8609  0593  0847               	movf	parseCmd@cmdString,w
  8610  0594                     L23:	
  8611  0594  319A  224C  3185   	fcall	_strtok
  8612  0597  0020               	movlb	0	; select bank0
  8613  0598  00C6               	movwf	??_parseCmd
  8614  0599  0846               	movf	??_parseCmd,w
  8615  059A  00CA               	movwf	parseCmd@p
  8616  059B  084A               	movf	parseCmd@p,w
  8617  059C  1903               	btfsc	3,2
  8618  059D  0008               	return
  8619                           
  8620                           ;cmd_parser.c: 9: if (paramIter == 0){
  8621  059E  0848               	movf	parseCmd@paramIter,w
  8622  059F  0449               	iorwf	parseCmd@paramIter+1,w
  8623  05A0  1D03               	btfss	3,2
  8624  05A1  2F2C               	goto	l9140
  8625                           
  8626                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8627  05A2  301E               	movlw	low (STR_59| (0+32768))
  8628  05A3  00B3               	movwf	stricmp@s2
  8629  05A4  30B0               	movlw	high (STR_59| (0+32768))
  8630  05A5  00B4               	movwf	stricmp@s2+1
  8631  05A6  084A               	movf	parseCmd@p,w
  8632  05A7  31A6  269D  3185   	fcall	_stricmp
  8633  05AA  0020               	movlb	0	; select bank0
  8634  05AB  0833               	movf	?_stricmp,w
  8635  05AC  0434               	iorwf	?_stricmp+1,w
  8636  05AD  1D03               	btfss	3,2
  8637  05AE  2DB1               	goto	l9042
  8638                           
  8639                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8640  05AF  3002               	movlw	2
  8641  05B0  2F0E               	goto	L22
  8642  05B1                     l9042:	
  8643                           
  8644                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8645  05B1  3022               	movlw	low (STR_60| (0+32768))
  8646  05B2  00B3               	movwf	stricmp@s2
  8647  05B3  30B0               	movlw	high (STR_60| (0+32768))
  8648  05B4  00B4               	movwf	stricmp@s2+1
  8649  05B5  084A               	movf	parseCmd@p,w
  8650  05B6  31A6  269D  3185   	fcall	_stricmp
  8651  05B9  0020               	movlb	0	; select bank0
  8652  05BA  0833               	movf	?_stricmp,w
  8653  05BB  0434               	iorwf	?_stricmp+1,w
  8654  05BC  1D03               	btfss	3,2
  8655  05BD  2DC5               	goto	l9046
  8656                           
  8657                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8658  05BE  0845               	movf	parseCmd@s,w
  8659  05BF  0086               	movwf	6
  8660  05C0  3001               	movlw	1	; select bank2/3
  8661  05C1  0087               	movwf	7
  8662  05C2  0181               	clrf	1
  8663  05C3  0A81               	incf	1,f
  8664  05C4  2F51               	goto	l9148
  8665  05C5                     l9046:	
  8666                           
  8667                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8668  05C5  3026               	movlw	low (STR_61| (0+32768))
  8669  05C6  00B3               	movwf	stricmp@s2
  8670  05C7  30B0               	movlw	high (STR_61| (0+32768))
  8671  05C8  00B4               	movwf	stricmp@s2+1
  8672  05C9  084A               	movf	parseCmd@p,w
  8673  05CA  31A6  269D  3185   	fcall	_stricmp
  8674  05CD  0020               	movlb	0	; select bank0
  8675  05CE  0833               	movf	?_stricmp,w
  8676  05CF  0434               	iorwf	?_stricmp+1,w
  8677  05D0  1D03               	btfss	3,2
  8678  05D1  2DD4               	goto	l9050
  8679                           
  8680                           ;cmd_parser.c: 15: s->c = CMD_P;
  8681  05D2  3003               	movlw	3
  8682  05D3  2F0E               	goto	L22
  8683  05D4                     l9050:	
  8684                           
  8685                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8686  05D4  3024               	movlw	low ((STR_60+2)| (0+32768))
  8687  05D5  00B3               	movwf	stricmp@s2
  8688  05D6  30B0               	movlw	high ((STR_60+2)| (0+32768))
  8689  05D7  00B4               	movwf	stricmp@s2+1
  8690  05D8  084A               	movf	parseCmd@p,w
  8691  05D9  31A6  269D  3185   	fcall	_stricmp
  8692  05DC  0020               	movlb	0	; select bank0
  8693  05DD  0833               	movf	?_stricmp,w
  8694  05DE  0434               	iorwf	?_stricmp+1,w
  8695  05DF  1D03               	btfss	3,2
  8696  05E0  2DE3               	goto	l9054
  8697                           
  8698                           ;cmd_parser.c: 17: s->c = CMD_STOP;
  8699  05E1  3004               	movlw	4
  8700  05E2  2F0E               	goto	L22
  8701  05E3                     l9054:	
  8702                           
  8703                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8704  05E3  3005               	movlw	low (STR_63| (0+32768))
  8705  05E4  00B3               	movwf	stricmp@s2
  8706  05E5  30B0               	movlw	high (STR_63| (0+32768))
  8707  05E6  00B4               	movwf	stricmp@s2+1
  8708  05E7  084A               	movf	parseCmd@p,w
  8709  05E8  31A6  269D  3185   	fcall	_stricmp
  8710  05EB  0020               	movlb	0	; select bank0
  8711  05EC  0833               	movf	?_stricmp,w
  8712  05ED  0434               	iorwf	?_stricmp+1,w
  8713  05EE  1D03               	btfss	3,2
  8714  05EF  2DF2               	goto	l9058
  8715                           
  8716                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8717  05F0  3006               	movlw	6
  8718  05F1  2F0E               	goto	L22
  8719  05F2                     l9058:	
  8720                           
  8721                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8722  05F2  300F               	movlw	low (STR_64| (0+32768))
  8723  05F3  00B3               	movwf	stricmp@s2
  8724  05F4  30B0               	movlw	high (STR_64| (0+32768))
  8725  05F5  00B4               	movwf	stricmp@s2+1
  8726  05F6  084A               	movf	parseCmd@p,w
  8727  05F7  31A6  269D  3185   	fcall	_stricmp
  8728  05FA  0020               	movlb	0	; select bank0
  8729  05FB  0833               	movf	?_stricmp,w
  8730  05FC  0434               	iorwf	?_stricmp+1,w
  8731  05FD  1D03               	btfss	3,2
  8732  05FE  2E01               	goto	l9062
  8733                           
  8734                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8735  05FF  3007               	movlw	7
  8736  0600  2F0E               	goto	L22
  8737  0601                     l9062:	
  8738                           
  8739                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8740  0601  304A               	movlw	low (STR_65| (0+32768))
  8741  0602  00B3               	movwf	stricmp@s2
  8742  0603  30B0               	movlw	high (STR_65| (0+32768))
  8743  0604  00B4               	movwf	stricmp@s2+1
  8744  0605  084A               	movf	parseCmd@p,w
  8745  0606  31A6  269D  3185   	fcall	_stricmp
  8746  0609  0020               	movlb	0	; select bank0
  8747  060A  0833               	movf	?_stricmp,w
  8748  060B  0434               	iorwf	?_stricmp+1,w
  8749  060C  1D03               	btfss	3,2
  8750  060D  2E10               	goto	l9066
  8751                           
  8752                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8753  060E  3008               	movlw	8
  8754  060F  2F0E               	goto	L22
  8755  0610                     l9066:	
  8756                           
  8757                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8758  0610  30C6               	movlw	low (STR_66| (0+32768))
  8759  0611  00B3               	movwf	stricmp@s2
  8760  0612  30A9               	movlw	high (STR_66| (0+32768))
  8761  0613  00B4               	movwf	stricmp@s2+1
  8762  0614  084A               	movf	parseCmd@p,w
  8763  0615  31A6  269D  3185   	fcall	_stricmp
  8764  0618  0020               	movlb	0	; select bank0
  8765  0619  0833               	movf	?_stricmp,w
  8766  061A  0434               	iorwf	?_stricmp+1,w
  8767  061B  1D03               	btfss	3,2
  8768  061C  2E1F               	goto	l9070
  8769                           
  8770                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8771  061D  3009               	movlw	9
  8772  061E  2F0E               	goto	L22
  8773  061F                     l9070:	
  8774                           
  8775                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8776  061F  30CE               	movlw	low (STR_67| (0+32768))
  8777  0620  00B3               	movwf	stricmp@s2
  8778  0621  30A9               	movlw	high (STR_67| (0+32768))
  8779  0622  00B4               	movwf	stricmp@s2+1
  8780  0623  084A               	movf	parseCmd@p,w
  8781  0624  31A6  269D  3185   	fcall	_stricmp
  8782  0627  0020               	movlb	0	; select bank0
  8783  0628  0833               	movf	?_stricmp,w
  8784  0629  0434               	iorwf	?_stricmp+1,w
  8785  062A  1D03               	btfss	3,2
  8786  062B  2E2E               	goto	l9074
  8787                           
  8788                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8789  062C  300A               	movlw	10
  8790  062D  2F0E               	goto	L22
  8791  062E                     l9074:	
  8792                           
  8793                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8794  062E  3073               	movlw	low (STR_68| (0+32768))
  8795  062F  00B3               	movwf	stricmp@s2
  8796  0630  30A9               	movlw	high (STR_68| (0+32768))
  8797  0631  00B4               	movwf	stricmp@s2+1
  8798  0632  084A               	movf	parseCmd@p,w
  8799  0633  31A6  269D  3185   	fcall	_stricmp
  8800  0636  0020               	movlb	0	; select bank0
  8801  0637  0833               	movf	?_stricmp,w
  8802  0638  0434               	iorwf	?_stricmp+1,w
  8803  0639  1D03               	btfss	3,2
  8804  063A  2E3D               	goto	l9078
  8805                           
  8806                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8807  063B  300B               	movlw	11
  8808  063C  2F0E               	goto	L22
  8809  063D                     l9078:	
  8810                           
  8811                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8812  063D  304C               	movlw	low (STR_69| (0+32768))
  8813  063E  00B3               	movwf	stricmp@s2
  8814  063F  30A9               	movlw	high (STR_69| (0+32768))
  8815  0640  00B4               	movwf	stricmp@s2+1
  8816  0641  084A               	movf	parseCmd@p,w
  8817  0642  31A6  269D  3185   	fcall	_stricmp
  8818  0645  0020               	movlb	0	; select bank0
  8819  0646  0833               	movf	?_stricmp,w
  8820  0647  0434               	iorwf	?_stricmp+1,w
  8821  0648  1D03               	btfss	3,2
  8822  0649  2E4C               	goto	l9082
  8823                           
  8824                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8825  064A  300C               	movlw	12
  8826  064B  2F0E               	goto	L22
  8827  064C                     l9082:	
  8828                           
  8829                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8830  064C  302E               	movlw	low (STR_70| (0+32768))
  8831  064D  00B3               	movwf	stricmp@s2
  8832  064E  30A9               	movlw	high (STR_70| (0+32768))
  8833  064F  00B4               	movwf	stricmp@s2+1
  8834  0650  084A               	movf	parseCmd@p,w
  8835  0651  31A6  269D  3185   	fcall	_stricmp
  8836  0654  0020               	movlb	0	; select bank0
  8837  0655  0833               	movf	?_stricmp,w
  8838  0656  0434               	iorwf	?_stricmp+1,w
  8839  0657  1D03               	btfss	3,2
  8840  0658  2E5B               	goto	l9086
  8841                           
  8842                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8843  0659  300D               	movlw	13
  8844  065A  2F0E               	goto	L22
  8845  065B                     l9086:	
  8846                           
  8847                           ;cmd_parser.c: 34: else if(stricmp(p,"heater1off") == 0)
  8848  065B  307F               	movlw	low (STR_71| (0+32768))
  8849  065C  00B3               	movwf	stricmp@s2
  8850  065D  30A9               	movlw	high (STR_71| (0+32768))
  8851  065E  00B4               	movwf	stricmp@s2+1
  8852  065F  084A               	movf	parseCmd@p,w
  8853  0660  31A6  269D  3185   	fcall	_stricmp
  8854  0663  0020               	movlb	0	; select bank0
  8855  0664  0833               	movf	?_stricmp,w
  8856  0665  0434               	iorwf	?_stricmp+1,w
  8857  0666  1D03               	btfss	3,2
  8858  0667  2E6A               	goto	l9090
  8859                           
  8860                           ;cmd_parser.c: 35: s->c = CMD_HEATER_H1OFF;
  8861  0668  300E               	movlw	14
  8862  0669  2F0E               	goto	L22
  8863  066A                     l9090:	
  8864                           
  8865                           ;cmd_parser.c: 36: else if(stricmp(p,"heater2on") == 0)
  8866  066A  30A0               	movlw	low (STR_72| (0+32768))
  8867  066B  00B3               	movwf	stricmp@s2
  8868  066C  30A9               	movlw	high (STR_72| (0+32768))
  8869  066D  00B4               	movwf	stricmp@s2+1
  8870  066E  084A               	movf	parseCmd@p,w
  8871  066F  31A6  269D  3185   	fcall	_stricmp
  8872  0672  0020               	movlb	0	; select bank0
  8873  0673  0833               	movf	?_stricmp,w
  8874  0674  0434               	iorwf	?_stricmp+1,w
  8875  0675  1D03               	btfss	3,2
  8876  0676  2E79               	goto	l9094
  8877                           
  8878                           ;cmd_parser.c: 37: s->c = CMD_HEATER_H2ON;
  8879  0677  300F               	movlw	15
  8880  0678  2F0E               	goto	L22
  8881  0679                     l9094:	
  8882                           
  8883                           ;cmd_parser.c: 38: else if(stricmp(p,"ledgain") == 0)
  8884  0679  30D6               	movlw	low (STR_73| (0+32768))
  8885  067A  00B3               	movwf	stricmp@s2
  8886  067B  30A9               	movlw	high (STR_73| (0+32768))
  8887  067C  00B4               	movwf	stricmp@s2+1
  8888  067D  084A               	movf	parseCmd@p,w
  8889  067E  31A6  269D  3185   	fcall	_stricmp
  8890  0681  0020               	movlb	0	; select bank0
  8891  0682  0833               	movf	?_stricmp,w
  8892  0683  0434               	iorwf	?_stricmp+1,w
  8893  0684  1D03               	btfss	3,2
  8894  0685  2E88               	goto	l9098
  8895                           
  8896                           ;cmd_parser.c: 39: s->c = CMD_HEATER_GAIN;
  8897  0686  3010               	movlw	16
  8898  0687  2F0E               	goto	L22
  8899  0688                     l9098:	
  8900                           
  8901                           ;cmd_parser.c: 40: else if(stricmp(p,"ledpwr") == 0)
  8902  0688  3005               	movlw	low (STR_74| (0+32768))
  8903  0689  00B3               	movwf	stricmp@s2
  8904  068A  30AA               	movlw	high (STR_74| (0+32768))
  8905  068B  00B4               	movwf	stricmp@s2+1
  8906  068C  084A               	movf	parseCmd@p,w
  8907  068D  31A6  269D  3185   	fcall	_stricmp
  8908  0690  0020               	movlb	0	; select bank0
  8909  0691  0833               	movf	?_stricmp,w
  8910  0692  0434               	iorwf	?_stricmp+1,w
  8911  0693  1D03               	btfss	3,2
  8912  0694  2E97               	goto	l9102
  8913                           
  8914                           ;cmd_parser.c: 41: s->c = CMD_HEATER_PWR;
  8915  0695  3011               	movlw	17
  8916  0696  2F0E               	goto	L22
  8917  0697                     l9102:	
  8918                           
  8919                           ;cmd_parser.c: 42: else if(stricmp(p,"toggleheater") == 0)
  8920  0697  305A               	movlw	low (STR_75| (0+32768))
  8921  0698  00B3               	movwf	stricmp@s2
  8922  0699  30A9               	movlw	high (STR_75| (0+32768))
  8923  069A  00B4               	movwf	stricmp@s2+1
  8924  069B  084A               	movf	parseCmd@p,w
  8925  069C  31A6  269D  3185   	fcall	_stricmp
  8926  069F  0020               	movlb	0	; select bank0
  8927  06A0  0833               	movf	?_stricmp,w
  8928  06A1  0434               	iorwf	?_stricmp+1,w
  8929  06A2  1D03               	btfss	3,2
  8930  06A3  2EA6               	goto	l9106
  8931                           
  8932                           ;cmd_parser.c: 43: s->c = CMD_HEATER_TOGGLE;
  8933  06A4  3012               	movlw	18
  8934  06A5  2F0E               	goto	L22
  8935  06A6                     l9106:	
  8936                           
  8937                           ;cmd_parser.c: 44: else if(stricmp(p,"timeheater") == 0)
  8938  06A6  308A               	movlw	low (STR_76| (0+32768))
  8939  06A7  00B3               	movwf	stricmp@s2
  8940  06A8  30A9               	movlw	high (STR_76| (0+32768))
  8941  06A9  00B4               	movwf	stricmp@s2+1
  8942  06AA  084A               	movf	parseCmd@p,w
  8943  06AB  31A6  269D  3185   	fcall	_stricmp
  8944  06AE  0020               	movlb	0	; select bank0
  8945  06AF  0833               	movf	?_stricmp,w
  8946  06B0  0434               	iorwf	?_stricmp+1,w
  8947  06B1  1D03               	btfss	3,2
  8948  06B2  2EB5               	goto	l9110
  8949                           
  8950                           ;cmd_parser.c: 45: s->c = CMD_HEATER_TIMED;
  8951  06B3  3013               	movlw	19
  8952  06B4  2F0E               	goto	L22
  8953  06B5                     l9110:	
  8954                           
  8955                           ;cmd_parser.c: 46: else if(stricmp(p,"getA") == 0)
  8956  06B5  3000               	movlw	low (STR_77| (0+32768))
  8957  06B6  00B3               	movwf	stricmp@s2
  8958  06B7  30B0               	movlw	high (STR_77| (0+32768))
  8959  06B8  00B4               	movwf	stricmp@s2+1
  8960  06B9  084A               	movf	parseCmd@p,w
  8961  06BA  31A6  269D  3185   	fcall	_stricmp
  8962  06BD  0020               	movlb	0	; select bank0
  8963  06BE  0833               	movf	?_stricmp,w
  8964  06BF  0434               	iorwf	?_stricmp+1,w
  8965  06C0  1D03               	btfss	3,2
  8966  06C1  2EC4               	goto	l9114
  8967                           
  8968                           ;cmd_parser.c: 47: s->c = CMD_GET_ACTIVE;
  8969  06C2  3014               	movlw	20
  8970  06C3  2F0E               	goto	L22
  8971  06C4                     l9114:	
  8972                           
  8973                           ;cmd_parser.c: 48: else if(stricmp(p,"getM") == 0)
  8974  06C4  300A               	movlw	low (STR_78| (0+32768))
  8975  06C5  00B3               	movwf	stricmp@s2
  8976  06C6  30B0               	movlw	high (STR_78| (0+32768))
  8977  06C7  00B4               	movwf	stricmp@s2+1
  8978  06C8  084A               	movf	parseCmd@p,w
  8979  06C9  31A6  269D  3185   	fcall	_stricmp
  8980  06CC  0020               	movlb	0	; select bank0
  8981  06CD  0833               	movf	?_stricmp,w
  8982  06CE  0434               	iorwf	?_stricmp+1,w
  8983  06CF  1D03               	btfss	3,2
  8984  06D0  2ED3               	goto	l9118
  8985                           
  8986                           ;cmd_parser.c: 49: s->c = CMD_GET_MOVABLE;
  8987  06D1  3015               	movlw	21
  8988  06D2  2F0E               	goto	L22
  8989  06D3                     l9118:	
  8990                           
  8991                           ;cmd_parser.c: 50: else if(stricmp(p,"mstatus") == 0)
  8992  06D3  30DE               	movlw	low (STR_79| (0+32768))
  8993  06D4  00B3               	movwf	stricmp@s2
  8994  06D5  30A9               	movlw	high (STR_79| (0+32768))
  8995  06D6  00B4               	movwf	stricmp@s2+1
  8996  06D7  084A               	movf	parseCmd@p,w
  8997  06D8  31A6  269D  3185   	fcall	_stricmp
  8998  06DB  0020               	movlb	0	; select bank0
  8999  06DC  0833               	movf	?_stricmp,w
  9000  06DD  0434               	iorwf	?_stricmp+1,w
  9001  06DE  1D03               	btfss	3,2
  9002  06DF  2EE2               	goto	l9122
  9003                           
  9004                           ;cmd_parser.c: 51: s->c = CMD_MOTION_STATUS;
  9005  06E0  3016               	movlw	22
  9006  06E1  2F0E               	goto	L22
  9007  06E2                     l9122:	
  9008                           
  9009                           ;cmd_parser.c: 52: else if(stricmp(p,"domove") == 0)
  9010  06E2  30FE               	movlw	low (STR_80| (0+32768))
  9011  06E3  00B3               	movwf	stricmp@s2
  9012  06E4  30A9               	movlw	high (STR_80| (0+32768))
  9013  06E5  00B4               	movwf	stricmp@s2+1
  9014  06E6  084A               	movf	parseCmd@p,w
  9015  06E7  31A6  269D  3185   	fcall	_stricmp
  9016  06EA  0020               	movlb	0	; select bank0
  9017  06EB  0833               	movf	?_stricmp,w
  9018  06EC  0434               	iorwf	?_stricmp+1,w
  9019  06ED  1D03               	btfss	3,2
  9020  06EE  2EF1               	goto	l9126
  9021                           
  9022                           ;cmd_parser.c: 53: s->c = CMD_DOMOVE;
  9023  06EF  3017               	movlw	23
  9024  06F0  2F0E               	goto	L22
  9025  06F1                     l9126:	
  9026                           
  9027                           ;cmd_parser.c: 54: else if(stricmp(p,"comm") == 0)
  9028  06F1  3019               	movlw	low (STR_81| (0+32768))
  9029  06F2  00B3               	movwf	stricmp@s2
  9030  06F3  30B0               	movlw	high (STR_81| (0+32768))
  9031  06F4  00B4               	movwf	stricmp@s2+1
  9032  06F5  084A               	movf	parseCmd@p,w
  9033  06F6  31A6  269D  3185   	fcall	_stricmp
  9034  06F9  0020               	movlb	0	; select bank0
  9035  06FA  0833               	movf	?_stricmp,w
  9036  06FB  0434               	iorwf	?_stricmp+1,w
  9037  06FC  1D03               	btfss	3,2
  9038  06FD  2F00               	goto	l9130
  9039                           
  9040                           ;cmd_parser.c: 55: s->c = CMD_COMM_CHECK;
  9041  06FE  3018               	movlw	24
  9042  06FF  2F0E               	goto	L22
  9043  0700                     l9130:	
  9044                           
  9045                           ;cmd_parser.c: 56: else if(stricmp(p,"ping") == 0)
  9046  0700  3014               	movlw	low (STR_82| (0+32768))
  9047  0701  00B3               	movwf	stricmp@s2
  9048  0702  30B0               	movlw	high (STR_82| (0+32768))
  9049  0703  00B4               	movwf	stricmp@s2+1
  9050  0704  084A               	movf	parseCmd@p,w
  9051  0705  31A6  269D  3185   	fcall	_stricmp
  9052  0708  0020               	movlb	0	; select bank0
  9053  0709  0833               	movf	?_stricmp,w
  9054  070A  0434               	iorwf	?_stricmp+1,w
  9055  070B  1D03               	btfss	3,2
  9056  070C  2F16               	goto	l9134
  9057                           
  9058                           ;cmd_parser.c: 57: s->c = CMD_PING;
  9059  070D  3019               	movlw	25
  9060  070E                     L22:	
  9061  070E  00C6               	movwf	??_parseCmd
  9062  070F  0845               	movf	parseCmd@s,w
  9063  0710  0086               	movwf	6
  9064  0711  3001               	movlw	1	; select bank2/3
  9065  0712  0087               	movwf	7
  9066  0713  0846               	movf	??_parseCmd,w
  9067  0714  0081               	movwf	1
  9068  0715  2F51               	goto	l9148
  9069  0716                     l9134:	
  9070                           
  9071                           ;cmd_parser.c: 58: else if(stricmp(p,"softreset") == 0)
  9072  0716  30AA               	movlw	low (STR_83| (0+32768))
  9073  0717  00B3               	movwf	stricmp@s2
  9074  0718  30A9               	movlw	high (STR_83| (0+32768))
  9075  0719  00B4               	movwf	stricmp@s2+1
  9076  071A  084A               	movf	parseCmd@p,w
  9077  071B  31A6  269D  3185   	fcall	_stricmp
  9078  071E  0020               	movlb	0	; select bank0
  9079  071F  0833               	movf	?_stricmp,w
  9080  0720  0434               	iorwf	?_stricmp+1,w
  9081  0721  1D03               	btfss	3,2
  9082  0722  2F25               	goto	l9138
  9083  0723  0001               	reset	;# 
  9084  0724  2F51               	goto	l9148
  9085  0725                     l9138:	
  9086                           
  9087                           ;cmd_parser.c: 61: else
  9088                           ;cmd_parser.c: 62: s->c = CMD_NONE;
  9089  0725  0020               	movlb	0	; select bank0
  9090  0726  0845               	movf	parseCmd@s,w
  9091  0727  0086               	movwf	6
  9092  0728  3001               	movlw	1	; select bank2/3
  9093  0729  0087               	movwf	7
  9094  072A  0181               	clrf	1
  9095                           
  9096                           ;cmd_parser.c: 63: }
  9097  072B  2F51               	goto	l9148
  9098  072C                     l9140:	
  9099                           
  9100                           ;cmd_parser.c: 64: else if(paramIter == 1){
  9101  072C  0348               	decf	parseCmd@paramIter,w
  9102  072D  0449               	iorwf	parseCmd@paramIter+1,w
  9103  072E  1D03               	btfss	3,2
  9104  072F  2F3E               	goto	l9144
  9105                           
  9106                           ;cmd_parser.c: 65: s->p1.paramI = atoi(p);
  9107  0730  084A               	movf	parseCmd@p,w
  9108  0731  3192  221D  3185   	fcall	_atoi
  9109  0734  0020               	movlb	0	; select bank0
  9110  0735  0A45               	incf	parseCmd@s,w
  9111  0736  0086               	movwf	6
  9112  0737  3001               	movlw	1	; select bank2/3
  9113  0738  0087               	movwf	7
  9114  0739  0837               	movf	?_atoi,w
  9115  073A  3FC0               	movwi [0]fsr1
  9116  073B  0838               	movf	?_atoi+1,w
  9117  073C  3FC1               	movwi [1]fsr1
  9118                           
  9119                           ;cmd_parser.c: 66: }
  9120  073D  2F51               	goto	l9148
  9121  073E                     l9144:	
  9122                           
  9123                           ;cmd_parser.c: 67: else if(paramIter == 2){
  9124  073E  3002               	movlw	2
  9125  073F  0648               	xorwf	parseCmd@paramIter,w
  9126  0740  0449               	iorwf	parseCmd@paramIter+1,w
  9127  0741  1D03               	btfss	3,2
  9128  0742  2F51               	goto	l9148
  9129                           
  9130                           ;cmd_parser.c: 69: s->p2.paramI = atoi(p);
  9131  0743  084A               	movf	parseCmd@p,w
  9132  0744  3192  221D  3185   	fcall	_atoi
  9133  0747  0020               	movlb	0	; select bank0
  9134  0748  0845               	movf	parseCmd@s,w
  9135  0749  3E0B               	addlw	11
  9136  074A  0086               	movwf	6
  9137  074B  3001               	movlw	1	; select bank2/3
  9138  074C  0087               	movwf	7
  9139  074D  0837               	movf	?_atoi,w
  9140  074E  3FC0               	movwi [0]fsr1
  9141  074F  0838               	movf	?_atoi+1,w
  9142  0750  3FC1               	movwi [1]fsr1
  9143  0751                     l9148:	
  9144                           
  9145                           ;cmd_parser.c: 70: }
  9146                           ;cmd_parser.c: 72: paramIter++;
  9147  0751  3001               	movlw	1
  9148  0752  0020               	movlb	0	; select bank0
  9149  0753  07C8               	addwf	parseCmd@paramIter,f
  9150  0754  3000               	movlw	0
  9151  0755  3DC9               	addwfc	parseCmd@paramIter+1,f
  9152  0756  30FC               	movlw	low ((STR_40+6)| (0+32768))
  9153  0757  00BF               	movwf	strtok@s2
  9154  0758  30A9               	movlw	high ((STR_40+6)| (0+32768))
  9155  0759  00C0               	movwf	strtok@s2+1
  9156  075A  3000               	movlw	0
  9157  075B  2D94               	goto	L23
  9158  075C                     __end_of_parseCmd:	
  9159                           
  9160                           	psect	text2
  9161  1A4C                     __ptext2:	
  9162 ;; *************** function _strtok *****************
  9163 ;; Defined at:
  9164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  s1              1    wreg     PTR unsigned char 
  9167 ;;		 -> readdata(20), NULL(0), 
  9168 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  9169 ;;		 -> STR_58(2), STR_57(2), 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  9172 ;;		 -> readdata(20), NULL(0), 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      PTR unsigned char 
  9175 ;; Registers used:
  9176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9184 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9185 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9186 ;;Total ram usage:        6 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    8
  9189 ;; This function calls:
  9190 ;;		_strcspn
  9191 ;;		_strspn
  9192 ;; This function is called by:
  9193 ;;		_parseCmd
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           
  9198                           ;psect for function _strtok
  9199  1A4C                     _strtok:	
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9203                           ;strtok@s1 stored from wreg
  9204  1A4C  0020               	movlb	0	; select bank0
  9205  1A4D  00C4               	movwf	strtok@s1
  9206  1A4E  0844               	movf	strtok@s1,w
  9207  1A4F  1D03               	btfss	3,2
  9208  1A50  2A55               	goto	l6552
  9209  1A51  0854               	movf	strtok@sp,w
  9210  1A52  00C1               	movwf	??_strtok
  9211  1A53  0841               	movf	??_strtok,w
  9212  1A54  00C4               	movwf	strtok@s1
  9213  1A55                     l6552:	
  9214  1A55  0844               	movf	strtok@s1,w
  9215  1A56  1D03               	btfss	3,2
  9216  1A57  2A5A               	goto	l6558
  9217  1A58  3000               	movlw	0
  9218  1A59  0008               	return
  9219  1A5A                     l6558:	
  9220  1A5A  0840               	movf	strtok@s2+1,w
  9221  1A5B  00B9               	movwf	strspn@s2+1
  9222  1A5C  083F               	movf	strtok@s2,w
  9223  1A5D  00B8               	movwf	strspn@s2
  9224  1A5E  0844               	movf	strtok@s1,w
  9225  1A5F  31A6  263A  319A   	fcall	_strspn
  9226  1A62  0020               	movlb	0	; select bank0
  9227  1A63  0838               	movf	?_strspn,w
  9228  1A64  00C1               	movwf	??_strtok
  9229  1A65  0841               	movf	??_strtok,w
  9230  1A66  07C4               	addwf	strtok@s1,f
  9231  1A67  0844               	movf	strtok@s1,w
  9232  1A68  0086               	movwf	6
  9233  1A69  3001               	movlw	1	; select bank2/3
  9234  1A6A  0087               	movwf	7
  9235  1A6B  0801               	movf	1,w
  9236  1A6C  1D03               	btfss	3,2
  9237  1A6D  2A71               	goto	l6566
  9238  1A6E  01D4               	clrf	strtok@sp
  9239  1A6F  3000               	movlw	0
  9240  1A70  0008               	return
  9241  1A71                     l6566:	
  9242  1A71  0840               	movf	strtok@s2+1,w
  9243  1A72  00B9               	movwf	strcspn@s2+1
  9244  1A73  083F               	movf	strtok@s2,w
  9245  1A74  00B8               	movwf	strcspn@s2
  9246  1A75  0844               	movf	strtok@s1,w
  9247  1A76  31A6  260A  319A   	fcall	_strcspn
  9248  1A79  0020               	movlb	0	; select bank0
  9249  1A7A  0838               	movf	?_strcspn,w
  9250  1A7B  00C1               	movwf	??_strtok
  9251  1A7C  0839               	movf	?_strcspn+1,w
  9252  1A7D  00C2               	movwf	??_strtok+1
  9253  1A7E  0844               	movf	strtok@s1,w
  9254  1A7F  0741               	addwf	??_strtok,w
  9255  1A80  00C3               	movwf	??_strtok+2
  9256  1A81  0843               	movf	??_strtok+2,w
  9257  1A82  00D4               	movwf	strtok@sp
  9258  1A83  0854               	movf	strtok@sp,w
  9259  1A84  0086               	movwf	6
  9260  1A85  3001               	movlw	1	; select bank2/3
  9261  1A86  0087               	movwf	7
  9262  1A87  0801               	movf	1,w
  9263  1A88  1903               	btfsc	3,2
  9264  1A89  2A94               	goto	l6574
  9265  1A8A  0854               	movf	strtok@sp,w
  9266  1A8B  0086               	movwf	6
  9267  1A8C  3001               	movlw	1	; select bank2/3
  9268  1A8D  0087               	movwf	7
  9269  1A8E  0181               	clrf	1
  9270  1A8F  3001               	movlw	1
  9271  1A90  00C1               	movwf	??_strtok
  9272  1A91  0841               	movf	??_strtok,w
  9273  1A92  07D4               	addwf	strtok@sp,f
  9274  1A93  2A95               	goto	l6576
  9275  1A94                     l6574:	
  9276  1A94  01D4               	clrf	strtok@sp
  9277  1A95                     l6576:	
  9278  1A95  0844               	movf	strtok@s1,w
  9279  1A96  0008               	return
  9280  1A97                     __end_of_strtok:	
  9281                           
  9282                           	psect	text3
  9283  263A                     __ptext3:	
  9284 ;; *************** function _strspn *****************
  9285 ;; Defined at:
  9286 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;  s1              1    wreg     PTR const unsigned char 
  9289 ;;		 -> readdata(20), NULL(0), 
  9290 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9291 ;;		 -> STR_58(2), STR_57(2), 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9294 ;;		 -> readdata(20), NULL(0), 
  9295 ;;  i               2   28[BANK0 ] unsigned int 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  2   24[BANK0 ] unsigned int 
  9298 ;; Registers used:
  9299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9306 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9308 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9309 ;;Total ram usage:        7 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    7
  9312 ;; This function calls:
  9313 ;;		_strchr
  9314 ;; This function is called by:
  9315 ;;		_strtok
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           
  9320                           ;psect for function _strspn
  9321  263A                     _strspn:	
  9322                           
  9323                           ;incstack = 0
  9324                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9325                           ;strspn@s1 stored from wreg
  9326  263A  0020               	movlb	0	; select bank0
  9327  263B  00BE               	movwf	strspn@s1
  9328  263C  01BC               	clrf	strspn@i
  9329  263D  01BD               	clrf	strspn@i+1
  9330  263E  2E47               	goto	l5998
  9331  263F                     l5996:	
  9332  263F  3001               	movlw	1
  9333  2640  00BA               	movwf	??_strspn
  9334  2641  083A               	movf	??_strspn,w
  9335  2642  07BE               	addwf	strspn@s1,f
  9336  2643  3001               	movlw	1
  9337  2644  07BC               	addwf	strspn@i,f
  9338  2645  3000               	movlw	0
  9339  2646  3DBD               	addwfc	strspn@i+1,f
  9340  2647                     l5998:	
  9341  2647  083E               	movf	strspn@s1,w
  9342  2648  0086               	movwf	6
  9343  2649  3001               	movlw	1	; select bank2/3
  9344  264A  0087               	movwf	7
  9345  264B  0801               	movf	1,w
  9346  264C  1903               	btfsc	3,2
  9347  264D  2E65               	goto	l6002
  9348  264E  0839               	movf	strspn@s2+1,w
  9349  264F  00B2               	movwf	strchr@ptr+1
  9350  2650  0838               	movf	strspn@s2,w
  9351  2651  00B1               	movwf	strchr@ptr
  9352  2652  083E               	movf	strspn@s1,w
  9353  2653  0086               	movwf	6
  9354  2654  3001               	movlw	1	; select bank2/3
  9355  2655  0087               	movwf	7
  9356  2656  0801               	movf	1,w
  9357  2657  00BA               	movwf	??_strspn
  9358  2658  01BB               	clrf	??_strspn+1
  9359  2659  083A               	movf	??_strspn,w
  9360  265A  00B3               	movwf	strchr@chr
  9361  265B  083B               	movf	??_strspn+1,w
  9362  265C  00B4               	movwf	strchr@chr+1
  9363  265D  31A2  225F  31A6   	fcall	_strchr
  9364  2660  0020               	movlb	0	; select bank0
  9365  2661  0831               	movf	?_strchr,w
  9366  2662  0432               	iorwf	?_strchr+1,w
  9367  2663  1D03               	btfss	3,2
  9368  2664  2E3F               	goto	l5996
  9369  2665                     l6002:	
  9370  2665  083D               	movf	strspn@i+1,w
  9371  2666  00B9               	movwf	?_strspn+1
  9372  2667  083C               	movf	strspn@i,w
  9373  2668  00B8               	movwf	?_strspn
  9374  2669  0008               	return
  9375  266A                     __end_of_strspn:	
  9376                           
  9377                           	psect	text4
  9378  260A                     __ptext4:	
  9379 ;; *************** function _strcspn *****************
  9380 ;; Defined at:
  9381 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  s1              1    wreg     PTR const unsigned char 
  9384 ;;		 -> readdata(20), NULL(0), 
  9385 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9386 ;;		 -> STR_58(2), STR_57(2), 
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9389 ;;		 -> readdata(20), NULL(0), 
  9390 ;;  i               2   28[BANK0 ] unsigned int 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  2   24[BANK0 ] unsigned int 
  9393 ;; Registers used:
  9394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9401 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9402 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9403 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9404 ;;Total ram usage:        7 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    7
  9407 ;; This function calls:
  9408 ;;		_strchr
  9409 ;; This function is called by:
  9410 ;;		_strtok
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           
  9415                           ;psect for function _strcspn
  9416  260A                     _strcspn:	
  9417                           
  9418                           ;incstack = 0
  9419                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9420                           ;strcspn@s1 stored from wreg
  9421  260A  0020               	movlb	0	; select bank0
  9422  260B  00BE               	movwf	strcspn@s1
  9423  260C  01BC               	clrf	strcspn@i
  9424  260D  01BD               	clrf	strcspn@i+1
  9425  260E  2E17               	goto	l6010
  9426  260F                     l6008:	
  9427  260F  3001               	movlw	1
  9428  2610  00BA               	movwf	??_strcspn
  9429  2611  083A               	movf	??_strcspn,w
  9430  2612  07BE               	addwf	strcspn@s1,f
  9431  2613  3001               	movlw	1
  9432  2614  07BC               	addwf	strcspn@i,f
  9433  2615  3000               	movlw	0
  9434  2616  3DBD               	addwfc	strcspn@i+1,f
  9435  2617                     l6010:	
  9436  2617  083E               	movf	strcspn@s1,w
  9437  2618  0086               	movwf	6
  9438  2619  3001               	movlw	1	; select bank2/3
  9439  261A  0087               	movwf	7
  9440  261B  0801               	movf	1,w
  9441  261C  1903               	btfsc	3,2
  9442  261D  2E35               	goto	l6014
  9443  261E  0839               	movf	strcspn@s2+1,w
  9444  261F  00B2               	movwf	strchr@ptr+1
  9445  2620  0838               	movf	strcspn@s2,w
  9446  2621  00B1               	movwf	strchr@ptr
  9447  2622  083E               	movf	strcspn@s1,w
  9448  2623  0086               	movwf	6
  9449  2624  3001               	movlw	1	; select bank2/3
  9450  2625  0087               	movwf	7
  9451  2626  0801               	movf	1,w
  9452  2627  00BA               	movwf	??_strcspn
  9453  2628  01BB               	clrf	??_strcspn+1
  9454  2629  083A               	movf	??_strcspn,w
  9455  262A  00B3               	movwf	strchr@chr
  9456  262B  083B               	movf	??_strcspn+1,w
  9457  262C  00B4               	movwf	strchr@chr+1
  9458  262D  31A2  225F  31A6   	fcall	_strchr
  9459  2630  0020               	movlb	0	; select bank0
  9460  2631  0831               	movf	?_strchr,w
  9461  2632  0432               	iorwf	?_strchr+1,w
  9462  2633  1903               	btfsc	3,2
  9463  2634  2E0F               	goto	l6008
  9464  2635                     l6014:	
  9465  2635  083D               	movf	strcspn@i+1,w
  9466  2636  00B9               	movwf	?_strcspn+1
  9467  2637  083C               	movf	strcspn@i,w
  9468  2638  00B8               	movwf	?_strcspn
  9469  2639  0008               	return
  9470  263A                     __end_of_strcspn:	
  9471                           
  9472                           	psect	text5
  9473  225F                     __ptext5:	
  9474 ;; *************** function _strchr *****************
  9475 ;; Defined at:
  9476 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9479 ;;		 -> STR_58(2), STR_57(2), 
  9480 ;;  chr             2   19[BANK0 ] int 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;		None
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  2   17[BANK0 ] PTR unsigned char 
  9485 ;; Registers used:
  9486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9494 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9495 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9496 ;;Total ram usage:        7 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    6
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_strcspn
  9503 ;;		_strspn
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           
  9508                           ;psect for function _strchr
  9509  225F                     _strchr:	
  9510  225F                     l2133:	
  9511                           ;incstack = 0
  9512                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9513                           
  9514  225F  0020               	movlb	0	; select bank0
  9515  2260  0831               	movf	strchr@ptr,w
  9516  2261  0084               	movwf	4
  9517  2262  0832               	movf	strchr@ptr+1,w
  9518  2263  0085               	movwf	5
  9519  2264  0800               	movf	0,w	;code access
  9520  2265  0633               	xorwf	strchr@chr,w
  9521  2266  1903               	btfsc	3,2
  9522  2267  0008               	return
  9523  2268  0832               	movf	strchr@ptr+1,w
  9524  2269  00B6               	movwf	??_strchr+1
  9525  226A  0831               	movf	strchr@ptr,w
  9526  226B  00B5               	movwf	??_strchr
  9527  226C  0AB1               	incf	strchr@ptr,f
  9528  226D  1903               	skipnz
  9529  226E  0AB2               	incf	strchr@ptr+1,f
  9530  226F  0835               	movf	??_strchr,w
  9531  2270  0084               	movwf	4
  9532  2271  0836               	movf	??_strchr+1,w
  9533  2272  0085               	movwf	5
  9534  2273  0012               	moviw fsr0++
  9535  2274  1D03               	btfss	3,2
  9536  2275  2A5F               	goto	l2133
  9537  2276  01B1               	clrf	?_strchr
  9538  2277  01B2               	clrf	?_strchr+1
  9539  2278  0008               	return
  9540  2279                     __end_of_strchr:	
  9541                           
  9542                           	psect	text6
  9543  269D                     __ptext6:	
  9544 ;; *************** function _stricmp *****************
  9545 ;; Defined at:
  9546 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  s1              1    wreg     PTR const unsigned char 
  9549 ;;		 -> readdata(20), NULL(0), 
  9550 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9551 ;;		 -> STR_83(10), STR_82(5), STR_81(5), STR_80(7), 
  9552 ;;		 -> STR_79(8), STR_78(5), STR_77(5), STR_76(11), 
  9553 ;;		 -> STR_75(13), STR_74(7), STR_73(8), STR_72(10), 
  9554 ;;		 -> STR_71(11), STR_70(15), STR_69(14), STR_68(12), 
  9555 ;;		 -> STR_67(8), STR_66(8), STR_65(2), STR_64(5), 
  9556 ;;		 -> STR_63(5), STR_62(2), STR_61(4), STR_60(4), 
  9557 ;;		 -> STR_59(4), 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9560 ;;		 -> readdata(20), NULL(0), 
  9561 ;;  r               1   23[BANK0 ] char 
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  2   19[BANK0 ] int 
  9564 ;; Registers used:
  9565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9574 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9575 ;;Total ram usage:        6 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    7
  9578 ;; This function calls:
  9579 ;;		_toupper
  9580 ;; This function is called by:
  9581 ;;		_parseCmd
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           
  9586                           ;psect for function _stricmp
  9587  269D                     _stricmp:	
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9591                           ;stricmp@s1 stored from wreg
  9592  269D  0020               	movlb	0	; select bank0
  9593  269E  00B8               	movwf	stricmp@s1
  9594  269F  2EA8               	goto	l6584
  9595  26A0                     l6582:	
  9596  26A0  3001               	movlw	1
  9597  26A1  00B5               	movwf	??_stricmp
  9598  26A2  0835               	movf	??_stricmp,w
  9599  26A3  07B8               	addwf	stricmp@s1,f
  9600  26A4  3001               	movlw	1
  9601  26A5  07B3               	addwf	stricmp@s2,f
  9602  26A6  3000               	movlw	0
  9603  26A7  3DB4               	addwfc	stricmp@s2+1,f
  9604  26A8                     l6584:	
  9605  26A8  0833               	movf	stricmp@s2,w
  9606  26A9  0084               	movwf	4
  9607  26AA  0834               	movf	stricmp@s2+1,w
  9608  26AB  0085               	movwf	5
  9609  26AC  0800               	movf	0,w	;code access
  9610  26AD  31A1  2189  31A6   	fcall	_toupper
  9611  26B0  3AFF               	xorlw	255
  9612  26B1  3E01               	addlw	1
  9613  26B2  0020               	movlb	0	; select bank0
  9614  26B3  00B5               	movwf	??_stricmp
  9615  26B4  0838               	movf	stricmp@s1,w
  9616  26B5  0086               	movwf	6
  9617  26B6  3001               	movlw	1	; select bank2/3
  9618  26B7  0087               	movwf	7
  9619  26B8  0801               	movf	1,w
  9620  26B9  31A1  2189  31A6   	fcall	_toupper
  9621  26BC  0020               	movlb	0	; select bank0
  9622  26BD  0735               	addwf	??_stricmp,w
  9623  26BE  00B6               	movwf	??_stricmp+1
  9624  26BF  0836               	movf	??_stricmp+1,w
  9625  26C0  00B7               	movwf	stricmp@r
  9626  26C1  0837               	movf	stricmp@r,w
  9627  26C2  1D03               	btfss	3,2
  9628  26C3  2ECB               	goto	l6588
  9629  26C4  0838               	movf	stricmp@s1,w
  9630  26C5  0086               	movwf	6
  9631  26C6  3001               	movlw	1	; select bank2/3
  9632  26C7  0087               	movwf	7
  9633  26C8  0801               	movf	1,w
  9634  26C9  1D03               	btfss	3,2
  9635  26CA  2EA0               	goto	l6582
  9636  26CB                     l6588:	
  9637  26CB  0837               	movf	stricmp@r,w
  9638  26CC  00B3               	movwf	?_stricmp
  9639  26CD  01B4               	clrf	?_stricmp+1
  9640  26CE  1BB3               	btfsc	?_stricmp,7
  9641  26CF  03B4               	decf	?_stricmp+1,f
  9642  26D0  0008               	return
  9643  26D1                     __end_of_stricmp:	
  9644                           
  9645                           	psect	text7
  9646  2189                     __ptext7:	
  9647 ;; *************** function _toupper *****************
  9648 ;; Defined at:
  9649 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  c               1    wreg     unsigned char 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  c               1   18[BANK0 ] unsigned char 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      unsigned char 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9667 ;;Total ram usage:        2 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    6
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_stricmp
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           
  9678                           ;psect for function _toupper
  9679  2189                     _toupper:	
  9680                           
  9681                           ;incstack = 0
  9682                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9683                           ;toupper@c stored from wreg
  9684  2189  0020               	movlb	0	; select bank0
  9685  218A  00B2               	movwf	toupper@c
  9686  218B  307B               	movlw	123
  9687  218C  0232               	subwf	toupper@c,w
  9688  218D  1803               	skipnc
  9689  218E  2997               	goto	l5990
  9690  218F  3061               	movlw	97
  9691  2190  0232               	subwf	toupper@c,w
  9692  2191  1C03               	skipc
  9693  2192  2997               	goto	l5990
  9694  2193  30DF               	movlw	223
  9695  2194  00B1               	movwf	??_toupper
  9696  2195  0831               	movf	??_toupper,w
  9697  2196  05B2               	andwf	toupper@c,f
  9698  2197                     l5990:	
  9699  2197  0832               	movf	toupper@c,w
  9700  2198  0008               	return
  9701  2199                     __end_of_toupper:	
  9702                           
  9703                           	psect	text8
  9704  121D                     __ptext8:	
  9705 ;; *************** function _atoi *****************
  9706 ;; Defined at:
  9707 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  s               1    wreg     PTR const unsigned char 
  9710 ;;		 -> readdata(20), NULL(0), 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9713 ;;		 -> readdata(20), NULL(0), 
  9714 ;;  a               2   28[BANK0 ] int 
  9715 ;;  sign            1   27[BANK0 ] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  2   23[BANK0 ] int 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9726 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9727 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9728 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9729 ;;Total ram usage:        8 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    7
  9732 ;; This function calls:
  9733 ;;		___wmul
  9734 ;;		_isdigit
  9735 ;; This function is called by:
  9736 ;;		_parseCmd
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           
  9741                           ;psect for function _atoi
  9742  121D                     _atoi:	
  9743                           
  9744                           ;incstack = 0
  9745                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9746                           ;atoi@s stored from wreg
  9747  121D  0020               	movlb	0	; select bank0
  9748  121E  00BE               	movwf	atoi@s
  9749  121F                     l8852:	
  9750  121F  083E               	movf	atoi@s,w
  9751  1220  0086               	movwf	6
  9752  1221  3001               	movlw	1	; select bank2/3
  9753  1222  0087               	movwf	7
  9754  1223  3020               	movlw	32
  9755  1224  0601               	xorwf	1,w
  9756  1225  1D03               	btfss	3,2
  9757  1226  2A2C               	goto	l8854
  9758  1227                     l8850:	
  9759  1227  3001               	movlw	1
  9760  1228  00B9               	movwf	??_atoi
  9761  1229  0839               	movf	??_atoi,w
  9762  122A  07BE               	addwf	atoi@s,f
  9763  122B  2A1F               	goto	l8852
  9764  122C                     l8854:	
  9765  122C  083E               	movf	atoi@s,w
  9766  122D  0086               	movwf	6
  9767  122E  3001               	movlw	1	; select bank2/3
  9768  122F  0087               	movwf	7
  9769  1230  3009               	movlw	9
  9770  1231  0601               	xorwf	1,w
  9771  1232  1903               	btfsc	3,2
  9772  1233  2A27               	goto	l8850
  9773  1234  01BC               	clrf	atoi@a
  9774  1235  01BD               	clrf	atoi@a+1
  9775  1236  01BB               	clrf	atoi@sign
  9776  1237  083E               	movf	atoi@s,w
  9777  1238  0086               	movwf	6
  9778  1239  3001               	movlw	1	; select bank2/3
  9779  123A  0087               	movwf	7
  9780  123B  302D               	movlw	45
  9781  123C  0601               	xorwf	1,w
  9782  123D  1D03               	btfss	3,2
  9783  123E  2A44               	goto	l8862
  9784  123F  3001               	movlw	1
  9785  1240  00B9               	movwf	??_atoi
  9786  1241  0839               	movf	??_atoi,w
  9787  1242  07BB               	addwf	atoi@sign,f
  9788  1243  2A4C               	goto	l8868
  9789  1244                     l8862:	
  9790  1244  083E               	movf	atoi@s,w
  9791  1245  0086               	movwf	6
  9792  1246  3001               	movlw	1	; select bank2/3
  9793  1247  0087               	movwf	7
  9794  1248  302B               	movlw	43
  9795  1249  0601               	xorwf	1,w
  9796  124A  1D03               	btfss	3,2
  9797  124B  2A50               	goto	l8870
  9798  124C                     l8868:	
  9799  124C  3001               	movlw	1
  9800  124D  00B9               	movwf	??_atoi
  9801  124E  0839               	movf	??_atoi,w
  9802  124F  07BE               	addwf	atoi@s,f
  9803  1250                     l8870:	
  9804  1250  083E               	movf	atoi@s,w
  9805  1251  0086               	movwf	6
  9806  1252  3001               	movlw	1	; select bank2/3
  9807  1253  0087               	movwf	7
  9808  1254  0801               	movf	1,w
  9809  1255  31A1  217A  3192   	fcall	_isdigit
  9810  1258  1C03               	btfss	3,0
  9811  1259  2A79               	goto	l8872
  9812  125A  0020               	movlb	0	; select bank0
  9813  125B  083D               	movf	atoi@a+1,w
  9814  125C  00B2               	movwf	___wmul@multiplier+1
  9815  125D  083C               	movf	atoi@a,w
  9816  125E  00B1               	movwf	___wmul@multiplier
  9817  125F  300A               	movlw	10
  9818  1260  00B3               	movwf	___wmul@multiplicand
  9819  1261  3000               	movlw	0
  9820  1262  00B4               	movwf	___wmul@multiplicand+1
  9821  1263  31A2  22B0  3192   	fcall	___wmul
  9822  1266  0020               	movlb	0	; select bank0
  9823  1267  083E               	movf	atoi@s,w
  9824  1268  0086               	movwf	6
  9825  1269  3001               	movlw	1	; select bank2/3
  9826  126A  0087               	movwf	7
  9827  126B  0801               	movf	1,w
  9828  126C  0731               	addwf	?___wmul,w
  9829  126D  00B9               	movwf	??_atoi
  9830  126E  0832               	movf	?___wmul+1,w
  9831  126F  1803               	skipnc
  9832  1270  0A32               	incf	?___wmul+1,w
  9833  1271  00BA               	movwf	??_atoi+1
  9834  1272  0839               	movf	??_atoi,w
  9835  1273  3ED0               	addlw	208
  9836  1274  00BC               	movwf	atoi@a
  9837  1275  30FF               	movlw	255
  9838  1276  3D3A               	addwfc	??_atoi+1,w
  9839  1277  00BD               	movwf	atoi@a+1
  9840  1278  2A4C               	goto	l8868
  9841  1279                     l8872:	
  9842  1279  0020               	movlb	0	; select bank0
  9843  127A  083B               	movf	atoi@sign,w
  9844  127B  1903               	btfsc	3,2
  9845  127C  2A89               	goto	l8878
  9846  127D  093C               	comf	atoi@a,w
  9847  127E  00B9               	movwf	??_atoi
  9848  127F  093D               	comf	atoi@a+1,w
  9849  1280  00BA               	movwf	??_atoi+1
  9850  1281  0AB9               	incf	??_atoi,f
  9851  1282  1903               	skipnz
  9852  1283  0ABA               	incf	??_atoi+1,f
  9853  1284  0839               	movf	??_atoi,w
  9854  1285  00B7               	movwf	?_atoi
  9855  1286  083A               	movf	??_atoi+1,w
  9856  1287  00B8               	movwf	?_atoi+1
  9857  1288  0008               	return
  9858  1289                     l8878:	
  9859  1289  083D               	movf	atoi@a+1,w
  9860  128A  00B8               	movwf	?_atoi+1
  9861  128B  083C               	movf	atoi@a,w
  9862  128C  00B7               	movwf	?_atoi
  9863  128D  0008               	return
  9864  128E                     __end_of_atoi:	
  9865                           
  9866                           	psect	text9
  9867  217A                     __ptext9:	
  9868 ;; *************** function _isdigit *****************
  9869 ;; Defined at:
  9870 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;  c               1    wreg     unsigned char 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  c               1   18[BANK0 ] unsigned char 
  9875 ;; Return value:  Size  Location     Type
  9876 ;;		None               void
  9877 ;; Registers used:
  9878 ;;		wreg, status,2, status,0
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9888 ;;Total ram usage:        2 bytes
  9889 ;; Hardware stack levels used:    1
  9890 ;; Hardware stack levels required when called:    6
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_atoi
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           
  9899                           ;psect for function _isdigit
  9900  217A                     _isdigit:	
  9901                           
  9902                           ;incstack = 0
  9903                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9904                           ;isdigit@c stored from wreg
  9905  217A  0020               	movlb	0	; select bank0
  9906  217B  00B2               	movwf	isdigit@c
  9907  217C  01B1               	clrf	_isdigit$2203
  9908  217D  303A               	movlw	58
  9909  217E  0232               	subwf	isdigit@c,w
  9910  217F  1803               	skipnc
  9911  2180  2987               	goto	l5930
  9912  2181  3030               	movlw	48
  9913  2182  0232               	subwf	isdigit@c,w
  9914  2183  1C03               	skipc
  9915  2184  2987               	goto	l5930
  9916  2185  01B1               	clrf	_isdigit$2203
  9917  2186  0AB1               	incf	_isdigit$2203,f
  9918  2187                     l5930:	
  9919  2187  0C31               	rrf	_isdigit$2203,w
  9920  2188  0008               	return
  9921  2189                     __end_of_isdigit:	
  9922                           
  9923                           	psect	text10
  9924  0AE2                     __ptext10:	
  9925 ;; *************** function _main_initialize *****************
  9926 ;; Defined at:
  9927 ;;		line 187 in file "main.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:   15
  9948 ;; This function calls:
  9949 ;;		_LED_setBrightnessRange
  9950 ;;		_LEDsPwr
  9951 ;;		_TMR0_Load8bitPeriod
  9952 ;;		_TMR2_LoadPeriodRegister
  9953 ;;		___awtoft
  9954 ;;		___ftadd
  9955 ;;		___ftmul
  9956 ;;		___fttol
  9957 ;;		_drv_init
  9958 ;;		_printf
  9959 ;; This function is called by:
  9960 ;;		_main
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           
  9965                           ;psect for function _main_initialize
  9966  0AE2                     _main_initialize:	
  9967                           
  9968                           ;main.c: 189: LEDsPwr(LEDpower, 1);
  9969                           
  9970                           ;incstack = 0
  9971                           ; Regs used in _main_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9972  0AE2  3048               	movlw	low (_LEDpower| (0+32768))
  9973  0AE3  0084               	movwf	4
  9974  0AE4  30B0               	movlw	high (_LEDpower| (0+32768))
  9975  0AE5  0085               	movwf	5
  9976  0AE6  3F00               	moviw [0]fsr0
  9977  0AE7  0020               	movlb	0	; select bank0
  9978  0AE8  00C4               	movwf	LEDsPwr@pwr
  9979  0AE9  3F01               	moviw [1]fsr0
  9980  0AEA  00C5               	movwf	LEDsPwr@pwr+1
  9981  0AEB  3001               	movlw	1
  9982  0AEC  00C6               	movwf	LEDsPwr@topOrBottom
  9983  0AED  3000               	movlw	0
  9984  0AEE  00C7               	movwf	LEDsPwr@topOrBottom+1
  9985  0AEF  319E  26C9  318A   	fcall	_LEDsPwr
  9986                           
  9987                           ;main.c: 190: LEDsPwr(LEDpower, 2);
  9988  0AF2  3048               	movlw	low (_LEDpower| (0+32768))
  9989  0AF3  0084               	movwf	4
  9990  0AF4  30B0               	movlw	high (_LEDpower| (0+32768))
  9991  0AF5  0085               	movwf	5
  9992  0AF6  3F00               	moviw [0]fsr0
  9993  0AF7  0020               	movlb	0	; select bank0
  9994  0AF8  00C4               	movwf	LEDsPwr@pwr
  9995  0AF9  3F01               	moviw [1]fsr0
  9996  0AFA  00C5               	movwf	LEDsPwr@pwr+1
  9997  0AFB  3002               	movlw	2
  9998  0AFC  00C6               	movwf	LEDsPwr@topOrBottom
  9999  0AFD  3000               	movlw	0
 10000  0AFE  00C7               	movwf	LEDsPwr@topOrBottom+1
 10001  0AFF  319E  26C9  318A   	fcall	_LEDsPwr
 10002                           
 10003                           ;main.c: 192: LED_setBrightnessRange(1, 1);
 10004  0B02  3001               	movlw	1
 10005  0B03  0020               	movlb	0	; select bank0
 10006  0B04  00C4               	movwf	LED_setBrightnessRange@range
 10007  0B05  3000               	movlw	0
 10008  0B06  00C5               	movwf	LED_setBrightnessRange@range+1
 10009  0B07  3001               	movlw	1
 10010  0B08  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10011  0B09  3000               	movlw	0
 10012  0B0A  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10013  0B0B  3187  275C  318A   	fcall	_LED_setBrightnessRange
 10014                           
 10015                           ;main.c: 193: LED_setBrightnessRange(1, 2);
 10016  0B0E  3001               	movlw	1
 10017  0B0F  0020               	movlb	0	; select bank0
 10018  0B10  00C4               	movwf	LED_setBrightnessRange@range
 10019  0B11  3000               	movlw	0
 10020  0B12  00C5               	movwf	LED_setBrightnessRange@range+1
 10021  0B13  3002               	movlw	2
 10022  0B14  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10023  0B15  3000               	movlw	0
 10024  0B16  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10025  0B17  3187  275C  318A   	fcall	_LED_setBrightnessRange
 10026                           
 10027                           ;main.c: 194: do { LATCbits.LATC1 = 1; } while(0);
 10028  0B1A  0022               	movlb	2	; select bank2
 10029  0B1B  148E               	bsf	14,1	;volatile
 10030                           
 10031                           ;main.c: 197: TMR2_LoadPeriodRegister((heater_pre_time_ms*TMR2_RANGE)-1);
 10032  0B1C  0021               	movlb	1	; select bank1
 10033  0B1D  086D               	movf	(_heater_pre_time_ms+1)^(0+128),w
 10034  0B1E  0020               	movlb	0	; select bank0
 10035  0B1F  00C1               	movwf	___awtoft@c+1
 10036  0B20  0021               	movlb	1	; select bank1
 10037  0B21  086C               	movf	_heater_pre_time_ms^(0+128),w
 10038  0B22  0020               	movlb	0	; select bank0
 10039  0B23  00C0               	movwf	___awtoft@c
 10040  0B24  31A4  2404  318A   	fcall	___awtoft
 10041  0B27  0020               	movlb	0	; select bank0
 10042  0B28  0840               	movf	?___awtoft,w
 10043  0B29  00C9               	movwf	___ftmul@f2
 10044  0B2A  0841               	movf	?___awtoft+1,w
 10045  0B2B  00CA               	movwf	___ftmul@f2+1
 10046  0B2C  0842               	movf	?___awtoft+2,w
 10047  0B2D  00CB               	movwf	___ftmul@f2+2
 10048  0B2E  3036               	movlw	low (_TMR2_RANGE| (0+32768))
 10049  0B2F  0084               	movwf	4
 10050  0B30  30B0               	movlw	high (_TMR2_RANGE| (0+32768))
 10051  0B31  0085               	movwf	5
 10052  0B32  3F00               	moviw [0]fsr0
 10053  0B33  00C6               	movwf	___ftmul@f1
 10054  0B34  3F01               	moviw [1]fsr0
 10055  0B35  00C7               	movwf	___ftmul@f1+1
 10056  0B36  3F02               	moviw [2]fsr0
 10057  0B37  00C8               	movwf	___ftmul@f1+2
 10058  0B38  318B  23B6  318A   	fcall	___ftmul
 10059  0B3B  0020               	movlb	0	; select bank0
 10060  0B3C  0846               	movf	?___ftmul,w
 10061  0B3D  0021               	movlb	1	; select bank1
 10062  0B3E  00AD               	movwf	___ftadd@f2^(0+128)
 10063  0B3F  0020               	movlb	0	; select bank0
 10064  0B40  0847               	movf	?___ftmul+1,w
 10065  0B41  0021               	movlb	1	; select bank1
 10066  0B42  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 10067  0B43  0020               	movlb	0	; select bank0
 10068  0B44  0848               	movf	?___ftmul+2,w
 10069  0B45  0021               	movlb	1	; select bank1
 10070  0B46  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 10071  0B47  3000               	movlw	0
 10072  0B48  00AA               	movwf	___ftadd@f1^(0+128)
 10073  0B49  3080               	movlw	128
 10074  0B4A  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 10075  0B4B  30BF               	movlw	191
 10076  0B4C  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 10077  0B4D  318C  249F  318A   	fcall	___ftadd
 10078  0B50  0021               	movlb	1	; select bank1
 10079  0B51  082A               	movf	?___ftadd^(0+128),w
 10080  0B52  00B7               	movwf	___fttol@f1^(0+128)
 10081  0B53  082B               	movf	(?___ftadd+1)^(0+128),w
 10082  0B54  00B8               	movwf	(___fttol@f1+1)^(0+128)
 10083  0B55  082C               	movf	(?___ftadd+2)^(0+128),w
 10084  0B56  00B9               	movwf	(___fttol@f1+2)^(0+128)
 10085  0B57  3188  2024  318A   	fcall	___fttol
 10086  0B5A  0021               	movlb	1	; select bank1
 10087  0B5B  0837               	movf	?___fttol^(0+128),w
 10088  0B5C  31AF  27C3  318A   	fcall	_TMR2_LoadPeriodRegister
 10089                           
 10090                           ;main.c: 198: TMR0_Load8bitPeriod(((piezo_on_time_ms)*TMR0_RANGE)-1);
 10091  0B5F  0021               	movlb	1	; select bank1
 10092  0B60  086B               	movf	(_piezo_on_time_ms+1)^(0+128),w
 10093  0B61  0020               	movlb	0	; select bank0
 10094  0B62  00C1               	movwf	___awtoft@c+1
 10095  0B63  0021               	movlb	1	; select bank1
 10096  0B64  086A               	movf	_piezo_on_time_ms^(0+128),w
 10097  0B65  0020               	movlb	0	; select bank0
 10098  0B66  00C0               	movwf	___awtoft@c
 10099  0B67  31A4  2404  318A   	fcall	___awtoft
 10100  0B6A  0020               	movlb	0	; select bank0
 10101  0B6B  0840               	movf	?___awtoft,w
 10102  0B6C  00C9               	movwf	___ftmul@f2
 10103  0B6D  0841               	movf	?___awtoft+1,w
 10104  0B6E  00CA               	movwf	___ftmul@f2+1
 10105  0B6F  0842               	movf	?___awtoft+2,w
 10106  0B70  00CB               	movwf	___ftmul@f2+2
 10107  0B71  3039               	movlw	low (_TMR0_RANGE| (0+32768))
 10108  0B72  0084               	movwf	4
 10109  0B73  30B0               	movlw	high (_TMR0_RANGE| (0+32768))
 10110  0B74  0085               	movwf	5
 10111  0B75  3F00               	moviw [0]fsr0
 10112  0B76  00C6               	movwf	___ftmul@f1
 10113  0B77  3F01               	moviw [1]fsr0
 10114  0B78  00C7               	movwf	___ftmul@f1+1
 10115  0B79  3F02               	moviw [2]fsr0
 10116  0B7A  00C8               	movwf	___ftmul@f1+2
 10117  0B7B  318B  23B6  318A   	fcall	___ftmul
 10118  0B7E  0020               	movlb	0	; select bank0
 10119  0B7F  0846               	movf	?___ftmul,w
 10120  0B80  0021               	movlb	1	; select bank1
 10121  0B81  00AD               	movwf	___ftadd@f2^(0+128)
 10122  0B82  0020               	movlb	0	; select bank0
 10123  0B83  0847               	movf	?___ftmul+1,w
 10124  0B84  0021               	movlb	1	; select bank1
 10125  0B85  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 10126  0B86  0020               	movlb	0	; select bank0
 10127  0B87  0848               	movf	?___ftmul+2,w
 10128  0B88  0021               	movlb	1	; select bank1
 10129  0B89  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 10130  0B8A  3000               	movlw	0
 10131  0B8B  00AA               	movwf	___ftadd@f1^(0+128)
 10132  0B8C  3080               	movlw	128
 10133  0B8D  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 10134  0B8E  30BF               	movlw	191
 10135  0B8F  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 10136  0B90  318C  249F  318A   	fcall	___ftadd
 10137  0B93  0021               	movlb	1	; select bank1
 10138  0B94  082A               	movf	?___ftadd^(0+128),w
 10139  0B95  00B7               	movwf	___fttol@f1^(0+128)
 10140  0B96  082B               	movf	(?___ftadd+1)^(0+128),w
 10141  0B97  00B8               	movwf	(___fttol@f1+1)^(0+128)
 10142  0B98  082C               	movf	(?___ftadd+2)^(0+128),w
 10143  0B99  00B9               	movwf	(___fttol@f1+2)^(0+128)
 10144  0B9A  3188  2024  318A   	fcall	___fttol
 10145  0B9D  0021               	movlb	1	; select bank1
 10146  0B9E  0837               	movf	?___fttol^(0+128),w
 10147  0B9F  31AF  27BE  318A   	fcall	_TMR0_Load8bitPeriod
 10148                           
 10149                           ;main.c: 201: drv_init(0x03, 0x0c);
 10150  0BA2  3003               	movlw	3
 10151  0BA3  0023               	movlb	3	; select bank3
 10152  0BA4  00E5               	movwf	drv_init@output_gain^(0+384)
 10153  0BA5  3000               	movlw	0
 10154  0BA6  00E6               	movwf	(drv_init@output_gain^(0+384)+1)
 10155  0BA7  300C               	movlw	12
 10156  0BA8  00E7               	movwf	drv_init@idle_timeout^(0+384)
 10157  0BA9  3000               	movlw	0
 10158  0BAA  00E8               	movwf	(drv_init@idle_timeout^(0+384)+1)
 10159  0BAB  3193  2376  318A   	fcall	_drv_init
 10160                           
 10161                           ;main.c: 202: printf("initialized\n");
 10162  0BAE  30F2               	movlw	low ((STR_51+4)| (0+32768))
 10163  0BAF  0021               	movlb	1	; select bank1
 10164  0BB0  00A0               	movwf	printf@f^(0+128)
 10165  0BB1  30A8               	movlw	high ((STR_51+4)| (0+32768))
 10166  0BB2  00A1               	movwf	(printf@f^(0+128)+1)
 10167  0BB3  318E  26CE         	fcall	_printf
 10168  0BB5  0008               	return
 10169  0BB6                     __end_of_main_initialize:	
 10170                           
 10171                           	psect	text11
 10172  1376                     __ptext11:	
 10173 ;; *************** function _drv_init *****************
 10174 ;; Defined at:
 10175 ;;		line 4 in file "drv2665.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  output_gain     2    0[BANK3 ] int 
 10178 ;;  idle_timeout    2    2[BANK3 ] int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10190 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10192 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10193 ;;      Totals:         0       0       1       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10194 ;;Total ram usage:        5 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:   14
 10197 ;; This function calls:
 10198 ;;		_calcDownstroke
 10199 ;;		_calcUpstroke
 10200 ;;		_drv_reset
 10201 ;;		_drv_write
 10202 ;;		_i2c_open
 10203 ;;		_i2c_setAddress
 10204 ;;		_printf
 10205 ;; This function is called by:
 10206 ;;		_main_initialize
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           
 10211                           ;psect for function _drv_init
 10212  1376                     _drv_init:	
 10213                           
 10214                           ;drv2665.c: 6: i2c_setAddress(drv_address);
 10215                           
 10216                           ;incstack = 0
 10217                           ; Regs used in _drv_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10218  1376  304C               	movlw	low (_drv_address| (0+32768))
 10219  1377  0084               	movwf	4
 10220  1378  30B0               	movlw	high (_drv_address| (0+32768))
 10221  1379  0085               	movwf	5
 10222  137A  0800               	movf	0,w	;code access
 10223  137B  31A0  207B  3193   	fcall	_i2c_setAddress
 10224                           
 10225                           ;drv2665.c: 7: i2c_open(drv_address);
 10226  137E  304C               	movlw	low (_drv_address| (0+32768))
 10227  137F  0084               	movwf	4
 10228  1380  30B0               	movlw	high (_drv_address| (0+32768))
 10229  1381  0085               	movwf	5
 10230  1382  0800               	movf	0,w	;code access
 10231  1383  319A  2297  3193   	fcall	_i2c_open
 10232                           
 10233                           ;drv2665.c: 8: _delay((unsigned long)((10)*(1000000/4000.0)));
 10234  1386  3004               	movlw	4
 10235  1387  0021               	movlb	1	; select bank1
 10236  1388  00DC               	movwf	??_drv_init^(0+128)
 10237  1389  303D               	movlw	61
 10238  138A                     u10097:	
 10239  138A  0B89               	decfsz	9,f
 10240  138B  2B8A               	goto	u10097
 10241  138C  0BDC               	decfsz	??_drv_init^(0+128),f
 10242  138D  2B8A               	goto	u10097
 10243  138E  3200               	nop2
 10244                           
 10245                           ;drv2665.c: 10: drv_reset();
 10246  138F  31A0  20E0  3193   	fcall	_drv_reset
 10247                           
 10248                           ;drv2665.c: 11: _delay((unsigned long)((10)*(1000000/4000.0)));
 10249  1392  3004               	movlw	4
 10250  1393  0021               	movlb	1	; select bank1
 10251  1394  00DC               	movwf	??_drv_init^(0+128)
 10252  1395  303D               	movlw	61
 10253  1396                     u10107:	
 10254  1396  0B89               	decfsz	9,f
 10255  1397  2B96               	goto	u10107
 10256  1398  0BDC               	decfsz	??_drv_init^(0+128),f
 10257  1399  2B96               	goto	u10107
 10258  139A  3200               	nop2
 10259                           
 10260                           ;drv2665.c: 12: drv_write(0x02, 0);
 10261  139B  0020               	movlb	0	; select bank0
 10262  139C  01C9               	clrf	drv_write@data
 10263  139D  3002               	movlw	2
 10264  139E  3188  2000  3193   	fcall	_drv_write
 10265                           
 10266                           ;drv2665.c: 13: _delay((unsigned long)((10)*(1000000/4000.0)));
 10267  13A1  3004               	movlw	4
 10268  13A2  0021               	movlb	1	; select bank1
 10269  13A3  00DC               	movwf	??_drv_init^(0+128)
 10270  13A4  303D               	movlw	61
 10271  13A5                     u10117:	
 10272  13A5  0B89               	decfsz	9,f
 10273  13A6  2BA5               	goto	u10117
 10274  13A7  0BDC               	decfsz	??_drv_init^(0+128),f
 10275  13A8  2BA5               	goto	u10117
 10276  13A9  3200               	nop2
 10277                           
 10278                           ;drv2665.c: 14: drv_write(0x01, 0x38 | output_gain);
 10279  13AA  0023               	movlb	3	; select bank3
 10280  13AB  0865               	movf	drv_init@output_gain^(0+384),w
 10281  13AC  3838               	iorlw	56
 10282  13AD  0021               	movlb	1	; select bank1
 10283  13AE  00DC               	movwf	??_drv_init^(0+128)
 10284  13AF  085C               	movf	??_drv_init^(0+128),w
 10285  13B0  0020               	movlb	0	; select bank0
 10286  13B1  00C9               	movwf	drv_write@data
 10287  13B2  3001               	movlw	1
 10288  13B3  3188  2000  3193   	fcall	_drv_write
 10289                           
 10290                           ;drv2665.c: 16: _delay((unsigned long)((10)*(1000000/4000.0)));
 10291  13B6  3004               	movlw	4
 10292  13B7  0021               	movlb	1	; select bank1
 10293  13B8  00DC               	movwf	??_drv_init^(0+128)
 10294  13B9  303D               	movlw	61
 10295  13BA                     u10127:	
 10296  13BA  0B89               	decfsz	9,f
 10297  13BB  2BBA               	goto	u10127
 10298  13BC  0BDC               	decfsz	??_drv_init^(0+128),f
 10299  13BD  2BBA               	goto	u10127
 10300  13BE  3200               	nop2
 10301                           
 10302                           ;drv2665.c: 17: drv_write(0x02, idle_timeout);
 10303  13BF  0023               	movlb	3	; select bank3
 10304  13C0  0867               	movf	drv_init@idle_timeout^(0+384),w
 10305  13C1  0021               	movlb	1	; select bank1
 10306  13C2  00DC               	movwf	??_drv_init^(0+128)
 10307  13C3  085C               	movf	??_drv_init^(0+128),w
 10308  13C4  0020               	movlb	0	; select bank0
 10309  13C5  00C9               	movwf	drv_write@data
 10310  13C6  3002               	movlw	2
 10311  13C7  3188  2000  3193   	fcall	_drv_write
 10312                           
 10313                           ;drv2665.c: 19: _delay((unsigned long)((10)*(1000000/4000.0)));
 10314  13CA  3004               	movlw	4
 10315  13CB  0021               	movlb	1	; select bank1
 10316  13CC  00DC               	movwf	??_drv_init^(0+128)
 10317  13CD  303D               	movlw	61
 10318  13CE                     u10137:	
 10319  13CE  0B89               	decfsz	9,f
 10320  13CF  2BCE               	goto	u10137
 10321  13D0  0BDC               	decfsz	??_drv_init^(0+128),f
 10322  13D1  2BCE               	goto	u10137
 10323  13D2  3200               	nop2
 10324                           
 10325                           ;drv2665.c: 20: calcUpstroke(drv_peak_val);
 10326  13D3  0021               	movlb	1	; select bank1
 10327  13D4  086F               	movf	(_drv_peak_val+1)^(0+128),w
 10328  13D5  00D4               	movwf	(calcUpstroke@maxVal+1)^(0+128)
 10329  13D6  086E               	movf	_drv_peak_val^(0+128),w
 10330  13D7  00D3               	movwf	calcUpstroke@maxVal^(0+128)
 10331  13D8  3196  2647  3193   	fcall	_calcUpstroke
 10332                           
 10333                           ;drv2665.c: 21: calcDownstroke(drv_peak_val);
 10334  13DB  0021               	movlb	1	; select bank1
 10335  13DC  086F               	movf	(_drv_peak_val+1)^(0+128),w
 10336  13DD  00D4               	movwf	(calcDownstroke@maxVal+1)^(0+128)
 10337  13DE  086E               	movf	_drv_peak_val^(0+128),w
 10338  13DF  00D3               	movwf	calcDownstroke@maxVal^(0+128)
 10339  13E0  3197  274D  3193   	fcall	_calcDownstroke
 10340                           
 10341                           ;drv2665.c: 22: printf("drv initialized\n");
 10342  13E3  30EE               	movlw	low (STR_51| (0+32768))
 10343  13E4  0021               	movlb	1	; select bank1
 10344  13E5  00A0               	movwf	printf@f^(0+128)
 10345  13E6  30A8               	movlw	high (STR_51| (0+32768))
 10346  13E7  00A1               	movwf	(printf@f^(0+128)+1)
 10347  13E8  318E  26CE         	fcall	_printf
 10348  13EA  0008               	return
 10349  13EB                     __end_of_drv_init:	
 10350                           
 10351                           	psect	text12
 10352  207B                     __ptext12:	
 10353 ;; *************** function _i2c_setAddress *****************
 10354 ;; Defined at:
 10355 ;;		line 156 in file "mcc_generated_files/drivers/i2c_master.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  address         1    wreg     unsigned char 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  address         1   18[BANK0 ] unsigned char 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      void 
 10362 ;; Registers used:
 10363 ;;		wreg
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/0
 10366 ;;		On exit  : 0/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10373 ;;Total ram usage:        2 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    6
 10376 ;; This function calls:
 10377 ;;		Nothing
 10378 ;; This function is called by:
 10379 ;;		_drv_init
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           
 10384                           ;psect for function _i2c_setAddress
 10385  207B                     _i2c_setAddress:	
 10386                           
 10387                           ;incstack = 0
 10388                           ; Regs used in _i2c_setAddress: [wreg]
 10389                           ;i2c_setAddress@address stored from wreg
 10390  207B  0020               	movlb	0	; select bank0
 10391  207C  00B2               	movwf	i2c_setAddress@address
 10392                           
 10393                           ;i2c_master.c: 158: i2c_status.address = address;
 10394  207D  0832               	movf	i2c_setAddress@address,w
 10395  207E  00B1               	movwf	??_i2c_setAddress
 10396  207F  0831               	movf	??_i2c_setAddress,w
 10397  2080  0022               	movlb	2	; select bank2
 10398  2081  00A1               	movwf	(_i2c_status^(0+256)+1)
 10399  2082  0008               	return
 10400  2083                     __end_of_i2c_setAddress:	
 10401                           
 10402                           	psect	text13
 10403  1A97                     __ptext13:	
 10404 ;; *************** function _i2c_open *****************
 10405 ;; Defined at:
 10406 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  address         1    wreg     unsigned char 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  address         1   21[BANK0 ] unsigned char 
 10411 ;;  ret             1   20[BANK0 ] enum E8193
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      enum E8193
 10414 ;; Registers used:
 10415 ;;		wreg, status,2, status,0, pclath, cstack
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10424 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10425 ;;Total ram usage:        3 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    7
 10428 ;; This function calls:
 10429 ;;		_i2c1_driver_open
 10430 ;;		_i2c1_driver_setBusCollisionISR
 10431 ;;		_i2c1_driver_setI2cISR
 10432 ;;		_mssp1_clearIRQ
 10433 ;; This function is called by:
 10434 ;;		_drv_init
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _i2c_open
 10440  1A97                     _i2c_open:	
 10441                           
 10442                           ;incstack = 0
 10443                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 10444                           ;i2c_open@address stored from wreg
 10445  1A97  0020               	movlb	0	; select bank0
 10446  1A98  00B5               	movwf	i2c_open@address
 10447                           
 10448                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 10449  1A99  01B4               	clrf	i2c_open@ret
 10450  1A9A  0AB4               	incf	i2c_open@ret,f
 10451                           
 10452                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 10453  1A9B  0022               	movlb	2	; select bank2
 10454  1A9C  18A0               	btfsc	_i2c_status^(0+256),1
 10455  1A9D  0008               	return
 10456                           
 10457                           ;i2c_master.c: 121: {
 10458                           ;i2c_master.c: 122: i2c_status.address = address;
 10459  1A9E  0020               	movlb	0	; select bank0
 10460  1A9F  0835               	movf	i2c_open@address,w
 10461  1AA0  00B3               	movwf	??_i2c_open
 10462  1AA1  0833               	movf	??_i2c_open,w
 10463  1AA2  0022               	movlb	2	; select bank2
 10464  1AA3  00A1               	movwf	(_i2c_status^(0+256)+1)
 10465                           
 10466                           ;i2c_master.c: 123: i2c_status.busy = 0;
 10467  1AA4  1020               	bcf	_i2c_status^(0+256),0
 10468                           
 10469                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 10470  1AA5  14A0               	bsf	_i2c_status^(0+256),1
 10471                           
 10472                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 10473  1AA6  11A0               	bcf	_i2c_status^(0+256),3
 10474                           
 10475                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 10476  1AA7  300E               	movlw	14
 10477  1AA8  0020               	movlb	0	; select bank0
 10478  1AA9  00B3               	movwf	??_i2c_open
 10479  1AAA  0833               	movf	??_i2c_open,w
 10480  1AAB  0022               	movlb	2	; select bank2
 10481  1AAC  00AA               	movwf	(_i2c_status^(0+256)+10)
 10482                           
 10483                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 10484  1AAD  30F4               	movlw	244
 10485  1AAE  00A8               	movwf	(_i2c_status^(0+256)+8)
 10486  1AAF  3001               	movlw	1
 10487  1AB0  00A9               	movwf	(_i2c_status^(0+256)+9)
 10488                           
 10489                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 10490  1AB1  1520               	bsf	_i2c_status^(0+256),2
 10491                           
 10492                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 10493  1AB2  30CE               	movlw	low _returnStop
 10494  1AB3  00AC               	movwf	(low ((_i2c_status| (0+256)+12)))^0
 10495  1AB4  302F               	movlw	high _returnStop
 10496  1AB5  00AD               	movwf	((low ((_i2c_status| (0+256)+12)))^0+1)
 10497                           
 10498                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 10499  1AB6  01B8               	clrf	(low ((_i2c_status| (0+256)+24)))^0
 10500                           
 10501                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 10502  1AB7  30CE               	movlw	low _returnStop
 10503  1AB8  00AE               	movwf	(low ((_i2c_status| (0+256)+14)))^0
 10504  1AB9  302F               	movlw	high _returnStop
 10505  1ABA  00AF               	movwf	((low ((_i2c_status| (0+256)+14)))^0+1)
 10506                           
 10507                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 10508  1ABB  01B9               	clrf	(low ((_i2c_status| (0+256)+25)))^0
 10509                           
 10510                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 10511  1ABC  30CE               	movlw	low _returnStop
 10512  1ABD  00B0               	movwf	(low ((_i2c_status| (0+256)+16)))^0
 10513  1ABE  302F               	movlw	high _returnStop
 10514  1ABF  00B1               	movwf	((low ((_i2c_status| (0+256)+16)))^0+1)
 10515                           
 10516                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 10517  1AC0  01BA               	clrf	(low ((_i2c_status| (0+256)+26)))^0
 10518                           
 10519                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 10520  1AC1  30CE               	movlw	low _returnStop
 10521  1AC2  00B2               	movwf	(low ((_i2c_status| (0+256)+18)))^0
 10522  1AC3  302F               	movlw	high _returnStop
 10523  1AC4  00B3               	movwf	((low ((_i2c_status| (0+256)+18)))^0+1)
 10524                           
 10525                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 10526  1AC5  01BB               	clrf	(low ((_i2c_status| (0+256)+27)))^0
 10527                           
 10528                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 10529  1AC6  30D4               	movlw	low _returnReset
 10530  1AC7  00B4               	movwf	(low ((_i2c_status| (0+256)+20)))^0
 10531  1AC8  302F               	movlw	high _returnReset
 10532  1AC9  00B5               	movwf	((low ((_i2c_status| (0+256)+20)))^0+1)
 10533                           
 10534                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 10535  1ACA  01BC               	clrf	(low ((_i2c_status| (0+256)+28)))^0
 10536                           
 10537                           ;i2c_master.c: 142: i2c1_driver_open();
 10538  1ACB  31A0  20EA  319A   	fcall	_i2c1_driver_open
 10539                           
 10540                           ;i2c_master.c: 143: mssp1_clearIRQ();
 10541  1ACE  31AF  2773  319A   	fcall	_mssp1_clearIRQ
 10542                           
 10543                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 10544  1AD1  3046               	movlw	low _i2c_busCollisionISR
 10545  1AD2  0020               	movlb	0	; select bank0
 10546  1AD3  00B1               	movwf	i2c1_driver_setBusCollisionISR@f
 10547  1AD4  302F               	movlw	high _i2c_busCollisionISR
 10548  1AD5  00B2               	movwf	i2c1_driver_setBusCollisionISR@f+1
 10549  1AD6  31A0  20B0  319A   	fcall	_i2c1_driver_setBusCollisionISR
 10550                           
 10551                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 10552  1AD9  30B6               	movlw	low _i2c_ISR
 10553  1ADA  0020               	movlb	0	; select bank0
 10554  1ADB  00B1               	movwf	i2c1_driver_setI2cISR@f
 10555  1ADC  3024               	movlw	high _i2c_ISR
 10556  1ADD  00B2               	movwf	i2c1_driver_setI2cISR@f+1
 10557  1ADE  31A0  20B9         	fcall	_i2c1_driver_setI2cISR
 10558                           
 10559                           ;i2c_master.c: 151: ret = I2C_NOERR;
 10560  1AE0  0020               	movlb	0	; select bank0
 10561  1AE1  01B4               	clrf	i2c_open@ret
 10562  1AE2  0008               	return
 10563  1AE3                     __end_of_i2c_open:	
 10564                           ;i2c_master.c: 152: }
 10565                           ;i2c_master.c: 153: return ret;
 10566                           ;	Return value of _i2c_open is never used
 10567                           
 10568                           
 10569                           	psect	text14
 10570  20B9                     __ptext14:	
 10571 ;; *************** function _i2c1_driver_setI2cISR *****************
 10572 ;; Defined at:
 10573 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;  f               2   17[BANK0 ] PTR void 
 10576 ;;		 -> i2c_ISR(1), 
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;		None
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10591 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10592 ;;Total ram usage:        2 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:    6
 10595 ;; This function calls:
 10596 ;;		Nothing
 10597 ;; This function is called by:
 10598 ;;		_i2c_open
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           
 10603                           ;psect for function _i2c1_driver_setI2cISR
 10604  20B9                     _i2c1_driver_setI2cISR:	
 10605                           
 10606                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 10607                           
 10608                           ;incstack = 0
 10609                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 10610  20B9  0020               	movlb	0	; select bank0
 10611  20BA  0832               	movf	i2c1_driver_setI2cISR@f+1,w
 10612  20BB  0022               	movlb	2	; select bank2
 10613  20BC  00E5               	movwf	(_i2c1_driver_i2cISR+1)^(0+256)
 10614  20BD  0020               	movlb	0	; select bank0
 10615  20BE  0831               	movf	i2c1_driver_setI2cISR@f,w
 10616  20BF  0022               	movlb	2	; select bank2
 10617  20C0  00E4               	movwf	_i2c1_driver_i2cISR^(0+256)
 10618  20C1  0008               	return
 10619  20C2                     __end_of_i2c1_driver_setI2cISR:	
 10620                           
 10621                           	psect	text15
 10622  20B0                     __ptext15:	
 10623 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 10624 ;; Defined at:
 10625 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;  f               2   17[BANK0 ] PTR void 
 10628 ;;		 -> i2c_busCollisionISR(1), 
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        2 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    6
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_i2c_open
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           
 10655                           ;psect for function _i2c1_driver_setBusCollisionISR
 10656  20B0                     _i2c1_driver_setBusCollisionISR:	
 10657                           
 10658                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 10659                           
 10660                           ;incstack = 0
 10661                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 10662  20B0  0020               	movlb	0	; select bank0
 10663  20B1  0832               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 10664  20B2  0022               	movlb	2	; select bank2
 10665  20B3  00E7               	movwf	(_i2c1_driver_busCollisionISR+1)^(0+256)
 10666  20B4  0020               	movlb	0	; select bank0
 10667  20B5  0831               	movf	i2c1_driver_setBusCollisionISR@f,w
 10668  20B6  0022               	movlb	2	; select bank2
 10669  20B7  00E6               	movwf	_i2c1_driver_busCollisionISR^(0+256)
 10670  20B8  0008               	return
 10671  20B9                     __end_of_i2c1_driver_setBusCollisionISR:	
 10672                           
 10673                           	psect	text16
 10674  20EA                     __ptext16:	
 10675 ;; *************** function _i2c1_driver_open *****************
 10676 ;; Defined at:
 10677 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;		None
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;		None
 10682 ;; Return value:  Size  Location     Type
 10683 ;;		None               void
 10684 ;; Registers used:
 10685 ;;		wreg, status,2
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10695 ;;Total ram usage:        0 bytes
 10696 ;; Hardware stack levels used:    1
 10697 ;; Hardware stack levels required when called:    6
 10698 ;; This function calls:
 10699 ;;		Nothing
 10700 ;; This function is called by:
 10701 ;;		_i2c_open
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           
 10706                           ;psect for function _i2c1_driver_open
 10707  20EA                     _i2c1_driver_open:	
 10708                           
 10709                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10710                           
 10711                           ;incstack = 0
 10712                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10713  20EA  0024               	movlb	4	; select bank4
 10714  20EB  1A95               	btfsc	21,5	;volatile
 10715  20EC  0008               	return
 10716                           
 10717                           ;i2c1_driver.c: 86: {
 10718                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10719  20ED  0194               	clrf	20	;volatile
 10720                           
 10721                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10722  20EE  3028               	movlw	40
 10723  20EF  0095               	movwf	21	;volatile
 10724                           
 10725                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10726  20F0  0196               	clrf	22	;volatile
 10727                           
 10728                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10729  20F1  3003               	movlw	3
 10730  20F2  0092               	movwf	18	;volatile
 10731                           
 10732                           ;i2c1_driver.c: 93: else
 10733                           ;i2c1_driver.c: 94: return 0;
 10734                           ;	Return value of _i2c1_driver_open is never used
 10735                           
 10736                           ;i2c1_driver.c: 92: }
 10737                           
 10738                           ;i2c1_driver.c: 91: return 1;
 10739                           ;	Return value of _i2c1_driver_open is never used
 10740  20F3  0008               	return
 10741  20F4                     __end_of_i2c1_driver_open:	
 10742                           
 10743                           	psect	text17
 10744  20E0                     __ptext17:	
 10745 ;; *************** function _drv_reset *****************
 10746 ;; Defined at:
 10747 ;;		line 25 in file "drv2665.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10763 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10764 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10765 ;;Total ram usage:        1 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:   13
 10768 ;; This function calls:
 10769 ;;		_drv_write
 10770 ;; This function is called by:
 10771 ;;		_drv_init
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           
 10776                           ;psect for function _drv_reset
 10777  20E0                     _drv_reset:	
 10778                           
 10779                           ;drv2665.c: 26: drv_write(0x02, 0x80);
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _drv_reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10783  20E0  3080               	movlw	128
 10784  20E1  0021               	movlb	1	; select bank1
 10785  20E2  00B5               	movwf	??_drv_reset^(0+128)
 10786  20E3  0835               	movf	??_drv_reset^(0+128),w
 10787  20E4  0020               	movlb	0	; select bank0
 10788  20E5  00C9               	movwf	drv_write@data
 10789  20E6  3002               	movlw	2
 10790  20E7  3188  2000         	fcall	_drv_write
 10791  20E9  0008               	return
 10792  20EA                     __end_of_drv_reset:	
 10793                           
 10794                           	psect	text18
 10795  038E                     __ptext18:	
 10796 ;; *************** function _execCmd *****************
 10797 ;; Defined at:
 10798 ;;		line 77 in file "cmd_parser.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10801 ;;		 -> cmd_struct(21), 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;  s               1    0[BANK2 ] PTR struct CMD_STRUCT
 10804 ;;		 -> cmd_struct(21), 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  2  969[None  ] int 
 10807 ;; Registers used:
 10808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10815 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10817 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10818 ;;Total ram usage:        1 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:   15
 10821 ;; This function calls:
 10822 ;;		_commCheck
 10823 ;;		_doMove
 10824 ;;		_getActive
 10825 ;;		_getMotionStatus
 10826 ;;		_getMoveMask
 10827 ;;		_getPosition
 10828 ;;		_printf
 10829 ;;		_setActive
 10830 ;;		_setDrvGain
 10831 ;;		_setDrvPeak
 10832 ;;		_setDrvPiezoOnTime
 10833 ;;		_setH1OffTime
 10834 ;;		_setH2OnTime
 10835 ;;		_setHeaterPostTime
 10836 ;;		_setHeaterPreTime
 10837 ;;		_setHeaterToggle
 10838 ;;		_setLEDBrightnessRange
 10839 ;;		_setLEDPwr
 10840 ;;		_setMoveMask
 10841 ;;		_startAbsMove
 10842 ;;		_startRelMove
 10843 ;;		_stop
 10844 ;;		_timedActiveHeatOn
 10845 ;;		_zeroPosition
 10846 ;; This function is called by:
 10847 ;;		_main
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           
 10852                           ;psect for function _execCmd
 10853  038E                     _execCmd:	
 10854                           
 10855                           ;incstack = 0
 10856                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10857                           ;execCmd@s stored from wreg
 10858  038E  0022               	movlb	2	; select bank2
 10859  038F  00EE               	movwf	execCmd@s^(0+256)
 10860                           
 10861                           ;cmd_parser.c: 78: errorOut = 1;
 10862  0390  3001               	movlw	1
 10863  0391  00E2               	movwf	_errorOut^(0+256)
 10864  0392  3000               	movlw	0
 10865  0393  00E3               	movwf	(_errorOut^(0+256)+1)
 10866                           
 10867                           ;cmd_parser.c: 80: switch(s->c){
 10868  0394  2D78               	goto	l9206
 10869  0395                     l9156:	
 10870                           ;cmd_parser.c: 81: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 10871                           
 10872  0395  0A6E               	incf	execCmd@s^(0+256),w
 10873  0396  0086               	movwf	6
 10874  0397  3001               	movlw	1	; select bank2/3
 10875  0398  0087               	movwf	7
 10876  0399  3F40               	moviw [0]fsr1
 10877  039A  0021               	movlb	1	; select bank1
 10878  039B  00B5               	movwf	startRelMove@steps^(0+128)
 10879  039C  3F41               	moviw [1]fsr1
 10880  039D  00B6               	movwf	(startRelMove@steps+1)^(0+128)
 10881  039E  31A2  2279         	fcall	_startRelMove
 10882  03A0  0021               	movlb	1	; select bank1
 10883  03A1  0836               	movf	(?_startRelMove+1)^(0+128),w
 10884  03A2  0022               	movlb	2	; select bank2
 10885  03A3  00E3               	movwf	(_errorOut+1)^(0+256)
 10886  03A4  0021               	movlb	1	; select bank1
 10887  03A5  0835               	movf	?_startRelMove^(0+128),w
 10888  03A6  0022               	movlb	2	; select bank2
 10889  03A7  00E2               	movwf	_errorOut^(0+256)
 10890  03A8  0008               	return
 10891  03A9                     l9158:	
 10892                           ;cmd_parser.c: 82: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 10893                           
 10894  03A9  0A6E               	incf	execCmd@s^(0+256),w
 10895  03AA  0086               	movwf	6
 10896  03AB  3001               	movlw	1	; select bank2/3
 10897  03AC  0087               	movwf	7
 10898  03AD  3F40               	moviw [0]fsr1
 10899  03AE  0021               	movlb	1	; select bank1
 10900  03AF  00B5               	movwf	startAbsMove@steps^(0+128)
 10901  03B0  3F41               	moviw [1]fsr1
 10902  03B1  00B6               	movwf	(startAbsMove@steps+1)^(0+128)
 10903  03B2  31A2  22CC         	fcall	_startAbsMove
 10904  03B4  0021               	movlb	1	; select bank1
 10905  03B5  0836               	movf	(?_startAbsMove+1)^(0+128),w
 10906  03B6  0022               	movlb	2	; select bank2
 10907  03B7  00E3               	movwf	(_errorOut+1)^(0+256)
 10908  03B8  0021               	movlb	1	; select bank1
 10909  03B9  0835               	movf	?_startAbsMove^(0+128),w
 10910  03BA  0022               	movlb	2	; select bank2
 10911  03BB  00E2               	movwf	_errorOut^(0+256)
 10912  03BC  0008               	return
 10913  03BD                     l9160:	
 10914                           ;cmd_parser.c: 83: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 10915                           
 10916  03BD  0A6E               	incf	execCmd@s^(0+256),w
 10917  03BE  0086               	movwf	6
 10918  03BF  3001               	movlw	1	; select bank2/3
 10919  03C0  0087               	movwf	7
 10920  03C1  3F40               	moviw [0]fsr1
 10921  03C2  0021               	movlb	1	; select bank1
 10922  03C3  00B5               	movwf	getPosition@a^(0+128)
 10923  03C4  3F41               	moviw [1]fsr1
 10924  03C5  00B6               	movwf	(getPosition@a+1)^(0+128)
 10925  03C6  31A7  273E         	fcall	_getPosition
 10926  03C8  0021               	movlb	1	; select bank1
 10927  03C9  0836               	movf	(?_getPosition+1)^(0+128),w
 10928  03CA  0022               	movlb	2	; select bank2
 10929  03CB  00E3               	movwf	(_errorOut+1)^(0+256)
 10930  03CC  0021               	movlb	1	; select bank1
 10931  03CD  0835               	movf	?_getPosition^(0+128),w
 10932  03CE  0022               	movlb	2	; select bank2
 10933  03CF  00E2               	movwf	_errorOut^(0+256)
 10934  03D0  0008               	return
 10935  03D1                     l9162:	
 10936                           ;cmd_parser.c: 84: case CMD_STOP: errorOut = stop(); break;
 10937                           
 10938  03D1  31A4  24DC         	fcall	_stop
 10939  03D3  0021               	movlb	1	; select bank1
 10940  03D4  0836               	movf	(?_stop+1)^(0+128),w
 10941  03D5  0022               	movlb	2	; select bank2
 10942  03D6  00E3               	movwf	(_errorOut+1)^(0+256)
 10943  03D7  0021               	movlb	1	; select bank1
 10944  03D8  0835               	movf	?_stop^(0+128),w
 10945  03D9  0022               	movlb	2	; select bank2
 10946  03DA  00E2               	movwf	_errorOut^(0+256)
 10947  03DB  0008               	return
 10948  03DC                     l9164:	
 10949                           ;cmd_parser.c: 85: case CMD_ZERO: errorOut = zeroPosition(); break;
 10950                           
 10951  03DC  3193  2301         	fcall	_zeroPosition
 10952  03DE  0021               	movlb	1	; select bank1
 10953  03DF  0836               	movf	(?_zeroPosition+1)^(0+128),w
 10954  03E0  0022               	movlb	2	; select bank2
 10955  03E1  00E3               	movwf	(_errorOut+1)^(0+256)
 10956  03E2  0021               	movlb	1	; select bank1
 10957  03E3  0835               	movf	?_zeroPosition^(0+128),w
 10958  03E4  0022               	movlb	2	; select bank2
 10959  03E5  00E2               	movwf	_errorOut^(0+256)
 10960  03E6  0008               	return
 10961  03E7                     l9166:	
 10962                           ;cmd_parser.c: 88: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 10963                           
 10964  03E7  0A6E               	incf	execCmd@s^(0+256),w
 10965  03E8  0086               	movwf	6
 10966  03E9  3001               	movlw	1	; select bank2/3
 10967  03EA  0087               	movwf	7
 10968  03EB  3F40               	moviw [0]fsr1
 10969  03EC  0021               	movlb	1	; select bank1
 10970  03ED  00DC               	movwf	setDrvPeak@pk^(0+128)
 10971  03EE  3F41               	moviw [1]fsr1
 10972  03EF  00DD               	movwf	(setDrvPeak@pk+1)^(0+128)
 10973  03F0  31A3  2343         	fcall	_setDrvPeak
 10974  03F2  0021               	movlb	1	; select bank1
 10975  03F3  085D               	movf	(?_setDrvPeak+1)^(0+128),w
 10976  03F4  0022               	movlb	2	; select bank2
 10977  03F5  00E3               	movwf	(_errorOut+1)^(0+256)
 10978  03F6  0021               	movlb	1	; select bank1
 10979  03F7  085C               	movf	?_setDrvPeak^(0+128),w
 10980  03F8  0022               	movlb	2	; select bank2
 10981  03F9  00E2               	movwf	_errorOut^(0+256)
 10982  03FA  0008               	return
 10983  03FB                     l9168:	
 10984                           ;cmd_parser.c: 89: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 10985                           
 10986  03FB  0A6E               	incf	execCmd@s^(0+256),w
 10987  03FC  0086               	movwf	6
 10988  03FD  3001               	movlw	1	; select bank2/3
 10989  03FE  0087               	movwf	7
 10990  03FF  3F40               	moviw [0]fsr1
 10991  0400  0021               	movlb	1	; select bank1
 10992  0401  00B5               	movwf	setDrvGain@gain^(0+128)
 10993  0402  3F41               	moviw [1]fsr1
 10994  0403  00B6               	movwf	(setDrvGain@gain+1)^(0+128)
 10995  0404  3199  2131         	fcall	_setDrvGain
 10996  0406  0021               	movlb	1	; select bank1
 10997  0407  0836               	movf	(?_setDrvGain+1)^(0+128),w
 10998  0408  0022               	movlb	2	; select bank2
 10999  0409  00E3               	movwf	(_errorOut+1)^(0+256)
 11000  040A  0021               	movlb	1	; select bank1
 11001  040B  0835               	movf	?_setDrvGain^(0+128),w
 11002  040C  0022               	movlb	2	; select bank2
 11003  040D  00E2               	movwf	_errorOut^(0+256)
 11004  040E  0008               	return
 11005  040F                     l9170:	
 11006                           ;cmd_parser.c: 90: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 11007                           
 11008  040F  0A6E               	incf	execCmd@s^(0+256),w
 11009  0410  0086               	movwf	6
 11010  0411  3001               	movlw	1	; select bank2/3
 11011  0412  0087               	movwf	7
 11012  0413  3F40               	moviw [0]fsr1
 11013  0414  0021               	movlb	1	; select bank1
 11014  0415  00C5               	movwf	setDrvPiezoOnTime@t^(0+128)
 11015  0416  3F41               	moviw [1]fsr1
 11016  0417  00C6               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 11017  0418  319E  266A         	fcall	_setDrvPiezoOnTime
 11018  041A  0021               	movlb	1	; select bank1
 11019  041B  0846               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 11020  041C  0022               	movlb	2	; select bank2
 11021  041D  00E3               	movwf	(_errorOut+1)^(0+256)
 11022  041E  0021               	movlb	1	; select bank1
 11023  041F  0845               	movf	?_setDrvPiezoOnTime^(0+128),w
 11024  0420  0022               	movlb	2	; select bank2
 11025  0421  00E2               	movwf	_errorOut^(0+256)
 11026  0422  0008               	return
 11027  0423                     l9172:	
 11028                           ;cmd_parser.c: 93: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 11029                           
 11030  0423  0A6E               	incf	execCmd@s^(0+256),w
 11031  0424  0086               	movwf	6
 11032  0425  3001               	movlw	1	; select bank2/3
 11033  0426  0087               	movwf	7
 11034  0427  3F40               	moviw [0]fsr1
 11035  0428  0021               	movlb	1	; select bank1
 11036  0429  00B5               	movwf	setHeaterPreTime@t^(0+128)
 11037  042A  3F41               	moviw [1]fsr1
 11038  042B  00B6               	movwf	(setHeaterPreTime@t+1)^(0+128)
 11039  042C  31A1  216B         	fcall	_setHeaterPreTime
 11040  042E  0021               	movlb	1	; select bank1
 11041  042F  0836               	movf	(?_setHeaterPreTime+1)^(0+128),w
 11042  0430  0022               	movlb	2	; select bank2
 11043  0431  00E3               	movwf	(_errorOut+1)^(0+256)
 11044  0432  0021               	movlb	1	; select bank1
 11045  0433  0835               	movf	?_setHeaterPreTime^(0+128),w
 11046  0434  0022               	movlb	2	; select bank2
 11047  0435  00E2               	movwf	_errorOut^(0+256)
 11048  0436  0008               	return
 11049  0437                     l9174:	
 11050                           ;cmd_parser.c: 94: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 11051                           
 11052  0437  0A6E               	incf	execCmd@s^(0+256),w
 11053  0438  0086               	movwf	6
 11054  0439  3001               	movlw	1	; select bank2/3
 11055  043A  0087               	movwf	7
 11056  043B  3F40               	moviw [0]fsr1
 11057  043C  0021               	movlb	1	; select bank1
 11058  043D  00B5               	movwf	setHeaterPostTime@t^(0+128)
 11059  043E  3F41               	moviw [1]fsr1
 11060  043F  00B6               	movwf	(setHeaterPostTime@t+1)^(0+128)
 11061  0440  31A1  21AB         	fcall	_setHeaterPostTime
 11062  0442  0021               	movlb	1	; select bank1
 11063  0443  0836               	movf	(?_setHeaterPostTime+1)^(0+128),w
 11064  0444  0022               	movlb	2	; select bank2
 11065  0445  00E3               	movwf	(_errorOut+1)^(0+256)
 11066  0446  0021               	movlb	1	; select bank1
 11067  0447  0835               	movf	?_setHeaterPostTime^(0+128),w
 11068  0448  0022               	movlb	2	; select bank2
 11069  0449  00E2               	movwf	_errorOut^(0+256)
 11070  044A  0008               	return
 11071  044B                     l9176:	
 11072                           ;cmd_parser.c: 95: case CMD_HEATER_H1OFF: errorOut = setH1OffTime(s->p1.paramI); break;
 11073                           
 11074  044B  0A6E               	incf	execCmd@s^(0+256),w
 11075  044C  0086               	movwf	6
 11076  044D  3001               	movlw	1	; select bank2/3
 11077  044E  0087               	movwf	7
 11078  044F  3F40               	moviw [0]fsr1
 11079  0450  0021               	movlb	1	; select bank1
 11080  0451  00C5               	movwf	setH1OffTime@t^(0+128)
 11081  0452  3F41               	moviw [1]fsr1
 11082  0453  00C6               	movwf	(setH1OffTime@t+1)^(0+128)
 11083  0454  319B  23CB         	fcall	_setH1OffTime
 11084  0456  0021               	movlb	1	; select bank1
 11085  0457  0846               	movf	(?_setH1OffTime+1)^(0+128),w
 11086  0458  0022               	movlb	2	; select bank2
 11087  0459  00E3               	movwf	(_errorOut+1)^(0+256)
 11088  045A  0021               	movlb	1	; select bank1
 11089  045B  0845               	movf	?_setH1OffTime^(0+128),w
 11090  045C  0022               	movlb	2	; select bank2
 11091  045D  00E2               	movwf	_errorOut^(0+256)
 11092  045E  0008               	return
 11093  045F                     l9178:	
 11094                           ;cmd_parser.c: 96: case CMD_HEATER_H2ON: errorOut = setH2OnTime(s->p1.paramI); break;
 11095                           
 11096  045F  0A6E               	incf	execCmd@s^(0+256),w
 11097  0460  0086               	movwf	6
 11098  0461  3001               	movlw	1	; select bank2/3
 11099  0462  0087               	movwf	7
 11100  0463  3F40               	moviw [0]fsr1
 11101  0464  0021               	movlb	1	; select bank1
 11102  0465  00C5               	movwf	setH2OnTime@t^(0+128)
 11103  0466  3F41               	moviw [1]fsr1
 11104  0467  00C6               	movwf	(setH2OnTime@t+1)^(0+128)
 11105  0468  319C  2419         	fcall	_setH2OnTime
 11106  046A  0021               	movlb	1	; select bank1
 11107  046B  0846               	movf	(?_setH2OnTime+1)^(0+128),w
 11108  046C  0022               	movlb	2	; select bank2
 11109  046D  00E3               	movwf	(_errorOut+1)^(0+256)
 11110  046E  0021               	movlb	1	; select bank1
 11111  046F  0845               	movf	?_setH2OnTime^(0+128),w
 11112  0470  0022               	movlb	2	; select bank2
 11113  0471  00E2               	movwf	_errorOut^(0+256)
 11114  0472  0008               	return
 11115  0473                     l9180:	
 11116                           ;cmd_parser.c: 97: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 11117                           
 11118  0473  0A6E               	incf	execCmd@s^(0+256),w
 11119  0474  0086               	movwf	6
 11120  0475  3001               	movlw	1	; select bank2/3
 11121  0476  0087               	movwf	7
 11122  0477  3F40               	moviw [0]fsr1
 11123  0478  0021               	movlb	1	; select bank1
 11124  0479  00B5               	movwf	setLEDBrightnessRange@r^(0+128)
 11125  047A  3F41               	moviw [1]fsr1
 11126  047B  00B6               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 11127  047C  0022               	movlb	2	; select bank2
 11128  047D  086E               	movf	execCmd@s^(0+256),w
 11129  047E  3E0B               	addlw	11
 11130  047F  0086               	movwf	6
 11131  0480  3001               	movlw	1	; select bank2/3
 11132  0481  0087               	movwf	7
 11133  0482  3F40               	moviw [0]fsr1
 11134  0483  0021               	movlb	1	; select bank1
 11135  0484  00B7               	movwf	setLEDBrightnessRange@tOB^(0+128)
 11136  0485  3F41               	moviw [1]fsr1
 11137  0486  00B8               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 11138  0487  31A3  2307         	fcall	_setLEDBrightnessRange
 11139  0489  0021               	movlb	1	; select bank1
 11140  048A  0836               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 11141  048B  0022               	movlb	2	; select bank2
 11142  048C  00E3               	movwf	(_errorOut+1)^(0+256)
 11143  048D  0021               	movlb	1	; select bank1
 11144  048E  0835               	movf	?_setLEDBrightnessRange^(0+128),w
 11145  048F  0022               	movlb	2	; select bank2
 11146  0490  00E2               	movwf	_errorOut^(0+256)
 11147  0491  0008               	return
 11148  0492                     l9182:	
 11149                           ;cmd_parser.c: 98: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 11150                           
 11151  0492  0A6E               	incf	execCmd@s^(0+256),w
 11152  0493  0086               	movwf	6
 11153  0494  3001               	movlw	1	; select bank2/3
 11154  0495  0087               	movwf	7
 11155  0496  3F40               	moviw [0]fsr1
 11156  0497  0021               	movlb	1	; select bank1
 11157  0498  00B5               	movwf	setLEDPwr@pwr^(0+128)
 11158  0499  3F41               	moviw [1]fsr1
 11159  049A  00B6               	movwf	(setLEDPwr@pwr+1)^(0+128)
 11160  049B  0022               	movlb	2	; select bank2
 11161  049C  086E               	movf	execCmd@s^(0+256),w
 11162  049D  3E0B               	addlw	11
 11163  049E  0086               	movwf	6
 11164  049F  3001               	movlw	1	; select bank2/3
 11165  04A0  0087               	movwf	7
 11166  04A1  3F40               	moviw [0]fsr1
 11167  04A2  0021               	movlb	1	; select bank1
 11168  04A3  00B7               	movwf	setLEDPwr@topOrBottom^(0+128)
 11169  04A4  3F41               	moviw [1]fsr1
 11170  04A5  00B8               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 11171  04A6  31A3  2325         	fcall	_setLEDPwr
 11172  04A8  0021               	movlb	1	; select bank1
 11173  04A9  0836               	movf	(?_setLEDPwr+1)^(0+128),w
 11174  04AA  0022               	movlb	2	; select bank2
 11175  04AB  00E3               	movwf	(_errorOut+1)^(0+256)
 11176  04AC  0021               	movlb	1	; select bank1
 11177  04AD  0835               	movf	?_setLEDPwr^(0+128),w
 11178  04AE  0022               	movlb	2	; select bank2
 11179  04AF  00E2               	movwf	_errorOut^(0+256)
 11180  04B0  0008               	return
 11181  04B1                     l9184:	
 11182                           ;cmd_parser.c: 99: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 11183                           
 11184  04B1  0A6E               	incf	execCmd@s^(0+256),w
 11185  04B2  0086               	movwf	6
 11186  04B3  3001               	movlw	1	; select bank2/3
 11187  04B4  0087               	movwf	7
 11188  04B5  3F40               	moviw [0]fsr1
 11189  04B6  0021               	movlb	1	; select bank1
 11190  04B7  00B5               	movwf	setHeaterToggle@num^(0+128)
 11191  04B8  3F41               	moviw [1]fsr1
 11192  04B9  00B6               	movwf	(setHeaterToggle@num+1)^(0+128)
 11193  04BA  0022               	movlb	2	; select bank2
 11194  04BB  086E               	movf	execCmd@s^(0+256),w
 11195  04BC  3E0B               	addlw	11
 11196  04BD  0086               	movwf	6
 11197  04BE  3001               	movlw	1	; select bank2/3
 11198  04BF  0087               	movwf	7
 11199  04C0  3F40               	moviw [0]fsr1
 11200  04C1  0021               	movlb	1	; select bank1
 11201  04C2  00B7               	movwf	setHeaterToggle@topOrB^(0+128)
 11202  04C3  3F41               	moviw [1]fsr1
 11203  04C4  00B8               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 11204  04C5  3195  25CA         	fcall	_setHeaterToggle
 11205  04C7  0021               	movlb	1	; select bank1
 11206  04C8  0836               	movf	(?_setHeaterToggle+1)^(0+128),w
 11207  04C9  0022               	movlb	2	; select bank2
 11208  04CA  00E3               	movwf	(_errorOut+1)^(0+256)
 11209  04CB  0021               	movlb	1	; select bank1
 11210  04CC  0835               	movf	?_setHeaterToggle^(0+128),w
 11211  04CD  0022               	movlb	2	; select bank2
 11212  04CE  00E2               	movwf	_errorOut^(0+256)
 11213  04CF  0008               	return
 11214  04D0                     l9186:	
 11215                           ;cmd_parser.c: 100: case CMD_HEATER_TIMED: errorOut = timedActiveHeatOn(s->p1.paramL, s-
      +                          >p2.paramI); break;
 11216                           
 11217  04D0  0A6E               	incf	execCmd@s^(0+256),w
 11218  04D1  0086               	movwf	6
 11219  04D2  3001               	movlw	1	; select bank2/3
 11220  04D3  0087               	movwf	7
 11221  04D4  3F40               	moviw [0]fsr1
 11222  04D5  0021               	movlb	1	; select bank1
 11223  04D6  00B5               	movwf	timedActiveHeatOn@onTime^(0+128)
 11224  04D7  3F41               	moviw [1]fsr1
 11225  04D8  00B6               	movwf	(timedActiveHeatOn@onTime+1)^(0+128)
 11226  04D9  3F42               	moviw [2]fsr1
 11227  04DA  00B7               	movwf	(timedActiveHeatOn@onTime+2)^(0+128)
 11228  04DB  3F43               	moviw [3]fsr1
 11229  04DC  00B8               	movwf	(timedActiveHeatOn@onTime+3)^(0+128)
 11230  04DD  0022               	movlb	2	; select bank2
 11231  04DE  086E               	movf	execCmd@s^(0+256),w
 11232  04DF  3E0B               	addlw	11
 11233  04E0  0086               	movwf	6
 11234  04E1  3001               	movlw	1	; select bank2/3
 11235  04E2  0087               	movwf	7
 11236  04E3  3F40               	moviw [0]fsr1
 11237  04E4  0021               	movlb	1	; select bank1
 11238  04E5  00B9               	movwf	timedActiveHeatOn@topOrBorBoth^(0+128)
 11239  04E6  3F41               	moviw [1]fsr1
 11240  04E7  00BA               	movwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128)
 11241  04E8  3188  20AB         	fcall	_timedActiveHeatOn
 11242  04EA  0021               	movlb	1	; select bank1
 11243  04EB  0836               	movf	(?_timedActiveHeatOn+1)^(0+128),w
 11244  04EC  0022               	movlb	2	; select bank2
 11245  04ED  00E3               	movwf	(_errorOut+1)^(0+256)
 11246  04EE  0021               	movlb	1	; select bank1
 11247  04EF  0835               	movf	?_timedActiveHeatOn^(0+128),w
 11248  04F0  0022               	movlb	2	; select bank2
 11249  04F1  00E2               	movwf	_errorOut^(0+256)
 11250  04F2  0008               	return
 11251  04F3                     l9188:	
 11252                           ;cmd_parser.c: 103: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); bre
      +                          ak;
 11253                           
 11254  04F3  0A6E               	incf	execCmd@s^(0+256),w
 11255  04F4  0086               	movwf	6
 11256  04F5  3001               	movlw	1	; select bank2/3
 11257  04F6  0087               	movwf	7
 11258  04F7  3F40               	moviw [0]fsr1
 11259  04F8  0021               	movlb	1	; select bank1
 11260  04F9  00B5               	movwf	setActive@probeNum^(0+128)
 11261  04FA  3F41               	moviw [1]fsr1
 11262  04FB  00B6               	movwf	(setActive@probeNum+1)^(0+128)
 11263  04FC  0022               	movlb	2	; select bank2
 11264  04FD  086E               	movf	execCmd@s^(0+256),w
 11265  04FE  3E0B               	addlw	11
 11266  04FF  0086               	movwf	6
 11267  0500  3001               	movlw	1	; select bank2/3
 11268  0501  0087               	movwf	7
 11269  0502  3F40               	moviw [0]fsr1
 11270  0503  0021               	movlb	1	; select bank1
 11271  0504  00B7               	movwf	setActive@onOff^(0+128)
 11272  0505  3F41               	moviw [1]fsr1
 11273  0506  00B8               	movwf	(setActive@onOff+1)^(0+128)
 11274  0507  3194  2461         	fcall	_setActive
 11275  0509  0021               	movlb	1	; select bank1
 11276  050A  0836               	movf	(?_setActive+1)^(0+128),w
 11277  050B  0022               	movlb	2	; select bank2
 11278  050C  00E3               	movwf	(_errorOut+1)^(0+256)
 11279  050D  0021               	movlb	1	; select bank1
 11280  050E  0835               	movf	?_setActive^(0+128),w
 11281  050F  0022               	movlb	2	; select bank2
 11282  0510  00E2               	movwf	_errorOut^(0+256)
 11283  0511  0008               	return
 11284  0512                     l9190:	
 11285                           ;cmd_parser.c: 104: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); b
      +                          reak;
 11286                           
 11287  0512  0A6E               	incf	execCmd@s^(0+256),w
 11288  0513  0086               	movwf	6
 11289  0514  3001               	movlw	1	; select bank2/3
 11290  0515  0087               	movwf	7
 11291  0516  3F40               	moviw [0]fsr1
 11292  0517  0021               	movlb	1	; select bank1
 11293  0518  00B5               	movwf	setMoveMask@probeNum^(0+128)
 11294  0519  3F41               	moviw [1]fsr1
 11295  051A  00B6               	movwf	(setMoveMask@probeNum+1)^(0+128)
 11296  051B  0022               	movlb	2	; select bank2
 11297  051C  086E               	movf	execCmd@s^(0+256),w
 11298  051D  3E0B               	addlw	11
 11299  051E  0086               	movwf	6
 11300  051F  3001               	movlw	1	; select bank2/3
 11301  0520  0087               	movwf	7
 11302  0521  3F40               	moviw [0]fsr1
 11303  0522  0021               	movlb	1	; select bank1
 11304  0523  00B7               	movwf	setMoveMask@onOff^(0+128)
 11305  0524  3F41               	moviw [1]fsr1
 11306  0525  00B8               	movwf	(setMoveMask@onOff+1)^(0+128)
 11307  0526  3192  228E         	fcall	_setMoveMask
 11308  0528  0021               	movlb	1	; select bank1
 11309  0529  0836               	movf	(?_setMoveMask+1)^(0+128),w
 11310  052A  0022               	movlb	2	; select bank2
 11311  052B  00E3               	movwf	(_errorOut+1)^(0+256)
 11312  052C  0021               	movlb	1	; select bank1
 11313  052D  0835               	movf	?_setMoveMask^(0+128),w
 11314  052E  0022               	movlb	2	; select bank2
 11315  052F  00E2               	movwf	_errorOut^(0+256)
 11316  0530  0008               	return
 11317  0531                     l9192:	
 11318                           ;cmd_parser.c: 105: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 11319                           
 11320  0531  319A  22E3         	fcall	_getActive
 11321  0533  0021               	movlb	1	; select bank1
 11322  0534  0836               	movf	(?_getActive+1)^(0+128),w
 11323  0535  0022               	movlb	2	; select bank2
 11324  0536  00E3               	movwf	(_errorOut+1)^(0+256)
 11325  0537  0021               	movlb	1	; select bank1
 11326  0538  0835               	movf	?_getActive^(0+128),w
 11327  0539  0022               	movlb	2	; select bank2
 11328  053A  00E2               	movwf	_errorOut^(0+256)
 11329  053B  0008               	return
 11330  053C                     l9194:	
 11331                           ;cmd_parser.c: 106: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 11332                           
 11333  053C  319B  2330         	fcall	_getMoveMask
 11334  053E  0021               	movlb	1	; select bank1
 11335  053F  0836               	movf	(?_getMoveMask+1)^(0+128),w
 11336  0540  0022               	movlb	2	; select bank2
 11337  0541  00E3               	movwf	(_errorOut+1)^(0+256)
 11338  0542  0021               	movlb	1	; select bank1
 11339  0543  0835               	movf	?_getMoveMask^(0+128),w
 11340  0544  0022               	movlb	2	; select bank2
 11341  0545  00E2               	movwf	_errorOut^(0+256)
 11342  0546  0008               	return
 11343  0547                     l9196:	
 11344                           ;cmd_parser.c: 107: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 11345                           
 11346  0547  31A4  2426         	fcall	_getMotionStatus
 11347  0549  0021               	movlb	1	; select bank1
 11348  054A  0836               	movf	(?_getMotionStatus+1)^(0+128),w
 11349  054B  0022               	movlb	2	; select bank2
 11350  054C  00E3               	movwf	(_errorOut+1)^(0+256)
 11351  054D  0021               	movlb	1	; select bank1
 11352  054E  0835               	movf	?_getMotionStatus^(0+128),w
 11353  054F  0022               	movlb	2	; select bank2
 11354  0550  00E2               	movwf	_errorOut^(0+256)
 11355  0551  0008               	return
 11356  0552                     l9198:	
 11357                           ;cmd_parser.c: 108: case CMD_DOMOVE: errorOut = doMove(); break;
 11358                           
 11359  0552  3189  2160         	fcall	_doMove
 11360  0554  0021               	movlb	1	; select bank1
 11361  0555  083D               	movf	(?_doMove+1)^(0+128),w
 11362  0556  0022               	movlb	2	; select bank2
 11363  0557  00E3               	movwf	(_errorOut+1)^(0+256)
 11364  0558  0021               	movlb	1	; select bank1
 11365  0559  083C               	movf	?_doMove^(0+128),w
 11366  055A  0022               	movlb	2	; select bank2
 11367  055B  00E2               	movwf	_errorOut^(0+256)
 11368  055C  0008               	return
 11369  055D                     l9200:	
 11370                           ;cmd_parser.c: 109: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 11371                           
 11372  055D  318A  221B         	fcall	_commCheck
 11373  055F  0021               	movlb	1	; select bank1
 11374  0560  0855               	movf	(?_commCheck+1)^(0+128),w
 11375  0561  0022               	movlb	2	; select bank2
 11376  0562  00E3               	movwf	(_errorOut+1)^(0+256)
 11377  0563  0021               	movlb	1	; select bank1
 11378  0564  0854               	movf	?_commCheck^(0+128),w
 11379  0565  0022               	movlb	2	; select bank2
 11380  0566  00E2               	movwf	_errorOut^(0+256)
 11381  0567  0008               	return
 11382  0568                     l9202:	
 11383                           ;cmd_parser.c: 110: case CMD_PING: printf("!\n"); break;
 11384                           
 11385  0568  30C8               	movlw	low ((STR_85+20)| (0+32768))
 11386  0569  0021               	movlb	1	; select bank1
 11387  056A  00A0               	movwf	printf@f^(0+128)
 11388  056B  30A8               	movlw	high ((STR_85+20)| (0+32768))
 11389  056C  00A1               	movwf	(printf@f^(0+128)+1)
 11390  056D  318E  26CE         	fcall	_printf
 11391  056F  0008               	return
 11392  0570                     l9204:	
 11393                           ;cmd_parser.c: 111: default: printf("UNRECOGNIZED COMMAND!\n");
 11394                           
 11395  0570  30B4               	movlw	low (STR_85| (0+32768))
 11396  0571  0021               	movlb	1	; select bank1
 11397  0572  00A0               	movwf	printf@f^(0+128)
 11398  0573  30A8               	movlw	high (STR_85| (0+32768))
 11399  0574  00A1               	movwf	(printf@f^(0+128)+1)
 11400  0575  318E  26CE         	fcall	_printf
 11401                           
 11402                           ;cmd_parser.c: 118: }
 11403  0577  0008               	return
 11404  0578                     l9206:	
 11405  0578  0022               	movlb	2	; select bank2
 11406  0579  086E               	movf	execCmd@s^(0+256),w
 11407  057A  0086               	movwf	6
 11408  057B  3001               	movlw	1	; select bank2/3
 11409  057C  0087               	movwf	7
 11410  057D  0801               	movf	1,w
 11411                           
 11412                           ; Switch size 1, requested type "space"
 11413                           ; Number of cases is 24, Range of values is 1 to 25
 11414                           ; switch strategies available:
 11415                           ; Name         Instructions Cycles
 11416                           ; direct_byte           59     9 (fixed)
 11417                           ; simple_byte           73    37 (average)
 11418                           ; jumptable            263     9 (fixed)
 11419                           ;	Chosen strategy is direct_byte
 11420  057E  3EFF               	addlw	-1
 11421  057F  1C03               	skipc
 11422  0580  2D70               	goto	l9204
 11423  0581  0084               	movwf	4
 11424  0582  3019               	movlw	25
 11425  0583  0204               	subwf	4,w
 11426  0584  1803               	skipnc
 11427  0585  2D70               	goto	l9204
 11428  0586  31A0               	movlp	high S9608
 11429  0587  3504               	lslf	4,w
 11430  0588  3E00               	addlw	low S9608
 11431  0589  0082               	movwf	2
 11432                           
 11433                           ;cmd_parser.c: 120: return errorOut;
 11434                           ;	Return value of _execCmd is never used
 11435  058A  0008               	return
 11436  058B                     __end_of_execCmd:	
 11437                           
 11438                           	psect	swtext1
 11439  2000                     __pswtext1:	
 11440  2000                     S9608:	
 11441  2000  3183  2BA9         	ljmp	l9158
 11442  2002  3183  2B95         	ljmp	l9156
 11443  2004  3183  2BBD         	ljmp	l9160
 11444  2006  3183  2BD1         	ljmp	l9162
 11445  2008  3185  2D70         	ljmp	l9204
 11446  200A  3184  2CF3         	ljmp	l9188
 11447  200C  3185  2D12         	ljmp	l9190
 11448  200E  3183  2BDC         	ljmp	l9164
 11449  2010  3183  2BE7         	ljmp	l9166
 11450  2012  3183  2BFB         	ljmp	l9168
 11451  2014  3184  2C0F         	ljmp	l9170
 11452  2016  3184  2C23         	ljmp	l9172
 11453  2018  3184  2C37         	ljmp	l9174
 11454  201A  3184  2C4B         	ljmp	l9176
 11455  201C  3184  2C5F         	ljmp	l9178
 11456  201E  3184  2C73         	ljmp	l9180
 11457  2020  3184  2C92         	ljmp	l9182
 11458  2022  3184  2CB1         	ljmp	l9184
 11459  2024  3184  2CD0         	ljmp	l9186
 11460  2026  3185  2D31         	ljmp	l9192
 11461  2028  3185  2D3C         	ljmp	l9194
 11462  202A  3185  2D47         	ljmp	l9196
 11463  202C  3185  2D52         	ljmp	l9198
 11464  202E  3185  2D5D         	ljmp	l9200
 11465  2030  3185  2D68         	ljmp	l9202
 11466                           
 11467                           	psect	text19
 11468  1301                     __ptext19:	
 11469 ;; *************** function _zeroPosition *****************
 11470 ;; Defined at:
 11471 ;;		line 375 in file "main.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;		None
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;  i               2   41[BANK0 ] int 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  2   21[BANK1 ] int 
 11478 ;; Registers used:
 11479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11485 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11488 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11489 ;;Total ram usage:       12 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    9
 11492 ;; This function calls:
 11493 ;;		_printf
 11494 ;; This function is called by:
 11495 ;;		_execCmd
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _zeroPosition
 11501  1301                     _zeroPosition:	
 11502                           
 11503                           ;main.c: 376: for(int i = 0; i<24; i++){
 11504                           
 11505                           ;incstack = 0
 11506                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11507  1301  0020               	movlb	0	; select bank0
 11508  1302  01C9               	clrf	zeroPosition@i
 11509  1303  01CA               	clrf	zeroPosition@i+1
 11510  1304  084A               	movf	zeroPosition@i+1,w
 11511  1305  3A80               	xorlw	128
 11512  1306  0021               	movlb	1	; select bank1
 11513  1307  00B7               	movwf	??_zeroPosition^(0+128)
 11514  1308  3080               	movlw	128
 11515  1309  0237               	subwf	??_zeroPosition^(0+128),w
 11516  130A  1D03               	skipz
 11517  130B  2B0F               	goto	u8705
 11518  130C  3018               	movlw	24
 11519  130D  0020               	movlb	0	; select bank0
 11520  130E  0249               	subwf	zeroPosition@i,w
 11521  130F                     u8705:	
 11522  130F  1803               	btfsc	3,0
 11523  1310  2B6B               	goto	l8580
 11524  1311                     l8572:	
 11525                           
 11526                           ;main.c: 377: if((activeMask & (1UL << i)) > 0)
 11527  1311  0021               	movlb	1	; select bank1
 11528  1312  0862               	movf	_activeMask^(0+128),w
 11529  1313  00B7               	movwf	??_zeroPosition^(0+128)
 11530  1314  0863               	movf	(_activeMask+1)^(0+128),w
 11531  1315  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11532  1316  0864               	movf	(_activeMask+2)^(0+128),w
 11533  1317  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 11534  1318  0865               	movf	(_activeMask+3)^(0+128),w
 11535  1319  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 11536  131A  3001               	movlw	1
 11537  131B  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11538  131C  3000               	movlw	0
 11539  131D  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 11540  131E  3000               	movlw	0
 11541  131F  00BD               	movwf	((??_zeroPosition+4)^(0+128)+2)
 11542  1320  3000               	movlw	0
 11543  1321  00BE               	movwf	((??_zeroPosition+4)^(0+128)+3)
 11544  1322  0020               	movlb	0	; select bank0
 11545  1323  0A49               	incf	zeroPosition@i,w
 11546  1324  0021               	movlb	1	; select bank1
 11547  1325  2B2A               	goto	u8710
 11548  1326                     u8715:	
 11549  1326  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 11550  1327  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 11551  1328  0DBD               	rlf	((??_zeroPosition+4)^(0+128)+2),f
 11552  1329  0DBE               	rlf	((??_zeroPosition+4)^(0+128)+3),f
 11553  132A                     u8710:	
 11554  132A  0B89               	decfsz	9,f
 11555  132B  2B26               	goto	u8715
 11556  132C  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11557  132D  05B7               	andwf	??_zeroPosition^(0+128),f
 11558  132E  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11559  132F  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 11560  1330  083D               	movf	(??_zeroPosition+6)^(0+128),w
 11561  1331  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 11562  1332  083E               	movf	(??_zeroPosition+7)^(0+128),w
 11563  1333  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 11564  1334  083A               	movf	(??_zeroPosition+3)^(0+128),w
 11565  1335  0439               	iorwf	(??_zeroPosition+2)^(0+128),w
 11566  1336  0438               	iorwf	(??_zeroPosition+1)^(0+128),w
 11567  1337  0437               	iorwf	??_zeroPosition^(0+128),w
 11568  1338  1903               	skipnz
 11569  1339  2B59               	goto	l8576
 11570                           
 11571                           ;main.c: 378: currentPositions_steps[i]=0;
 11572  133A  0020               	movlb	0	; select bank0
 11573  133B  084A               	movf	zeroPosition@i+1,w
 11574  133C  0021               	movlb	1	; select bank1
 11575  133D  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11576  133E  0020               	movlb	0	; select bank0
 11577  133F  0849               	movf	zeroPosition@i,w
 11578  1340  0021               	movlb	1	; select bank1
 11579  1341  00B7               	movwf	??_zeroPosition^(0+128)
 11580  1342  35B7               	lslf	??_zeroPosition^(0+128),f
 11581  1343  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11582  1344  35B7               	lslf	??_zeroPosition^(0+128),f
 11583  1345  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11584  1346  3090               	movlw	144
 11585  1347  00B9               	movwf	(??_zeroPosition+2)^(0+128)
 11586  1348  3027               	movlw	39
 11587  1349  00BA               	movwf	((??_zeroPosition+2)^(0+128)+1)
 11588  134A  0837               	movf	??_zeroPosition^(0+128),w
 11589  134B  0739               	addwf	(??_zeroPosition+2)^(0+128),w
 11590  134C  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11591  134D  0838               	movf	(??_zeroPosition+1)^(0+128),w
 11592  134E  3D3A               	addwfc	(??_zeroPosition+3)^(0+128),w
 11593  134F  00BC               	movwf	(??_zeroPosition+5)^(0+128)
 11594  1350  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11595  1351  0086               	movwf	6
 11596  1352  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11597  1353  0087               	movwf	7
 11598  1354  3000               	movlw	0
 11599  1355  3FC0               	movwi [0]fsr1
 11600  1356  3FC1               	movwi [1]fsr1
 11601  1357  3FC2               	movwi [2]fsr1
 11602  1358  3FC3               	movwi [3]fsr1
 11603  1359                     l8576:	
 11604  1359  3001               	movlw	1
 11605  135A  0020               	movlb	0	; select bank0
 11606  135B  07C9               	addwf	zeroPosition@i,f
 11607  135C  3000               	movlw	0
 11608  135D  3DCA               	addwfc	zeroPosition@i+1,f
 11609  135E  084A               	movf	zeroPosition@i+1,w
 11610  135F  3A80               	xorlw	128
 11611  1360  0021               	movlb	1	; select bank1
 11612  1361  00B7               	movwf	??_zeroPosition^(0+128)
 11613  1362  3080               	movlw	128
 11614  1363  0237               	subwf	??_zeroPosition^(0+128),w
 11615  1364  1D03               	skipz
 11616  1365  2B69               	goto	u8735
 11617  1366  3018               	movlw	24
 11618  1367  0020               	movlb	0	; select bank0
 11619  1368  0249               	subwf	zeroPosition@i,w
 11620  1369                     u8735:	
 11621  1369  1C03               	skipc
 11622  136A  2B11               	goto	l8572
 11623  136B                     l8580:	
 11624                           
 11625                           ;main.c: 379: }
 11626                           ;main.c: 380: printf("A\n");
 11627  136B  303C               	movlw	low (STR_7| (0+32768))
 11628  136C  0021               	movlb	1	; select bank1
 11629  136D  00A0               	movwf	printf@f^(0+128)
 11630  136E  30B0               	movlw	high (STR_7| (0+32768))
 11631  136F  00A1               	movwf	(printf@f^(0+128)+1)
 11632  1370  318E  26CE         	fcall	_printf
 11633                           
 11634                           ;main.c: 381: return 0;
 11635  1372  0021               	movlb	1	; select bank1
 11636  1373  01B5               	clrf	?_zeroPosition^(0+128)
 11637  1374  01B6               	clrf	(?_zeroPosition+1)^(0+128)
 11638  1375  0008               	return
 11639  1376                     __end_of_zeroPosition:	
 11640                           
 11641                           	psect	text20
 11642  08AB                     __ptext20:	
 11643 ;; *************** function _timedActiveHeatOn *****************
 11644 ;; Defined at:
 11645 ;;		line 495 in file "main.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  onTime          4   21[BANK1 ] long 
 11648 ;;  topOrBorBoth    2   25[BANK1 ] int 
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;  t               2   32[BANK1 ] int 
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  2   21[BANK1 ] int 
 11653 ;; Registers used:
 11654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11660 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11661 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11662 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11663 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11664 ;;Total ram usage:       13 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; Hardware stack levels required when called:    9
 11667 ;; This function calls:
 11668 ;;		_LEDsOn
 11669 ;;		_printf
 11670 ;; This function is called by:
 11671 ;;		_execCmd
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           
 11676                           ;psect for function _timedActiveHeatOn
 11677  08AB                     _timedActiveHeatOn:	
 11678                           
 11679                           ;main.c: 496: _delay((unsigned long)((2000)*(1000000/4000.0)));
 11680                           
 11681                           ;incstack = 0
 11682                           ; Regs used in _timedActiveHeatOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11683  08AB  3003               	movlw	3
 11684  08AC  0021               	movlb	1	; select bank1
 11685  08AD  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11686  08AE  308A               	movlw	138
 11687  08AF  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11688  08B0  3055               	movlw	85
 11689  08B1                     u10147:	
 11690  08B1  0B89               	decfsz	9,f
 11691  08B2  28B1               	goto	u10147
 11692  08B3  0BBB               	decfsz	??_timedActiveHeatOn^(0+128),f
 11693  08B4  28B1               	goto	u10147
 11694  08B5  0BBC               	decfsz	(??_timedActiveHeatOn^(0+128)+1),f
 11695  08B6  28B1               	goto	u10147
 11696  08B7  3200               	nop2
 11697                           
 11698                           ;main.c: 497: do { LATCbits.LATC1 = 0; } while(0);
 11699  08B8  0022               	movlb	2	; select bank2
 11700  08B9  108E               	bcf	14,1	;volatile
 11701                           
 11702                           ;main.c: 498: if(topOrBorBoth == 1){
 11703  08BA  0021               	movlb	1	; select bank1
 11704  08BB  0339               	decf	timedActiveHeatOn@topOrBorBoth^(0+128),w
 11705  08BC  043A               	iorwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128),w
 11706  08BD  1D03               	btfss	3,2
 11707  08BE  28D0               	goto	l8726
 11708                           
 11709                           ;main.c: 499: LEDsOn(activeMask, 1);
 11710  08BF  0865               	movf	(_activeMask+3)^(0+128),w
 11711  08C0  0020               	movlb	0	; select bank0
 11712  08C1  00C7               	movwf	LEDsOn@LEDpins+3
 11713  08C2  0021               	movlb	1	; select bank1
 11714  08C3  0864               	movf	(_activeMask+2)^(0+128),w
 11715  08C4  0020               	movlb	0	; select bank0
 11716  08C5  00C6               	movwf	LEDsOn@LEDpins+2
 11717  08C6  0021               	movlb	1	; select bank1
 11718  08C7  0863               	movf	(_activeMask+1)^(0+128),w
 11719  08C8  0020               	movlb	0	; select bank0
 11720  08C9  00C5               	movwf	LEDsOn@LEDpins+1
 11721  08CA  0021               	movlb	1	; select bank1
 11722  08CB  0862               	movf	_activeMask^(0+128),w
 11723  08CC  0020               	movlb	0	; select bank0
 11724  08CD  00C4               	movwf	LEDsOn@LEDpins
 11725  08CE  3001               	movlw	1
 11726  08CF  2903               	goto	L24
 11727  08D0                     l8726:	
 11728                           ;main.c: 500: }
 11729                           
 11730                           
 11731                           ;main.c: 501: else if (topOrBorBoth == 2){
 11732  08D0  3002               	movlw	2
 11733  08D1  0021               	movlb	1	; select bank1
 11734  08D2  0639               	xorwf	timedActiveHeatOn@topOrBorBoth^(0+128),w
 11735  08D3  043A               	iorwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128),w
 11736  08D4  1903               	btfsc	3,2
 11737  08D5  28F3               	goto	L25
 11738                           
 11739                           ;main.c: 504: else if (topOrBorBoth == 3){
 11740                           
 11741                           ;main.c: 503: }
 11742                           
 11743                           ;main.c: 502: LEDsOn(activeMask, 2);
 11744  08D6  3003               	movlw	3
 11745  08D7  0021               	movlb	1	; select bank1
 11746  08D8  0639               	xorwf	timedActiveHeatOn@topOrBorBoth^(0+128),w
 11747  08D9  043A               	iorwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128),w
 11748  08DA  1D03               	btfss	3,2
 11749  08DB  2909               	goto	l8734
 11750                           
 11751                           ;main.c: 505: LEDsOn(activeMask, 1);
 11752  08DC  0865               	movf	(_activeMask+3)^(0+128),w
 11753  08DD  0020               	movlb	0	; select bank0
 11754  08DE  00C7               	movwf	LEDsOn@LEDpins+3
 11755  08DF  0021               	movlb	1	; select bank1
 11756  08E0  0864               	movf	(_activeMask+2)^(0+128),w
 11757  08E1  0020               	movlb	0	; select bank0
 11758  08E2  00C6               	movwf	LEDsOn@LEDpins+2
 11759  08E3  0021               	movlb	1	; select bank1
 11760  08E4  0863               	movf	(_activeMask+1)^(0+128),w
 11761  08E5  0020               	movlb	0	; select bank0
 11762  08E6  00C5               	movwf	LEDsOn@LEDpins+1
 11763  08E7  0021               	movlb	1	; select bank1
 11764  08E8  0862               	movf	_activeMask^(0+128),w
 11765  08E9  0020               	movlb	0	; select bank0
 11766  08EA  00C4               	movwf	LEDsOn@LEDpins
 11767  08EB  3001               	movlw	1
 11768  08EC  00C8               	movwf	LEDsOn@topOrBottom
 11769  08ED  3000               	movlw	0
 11770  08EE  00C9               	movwf	LEDsOn@topOrBottom+1
 11771  08EF  31A3  23E3  3188   	fcall	_LEDsOn
 11772                           
 11773                           ;main.c: 506: LEDsOn(activeMask, 2);
 11774  08F2  0021               	movlb	1	; select bank1
 11775  08F3                     L25:	
 11776  08F3  0865               	movf	(_activeMask+3)^(0+128),w
 11777  08F4  0020               	movlb	0	; select bank0
 11778  08F5  00C7               	movwf	LEDsOn@LEDpins+3
 11779  08F6  0021               	movlb	1	; select bank1
 11780  08F7  0864               	movf	(_activeMask+2)^(0+128),w
 11781  08F8  0020               	movlb	0	; select bank0
 11782  08F9  00C6               	movwf	LEDsOn@LEDpins+2
 11783  08FA  0021               	movlb	1	; select bank1
 11784  08FB  0863               	movf	(_activeMask+1)^(0+128),w
 11785  08FC  0020               	movlb	0	; select bank0
 11786  08FD  00C5               	movwf	LEDsOn@LEDpins+1
 11787  08FE  0021               	movlb	1	; select bank1
 11788  08FF  0862               	movf	_activeMask^(0+128),w
 11789  0900  0020               	movlb	0	; select bank0
 11790  0901  00C4               	movwf	LEDsOn@LEDpins
 11791  0902  3002               	movlw	2
 11792  0903                     L24:	
 11793  0903  00C8               	movwf	LEDsOn@topOrBottom
 11794  0904  3000               	movlw	0
 11795  0905  00C9               	movwf	LEDsOn@topOrBottom+1
 11796  0906  31A3  23E3  3188   	fcall	_LEDsOn
 11797  0909                     l8734:	
 11798                           
 11799                           ;main.c: 507: }
 11800                           ;main.c: 509: for(int t=0; t<onTime; t++) _delay((unsigned long)((1)*(1000000/4000.0)));
 11801  0909  0021               	movlb	1	; select bank1
 11802  090A  01C0               	clrf	timedActiveHeatOn@t^(0+128)
 11803  090B  01C1               	clrf	(timedActiveHeatOn@t+1)^(0+128)
 11804  090C                     l1228:	
 11805  090C  0840               	movf	timedActiveHeatOn@t^(0+128),w
 11806  090D  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11807  090E  0841               	movf	(timedActiveHeatOn@t+1)^(0+128),w
 11808  090F  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11809  0910  3000               	movlw	0
 11810  0911  1BBC               	btfsc	(??_timedActiveHeatOn^(0+128)+1),7
 11811  0912  30FF               	movlw	255
 11812  0913  00BD               	movwf	(??_timedActiveHeatOn^(0+128)+2)
 11813  0914  00BE               	movwf	(??_timedActiveHeatOn^(0+128)+3)
 11814  0915  083E               	movf	(??_timedActiveHeatOn+3)^(0+128),w
 11815  0916  3A80               	xorlw	128
 11816  0917  00BF               	movwf	(??_timedActiveHeatOn+4)^(0+128)
 11817  0918  0838               	movf	(timedActiveHeatOn@onTime+3)^(0+128),w
 11818  0919  3A80               	xorlw	128
 11819  091A  023F               	subwf	(??_timedActiveHeatOn+4)^(0+128),w
 11820  091B  1D03               	skipz
 11821  091C  2927               	goto	u8833
 11822  091D  0837               	movf	(timedActiveHeatOn@onTime+2)^(0+128),w
 11823  091E  023D               	subwf	(??_timedActiveHeatOn+2)^(0+128),w
 11824  091F  1D03               	skipz
 11825  0920  2927               	goto	u8833
 11826  0921  0836               	movf	(timedActiveHeatOn@onTime+1)^(0+128),w
 11827  0922  023C               	subwf	(??_timedActiveHeatOn+1)^(0+128),w
 11828  0923  1D03               	skipz
 11829  0924  2927               	goto	u8833
 11830  0925  0835               	movf	timedActiveHeatOn@onTime^(0+128),w
 11831  0926  023B               	subwf	??_timedActiveHeatOn^(0+128),w
 11832  0927                     u8833:	
 11833  0927  1803               	btfsc	3,0
 11834  0928  2933               	goto	l1231
 11835  0929  3053               	movlw	83
 11836  092A                     u10157:	
 11837  092A  0B89               	decfsz	9,f
 11838  092B  292A               	goto	u10157
 11839  092C  0000               	nop
 11840  092D  3001               	movlw	1
 11841  092E  0021               	movlb	1	; select bank1
 11842  092F  07C0               	addwf	timedActiveHeatOn@t^(0+128),f
 11843  0930  3000               	movlw	0
 11844  0931  3DC1               	addwfc	(timedActiveHeatOn@t+1)^(0+128),f
 11845  0932  290C               	goto	l1228
 11846  0933                     l1231:	
 11847                           ;main.c: 510: do { LATCbits.LATC1 = 1; } while(0);
 11848                           
 11849  0933  0022               	movlb	2	; select bank2
 11850  0934  148E               	bsf	14,1	;volatile
 11851                           
 11852                           ;main.c: 511: LEDsOn(0, 1);
 11853  0935  3000               	movlw	0
 11854  0936  0020               	movlb	0	; select bank0
 11855  0937  00C7               	movwf	LEDsOn@LEDpins+3
 11856  0938  3000               	movlw	0
 11857  0939  00C6               	movwf	LEDsOn@LEDpins+2
 11858  093A  3000               	movlw	0
 11859  093B  00C5               	movwf	LEDsOn@LEDpins+1
 11860  093C  3000               	movlw	0
 11861  093D  00C4               	movwf	LEDsOn@LEDpins
 11862  093E  3001               	movlw	1
 11863  093F  00C8               	movwf	LEDsOn@topOrBottom
 11864  0940  3000               	movlw	0
 11865  0941  00C9               	movwf	LEDsOn@topOrBottom+1
 11866  0942  31A3  23E3  3188   	fcall	_LEDsOn
 11867                           
 11868                           ;main.c: 512: LEDsOn(0, 2);
 11869  0945  3000               	movlw	0
 11870  0946  0020               	movlb	0	; select bank0
 11871  0947  00C7               	movwf	LEDsOn@LEDpins+3
 11872  0948  3000               	movlw	0
 11873  0949  00C6               	movwf	LEDsOn@LEDpins+2
 11874  094A  3000               	movlw	0
 11875  094B  00C5               	movwf	LEDsOn@LEDpins+1
 11876  094C  3000               	movlw	0
 11877  094D  00C4               	movwf	LEDsOn@LEDpins
 11878  094E  3002               	movlw	2
 11879  094F  00C8               	movwf	LEDsOn@topOrBottom
 11880  0950  3000               	movlw	0
 11881  0951  00C9               	movwf	LEDsOn@topOrBottom+1
 11882  0952  31A3  23E3  3188   	fcall	_LEDsOn
 11883                           
 11884                           ;main.c: 513: printf("A\n");
 11885  0955  303C               	movlw	low (STR_7| (0+32768))
 11886  0956  0021               	movlb	1	; select bank1
 11887  0957  00A0               	movwf	printf@f^(0+128)
 11888  0958  30B0               	movlw	high (STR_7| (0+32768))
 11889  0959  00A1               	movwf	(printf@f^(0+128)+1)
 11890  095A  318E  26CE         	fcall	_printf
 11891                           
 11892                           ;main.c: 514: return 0;
 11893  095C  0021               	movlb	1	; select bank1
 11894  095D  01B5               	clrf	?_timedActiveHeatOn^(0+128)
 11895  095E  01B6               	clrf	(?_timedActiveHeatOn+1)^(0+128)
 11896  095F  0008               	return
 11897  0960                     __end_of_timedActiveHeatOn:	
 11898                           
 11899                           	psect	text21
 11900  24DC                     __ptext21:	
 11901 ;; *************** function _stop *****************
 11902 ;; Defined at:
 11903 ;;		line 298 in file "main.c"
 11904 ;; Parameters:    Size  Location     Type
 11905 ;;		None
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;		None
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  2   21[BANK1 ] int 
 11910 ;; Registers used:
 11911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11917 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11920 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11921 ;;Total ram usage:        2 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:    9
 11924 ;; This function calls:
 11925 ;;		_printf
 11926 ;; This function is called by:
 11927 ;;		_execCmd
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           
 11932                           ;psect for function _stop
 11933  24DC                     _stop:	
 11934                           
 11935                           ;main.c: 299: motionType = NONE;
 11936                           
 11937                           ;incstack = 0
 11938                           ; Regs used in _stop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11939  24DC  0020               	movlb	0	; select bank0
 11940  24DD  01D5               	clrf	_motionType
 11941                           
 11942                           ;main.c: 300: moveVector_ups = 0;
 11943  24DE  3000               	movlw	0
 11944  24DF  0021               	movlb	1	; select bank1
 11945  24E0  00E9               	movwf	(_moveVector_ups+3)^(0+128)
 11946  24E1  3000               	movlw	0
 11947  24E2  00E8               	movwf	(_moveVector_ups+2)^(0+128)
 11948  24E3  3000               	movlw	0
 11949  24E4  00E7               	movwf	(_moveVector_ups+1)^(0+128)
 11950  24E5  3000               	movlw	0
 11951  24E6  00E6               	movwf	_moveVector_ups^(0+128)
 11952                           
 11953                           ;main.c: 301: moveVector_downs = 0;
 11954  24E7  3000               	movlw	0
 11955  24E8  0020               	movlb	0	; select bank0
 11956  24E9  00D1               	movwf	_moveVector_downs+3
 11957  24EA  3000               	movlw	0
 11958  24EB  00D0               	movwf	_moveVector_downs+2
 11959  24EC  3000               	movlw	0
 11960  24ED  00CF               	movwf	_moveVector_downs+1
 11961  24EE  3000               	movlw	0
 11962  24EF  00CE               	movwf	_moveVector_downs
 11963                           
 11964                           ;main.c: 302: remainingSteps = 0;
 11965  24F0  3000               	movlw	0
 11966  24F1  0022               	movlb	2	; select bank2
 11967  24F2  00C5               	movwf	(_remainingSteps+3)^(0+256)
 11968  24F3  3000               	movlw	0
 11969  24F4  00C4               	movwf	(_remainingSteps+2)^(0+256)
 11970  24F5  3000               	movlw	0
 11971  24F6  00C3               	movwf	(_remainingSteps+1)^(0+256)
 11972  24F7  3000               	movlw	0
 11973  24F8  00C2               	movwf	_remainingSteps^(0+256)
 11974                           
 11975                           ;main.c: 303: printf("A\n");
 11976  24F9  303C               	movlw	low (STR_7| (0+32768))
 11977  24FA  0021               	movlb	1	; select bank1
 11978  24FB  00A0               	movwf	printf@f^(0+128)
 11979  24FC  30B0               	movlw	high (STR_7| (0+32768))
 11980  24FD  00A1               	movwf	(printf@f^(0+128)+1)
 11981  24FE  318E  26CE         	fcall	_printf
 11982                           
 11983                           ;main.c: 304: return 0;
 11984  2500  0021               	movlb	1	; select bank1
 11985  2501  01B5               	clrf	?_stop^(0+128)
 11986  2502  01B6               	clrf	(?_stop+1)^(0+128)
 11987  2503  0008               	return
 11988  2504                     __end_of_stop:	
 11989                           
 11990                           	psect	text22
 11991  2279                     __ptext22:	
 11992 ;; *************** function _startRelMove *****************
 11993 ;; Defined at:
 11994 ;;		line 284 in file "main.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  steps           2   21[BANK1 ] int 
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  2   21[BANK1 ] int 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12008 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12011 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12012 ;;Total ram usage:        2 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:    9
 12015 ;; This function calls:
 12016 ;;		_printf
 12017 ;; This function is called by:
 12018 ;;		_execCmd
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           
 12023                           ;psect for function _startRelMove
 12024  2279                     _startRelMove:	
 12025                           
 12026                           ;main.c: 285: motionType = REL_MOVE;
 12027                           
 12028                           ;incstack = 0
 12029                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12030  2279  0020               	movlb	0	; select bank0
 12031  227A  01D5               	clrf	_motionType
 12032  227B  0AD5               	incf	_motionType,f
 12033                           
 12034                           ;main.c: 286: remainingSteps = steps;
 12035  227C  0021               	movlb	1	; select bank1
 12036  227D  0835               	movf	startRelMove@steps^(0+128),w
 12037  227E  0022               	movlb	2	; select bank2
 12038  227F  00C2               	movwf	_remainingSteps^(0+256)
 12039  2280  0021               	movlb	1	; select bank1
 12040  2281  0836               	movf	(startRelMove@steps+1)^(0+128),w
 12041  2282  0022               	movlb	2	; select bank2
 12042  2283  00C3               	movwf	(_remainingSteps+1)^(0+256)
 12043  2284  0D89               	rlf	9,f
 12044  2285  3B89               	subwfb	9,f
 12045  2286  0989               	comf	9,f
 12046  2287  00C4               	movwf	(_remainingSteps+2)^(0+256)
 12047  2288  00C5               	movwf	(_remainingSteps+3)^(0+256)
 12048                           
 12049                           ;main.c: 287: printf("A\n");
 12050  2289  303C               	movlw	low (STR_7| (0+32768))
 12051  228A  0021               	movlb	1	; select bank1
 12052  228B  00A0               	movwf	printf@f^(0+128)
 12053  228C  30B0               	movlw	high (STR_7| (0+32768))
 12054  228D  00A1               	movwf	(printf@f^(0+128)+1)
 12055  228E  318E  26CE         	fcall	_printf
 12056                           
 12057                           ;main.c: 288: return 0;
 12058  2290  0021               	movlb	1	; select bank1
 12059  2291  01B5               	clrf	?_startRelMove^(0+128)
 12060  2292  01B6               	clrf	(?_startRelMove+1)^(0+128)
 12061  2293  0008               	return
 12062  2294                     __end_of_startRelMove:	
 12063                           
 12064                           	psect	text23
 12065  22CC                     __ptext23:	
 12066 ;; *************** function _startAbsMove *****************
 12067 ;; Defined at:
 12068 ;;		line 290 in file "main.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;  steps           2   21[BANK1 ] int 
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;		None
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  2   21[BANK1 ] int 
 12075 ;; Registers used:
 12076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12077 ;; Tracked objects:
 12078 ;;		On entry : 0/0
 12079 ;;		On exit  : 0/0
 12080 ;;		Unchanged: 0/0
 12081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12082 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12085 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12086 ;;Total ram usage:        3 bytes
 12087 ;; Hardware stack levels used:    1
 12088 ;; Hardware stack levels required when called:    9
 12089 ;; This function calls:
 12090 ;;		_printf
 12091 ;; This function is called by:
 12092 ;;		_execCmd
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           
 12097                           ;psect for function _startAbsMove
 12098  22CC                     _startAbsMove:	
 12099                           
 12100                           ;main.c: 291: motionType = ABS_MOVE;
 12101                           
 12102                           ;incstack = 0
 12103                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12104  22CC  3002               	movlw	2
 12105  22CD  0020               	movlb	0	; select bank0
 12106  22CE  00C9               	movwf	??_startAbsMove
 12107  22CF  0849               	movf	??_startAbsMove,w
 12108  22D0  00D5               	movwf	_motionType
 12109                           
 12110                           ;main.c: 292: absCommand = steps;
 12111  22D1  0021               	movlb	1	; select bank1
 12112  22D2  0835               	movf	startAbsMove@steps^(0+128),w
 12113  22D3  0022               	movlb	2	; select bank2
 12114  22D4  00BE               	movwf	_absCommand^(0+256)
 12115  22D5  0021               	movlb	1	; select bank1
 12116  22D6  0836               	movf	(startAbsMove@steps+1)^(0+128),w
 12117  22D7  0022               	movlb	2	; select bank2
 12118  22D8  00BF               	movwf	(_absCommand+1)^(0+256)
 12119  22D9  0D89               	rlf	9,f
 12120  22DA  3B89               	subwfb	9,f
 12121  22DB  0989               	comf	9,f
 12122  22DC  00C0               	movwf	(_absCommand+2)^(0+256)
 12123  22DD  00C1               	movwf	(_absCommand+3)^(0+256)
 12124                           
 12125                           ;main.c: 293: printf("A\n");
 12126  22DE  303C               	movlw	low (STR_7| (0+32768))
 12127  22DF  0021               	movlb	1	; select bank1
 12128  22E0  00A0               	movwf	printf@f^(0+128)
 12129  22E1  30B0               	movlw	high (STR_7| (0+32768))
 12130  22E2  00A1               	movwf	(printf@f^(0+128)+1)
 12131  22E3  318E  26CE         	fcall	_printf
 12132                           
 12133                           ;main.c: 294: return 0;
 12134  22E5  0021               	movlb	1	; select bank1
 12135  22E6  01B5               	clrf	?_startAbsMove^(0+128)
 12136  22E7  01B6               	clrf	(?_startAbsMove+1)^(0+128)
 12137  22E8  0008               	return
 12138  22E9                     __end_of_startAbsMove:	
 12139                           
 12140                           	psect	text24
 12141  128E                     __ptext24:	
 12142 ;; *************** function _setMoveMask *****************
 12143 ;; Defined at:
 12144 ;;		line 537 in file "main.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  probeNum        2   21[BANK1 ] int 
 12147 ;;  onOff           2   23[BANK1 ] int 
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;		None
 12150 ;; Return value:  Size  Location     Type
 12151 ;;                  2   21[BANK1 ] int 
 12152 ;; Registers used:
 12153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12154 ;; Tracked objects:
 12155 ;;		On entry : 0/0
 12156 ;;		On exit  : 0/0
 12157 ;;		Unchanged: 0/0
 12158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12159 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12162 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12163 ;;Total ram usage:        8 bytes
 12164 ;; Hardware stack levels used:    1
 12165 ;; Hardware stack levels required when called:    9
 12166 ;; This function calls:
 12167 ;;		_printf
 12168 ;; This function is called by:
 12169 ;;		_execCmd
 12170 ;; This function uses a non-reentrant model
 12171 ;;
 12172                           
 12173                           
 12174                           ;psect for function _setMoveMask
 12175  128E                     _setMoveMask:	
 12176                           
 12177                           ;main.c: 541: if (probeNum < 24){
 12178                           
 12179                           ;incstack = 0
 12180                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12181  128E  0021               	movlb	1	; select bank1
 12182  128F  0836               	movf	(setMoveMask@probeNum+1)^(0+128),w
 12183  1290  3A80               	xorlw	128
 12184  1291  0020               	movlb	0	; select bank0
 12185  1292  00C9               	movwf	??_setMoveMask
 12186  1293  3080               	movlw	128
 12187  1294  0249               	subwf	??_setMoveMask,w
 12188  1295  1D03               	skipz
 12189  1296  2A9A               	goto	u8895
 12190  1297  3018               	movlw	24
 12191  1298  0021               	movlb	1	; select bank1
 12192  1299  0235               	subwf	setMoveMask@probeNum^(0+128),w
 12193  129A                     u8895:	
 12194  129A  1803               	skipnc
 12195  129B  2AF4               	goto	l8780
 12196                           
 12197                           ;main.c: 542: if (onOff)
 12198  129C  0021               	movlb	1	; select bank1
 12199  129D  0837               	movf	setMoveMask@onOff^(0+128),w
 12200  129E  0438               	iorwf	(setMoveMask@onOff+1)^(0+128),w
 12201  129F  1903               	btfsc	3,2
 12202  12A0  2AC4               	goto	l8772
 12203                           
 12204                           ;main.c: 543: moveMask |= (1UL<<probeNum);
 12205  12A1  3001               	movlw	1
 12206  12A2  0020               	movlb	0	; select bank0
 12207  12A3  00C9               	movwf	??_setMoveMask
 12208  12A4  3000               	movlw	0
 12209  12A5  00CA               	movwf	??_setMoveMask+1
 12210  12A6  3000               	movlw	0
 12211  12A7  00CB               	movwf	??_setMoveMask+2
 12212  12A8  3000               	movlw	0
 12213  12A9  00CC               	movwf	??_setMoveMask+3
 12214  12AA  0021               	movlb	1	; select bank1
 12215  12AB  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12216  12AC  0020               	movlb	0	; select bank0
 12217  12AD  2AB2               	goto	u8910
 12218  12AE                     u8915:	
 12219  12AE  35C9               	lslf	??_setMoveMask,f
 12220  12AF  0DCA               	rlf	??_setMoveMask+1,f
 12221  12B0  0DCB               	rlf	??_setMoveMask+2,f
 12222  12B1  0DCC               	rlf	??_setMoveMask+3,f
 12223  12B2                     u8910:	
 12224  12B2  0B89               	decfsz	9,f
 12225  12B3  2AAE               	goto	u8915
 12226  12B4  0849               	movf	??_setMoveMask,w
 12227  12B5  0021               	movlb	1	; select bank1
 12228  12B6  04DE               	iorwf	_moveMask^(0+128),f
 12229  12B7  0020               	movlb	0	; select bank0
 12230  12B8  084A               	movf	??_setMoveMask+1,w
 12231  12B9  0021               	movlb	1	; select bank1
 12232  12BA  04DF               	iorwf	(_moveMask+1)^(0+128),f
 12233  12BB  0020               	movlb	0	; select bank0
 12234  12BC  084B               	movf	??_setMoveMask+2,w
 12235  12BD  0021               	movlb	1	; select bank1
 12236  12BE  04E0               	iorwf	(_moveMask+2)^(0+128),f
 12237  12BF  0020               	movlb	0	; select bank0
 12238  12C0  084C               	movf	??_setMoveMask+3,w
 12239  12C1  0021               	movlb	1	; select bank1
 12240  12C2  04E1               	iorwf	(_moveMask+3)^(0+128),f
 12241  12C3  2AEA               	goto	l8774
 12242  12C4                     l8772:	
 12243                           
 12244                           ;main.c: 544: else
 12245                           ;main.c: 545: moveMask &= ~(1UL<< probeNum);
 12246  12C4  3001               	movlw	1
 12247  12C5  0020               	movlb	0	; select bank0
 12248  12C6  00C9               	movwf	??_setMoveMask
 12249  12C7  3000               	movlw	0
 12250  12C8  00CA               	movwf	??_setMoveMask+1
 12251  12C9  3000               	movlw	0
 12252  12CA  00CB               	movwf	??_setMoveMask+2
 12253  12CB  3000               	movlw	0
 12254  12CC  00CC               	movwf	??_setMoveMask+3
 12255  12CD  0021               	movlb	1	; select bank1
 12256  12CE  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12257  12CF  0020               	movlb	0	; select bank0
 12258  12D0  2AD5               	goto	u8920
 12259  12D1                     u8925:	
 12260  12D1  35C9               	lslf	??_setMoveMask,f
 12261  12D2  0DCA               	rlf	??_setMoveMask+1,f
 12262  12D3  0DCB               	rlf	??_setMoveMask+2,f
 12263  12D4  0DCC               	rlf	??_setMoveMask+3,f
 12264  12D5                     u8920:	
 12265  12D5  0B89               	decfsz	9,f
 12266  12D6  2AD1               	goto	u8925
 12267  12D7  09C9               	comf	??_setMoveMask,f
 12268  12D8  09CA               	comf	??_setMoveMask+1,f
 12269  12D9  09CB               	comf	??_setMoveMask+2,f
 12270  12DA  09CC               	comf	??_setMoveMask+3,f
 12271  12DB  0849               	movf	??_setMoveMask,w
 12272  12DC  0021               	movlb	1	; select bank1
 12273  12DD  05DE               	andwf	_moveMask^(0+128),f
 12274  12DE  0020               	movlb	0	; select bank0
 12275  12DF  084A               	movf	??_setMoveMask+1,w
 12276  12E0  0021               	movlb	1	; select bank1
 12277  12E1  05DF               	andwf	(_moveMask+1)^(0+128),f
 12278  12E2  0020               	movlb	0	; select bank0
 12279  12E3  084B               	movf	??_setMoveMask+2,w
 12280  12E4  0021               	movlb	1	; select bank1
 12281  12E5  05E0               	andwf	(_moveMask+2)^(0+128),f
 12282  12E6  0020               	movlb	0	; select bank0
 12283  12E7  084C               	movf	??_setMoveMask+3,w
 12284  12E8  0021               	movlb	1	; select bank1
 12285  12E9  05E1               	andwf	(_moveMask+3)^(0+128),f
 12286  12EA                     l8774:	
 12287                           
 12288                           ;main.c: 546: printf("A\n");
 12289  12EA  303C               	movlw	low (STR_7| (0+32768))
 12290  12EB  00A0               	movwf	printf@f^(0+128)
 12291  12EC  30B0               	movlw	high (STR_7| (0+32768))
 12292  12ED  00A1               	movwf	(printf@f^(0+128)+1)
 12293  12EE  318E  26CE         	fcall	_printf
 12294                           
 12295                           ;main.c: 547: return 0;
 12296  12F0  0021               	movlb	1	; select bank1
 12297  12F1  01B5               	clrf	?_setMoveMask^(0+128)
 12298  12F2  01B6               	clrf	(?_setMoveMask+1)^(0+128)
 12299  12F3  0008               	return
 12300  12F4                     l8780:	
 12301                           
 12302                           ;main.c: 548: }
 12303                           ;main.c: 549: printf("E\n");
 12304  12F4  303F               	movlw	low (STR_14| (0+32768))
 12305  12F5  0021               	movlb	1	; select bank1
 12306  12F6  00A0               	movwf	printf@f^(0+128)
 12307  12F7  30B0               	movlw	high (STR_14| (0+32768))
 12308  12F8  00A1               	movwf	(printf@f^(0+128)+1)
 12309  12F9  318E  26CE         	fcall	_printf
 12310                           
 12311                           ;main.c: 550: return 1;
 12312  12FB  3001               	movlw	1
 12313  12FC  0021               	movlb	1	; select bank1
 12314  12FD  00B5               	movwf	?_setMoveMask^(0+128)
 12315  12FE  3000               	movlw	0
 12316  12FF  00B6               	movwf	(?_setMoveMask^(0+128)+1)
 12317  1300  0008               	return
 12318  1301                     __end_of_setMoveMask:	
 12319                           
 12320                           	psect	text25
 12321  2325                     __ptext25:	
 12322 ;; *************** function _setLEDPwr *****************
 12323 ;; Defined at:
 12324 ;;		line 468 in file "main.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;  pwr             2   21[BANK1 ] int 
 12327 ;;  topOrBottom     2   23[BANK1 ] int 
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;		None
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  2   21[BANK1 ] int 
 12332 ;; Registers used:
 12333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12339 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12342 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12343 ;;Total ram usage:        4 bytes
 12344 ;; Hardware stack levels used:    1
 12345 ;; Hardware stack levels required when called:    9
 12346 ;; This function calls:
 12347 ;;		_LEDsPwr
 12348 ;;		_printf
 12349 ;; This function is called by:
 12350 ;;		_execCmd
 12351 ;; This function uses a non-reentrant model
 12352 ;;
 12353                           
 12354                           
 12355                           ;psect for function _setLEDPwr
 12356  2325                     _setLEDPwr:	
 12357                           
 12358                           ;main.c: 469: LEDsPwr(pwr, topOrBottom);
 12359                           
 12360                           ;incstack = 0
 12361                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12362  2325  0021               	movlb	1	; select bank1
 12363  2326  0836               	movf	(setLEDPwr@pwr+1)^(0+128),w
 12364  2327  0020               	movlb	0	; select bank0
 12365  2328  00C5               	movwf	LEDsPwr@pwr+1
 12366  2329  0021               	movlb	1	; select bank1
 12367  232A  0835               	movf	setLEDPwr@pwr^(0+128),w
 12368  232B  0020               	movlb	0	; select bank0
 12369  232C  00C4               	movwf	LEDsPwr@pwr
 12370  232D  0021               	movlb	1	; select bank1
 12371  232E  0838               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 12372  232F  0020               	movlb	0	; select bank0
 12373  2330  00C7               	movwf	LEDsPwr@topOrBottom+1
 12374  2331  0021               	movlb	1	; select bank1
 12375  2332  0837               	movf	setLEDPwr@topOrBottom^(0+128),w
 12376  2333  0020               	movlb	0	; select bank0
 12377  2334  00C6               	movwf	LEDsPwr@topOrBottom
 12378  2335  319E  26C9  31A3   	fcall	_LEDsPwr
 12379                           
 12380                           ;main.c: 470: printf("A\n");
 12381  2338  303C               	movlw	low (STR_7| (0+32768))
 12382  2339  0021               	movlb	1	; select bank1
 12383  233A  00A0               	movwf	printf@f^(0+128)
 12384  233B  30B0               	movlw	high (STR_7| (0+32768))
 12385  233C  00A1               	movwf	(printf@f^(0+128)+1)
 12386  233D  318E  26CE         	fcall	_printf
 12387                           
 12388                           ;main.c: 471: return 0;
 12389  233F  0021               	movlb	1	; select bank1
 12390  2340  01B5               	clrf	?_setLEDPwr^(0+128)
 12391  2341  01B6               	clrf	(?_setLEDPwr+1)^(0+128)
 12392  2342  0008               	return
 12393  2343                     __end_of_setLEDPwr:	
 12394                           
 12395                           	psect	text26
 12396  1EC9                     __ptext26:	
 12397 ;; *************** function _LEDsPwr *****************
 12398 ;; Defined at:
 12399 ;;		line 12 in file "LEDcomm.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;  pwr             2   36[BANK0 ] int 
 12402 ;;  topOrBottom     2   38[BANK0 ] int 
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  1    wreg      void 
 12407 ;; Registers used:
 12408 ;;		wreg, status,2, status,0, pclath, cstack
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12414 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12415 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12416 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12417 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12418 ;;Total ram usage:       14 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; Hardware stack levels required when called:    8
 12421 ;; This function calls:
 12422 ;;		_send_2length_2bytes_IK
 12423 ;; This function is called by:
 12424 ;;		_main_initialize
 12425 ;;		_setLEDPwr
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function _LEDsPwr
 12431  1EC9                     _LEDsPwr:	
 12432                           
 12433                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 12434                           
 12435                           ;incstack = 0
 12436                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 12437  1EC9  0020               	movlb	0	; select bank0
 12438  1ECA  0845               	movf	LEDsPwr@pwr+1,w
 12439  1ECB  3A80               	xorlw	128
 12440  1ECC  00C8               	movwf	??_LEDsPwr
 12441  1ECD  3080               	movlw	128
 12442  1ECE  0248               	subwf	??_LEDsPwr,w
 12443  1ECF  1D03               	skipz
 12444  1ED0  2ED3               	goto	u8315
 12445  1ED1  3040               	movlw	64
 12446  1ED2  0244               	subwf	LEDsPwr@pwr,w
 12447  1ED3                     u8315:	
 12448  1ED3  1C03               	btfss	3,0
 12449  1ED4  2EDA               	goto	l202
 12450  1ED5  303F               	movlw	63
 12451  1ED6  0020               	movlb	0	; select bank0
 12452  1ED7  00C4               	movwf	LEDsPwr@pwr
 12453  1ED8  3000               	movlw	0
 12454  1ED9  00C5               	movwf	LEDsPwr@pwr+1
 12455  1EDA                     l202:	
 12456                           
 12457                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 12458  1EDA  0020               	movlb	0	; select bank0
 12459  1EDB  0845               	movf	LEDsPwr@pwr+1,w
 12460  1EDC  00C9               	movwf	??_LEDsPwr+1
 12461  1EDD  0844               	movf	LEDsPwr@pwr,w
 12462  1EDE  00C8               	movwf	??_LEDsPwr
 12463  1EDF  0E48               	swapf	??_LEDsPwr,w
 12464  1EE0  39F0               	andlw	240
 12465  1EE1  00C9               	movwf	??_LEDsPwr+1
 12466  1EE2  01C8               	clrf	??_LEDsPwr
 12467  1EE3  0845               	movf	LEDsPwr@pwr+1,w
 12468  1EE4  00CB               	movwf	??_LEDsPwr+3
 12469  1EE5  0844               	movf	LEDsPwr@pwr,w
 12470  1EE6  00CA               	movwf	??_LEDsPwr+2
 12471  1EE7  3006               	movlw	6
 12472  1EE8                     u8325:	
 12473  1EE8  35CA               	lslf	??_LEDsPwr+2,f
 12474  1EE9  0DCB               	rlf	??_LEDsPwr+3,f
 12475  1EEA  0B89               	decfsz	9,f
 12476  1EEB  2EE8               	goto	u8325
 12477  1EEC  0848               	movf	??_LEDsPwr,w
 12478  1EED  044A               	iorwf	??_LEDsPwr+2,w
 12479  1EEE  00CC               	movwf	??_LEDsPwr+4
 12480  1EEF  0849               	movf	??_LEDsPwr+1,w
 12481  1EF0  044B               	iorwf	??_LEDsPwr+3,w
 12482  1EF1  00CD               	movwf	??_LEDsPwr+5
 12483  1EF2  0844               	movf	LEDsPwr@pwr,w
 12484  1EF3  044C               	iorwf	??_LEDsPwr+4,w
 12485  1EF4  0021               	movlb	1	; select bank1
 12486  1EF5  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 12487  1EF6  0020               	movlb	0	; select bank0
 12488  1EF7  0845               	movf	LEDsPwr@pwr+1,w
 12489  1EF8  044D               	iorwf	??_LEDsPwr+5,w
 12490  1EF9  0021               	movlb	1	; select bank1
 12491  1EFA  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 12492  1EFB  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 12493  1EFC  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 12494  1EFD  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 12495  1EFE  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 12496  1EFF  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 12497                           
 12498                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 12499  1F00  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12500  1F01  0020               	movlb	0	; select bank0
 12501  1F02  00C8               	movwf	??_LEDsPwr
 12502  1F03  0021               	movlb	1	; select bank1
 12503  1F04  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12504  1F05  0020               	movlb	0	; select bank0
 12505  1F06  00C9               	movwf	??_LEDsPwr+1
 12506  1F07  0021               	movlb	1	; select bank1
 12507  1F08  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 12508  1F09  0020               	movlb	0	; select bank0
 12509  1F0A  00CA               	movwf	??_LEDsPwr+2
 12510  1F0B  0021               	movlb	1	; select bank1
 12511  1F0C  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 12512  1F0D  0020               	movlb	0	; select bank0
 12513  1F0E  00CB               	movwf	??_LEDsPwr+3
 12514  1F0F  3010               	movlw	16
 12515  1F10                     u8335:	
 12516  1F10  36CB               	lsrf	??_LEDsPwr+3,f
 12517  1F11  0CCA               	rrf	??_LEDsPwr+2,f
 12518  1F12  0CC9               	rrf	??_LEDsPwr+1,f
 12519  1F13  0CC8               	rrf	??_LEDsPwr,f
 12520  1F14  0B89               	decfsz	9,f
 12521  1F15  2F10               	goto	u8335
 12522  1F16  0849               	movf	??_LEDsPwr+1,w
 12523  1F17  00BD               	movwf	send_2length_2bytes_IK@data1+1
 12524  1F18  0848               	movf	??_LEDsPwr,w
 12525  1F19  00BC               	movwf	send_2length_2bytes_IK@data1
 12526  1F1A  0021               	movlb	1	; select bank1
 12527  1F1B  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12528  1F1C  0020               	movlb	0	; select bank0
 12529  1F1D  00BF               	movwf	send_2length_2bytes_IK@data2+1
 12530  1F1E  0021               	movlb	1	; select bank1
 12531  1F1F  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12532  1F20  0020               	movlb	0	; select bank0
 12533  1F21  00BE               	movwf	send_2length_2bytes_IK@data2
 12534  1F22  3007               	movlw	7
 12535  1F23  00CC               	movwf	??_LEDsPwr+4
 12536  1F24  084C               	movf	??_LEDsPwr+4,w
 12537  1F25  00C0               	movwf	send_2length_2bytes_IK@latch_start
 12538  1F26  0847               	movf	LEDsPwr@topOrBottom+1,w
 12539  1F27  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 12540  1F28  0846               	movf	LEDsPwr@topOrBottom,w
 12541  1F29  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 12542  1F2A  31A2  2214         	fcall	_send_2length_2bytes_IK
 12543  1F2C  0008               	return
 12544  1F2D                     __end_of_LEDsPwr:	
 12545                           
 12546                           	psect	text27
 12547  2307                     __ptext27:	
 12548 ;; *************** function _setLEDBrightnessRange *****************
 12549 ;; Defined at:
 12550 ;;		line 460 in file "main.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;  r               2   21[BANK1 ] int 
 12553 ;;  tOB             2   23[BANK1 ] int 
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;		None
 12556 ;; Return value:  Size  Location     Type
 12557 ;;                  2   21[BANK1 ] int 
 12558 ;; Registers used:
 12559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12560 ;; Tracked objects:
 12561 ;;		On entry : 0/0
 12562 ;;		On exit  : 0/0
 12563 ;;		Unchanged: 0/0
 12564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12565 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12568 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12569 ;;Total ram usage:        4 bytes
 12570 ;; Hardware stack levels used:    1
 12571 ;; Hardware stack levels required when called:    9
 12572 ;; This function calls:
 12573 ;;		_LED_setBrightnessRange
 12574 ;;		_printf
 12575 ;; This function is called by:
 12576 ;;		_execCmd
 12577 ;; This function uses a non-reentrant model
 12578 ;;
 12579                           
 12580                           
 12581                           ;psect for function _setLEDBrightnessRange
 12582  2307                     _setLEDBrightnessRange:	
 12583                           
 12584                           ;main.c: 461: LED_setBrightnessRange(r, tOB);
 12585                           
 12586                           ;incstack = 0
 12587                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12588  2307  0021               	movlb	1	; select bank1
 12589  2308  0836               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 12590  2309  0020               	movlb	0	; select bank0
 12591  230A  00C5               	movwf	LED_setBrightnessRange@range+1
 12592  230B  0021               	movlb	1	; select bank1
 12593  230C  0835               	movf	setLEDBrightnessRange@r^(0+128),w
 12594  230D  0020               	movlb	0	; select bank0
 12595  230E  00C4               	movwf	LED_setBrightnessRange@range
 12596  230F  0021               	movlb	1	; select bank1
 12597  2310  0838               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 12598  2311  0020               	movlb	0	; select bank0
 12599  2312  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 12600  2313  0021               	movlb	1	; select bank1
 12601  2314  0837               	movf	setLEDBrightnessRange@tOB^(0+128),w
 12602  2315  0020               	movlb	0	; select bank0
 12603  2316  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 12604  2317  3187  275C  31A3   	fcall	_LED_setBrightnessRange
 12605                           
 12606                           ;main.c: 462: printf("A\n");
 12607  231A  303C               	movlw	low (STR_7| (0+32768))
 12608  231B  0021               	movlb	1	; select bank1
 12609  231C  00A0               	movwf	printf@f^(0+128)
 12610  231D  30B0               	movlw	high (STR_7| (0+32768))
 12611  231E  00A1               	movwf	(printf@f^(0+128)+1)
 12612  231F  318E  26CE         	fcall	_printf
 12613                           
 12614                           ;main.c: 463: return 0;
 12615  2321  0021               	movlb	1	; select bank1
 12616  2322  01B5               	clrf	?_setLEDBrightnessRange^(0+128)
 12617  2323  01B6               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 12618  2324  0008               	return
 12619  2325                     __end_of_setLEDBrightnessRange:	
 12620                           
 12621                           	psect	text28
 12622  15CA                     __ptext28:	
 12623 ;; *************** function _setHeaterToggle *****************
 12624 ;; Defined at:
 12625 ;;		line 477 in file "main.c"
 12626 ;; Parameters:    Size  Location     Type
 12627 ;;  num             2   21[BANK1 ] int 
 12628 ;;  topOrB          2   23[BANK1 ] int 
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;		None
 12631 ;; Return value:  Size  Location     Type
 12632 ;;                  2   21[BANK1 ] int 
 12633 ;; Registers used:
 12634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12635 ;; Tracked objects:
 12636 ;;		On entry : 0/0
 12637 ;;		On exit  : 0/0
 12638 ;;		Unchanged: 0/0
 12639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12640 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12642 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12643 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12644 ;;Total ram usage:        8 bytes
 12645 ;; Hardware stack levels used:    1
 12646 ;; Hardware stack levels required when called:    9
 12647 ;; This function calls:
 12648 ;;		_LEDsOn
 12649 ;;		_printf
 12650 ;; This function is called by:
 12651 ;;		_execCmd
 12652 ;; This function uses a non-reentrant model
 12653 ;;
 12654                           
 12655                           
 12656                           ;psect for function _setHeaterToggle
 12657  15CA                     _setHeaterToggle:	
 12658                           
 12659                           ;incstack = 0
 12660                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12661                           ;main.c: 478: do { LATCbits.LATC1 = 0; } while(0);
 12662  15CA  0022               	movlb	2	; select bank2
 12663  15CB  108E               	bcf	14,1	;volatile
 12664                           
 12665                           ;main.c: 479: if(topOrB == 1){
 12666  15CC  0021               	movlb	1	; select bank1
 12667  15CD  0337               	decf	setHeaterToggle@topOrB^(0+128),w
 12668  15CE  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12669  15CF  1D03               	btfss	3,2
 12670  15D0  2E01               	goto	l8706
 12671                           
 12672                           ;main.c: 480: demoHeaterToggle_top ^= 1UL << num;
 12673  15D1  3001               	movlw	1
 12674  15D2  00B9               	movwf	??_setHeaterToggle^(0+128)
 12675  15D3  3000               	movlw	0
 12676  15D4  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12677  15D5  3000               	movlw	0
 12678  15D6  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12679  15D7  3000               	movlw	0
 12680  15D8  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12681  15D9  0A35               	incf	setHeaterToggle@num^(0+128),w
 12682  15DA  2DDF               	goto	u8770
 12683  15DB                     u8775:	
 12684  15DB  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12685  15DC  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12686  15DD  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12687  15DE  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12688  15DF                     u8770:	
 12689  15DF  0B89               	decfsz	9,f
 12690  15E0  2DDB               	goto	u8775
 12691  15E1  0839               	movf	??_setHeaterToggle^(0+128),w
 12692  15E2  0023               	movlb	3	; select bank3
 12693  15E3  06B4               	xorwf	_demoHeaterToggle_top^(0+384),f
 12694  15E4  0021               	movlb	1	; select bank1
 12695  15E5  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12696  15E6  0023               	movlb	3	; select bank3
 12697  15E7  06B5               	xorwf	(_demoHeaterToggle_top+1)^(0+384),f
 12698  15E8  0021               	movlb	1	; select bank1
 12699  15E9  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12700  15EA  0023               	movlb	3	; select bank3
 12701  15EB  06B6               	xorwf	(_demoHeaterToggle_top+2)^(0+384),f
 12702  15EC  0021               	movlb	1	; select bank1
 12703  15ED  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12704  15EE  0023               	movlb	3	; select bank3
 12705  15EF  06B7               	xorwf	(_demoHeaterToggle_top+3)^(0+384),f
 12706                           
 12707                           ;main.c: 481: LEDsOn(demoHeaterToggle_top, 1);
 12708  15F0  0837               	movf	(_demoHeaterToggle_top+3)^(0+384),w
 12709  15F1  0020               	movlb	0	; select bank0
 12710  15F2  00C7               	movwf	LEDsOn@LEDpins+3
 12711  15F3  0023               	movlb	3	; select bank3
 12712  15F4  0836               	movf	(_demoHeaterToggle_top+2)^(0+384),w
 12713  15F5  0020               	movlb	0	; select bank0
 12714  15F6  00C6               	movwf	LEDsOn@LEDpins+2
 12715  15F7  0023               	movlb	3	; select bank3
 12716  15F8  0835               	movf	(_demoHeaterToggle_top+1)^(0+384),w
 12717  15F9  0020               	movlb	0	; select bank0
 12718  15FA  00C5               	movwf	LEDsOn@LEDpins+1
 12719  15FB  0023               	movlb	3	; select bank3
 12720  15FC  0834               	movf	_demoHeaterToggle_top^(0+384),w
 12721  15FD  0020               	movlb	0	; select bank0
 12722  15FE  00C4               	movwf	LEDsOn@LEDpins
 12723  15FF  3001               	movlw	1
 12724  1600  2E36               	goto	L26
 12725  1601                     l8706:	
 12726                           ;main.c: 482: }
 12727                           
 12728                           
 12729                           ;main.c: 483: else if (topOrB == 2){
 12730  1601  3002               	movlw	2
 12731  1602  0021               	movlb	1	; select bank1
 12732  1603  0637               	xorwf	setHeaterToggle@topOrB^(0+128),w
 12733  1604  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12734  1605  1D03               	btfss	3,2
 12735  1606  2E3C               	goto	l8712
 12736                           
 12737                           ;main.c: 484: demoHeaterToggle_bot ^= 1UL << num;
 12738  1607  3001               	movlw	1
 12739  1608  00B9               	movwf	??_setHeaterToggle^(0+128)
 12740  1609  3000               	movlw	0
 12741  160A  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12742  160B  3000               	movlw	0
 12743  160C  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12744  160D  3000               	movlw	0
 12745  160E  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12746  160F  0A35               	incf	setHeaterToggle@num^(0+128),w
 12747  1610  2E15               	goto	u8790
 12748  1611                     u8795:	
 12749  1611  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12750  1612  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12751  1613  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12752  1614  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12753  1615                     u8790:	
 12754  1615  0B89               	decfsz	9,f
 12755  1616  2E11               	goto	u8795
 12756  1617  0839               	movf	??_setHeaterToggle^(0+128),w
 12757  1618  0023               	movlb	3	; select bank3
 12758  1619  06B0               	xorwf	_demoHeaterToggle_bot^(0+384),f
 12759  161A  0021               	movlb	1	; select bank1
 12760  161B  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12761  161C  0023               	movlb	3	; select bank3
 12762  161D  06B1               	xorwf	(_demoHeaterToggle_bot+1)^(0+384),f
 12763  161E  0021               	movlb	1	; select bank1
 12764  161F  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12765  1620  0023               	movlb	3	; select bank3
 12766  1621  06B2               	xorwf	(_demoHeaterToggle_bot+2)^(0+384),f
 12767  1622  0021               	movlb	1	; select bank1
 12768  1623  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12769  1624  0023               	movlb	3	; select bank3
 12770  1625  06B3               	xorwf	(_demoHeaterToggle_bot+3)^(0+384),f
 12771                           
 12772                           ;main.c: 485: LEDsOn(demoHeaterToggle_bot, 2);
 12773  1626  0833               	movf	(_demoHeaterToggle_bot+3)^(0+384),w
 12774  1627  0020               	movlb	0	; select bank0
 12775  1628  00C7               	movwf	LEDsOn@LEDpins+3
 12776  1629  0023               	movlb	3	; select bank3
 12777  162A  0832               	movf	(_demoHeaterToggle_bot+2)^(0+384),w
 12778  162B  0020               	movlb	0	; select bank0
 12779  162C  00C6               	movwf	LEDsOn@LEDpins+2
 12780  162D  0023               	movlb	3	; select bank3
 12781  162E  0831               	movf	(_demoHeaterToggle_bot+1)^(0+384),w
 12782  162F  0020               	movlb	0	; select bank0
 12783  1630  00C5               	movwf	LEDsOn@LEDpins+1
 12784  1631  0023               	movlb	3	; select bank3
 12785  1632  0830               	movf	_demoHeaterToggle_bot^(0+384),w
 12786  1633  0020               	movlb	0	; select bank0
 12787  1634  00C4               	movwf	LEDsOn@LEDpins
 12788  1635  3002               	movlw	2
 12789  1636                     L26:	
 12790  1636  00C8               	movwf	LEDsOn@topOrBottom
 12791  1637  3000               	movlw	0
 12792  1638  00C9               	movwf	LEDsOn@topOrBottom+1
 12793  1639  31A3  23E3  3195   	fcall	_LEDsOn
 12794  163C                     l8712:	
 12795                           
 12796                           ;main.c: 486: }
 12797                           ;main.c: 488: printf("A\n");
 12798  163C  303C               	movlw	low (STR_7| (0+32768))
 12799  163D  0021               	movlb	1	; select bank1
 12800  163E  00A0               	movwf	printf@f^(0+128)
 12801  163F  30B0               	movlw	high (STR_7| (0+32768))
 12802  1640  00A1               	movwf	(printf@f^(0+128)+1)
 12803  1641  318E  26CE         	fcall	_printf
 12804                           
 12805                           ;main.c: 489: return 0;
 12806  1643  0021               	movlb	1	; select bank1
 12807  1644  01B5               	clrf	?_setHeaterToggle^(0+128)
 12808  1645  01B6               	clrf	(?_setHeaterToggle+1)^(0+128)
 12809  1646  0008               	return
 12810  1647                     __end_of_setHeaterToggle:	
 12811                           
 12812                           	psect	text29
 12813  216B                     __ptext29:	
 12814 ;; *************** function _setHeaterPreTime *****************
 12815 ;; Defined at:
 12816 ;;		line 430 in file "main.c"
 12817 ;; Parameters:    Size  Location     Type
 12818 ;;  t               2   21[BANK1 ] int 
 12819 ;; Auto vars:     Size  Location     Type
 12820 ;;		None
 12821 ;; Return value:  Size  Location     Type
 12822 ;;                  2   21[BANK1 ] int 
 12823 ;; Registers used:
 12824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12825 ;; Tracked objects:
 12826 ;;		On entry : 0/0
 12827 ;;		On exit  : 0/0
 12828 ;;		Unchanged: 0/0
 12829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12830 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12833 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12834 ;;Total ram usage:        2 bytes
 12835 ;; Hardware stack levels used:    1
 12836 ;; Hardware stack levels required when called:    9
 12837 ;; This function calls:
 12838 ;;		_printf
 12839 ;; This function is called by:
 12840 ;;		_execCmd
 12841 ;; This function uses a non-reentrant model
 12842 ;;
 12843                           
 12844                           
 12845                           ;psect for function _setHeaterPreTime
 12846  216B                     _setHeaterPreTime:	
 12847                           
 12848                           ;main.c: 431: heater_pre_time_ms = t;
 12849                           
 12850                           ;incstack = 0
 12851                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12852  216B  0021               	movlb	1	; select bank1
 12853  216C  0836               	movf	(setHeaterPreTime@t+1)^(0+128),w
 12854  216D  00ED               	movwf	(_heater_pre_time_ms+1)^(0+128)
 12855  216E  0835               	movf	setHeaterPreTime@t^(0+128),w
 12856  216F  00EC               	movwf	_heater_pre_time_ms^(0+128)
 12857                           
 12858                           ;main.c: 433: printf("A\n");
 12859  2170  303C               	movlw	low (STR_7| (0+32768))
 12860  2171  00A0               	movwf	printf@f^(0+128)
 12861  2172  30B0               	movlw	high (STR_7| (0+32768))
 12862  2173  00A1               	movwf	(printf@f^(0+128)+1)
 12863  2174  318E  26CE         	fcall	_printf
 12864                           
 12865                           ;main.c: 434: return 0;
 12866  2176  0021               	movlb	1	; select bank1
 12867  2177  01B5               	clrf	?_setHeaterPreTime^(0+128)
 12868  2178  01B6               	clrf	(?_setHeaterPreTime+1)^(0+128)
 12869  2179  0008               	return
 12870  217A                     __end_of_setHeaterPreTime:	
 12871                           
 12872                           	psect	text30
 12873  21AB                     __ptext30:	
 12874 ;; *************** function _setHeaterPostTime *****************
 12875 ;; Defined at:
 12876 ;;		line 436 in file "main.c"
 12877 ;; Parameters:    Size  Location     Type
 12878 ;;  t               2   21[BANK1 ] int 
 12879 ;; Auto vars:     Size  Location     Type
 12880 ;;		None
 12881 ;; Return value:  Size  Location     Type
 12882 ;;                  2   21[BANK1 ] int 
 12883 ;; Registers used:
 12884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12885 ;; Tracked objects:
 12886 ;;		On entry : 0/0
 12887 ;;		On exit  : 0/0
 12888 ;;		Unchanged: 0/0
 12889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12890 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12893 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12894 ;;Total ram usage:        2 bytes
 12895 ;; Hardware stack levels used:    1
 12896 ;; Hardware stack levels required when called:    9
 12897 ;; This function calls:
 12898 ;;		_printf
 12899 ;; This function is called by:
 12900 ;;		_execCmd
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           
 12905                           ;psect for function _setHeaterPostTime
 12906  21AB                     _setHeaterPostTime:	
 12907                           
 12908                           ;main.c: 437: heater_post_time_ms = t;
 12909                           
 12910                           ;incstack = 0
 12911                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12912  21AB  0021               	movlb	1	; select bank1
 12913  21AC  0836               	movf	(setHeaterPostTime@t+1)^(0+128),w
 12914  21AD  0022               	movlb	2	; select bank2
 12915  21AE  00ED               	movwf	(_heater_post_time_ms+1)^(0+256)
 12916  21AF  0021               	movlb	1	; select bank1
 12917  21B0  0835               	movf	setHeaterPostTime@t^(0+128),w
 12918  21B1  0022               	movlb	2	; select bank2
 12919  21B2  00EC               	movwf	_heater_post_time_ms^(0+256)
 12920                           
 12921                           ;main.c: 439: printf("A\n");
 12922  21B3  303C               	movlw	low (STR_7| (0+32768))
 12923  21B4  0021               	movlb	1	; select bank1
 12924  21B5  00A0               	movwf	printf@f^(0+128)
 12925  21B6  30B0               	movlw	high (STR_7| (0+32768))
 12926  21B7  00A1               	movwf	(printf@f^(0+128)+1)
 12927  21B8  318E  26CE         	fcall	_printf
 12928                           
 12929                           ;main.c: 440: return 0;
 12930  21BA  0021               	movlb	1	; select bank1
 12931  21BB  01B5               	clrf	?_setHeaterPostTime^(0+128)
 12932  21BC  01B6               	clrf	(?_setHeaterPostTime+1)^(0+128)
 12933  21BD  0008               	return
 12934  21BE                     __end_of_setHeaterPostTime:	
 12935                           
 12936                           	psect	text31
 12937  1C19                     __ptext31:	
 12938 ;; *************** function _setH2OnTime *****************
 12939 ;; Defined at:
 12940 ;;		line 451 in file "main.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;  t               2   37[BANK1 ] int 
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;		None
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  2   37[BANK1 ] int 
 12947 ;; Registers used:
 12948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12954 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12957 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12958 ;;Total ram usage:        2 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    9
 12961 ;; This function calls:
 12962 ;;		_TMR0_Load8bitPeriod
 12963 ;;		___awtoft
 12964 ;;		___ftadd
 12965 ;;		___ftmul
 12966 ;;		___fttol
 12967 ;;		_printf
 12968 ;; This function is called by:
 12969 ;;		_execCmd
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           
 12974                           ;psect for function _setH2OnTime
 12975  1C19                     _setH2OnTime:	
 12976                           
 12977                           ;main.c: 452: TMR0_Load8bitPeriod((t*TMR0_RANGE)-1);
 12978                           
 12979                           ;incstack = 0
 12980                           ; Regs used in _setH2OnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12981  1C19  0021               	movlb	1	; select bank1
 12982  1C1A  0846               	movf	(setH2OnTime@t+1)^(0+128),w
 12983  1C1B  0020               	movlb	0	; select bank0
 12984  1C1C  00C1               	movwf	___awtoft@c+1
 12985  1C1D  0021               	movlb	1	; select bank1
 12986  1C1E  0845               	movf	setH2OnTime@t^(0+128),w
 12987  1C1F  0020               	movlb	0	; select bank0
 12988  1C20  00C0               	movwf	___awtoft@c
 12989  1C21  31A4  2404  319C   	fcall	___awtoft
 12990  1C24  0020               	movlb	0	; select bank0
 12991  1C25  0840               	movf	?___awtoft,w
 12992  1C26  00C9               	movwf	___ftmul@f2
 12993  1C27  0841               	movf	?___awtoft+1,w
 12994  1C28  00CA               	movwf	___ftmul@f2+1
 12995  1C29  0842               	movf	?___awtoft+2,w
 12996  1C2A  00CB               	movwf	___ftmul@f2+2
 12997  1C2B  3039               	movlw	low (_TMR0_RANGE| (0+32768))
 12998  1C2C  0084               	movwf	4
 12999  1C2D  30B0               	movlw	high (_TMR0_RANGE| (0+32768))
 13000  1C2E  0085               	movwf	5
 13001  1C2F  3F00               	moviw [0]fsr0
 13002  1C30  00C6               	movwf	___ftmul@f1
 13003  1C31  3F01               	moviw [1]fsr0
 13004  1C32  00C7               	movwf	___ftmul@f1+1
 13005  1C33  3F02               	moviw [2]fsr0
 13006  1C34  00C8               	movwf	___ftmul@f1+2
 13007  1C35  318B  23B6  319C   	fcall	___ftmul
 13008  1C38  0020               	movlb	0	; select bank0
 13009  1C39  0846               	movf	?___ftmul,w
 13010  1C3A  0021               	movlb	1	; select bank1
 13011  1C3B  00AD               	movwf	___ftadd@f2^(0+128)
 13012  1C3C  0020               	movlb	0	; select bank0
 13013  1C3D  0847               	movf	?___ftmul+1,w
 13014  1C3E  0021               	movlb	1	; select bank1
 13015  1C3F  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 13016  1C40  0020               	movlb	0	; select bank0
 13017  1C41  0848               	movf	?___ftmul+2,w
 13018  1C42  0021               	movlb	1	; select bank1
 13019  1C43  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 13020  1C44  3000               	movlw	0
 13021  1C45  00AA               	movwf	___ftadd@f1^(0+128)
 13022  1C46  3080               	movlw	128
 13023  1C47  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 13024  1C48  30BF               	movlw	191
 13025  1C49  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 13026  1C4A  318C  249F  319C   	fcall	___ftadd
 13027  1C4D  0021               	movlb	1	; select bank1
 13028  1C4E  082A               	movf	?___ftadd^(0+128),w
 13029  1C4F  00B7               	movwf	___fttol@f1^(0+128)
 13030  1C50  082B               	movf	(?___ftadd+1)^(0+128),w
 13031  1C51  00B8               	movwf	(___fttol@f1+1)^(0+128)
 13032  1C52  082C               	movf	(?___ftadd+2)^(0+128),w
 13033  1C53  00B9               	movwf	(___fttol@f1+2)^(0+128)
 13034  1C54  3188  2024  319C   	fcall	___fttol
 13035  1C57  0021               	movlb	1	; select bank1
 13036  1C58  0837               	movf	?___fttol^(0+128),w
 13037  1C59  31AF  27BE  319C   	fcall	_TMR0_Load8bitPeriod
 13038                           
 13039                           ;main.c: 453: printf("A\n");
 13040  1C5C  303C               	movlw	low (STR_7| (0+32768))
 13041  1C5D  0021               	movlb	1	; select bank1
 13042  1C5E  00A0               	movwf	printf@f^(0+128)
 13043  1C5F  30B0               	movlw	high (STR_7| (0+32768))
 13044  1C60  00A1               	movwf	(printf@f^(0+128)+1)
 13045  1C61  318E  26CE         	fcall	_printf
 13046                           
 13047                           ;main.c: 454: return 0;
 13048  1C63  0021               	movlb	1	; select bank1
 13049  1C64  01C5               	clrf	?_setH2OnTime^(0+128)
 13050  1C65  01C6               	clrf	(?_setH2OnTime+1)^(0+128)
 13051  1C66  0008               	return
 13052  1C67                     __end_of_setH2OnTime:	
 13053                           
 13054                           	psect	text32
 13055  1BCB                     __ptext32:	
 13056 ;; *************** function _setH1OffTime *****************
 13057 ;; Defined at:
 13058 ;;		line 444 in file "main.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;  t               2   37[BANK1 ] int 
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  2   37[BANK1 ] int 
 13065 ;; Registers used:
 13066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13072 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13075 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13076 ;;Total ram usage:        2 bytes
 13077 ;; Hardware stack levels used:    1
 13078 ;; Hardware stack levels required when called:    9
 13079 ;; This function calls:
 13080 ;;		_TMR2_LoadPeriodRegister
 13081 ;;		___awtoft
 13082 ;;		___ftadd
 13083 ;;		___ftmul
 13084 ;;		___fttol
 13085 ;;		_printf
 13086 ;; This function is called by:
 13087 ;;		_execCmd
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091                           
 13092                           ;psect for function _setH1OffTime
 13093  1BCB                     _setH1OffTime:	
 13094                           
 13095                           ;main.c: 445: TMR2_LoadPeriodRegister((t*TMR2_RANGE)-1);
 13096                           
 13097                           ;incstack = 0
 13098                           ; Regs used in _setH1OffTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13099  1BCB  0021               	movlb	1	; select bank1
 13100  1BCC  0846               	movf	(setH1OffTime@t+1)^(0+128),w
 13101  1BCD  0020               	movlb	0	; select bank0
 13102  1BCE  00C1               	movwf	___awtoft@c+1
 13103  1BCF  0021               	movlb	1	; select bank1
 13104  1BD0  0845               	movf	setH1OffTime@t^(0+128),w
 13105  1BD1  0020               	movlb	0	; select bank0
 13106  1BD2  00C0               	movwf	___awtoft@c
 13107  1BD3  31A4  2404  319B   	fcall	___awtoft
 13108  1BD6  0020               	movlb	0	; select bank0
 13109  1BD7  0840               	movf	?___awtoft,w
 13110  1BD8  00C9               	movwf	___ftmul@f2
 13111  1BD9  0841               	movf	?___awtoft+1,w
 13112  1BDA  00CA               	movwf	___ftmul@f2+1
 13113  1BDB  0842               	movf	?___awtoft+2,w
 13114  1BDC  00CB               	movwf	___ftmul@f2+2
 13115  1BDD  3036               	movlw	low (_TMR2_RANGE| (0+32768))
 13116  1BDE  0084               	movwf	4
 13117  1BDF  30B0               	movlw	high (_TMR2_RANGE| (0+32768))
 13118  1BE0  0085               	movwf	5
 13119  1BE1  3F00               	moviw [0]fsr0
 13120  1BE2  00C6               	movwf	___ftmul@f1
 13121  1BE3  3F01               	moviw [1]fsr0
 13122  1BE4  00C7               	movwf	___ftmul@f1+1
 13123  1BE5  3F02               	moviw [2]fsr0
 13124  1BE6  00C8               	movwf	___ftmul@f1+2
 13125  1BE7  318B  23B6  319B   	fcall	___ftmul
 13126  1BEA  0020               	movlb	0	; select bank0
 13127  1BEB  0846               	movf	?___ftmul,w
 13128  1BEC  0021               	movlb	1	; select bank1
 13129  1BED  00AD               	movwf	___ftadd@f2^(0+128)
 13130  1BEE  0020               	movlb	0	; select bank0
 13131  1BEF  0847               	movf	?___ftmul+1,w
 13132  1BF0  0021               	movlb	1	; select bank1
 13133  1BF1  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 13134  1BF2  0020               	movlb	0	; select bank0
 13135  1BF3  0848               	movf	?___ftmul+2,w
 13136  1BF4  0021               	movlb	1	; select bank1
 13137  1BF5  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 13138  1BF6  3000               	movlw	0
 13139  1BF7  00AA               	movwf	___ftadd@f1^(0+128)
 13140  1BF8  3080               	movlw	128
 13141  1BF9  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 13142  1BFA  30BF               	movlw	191
 13143  1BFB  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 13144  1BFC  318C  249F  319B   	fcall	___ftadd
 13145  1BFF  0021               	movlb	1	; select bank1
 13146  1C00  082A               	movf	?___ftadd^(0+128),w
 13147  1C01  00B7               	movwf	___fttol@f1^(0+128)
 13148  1C02  082B               	movf	(?___ftadd+1)^(0+128),w
 13149  1C03  00B8               	movwf	(___fttol@f1+1)^(0+128)
 13150  1C04  082C               	movf	(?___ftadd+2)^(0+128),w
 13151  1C05  00B9               	movwf	(___fttol@f1+2)^(0+128)
 13152  1C06  3188  2024  319B   	fcall	___fttol
 13153  1C09  0021               	movlb	1	; select bank1
 13154  1C0A  0837               	movf	?___fttol^(0+128),w
 13155  1C0B  31AF  27C3  319B   	fcall	_TMR2_LoadPeriodRegister
 13156                           
 13157                           ;main.c: 446: printf("A\n");
 13158  1C0E  303C               	movlw	low (STR_7| (0+32768))
 13159  1C0F  0021               	movlb	1	; select bank1
 13160  1C10  00A0               	movwf	printf@f^(0+128)
 13161  1C11  30B0               	movlw	high (STR_7| (0+32768))
 13162  1C12  00A1               	movwf	(printf@f^(0+128)+1)
 13163  1C13  318E  26CE         	fcall	_printf
 13164                           
 13165                           ;main.c: 447: return 0;
 13166  1C15  0021               	movlb	1	; select bank1
 13167  1C16  01C5               	clrf	?_setH1OffTime^(0+128)
 13168  1C17  01C6               	clrf	(?_setH1OffTime+1)^(0+128)
 13169  1C18  0008               	return
 13170  1C19                     __end_of_setH1OffTime:	
 13171                           
 13172                           	psect	text33
 13173  2FC3                     __ptext33:	
 13174 ;; *************** function _TMR2_LoadPeriodRegister *****************
 13175 ;; Defined at:
 13176 ;;		line 112 in file "mcc_generated_files/tmr2.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;  periodVal       1    wreg     unsigned char 
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;  periodVal       1   17[BANK0 ] unsigned char 
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      void 
 13183 ;; Registers used:
 13184 ;;		wreg
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13194 ;;Total ram usage:        1 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; Hardware stack levels required when called:    6
 13197 ;; This function calls:
 13198 ;;		Nothing
 13199 ;; This function is called by:
 13200 ;;		_main_initialize
 13201 ;;		_setH1OffTime
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           
 13205                           
 13206                           ;psect for function _TMR2_LoadPeriodRegister
 13207  2FC3                     _TMR2_LoadPeriodRegister:	
 13208                           
 13209                           ;incstack = 0
 13210                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 13211                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 13212  2FC3  0020               	movlb	0	; select bank0
 13213  2FC4  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 13214                           
 13215                           ;tmr2.c: 114: PR2 = periodVal;
 13216  2FC5  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 13217  2FC6  009E               	movwf	30	;volatile
 13218  2FC7  0008               	return
 13219  2FC8                     __end_of_TMR2_LoadPeriodRegister:	
 13220                           
 13221                           	psect	text34
 13222  1E6A                     __ptext34:	
 13223 ;; *************** function _setDrvPiezoOnTime *****************
 13224 ;; Defined at:
 13225 ;;		line 419 in file "main.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;  t               2   37[BANK1 ] int 
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;		None
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  2   37[BANK1 ] int 
 13232 ;; Registers used:
 13233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13239 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        4 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:    9
 13246 ;; This function calls:
 13247 ;;		_TMR0_Load8bitPeriod
 13248 ;;		___awtoft
 13249 ;;		___ftadd
 13250 ;;		___ftmul
 13251 ;;		___fttol
 13252 ;;		_printf
 13253 ;; This function is called by:
 13254 ;;		_execCmd
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           
 13259                           ;psect for function _setDrvPiezoOnTime
 13260  1E6A                     _setDrvPiezoOnTime:	
 13261                           
 13262                           ;main.c: 420: piezo_on_time_ms = t;
 13263                           
 13264                           ;incstack = 0
 13265                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13266  1E6A  0021               	movlb	1	; select bank1
 13267  1E6B  0846               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 13268  1E6C  00EB               	movwf	(_piezo_on_time_ms+1)^(0+128)
 13269  1E6D  0845               	movf	setDrvPiezoOnTime@t^(0+128),w
 13270  1E6E  00EA               	movwf	_piezo_on_time_ms^(0+128)
 13271                           
 13272                           ;main.c: 421: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 13273  1E6F  096C               	comf	_heater_pre_time_ms^(0+128),w
 13274  1E70  0020               	movlb	0	; select bank0
 13275  1E71  00CC               	movwf	??_setDrvPiezoOnTime
 13276  1E72  0021               	movlb	1	; select bank1
 13277  1E73  096D               	comf	(_heater_pre_time_ms+1)^(0+128),w
 13278  1E74  0020               	movlb	0	; select bank0
 13279  1E75  00CD               	movwf	??_setDrvPiezoOnTime+1
 13280  1E76  0ACC               	incf	??_setDrvPiezoOnTime,f
 13281  1E77  1903               	skipnz
 13282  1E78  0ACD               	incf	??_setDrvPiezoOnTime+1,f
 13283  1E79  0021               	movlb	1	; select bank1
 13284  1E7A  086A               	movf	_piezo_on_time_ms^(0+128),w
 13285  1E7B  0020               	movlb	0	; select bank0
 13286  1E7C  074C               	addwf	??_setDrvPiezoOnTime,w
 13287  1E7D  00C0               	movwf	___awtoft@c
 13288  1E7E  0021               	movlb	1	; select bank1
 13289  1E7F  086B               	movf	(_piezo_on_time_ms+1)^(0+128),w
 13290  1E80  0020               	movlb	0	; select bank0
 13291  1E81  3D4D               	addwfc	??_setDrvPiezoOnTime+1,w
 13292  1E82  00C1               	movwf	___awtoft@c+1
 13293  1E83  31A4  2404  319E   	fcall	___awtoft
 13294  1E86  0020               	movlb	0	; select bank0
 13295  1E87  0840               	movf	?___awtoft,w
 13296  1E88  00C9               	movwf	___ftmul@f2
 13297  1E89  0841               	movf	?___awtoft+1,w
 13298  1E8A  00CA               	movwf	___ftmul@f2+1
 13299  1E8B  0842               	movf	?___awtoft+2,w
 13300  1E8C  00CB               	movwf	___ftmul@f2+2
 13301  1E8D  3039               	movlw	low (_TMR0_RANGE| (0+32768))
 13302  1E8E  0084               	movwf	4
 13303  1E8F  30B0               	movlw	high (_TMR0_RANGE| (0+32768))
 13304  1E90  0085               	movwf	5
 13305  1E91  3F00               	moviw [0]fsr0
 13306  1E92  00C6               	movwf	___ftmul@f1
 13307  1E93  3F01               	moviw [1]fsr0
 13308  1E94  00C7               	movwf	___ftmul@f1+1
 13309  1E95  3F02               	moviw [2]fsr0
 13310  1E96  00C8               	movwf	___ftmul@f1+2
 13311  1E97  318B  23B6  319E   	fcall	___ftmul
 13312  1E9A  0020               	movlb	0	; select bank0
 13313  1E9B  0846               	movf	?___ftmul,w
 13314  1E9C  0021               	movlb	1	; select bank1
 13315  1E9D  00AD               	movwf	___ftadd@f2^(0+128)
 13316  1E9E  0020               	movlb	0	; select bank0
 13317  1E9F  0847               	movf	?___ftmul+1,w
 13318  1EA0  0021               	movlb	1	; select bank1
 13319  1EA1  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 13320  1EA2  0020               	movlb	0	; select bank0
 13321  1EA3  0848               	movf	?___ftmul+2,w
 13322  1EA4  0021               	movlb	1	; select bank1
 13323  1EA5  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 13324  1EA6  3000               	movlw	0
 13325  1EA7  00AA               	movwf	___ftadd@f1^(0+128)
 13326  1EA8  3080               	movlw	128
 13327  1EA9  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 13328  1EAA  30BF               	movlw	191
 13329  1EAB  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 13330  1EAC  318C  249F  319E   	fcall	___ftadd
 13331  1EAF  0021               	movlb	1	; select bank1
 13332  1EB0  082A               	movf	?___ftadd^(0+128),w
 13333  1EB1  00B7               	movwf	___fttol@f1^(0+128)
 13334  1EB2  082B               	movf	(?___ftadd+1)^(0+128),w
 13335  1EB3  00B8               	movwf	(___fttol@f1+1)^(0+128)
 13336  1EB4  082C               	movf	(?___ftadd+2)^(0+128),w
 13337  1EB5  00B9               	movwf	(___fttol@f1+2)^(0+128)
 13338  1EB6  3188  2024  319E   	fcall	___fttol
 13339  1EB9  0021               	movlb	1	; select bank1
 13340  1EBA  0837               	movf	?___fttol^(0+128),w
 13341  1EBB  31AF  27BE  319E   	fcall	_TMR0_Load8bitPeriod
 13342                           
 13343                           ;main.c: 422: printf("A\n");
 13344  1EBE  303C               	movlw	low (STR_7| (0+32768))
 13345  1EBF  0021               	movlb	1	; select bank1
 13346  1EC0  00A0               	movwf	printf@f^(0+128)
 13347  1EC1  30B0               	movlw	high (STR_7| (0+32768))
 13348  1EC2  00A1               	movwf	(printf@f^(0+128)+1)
 13349  1EC3  318E  26CE         	fcall	_printf
 13350                           
 13351                           ;main.c: 423: return 0;
 13352  1EC5  0021               	movlb	1	; select bank1
 13353  1EC6  01C5               	clrf	?_setDrvPiezoOnTime^(0+128)
 13354  1EC7  01C6               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 13355  1EC8  0008               	return
 13356  1EC9                     __end_of_setDrvPiezoOnTime:	
 13357                           
 13358                           	psect	text35
 13359  0BB6                     __ptext35:	
 13360 ;; *************** function ___ftmul *****************
 13361 ;; Defined at:
 13362 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;  f1              3   38[BANK0 ] float 
 13365 ;;  f2              3   41[BANK0 ] float 
 13366 ;; Auto vars:     Size  Location     Type
 13367 ;;  f3_as_produc    3    5[BANK1 ] unsigned um
 13368 ;;  sign            1    9[BANK1 ] unsigned char 
 13369 ;;  cntr            1    8[BANK1 ] unsigned char 
 13370 ;;  exp             1    4[BANK1 ] unsigned char 
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  3   38[BANK0 ] float 
 13373 ;; Registers used:
 13374 ;;		wreg, status,2, status,0, pclath, cstack
 13375 ;; Tracked objects:
 13376 ;;		On entry : 0/0
 13377 ;;		On exit  : 0/0
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13381 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13382 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13383 ;;      Totals:         0       6      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13384 ;;Total ram usage:       16 bytes
 13385 ;; Hardware stack levels used:    1
 13386 ;; Hardware stack levels required when called:    7
 13387 ;; This function calls:
 13388 ;;		___ftpack
 13389 ;; This function is called by:
 13390 ;;		_main_initialize
 13391 ;;		_setDrvPiezoOnTime
 13392 ;;		_setH1OffTime
 13393 ;;		_setH2OnTime
 13394 ;;		_drv_outputSine
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           
 13399                           ;psect for function ___ftmul
 13400  0BB6                     ___ftmul:	
 13401                           
 13402                           ;incstack = 0
 13403                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13404  0BB6  0020               	movlb	0	; select bank0
 13405  0BB7  0846               	movf	___ftmul@f1,w
 13406  0BB8  0021               	movlb	1	; select bank1
 13407  0BB9  00A0               	movwf	??___ftmul^(0+128)
 13408  0BBA  0020               	movlb	0	; select bank0
 13409  0BBB  0847               	movf	___ftmul@f1+1,w
 13410  0BBC  0021               	movlb	1	; select bank1
 13411  0BBD  00A1               	movwf	(??___ftmul^(0+128)+1)
 13412  0BBE  0020               	movlb	0	; select bank0
 13413  0BBF  0848               	movf	___ftmul@f1+2,w
 13414  0BC0  0021               	movlb	1	; select bank1
 13415  0BC1  00A2               	movwf	(??___ftmul^(0+128)+2)
 13416  0BC2  1003               	clrc
 13417  0BC3  0D21               	rlf	(??___ftmul^(0+128)+1),w
 13418  0BC4  0D22               	rlf	(??___ftmul^(0+128)+2),w
 13419  0BC5  00A3               	movwf	(??___ftmul+3)^(0+128)
 13420  0BC6  0823               	movf	(??___ftmul+3)^(0+128),w
 13421  0BC7  00A4               	movwf	___ftmul@exp^(0+128)
 13422  0BC8  0824               	movf	___ftmul@exp^(0+128),w
 13423  0BC9  1D03               	btfss	3,2
 13424  0BCA  2BD3               	goto	l8356
 13425  0BCB  3000               	movlw	0
 13426  0BCC  0020               	movlb	0	; select bank0
 13427  0BCD  00C6               	movwf	?___ftmul
 13428  0BCE  3000               	movlw	0
 13429  0BCF  00C7               	movwf	?___ftmul+1
 13430  0BD0  3000               	movlw	0
 13431  0BD1  00C8               	movwf	?___ftmul+2
 13432  0BD2  0008               	return
 13433  0BD3                     l8356:	
 13434  0BD3  0020               	movlb	0	; select bank0
 13435  0BD4  0849               	movf	___ftmul@f2,w
 13436  0BD5  0021               	movlb	1	; select bank1
 13437  0BD6  00A0               	movwf	??___ftmul^(0+128)
 13438  0BD7  0020               	movlb	0	; select bank0
 13439  0BD8  084A               	movf	___ftmul@f2+1,w
 13440  0BD9  0021               	movlb	1	; select bank1
 13441  0BDA  00A1               	movwf	(??___ftmul^(0+128)+1)
 13442  0BDB  0020               	movlb	0	; select bank0
 13443  0BDC  084B               	movf	___ftmul@f2+2,w
 13444  0BDD  0021               	movlb	1	; select bank1
 13445  0BDE  00A2               	movwf	(??___ftmul^(0+128)+2)
 13446  0BDF  1003               	clrc
 13447  0BE0  0D21               	rlf	(??___ftmul^(0+128)+1),w
 13448  0BE1  0D22               	rlf	(??___ftmul^(0+128)+2),w
 13449  0BE2  00A3               	movwf	(??___ftmul+3)^(0+128)
 13450  0BE3  0823               	movf	(??___ftmul+3)^(0+128),w
 13451  0BE4  00A9               	movwf	___ftmul@sign^(0+128)
 13452  0BE5  0829               	movf	___ftmul@sign^(0+128),w
 13453  0BE6  1D03               	btfss	3,2
 13454  0BE7  2BF0               	goto	l8362
 13455  0BE8  3000               	movlw	0
 13456  0BE9  0020               	movlb	0	; select bank0
 13457  0BEA  00C6               	movwf	?___ftmul
 13458  0BEB  3000               	movlw	0
 13459  0BEC  00C7               	movwf	?___ftmul+1
 13460  0BED  3000               	movlw	0
 13461  0BEE  00C8               	movwf	?___ftmul+2
 13462  0BEF  0008               	return
 13463  0BF0                     l8362:	
 13464  0BF0  0021               	movlb	1	; select bank1
 13465  0BF1  0829               	movf	___ftmul@sign^(0+128),w
 13466  0BF2  3E7B               	addlw	123
 13467  0BF3  00A0               	movwf	??___ftmul^(0+128)
 13468  0BF4  0820               	movf	??___ftmul^(0+128),w
 13469  0BF5  07A4               	addwf	___ftmul@exp^(0+128),f
 13470  0BF6  0020               	movlb	0	; select bank0
 13471  0BF7  0846               	movf	___ftmul@f1,w
 13472  0BF8  0021               	movlb	1	; select bank1
 13473  0BF9  00A0               	movwf	??___ftmul^(0+128)
 13474  0BFA  0020               	movlb	0	; select bank0
 13475  0BFB  0847               	movf	___ftmul@f1+1,w
 13476  0BFC  0021               	movlb	1	; select bank1
 13477  0BFD  00A1               	movwf	(??___ftmul^(0+128)+1)
 13478  0BFE  0020               	movlb	0	; select bank0
 13479  0BFF  0848               	movf	___ftmul@f1+2,w
 13480  0C00  0021               	movlb	1	; select bank1
 13481  0C01  00A2               	movwf	(??___ftmul^(0+128)+2)
 13482  0C02  3010               	movlw	16
 13483  0C03                     u8565:	
 13484  0C03  36A2               	lsrf	(??___ftmul^(0+128)+2),f
 13485  0C04  0CA1               	rrf	(??___ftmul^(0+128)+1),f
 13486  0C05  0CA0               	rrf	??___ftmul^(0+128),f
 13487  0C06  0B89               	decfsz	9,f
 13488  0C07  2C03               	goto	u8565
 13489  0C08  0820               	movf	??___ftmul^(0+128),w
 13490  0C09  00A3               	movwf	(??___ftmul+3)^(0+128)
 13491  0C0A  0823               	movf	(??___ftmul+3)^(0+128),w
 13492  0C0B  00A9               	movwf	___ftmul@sign^(0+128)
 13493  0C0C  0020               	movlb	0	; select bank0
 13494  0C0D  0849               	movf	___ftmul@f2,w
 13495  0C0E  0021               	movlb	1	; select bank1
 13496  0C0F  00A0               	movwf	??___ftmul^(0+128)
 13497  0C10  0020               	movlb	0	; select bank0
 13498  0C11  084A               	movf	___ftmul@f2+1,w
 13499  0C12  0021               	movlb	1	; select bank1
 13500  0C13  00A1               	movwf	(??___ftmul^(0+128)+1)
 13501  0C14  0020               	movlb	0	; select bank0
 13502  0C15  084B               	movf	___ftmul@f2+2,w
 13503  0C16  0021               	movlb	1	; select bank1
 13504  0C17  00A2               	movwf	(??___ftmul^(0+128)+2)
 13505  0C18  3010               	movlw	16
 13506  0C19                     u8575:	
 13507  0C19  36A2               	lsrf	(??___ftmul^(0+128)+2),f
 13508  0C1A  0CA1               	rrf	(??___ftmul^(0+128)+1),f
 13509  0C1B  0CA0               	rrf	??___ftmul^(0+128),f
 13510  0C1C  0B89               	decfsz	9,f
 13511  0C1D  2C19               	goto	u8575
 13512  0C1E  0820               	movf	??___ftmul^(0+128),w
 13513  0C1F  00A3               	movwf	(??___ftmul+3)^(0+128)
 13514  0C20  0823               	movf	(??___ftmul+3)^(0+128),w
 13515  0C21  06A9               	xorwf	___ftmul@sign^(0+128),f
 13516  0C22  3080               	movlw	128
 13517  0C23  00A0               	movwf	??___ftmul^(0+128)
 13518  0C24  0820               	movf	??___ftmul^(0+128),w
 13519  0C25  05A9               	andwf	___ftmul@sign^(0+128),f
 13520  0C26  0020               	movlb	0	; select bank0
 13521  0C27  17C7               	bsf	___ftmul@f1+1,7
 13522  0C28  17CA               	bsf	___ftmul@f2+1,7
 13523  0C29  30FF               	movlw	255
 13524  0C2A  05C9               	andwf	___ftmul@f2,f
 13525  0C2B  30FF               	movlw	255
 13526  0C2C  05CA               	andwf	___ftmul@f2+1,f
 13527  0C2D  3000               	movlw	0
 13528  0C2E  05CB               	andwf	___ftmul@f2+2,f
 13529  0C2F  3000               	movlw	0
 13530  0C30  0021               	movlb	1	; select bank1
 13531  0C31  00A5               	movwf	___ftmul@f3_as_product^(0+128)
 13532  0C32  3000               	movlw	0
 13533  0C33  00A6               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 13534  0C34  3000               	movlw	0
 13535  0C35  00A7               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 13536  0C36  3007               	movlw	7
 13537  0C37  00A0               	movwf	??___ftmul^(0+128)
 13538  0C38  0820               	movf	??___ftmul^(0+128),w
 13539  0C39  00A8               	movwf	___ftmul@cntr^(0+128)
 13540  0C3A                     l8374:	
 13541  0C3A  0020               	movlb	0	; select bank0
 13542  0C3B  1C46               	btfss	___ftmul@f1,0
 13543  0C3C  2C48               	goto	l8378
 13544  0C3D  0849               	movf	___ftmul@f2,w
 13545  0C3E  0021               	movlb	1	; select bank1
 13546  0C3F  07A5               	addwf	___ftmul@f3_as_product^(0+128),f
 13547  0C40  0020               	movlb	0	; select bank0
 13548  0C41  084A               	movf	___ftmul@f2+1,w
 13549  0C42  0021               	movlb	1	; select bank1
 13550  0C43  3DA6               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13551  0C44  0020               	movlb	0	; select bank0
 13552  0C45  084B               	movf	___ftmul@f2+2,w
 13553  0C46  0021               	movlb	1	; select bank1
 13554  0C47  3DA7               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13555  0C48                     l8378:	
 13556  0C48  3001               	movlw	1
 13557  0C49                     u8595:	
 13558  0C49  0020               	movlb	0	; select bank0
 13559  0C4A  36C8               	lsrf	___ftmul@f1+2,f
 13560  0C4B  0CC7               	rrf	___ftmul@f1+1,f
 13561  0C4C  0CC6               	rrf	___ftmul@f1,f
 13562  0C4D  0B89               	decfsz	9,f
 13563  0C4E  2C49               	goto	u8595
 13564  0C4F  3001               	movlw	1
 13565  0C50                     u8605:	
 13566  0C50  35C9               	lslf	___ftmul@f2,f
 13567  0C51  0DCA               	rlf	___ftmul@f2+1,f
 13568  0C52  0DCB               	rlf	___ftmul@f2+2,f
 13569  0C53  0B89               	decfsz	9,f
 13570  0C54  2C50               	goto	u8605
 13571  0C55  3001               	movlw	1
 13572  0C56  0021               	movlb	1	; select bank1
 13573  0C57  02A8               	subwf	___ftmul@cntr^(0+128),f
 13574  0C58  1D03               	btfss	3,2
 13575  0C59  2C3A               	goto	l8374
 13576  0C5A  3009               	movlw	9
 13577  0C5B  00A0               	movwf	??___ftmul^(0+128)
 13578  0C5C  0820               	movf	??___ftmul^(0+128),w
 13579  0C5D  00A8               	movwf	___ftmul@cntr^(0+128)
 13580  0C5E                     l8386:	
 13581  0C5E  0020               	movlb	0	; select bank0
 13582  0C5F  1C46               	btfss	___ftmul@f1,0
 13583  0C60  2C6C               	goto	l8390
 13584  0C61  0849               	movf	___ftmul@f2,w
 13585  0C62  0021               	movlb	1	; select bank1
 13586  0C63  07A5               	addwf	___ftmul@f3_as_product^(0+128),f
 13587  0C64  0020               	movlb	0	; select bank0
 13588  0C65  084A               	movf	___ftmul@f2+1,w
 13589  0C66  0021               	movlb	1	; select bank1
 13590  0C67  3DA6               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13591  0C68  0020               	movlb	0	; select bank0
 13592  0C69  084B               	movf	___ftmul@f2+2,w
 13593  0C6A  0021               	movlb	1	; select bank1
 13594  0C6B  3DA7               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13595  0C6C                     l8390:	
 13596  0C6C  3001               	movlw	1
 13597  0C6D                     u8635:	
 13598  0C6D  0020               	movlb	0	; select bank0
 13599  0C6E  36C8               	lsrf	___ftmul@f1+2,f
 13600  0C6F  0CC7               	rrf	___ftmul@f1+1,f
 13601  0C70  0CC6               	rrf	___ftmul@f1,f
 13602  0C71  0B89               	decfsz	9,f
 13603  0C72  2C6D               	goto	u8635
 13604  0C73  3001               	movlw	1
 13605  0C74                     u8645:	
 13606  0C74  0021               	movlb	1	; select bank1
 13607  0C75  36A7               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 13608  0C76  0CA6               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 13609  0C77  0CA5               	rrf	___ftmul@f3_as_product^(0+128),f
 13610  0C78  0B89               	decfsz	9,f
 13611  0C79  2C74               	goto	u8645
 13612  0C7A  3001               	movlw	1
 13613  0C7B  02A8               	subwf	___ftmul@cntr^(0+128),f
 13614  0C7C  1D03               	btfss	3,2
 13615  0C7D  2C5E               	goto	l8386
 13616  0C7E  0825               	movf	___ftmul@f3_as_product^(0+128),w
 13617  0C7F  0020               	movlb	0	; select bank0
 13618  0C80  00B1               	movwf	___ftpack@arg
 13619  0C81  0021               	movlb	1	; select bank1
 13620  0C82  0826               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 13621  0C83  0020               	movlb	0	; select bank0
 13622  0C84  00B2               	movwf	___ftpack@arg+1
 13623  0C85  0021               	movlb	1	; select bank1
 13624  0C86  0827               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 13625  0C87  0020               	movlb	0	; select bank0
 13626  0C88  00B3               	movwf	___ftpack@arg+2
 13627  0C89  0021               	movlb	1	; select bank1
 13628  0C8A  0824               	movf	___ftmul@exp^(0+128),w
 13629  0C8B  00A0               	movwf	??___ftmul^(0+128)
 13630  0C8C  0820               	movf	??___ftmul^(0+128),w
 13631  0C8D  0020               	movlb	0	; select bank0
 13632  0C8E  00B4               	movwf	___ftpack@exp
 13633  0C8F  0021               	movlb	1	; select bank1
 13634  0C90  0829               	movf	___ftmul@sign^(0+128),w
 13635  0C91  00A1               	movwf	(??___ftmul+1)^(0+128)
 13636  0C92  0821               	movf	(??___ftmul+1)^(0+128),w
 13637  0C93  0020               	movlb	0	; select bank0
 13638  0C94  00B5               	movwf	___ftpack@sign
 13639  0C95  319F  272D         	fcall	___ftpack
 13640  0C97  0020               	movlb	0	; select bank0
 13641  0C98  0831               	movf	?___ftpack,w
 13642  0C99  00C6               	movwf	?___ftmul
 13643  0C9A  0832               	movf	?___ftpack+1,w
 13644  0C9B  00C7               	movwf	?___ftmul+1
 13645  0C9C  0833               	movf	?___ftpack+2,w
 13646  0C9D  00C8               	movwf	?___ftmul+2
 13647  0C9E  0008               	return
 13648  0C9F                     __end_of___ftmul:	
 13649                           
 13650                           	psect	text36
 13651  2FBE                     __ptext36:	
 13652 ;; *************** function _TMR0_Load8bitPeriod *****************
 13653 ;; Defined at:
 13654 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;  periodVal       1    wreg     unsigned char 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  periodVal       1   17[BANK0 ] unsigned char 
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      void 
 13661 ;; Registers used:
 13662 ;;		wreg
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13672 ;;Total ram usage:        1 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    6
 13675 ;; This function calls:
 13676 ;;		Nothing
 13677 ;; This function is called by:
 13678 ;;		_main_initialize
 13679 ;;		_setDrvPiezoOnTime
 13680 ;;		_setH2OnTime
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           
 13685                           ;psect for function _TMR0_Load8bitPeriod
 13686  2FBE                     _TMR0_Load8bitPeriod:	
 13687                           
 13688                           ;incstack = 0
 13689                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 13690                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 13691  2FBE  0020               	movlb	0	; select bank0
 13692  2FBF  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 13693                           
 13694                           ;tmr0.c: 116: TMR0H = periodVal;
 13695  2FC0  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 13696  2FC1  0096               	movwf	22	;volatile
 13697  2FC2  0008               	return
 13698  2FC3                     __end_of_TMR0_Load8bitPeriod:	
 13699                           
 13700                           	psect	text37
 13701  2343                     __ptext37:	
 13702 ;; *************** function _setDrvPeak *****************
 13703 ;; Defined at:
 13704 ;;		line 396 in file "main.c"
 13705 ;; Parameters:    Size  Location     Type
 13706 ;;  pk              2   60[BANK1 ] int 
 13707 ;; Auto vars:     Size  Location     Type
 13708 ;;		None
 13709 ;; Return value:  Size  Location     Type
 13710 ;;                  2   60[BANK1 ] int 
 13711 ;; Registers used:
 13712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13713 ;; Tracked objects:
 13714 ;;		On entry : 0/0
 13715 ;;		On exit  : 0/0
 13716 ;;		Unchanged: 0/0
 13717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13718 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13721 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13722 ;;Total ram usage:        2 bytes
 13723 ;; Hardware stack levels used:    1
 13724 ;; Hardware stack levels required when called:   11
 13725 ;; This function calls:
 13726 ;;		_calcDownstroke
 13727 ;;		_calcUpstroke
 13728 ;;		_printf
 13729 ;; This function is called by:
 13730 ;;		_execCmd
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           
 13735                           ;psect for function _setDrvPeak
 13736  2343                     _setDrvPeak:	
 13737                           
 13738                           ;main.c: 397: drv_peak_val = pk;
 13739                           
 13740                           ;incstack = 0
 13741                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13742  2343  0021               	movlb	1	; select bank1
 13743  2344  085D               	movf	(setDrvPeak@pk+1)^(0+128),w
 13744  2345  00EF               	movwf	(_drv_peak_val+1)^(0+128)
 13745  2346  085C               	movf	setDrvPeak@pk^(0+128),w
 13746  2347  00EE               	movwf	_drv_peak_val^(0+128)
 13747                           
 13748                           ;main.c: 398: calcUpstroke(drv_peak_val);
 13749  2348  086F               	movf	(_drv_peak_val+1)^(0+128),w
 13750  2349  00D4               	movwf	(calcUpstroke@maxVal+1)^(0+128)
 13751  234A  086E               	movf	_drv_peak_val^(0+128),w
 13752  234B  00D3               	movwf	calcUpstroke@maxVal^(0+128)
 13753  234C  3196  2647  31A3   	fcall	_calcUpstroke
 13754                           
 13755                           ;main.c: 399: calcDownstroke(drv_peak_val);
 13756  234F  0021               	movlb	1	; select bank1
 13757  2350  086F               	movf	(_drv_peak_val+1)^(0+128),w
 13758  2351  00D4               	movwf	(calcDownstroke@maxVal+1)^(0+128)
 13759  2352  086E               	movf	_drv_peak_val^(0+128),w
 13760  2353  00D3               	movwf	calcDownstroke@maxVal^(0+128)
 13761  2354  3197  274D  31A3   	fcall	_calcDownstroke
 13762                           
 13763                           ;main.c: 400: printf("A\n");
 13764  2357  303C               	movlw	low (STR_7| (0+32768))
 13765  2358  0021               	movlb	1	; select bank1
 13766  2359  00A0               	movwf	printf@f^(0+128)
 13767  235A  30B0               	movlw	high (STR_7| (0+32768))
 13768  235B  00A1               	movwf	(printf@f^(0+128)+1)
 13769  235C  318E  26CE         	fcall	_printf
 13770                           
 13771                           ;main.c: 401: return 0;
 13772  235E  0021               	movlb	1	; select bank1
 13773  235F  01DC               	clrf	?_setDrvPeak^(0+128)
 13774  2360  01DD               	clrf	(?_setDrvPeak+1)^(0+128)
 13775  2361  0008               	return
 13776  2362                     __end_of_setDrvPeak:	
 13777                           
 13778                           	psect	text38
 13779  1647                     __ptext38:	
 13780 ;; *************** function _calcUpstroke *****************
 13781 ;; Defined at:
 13782 ;;		line 151 in file "drv2665.c"
 13783 ;; Parameters:    Size  Location     Type
 13784 ;;  maxVal          2   51[BANK1 ] int 
 13785 ;; Auto vars:     Size  Location     Type
 13786 ;;  i               2   58[BANK1 ] int 
 13787 ;; Return value:  Size  Location     Type
 13788 ;;                  1    wreg      void 
 13789 ;; Registers used:
 13790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13791 ;; Tracked objects:
 13792 ;;		On entry : 0/0
 13793 ;;		On exit  : 0/0
 13794 ;;		Unchanged: 0/0
 13795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13796 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13797 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13798 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13799 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13800 ;;Total ram usage:        9 bytes
 13801 ;; Hardware stack levels used:    1
 13802 ;; Hardware stack levels required when called:   10
 13803 ;; This function calls:
 13804 ;;		___awdiv
 13805 ;;		___awtoft
 13806 ;;		___fttol
 13807 ;;		___wmul
 13808 ;;		_printf
 13809 ;;		_round
 13810 ;; This function is called by:
 13811 ;;		_setDrvPeak
 13812 ;;		_drv_init
 13813 ;; This function uses a non-reentrant model
 13814 ;;
 13815                           
 13816                           
 13817                           ;psect for function _calcUpstroke
 13818  1647                     _calcUpstroke:	
 13819                           
 13820                           ;drv2665.c: 153: drv_fifo_upstroke[0] = 0x0b;
 13821                           
 13822                           ;incstack = 0
 13823                           ; Regs used in _calcUpstroke: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13824  1647  300B               	movlw	11
 13825  1648  0021               	movlb	1	; select bank1
 13826  1649  00D5               	movwf	??_calcUpstroke^(0+128)
 13827  164A  0855               	movf	??_calcUpstroke^(0+128),w
 13828  164B  0024               	movlb	4	; select bank4
 13829  164C  00A0               	movwf	_drv_fifo_upstroke^(0+512)
 13830                           
 13831                           ;drv2665.c: 154: for(int i = 1; i < 40; i++){
 13832  164D  3001               	movlw	1
 13833  164E  0021               	movlb	1	; select bank1
 13834  164F  00DA               	movwf	calcUpstroke@i^(0+128)
 13835  1650  3000               	movlw	0
 13836  1651  00DB               	movwf	(calcUpstroke@i^(0+128)+1)
 13837  1652                     L27:	
 13838  1652  085B               	movf	(calcUpstroke@i+1)^(0+128),w
 13839  1653  3A80               	xorlw	128
 13840  1654  00D5               	movwf	??_calcUpstroke^(0+128)
 13841  1655  3080               	movlw	128
 13842  1656  0255               	subwf	??_calcUpstroke^(0+128),w
 13843  1657  1D03               	skipz
 13844  1658  2E5B               	goto	u8485
 13845  1659  3028               	movlw	40
 13846  165A  025A               	subwf	calcUpstroke@i^(0+128),w
 13847  165B                     u8485:	
 13848  165B  1803               	btfsc	3,0
 13849  165C  0008               	return
 13850                           
 13851                           ;drv2665.c: 155: drv_fifo_upstroke[i] = (char)round(i*maxVal/40);
 13852  165D  0021               	movlb	1	; select bank1
 13853  165E  0854               	movf	(calcUpstroke@maxVal+1)^(0+128),w
 13854  165F  0020               	movlb	0	; select bank0
 13855  1660  00B4               	movwf	___wmul@multiplicand+1
 13856  1661  0021               	movlb	1	; select bank1
 13857  1662  0853               	movf	calcUpstroke@maxVal^(0+128),w
 13858  1663  0020               	movlb	0	; select bank0
 13859  1664  00B3               	movwf	___wmul@multiplicand
 13860  1665  0021               	movlb	1	; select bank1
 13861  1666  085B               	movf	(calcUpstroke@i+1)^(0+128),w
 13862  1667  0020               	movlb	0	; select bank0
 13863  1668  00B2               	movwf	___wmul@multiplier+1
 13864  1669  0021               	movlb	1	; select bank1
 13865  166A  085A               	movf	calcUpstroke@i^(0+128),w
 13866  166B  0020               	movlb	0	; select bank0
 13867  166C  00B1               	movwf	___wmul@multiplier
 13868  166D  31A2  22B0  3196   	fcall	___wmul
 13869  1670  0020               	movlb	0	; select bank0
 13870  1671  0832               	movf	?___wmul+1,w
 13871  1672  00BA               	movwf	___awdiv@dividend+1
 13872  1673  0831               	movf	?___wmul,w
 13873  1674  00B9               	movwf	___awdiv@dividend
 13874  1675  3028               	movlw	40
 13875  1676  00B7               	movwf	___awdiv@divisor
 13876  1677  3000               	movlw	0
 13877  1678  00B8               	movwf	___awdiv@divisor+1
 13878  1679  319C  2467  3196   	fcall	___awdiv
 13879  167C  0020               	movlb	0	; select bank0
 13880  167D  0838               	movf	?___awdiv+1,w
 13881  167E  00C1               	movwf	___awtoft@c+1
 13882  167F  0837               	movf	?___awdiv,w
 13883  1680  00C0               	movwf	___awtoft@c
 13884  1681  31A4  2404  3196   	fcall	___awtoft
 13885  1684  0020               	movlb	0	; select bank0
 13886  1685  0840               	movf	?___awtoft,w
 13887  1686  0021               	movlb	1	; select bank1
 13888  1687  00CD               	movwf	round@x^(0+128)
 13889  1688  0020               	movlb	0	; select bank0
 13890  1689  0841               	movf	?___awtoft+1,w
 13891  168A  0021               	movlb	1	; select bank1
 13892  168B  00CE               	movwf	(round@x+1)^(0+128)
 13893  168C  0020               	movlb	0	; select bank0
 13894  168D  0842               	movf	?___awtoft+2,w
 13895  168E  0021               	movlb	1	; select bank1
 13896  168F  00CF               	movwf	(round@x+2)^(0+128)
 13897  1690  319E  260F  3196   	fcall	_round
 13898  1693  0021               	movlb	1	; select bank1
 13899  1694  084D               	movf	?_round^(0+128),w
 13900  1695  00D7               	movwf	_calcUpstroke$2823^(0+128)
 13901  1696  084E               	movf	(?_round+1)^(0+128),w
 13902  1697  00D8               	movwf	(_calcUpstroke$2823+1)^(0+128)
 13903  1698  084F               	movf	(?_round+2)^(0+128),w
 13904  1699  00D9               	movwf	(_calcUpstroke$2823+2)^(0+128)
 13905                           
 13906                           ;drv2665.c: 155: drv_fifo_upstroke[i] = (char)round(i*maxVal/40);
 13907  169A  0857               	movf	_calcUpstroke$2823^(0+128),w
 13908  169B  00B7               	movwf	___fttol@f1^(0+128)
 13909  169C  0858               	movf	(_calcUpstroke$2823+1)^(0+128),w
 13910  169D  00B8               	movwf	(___fttol@f1+1)^(0+128)
 13911  169E  0859               	movf	(_calcUpstroke$2823+2)^(0+128),w
 13912  169F  00B9               	movwf	(___fttol@f1+2)^(0+128)
 13913  16A0  3188  2024  3196   	fcall	___fttol
 13914  16A3  0021               	movlb	1	; select bank1
 13915  16A4  0837               	movf	?___fttol^(0+128),w
 13916  16A5  00D5               	movwf	??_calcUpstroke^(0+128)
 13917  16A6  085A               	movf	calcUpstroke@i^(0+128),w
 13918  16A7  3E20               	addlw	(low (_drv_fifo_upstroke| (0+512)))& (0+255)
 13919  16A8  0086               	movwf	6
 13920  16A9  3002               	movlw	2	; select bank4/5
 13921  16AA  0087               	movwf	7
 13922  16AB  0855               	movf	??_calcUpstroke^(0+128),w
 13923  16AC  0081               	movwf	1
 13924                           
 13925                           ;drv2665.c: 156: printf("%i\n", drv_fifo_upstroke[i]);
 13926  16AD  302A               	movlw	low (STR_55| (0+32768))
 13927  16AE  00A0               	movwf	printf@f^(0+128)
 13928  16AF  30B0               	movlw	high (STR_55| (0+32768))
 13929  16B0  00A1               	movwf	(printf@f^(0+128)+1)
 13930  16B1  085A               	movf	calcUpstroke@i^(0+128),w
 13931  16B2  3E20               	addlw	(low (_drv_fifo_upstroke| (0+512)))& (0+255)
 13932  16B3  0086               	movwf	6
 13933  16B4  3002               	movlw	2	; select bank4/5
 13934  16B5  0087               	movwf	7
 13935  16B6  0801               	movf	1,w
 13936  16B7  00D5               	movwf	??_calcUpstroke^(0+128)
 13937  16B8  01D6               	clrf	(??_calcUpstroke^(0+128)+1)
 13938  16B9  0855               	movf	??_calcUpstroke^(0+128),w
 13939  16BA  00A2               	movwf	(?_printf^(0+128)+2)
 13940  16BB  0856               	movf	(??_calcUpstroke+1)^(0+128),w
 13941  16BC  00A3               	movwf	((?_printf+1)^(0+128)+2)
 13942  16BD  318E  26CE  3196   	fcall	_printf
 13943  16C0  3001               	movlw	1
 13944  16C1  0021               	movlb	1	; select bank1
 13945  16C2  07DA               	addwf	calcUpstroke@i^(0+128),f
 13946  16C3  3000               	movlw	0
 13947  16C4  3DDB               	addwfc	(calcUpstroke@i+1)^(0+128),f
 13948  16C5  2E52               	goto	L27
 13949  16C6                     __end_of_calcUpstroke:	
 13950                           
 13951                           	psect	text39
 13952  174D                     __ptext39:	
 13953 ;; *************** function _calcDownstroke *****************
 13954 ;; Defined at:
 13955 ;;		line 160 in file "drv2665.c"
 13956 ;; Parameters:    Size  Location     Type
 13957 ;;  maxVal          2   51[BANK1 ] int 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;  i               2   58[BANK1 ] int 
 13960 ;; Return value:  Size  Location     Type
 13961 ;;                  1    wreg      void 
 13962 ;; Registers used:
 13963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13964 ;; Tracked objects:
 13965 ;;		On entry : 0/0
 13966 ;;		On exit  : 0/0
 13967 ;;		Unchanged: 0/0
 13968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13969 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13970 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13971 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13972 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13973 ;;Total ram usage:        9 bytes
 13974 ;; Hardware stack levels used:    1
 13975 ;; Hardware stack levels required when called:   10
 13976 ;; This function calls:
 13977 ;;		___awdiv
 13978 ;;		___awtoft
 13979 ;;		___ftadd
 13980 ;;		___ftneg
 13981 ;;		___fttol
 13982 ;;		___wmul
 13983 ;;		_printf
 13984 ;;		_round
 13985 ;; This function is called by:
 13986 ;;		_setDrvPeak
 13987 ;;		_drv_init
 13988 ;; This function uses a non-reentrant model
 13989 ;;
 13990                           
 13991                           
 13992                           ;psect for function _calcDownstroke
 13993  174D                     _calcDownstroke:	
 13994                           
 13995                           ;drv2665.c: 161: drv_fifo_downstroke[0] = 0x0b;
 13996                           
 13997                           ;incstack = 0
 13998                           ; Regs used in _calcDownstroke: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13999  174D  300B               	movlw	11
 14000  174E  0021               	movlb	1	; select bank1
 14001  174F  00D5               	movwf	??_calcDownstroke^(0+128)
 14002  1750  0855               	movf	??_calcDownstroke^(0+128),w
 14003  1751  0025               	movlb	5	; select bank5
 14004  1752  00A0               	movwf	_drv_fifo_downstroke^(0+640)
 14005                           
 14006                           ;drv2665.c: 162: for(int i = 1; i < 40; i++){
 14007  1753  3001               	movlw	1
 14008  1754  0021               	movlb	1	; select bank1
 14009  1755  00DA               	movwf	calcDownstroke@i^(0+128)
 14010  1756  3000               	movlw	0
 14011  1757  00DB               	movwf	(calcDownstroke@i^(0+128)+1)
 14012  1758                     L28:	
 14013  1758  085B               	movf	(calcDownstroke@i+1)^(0+128),w
 14014  1759  3A80               	xorlw	128
 14015  175A  00D5               	movwf	??_calcDownstroke^(0+128)
 14016  175B  3080               	movlw	128
 14017  175C  0255               	subwf	??_calcDownstroke^(0+128),w
 14018  175D  1D03               	skipz
 14019  175E  2F61               	goto	u8505
 14020  175F  3028               	movlw	40
 14021  1760  025A               	subwf	calcDownstroke@i^(0+128),w
 14022  1761                     u8505:	
 14023  1761  1803               	btfsc	3,0
 14024  1762  0008               	return
 14025                           
 14026                           ;drv2665.c: 163: drv_fifo_downstroke[i] = (char)(maxVal - round(i*maxVal/40));
 14027  1763  0021               	movlb	1	; select bank1
 14028  1764  0854               	movf	(calcDownstroke@maxVal+1)^(0+128),w
 14029  1765  0020               	movlb	0	; select bank0
 14030  1766  00B4               	movwf	___wmul@multiplicand+1
 14031  1767  0021               	movlb	1	; select bank1
 14032  1768  0853               	movf	calcDownstroke@maxVal^(0+128),w
 14033  1769  0020               	movlb	0	; select bank0
 14034  176A  00B3               	movwf	___wmul@multiplicand
 14035  176B  0021               	movlb	1	; select bank1
 14036  176C  085B               	movf	(calcDownstroke@i+1)^(0+128),w
 14037  176D  0020               	movlb	0	; select bank0
 14038  176E  00B2               	movwf	___wmul@multiplier+1
 14039  176F  0021               	movlb	1	; select bank1
 14040  1770  085A               	movf	calcDownstroke@i^(0+128),w
 14041  1771  0020               	movlb	0	; select bank0
 14042  1772  00B1               	movwf	___wmul@multiplier
 14043  1773  31A2  22B0  3197   	fcall	___wmul
 14044  1776  0020               	movlb	0	; select bank0
 14045  1777  0832               	movf	?___wmul+1,w
 14046  1778  00BA               	movwf	___awdiv@dividend+1
 14047  1779  0831               	movf	?___wmul,w
 14048  177A  00B9               	movwf	___awdiv@dividend
 14049  177B  3028               	movlw	40
 14050  177C  00B7               	movwf	___awdiv@divisor
 14051  177D  3000               	movlw	0
 14052  177E  00B8               	movwf	___awdiv@divisor+1
 14053  177F  319C  2467  3197   	fcall	___awdiv
 14054  1782  0020               	movlb	0	; select bank0
 14055  1783  0838               	movf	?___awdiv+1,w
 14056  1784  00C1               	movwf	___awtoft@c+1
 14057  1785  0837               	movf	?___awdiv,w
 14058  1786  00C0               	movwf	___awtoft@c
 14059  1787  31A4  2404  3197   	fcall	___awtoft
 14060  178A  0020               	movlb	0	; select bank0
 14061  178B  0840               	movf	?___awtoft,w
 14062  178C  0021               	movlb	1	; select bank1
 14063  178D  00CD               	movwf	round@x^(0+128)
 14064  178E  0020               	movlb	0	; select bank0
 14065  178F  0841               	movf	?___awtoft+1,w
 14066  1790  0021               	movlb	1	; select bank1
 14067  1791  00CE               	movwf	(round@x+1)^(0+128)
 14068  1792  0020               	movlb	0	; select bank0
 14069  1793  0842               	movf	?___awtoft+2,w
 14070  1794  0021               	movlb	1	; select bank1
 14071  1795  00CF               	movwf	(round@x+2)^(0+128)
 14072  1796  319E  260F  3197   	fcall	_round
 14073  1799  0021               	movlb	1	; select bank1
 14074  179A  084D               	movf	?_round^(0+128),w
 14075  179B  00D7               	movwf	_calcDownstroke$2824^(0+128)
 14076  179C  084E               	movf	(?_round+1)^(0+128),w
 14077  179D  00D8               	movwf	(_calcDownstroke$2824+1)^(0+128)
 14078  179E  084F               	movf	(?_round+2)^(0+128),w
 14079  179F  00D9               	movwf	(_calcDownstroke$2824+2)^(0+128)
 14080                           
 14081                           ;drv2665.c: 163: drv_fifo_downstroke[i] = (char)(maxVal - round(i*maxVal/40));
 14082  17A0  0854               	movf	(calcDownstroke@maxVal+1)^(0+128),w
 14083  17A1  0020               	movlb	0	; select bank0
 14084  17A2  00C1               	movwf	___awtoft@c+1
 14085  17A3  0021               	movlb	1	; select bank1
 14086  17A4  0853               	movf	calcDownstroke@maxVal^(0+128),w
 14087  17A5  0020               	movlb	0	; select bank0
 14088  17A6  00C0               	movwf	___awtoft@c
 14089  17A7  31A4  2404  3197   	fcall	___awtoft
 14090  17AA  0020               	movlb	0	; select bank0
 14091  17AB  0840               	movf	?___awtoft,w
 14092  17AC  0021               	movlb	1	; select bank1
 14093  17AD  00AD               	movwf	___ftadd@f2^(0+128)
 14094  17AE  0020               	movlb	0	; select bank0
 14095  17AF  0841               	movf	?___awtoft+1,w
 14096  17B0  0021               	movlb	1	; select bank1
 14097  17B1  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 14098  17B2  0020               	movlb	0	; select bank0
 14099  17B3  0842               	movf	?___awtoft+2,w
 14100  17B4  0021               	movlb	1	; select bank1
 14101  17B5  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 14102  17B6  0857               	movf	_calcDownstroke$2824^(0+128),w
 14103  17B7  0020               	movlb	0	; select bank0
 14104  17B8  00C1               	movwf	___ftneg@f1
 14105  17B9  0021               	movlb	1	; select bank1
 14106  17BA  0858               	movf	(_calcDownstroke$2824+1)^(0+128),w
 14107  17BB  0020               	movlb	0	; select bank0
 14108  17BC  00C2               	movwf	___ftneg@f1+1
 14109  17BD  0021               	movlb	1	; select bank1
 14110  17BE  0859               	movf	(_calcDownstroke$2824+2)^(0+128),w
 14111  17BF  0020               	movlb	0	; select bank0
 14112  17C0  00C3               	movwf	___ftneg@f1+2
 14113  17C1  31A0  20A7  3197   	fcall	___ftneg
 14114  17C4  0020               	movlb	0	; select bank0
 14115  17C5  0841               	movf	?___ftneg,w
 14116  17C6  0021               	movlb	1	; select bank1
 14117  17C7  00AA               	movwf	___ftadd@f1^(0+128)
 14118  17C8  0020               	movlb	0	; select bank0
 14119  17C9  0842               	movf	?___ftneg+1,w
 14120  17CA  0021               	movlb	1	; select bank1
 14121  17CB  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 14122  17CC  0020               	movlb	0	; select bank0
 14123  17CD  0843               	movf	?___ftneg+2,w
 14124  17CE  0021               	movlb	1	; select bank1
 14125  17CF  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 14126  17D0  318C  249F  3197   	fcall	___ftadd
 14127  17D3  0021               	movlb	1	; select bank1
 14128  17D4  082A               	movf	?___ftadd^(0+128),w
 14129  17D5  00B7               	movwf	___fttol@f1^(0+128)
 14130  17D6  082B               	movf	(?___ftadd+1)^(0+128),w
 14131  17D7  00B8               	movwf	(___fttol@f1+1)^(0+128)
 14132  17D8  082C               	movf	(?___ftadd+2)^(0+128),w
 14133  17D9  00B9               	movwf	(___fttol@f1+2)^(0+128)
 14134  17DA  3188  2024  3197   	fcall	___fttol
 14135  17DD  0021               	movlb	1	; select bank1
 14136  17DE  0837               	movf	?___fttol^(0+128),w
 14137  17DF  00D5               	movwf	??_calcDownstroke^(0+128)
 14138  17E0  085A               	movf	calcDownstroke@i^(0+128),w
 14139  17E1  3EA0               	addlw	(low (_drv_fifo_downstroke| (0+512)))& (0+255)
 14140  17E2  0086               	movwf	6
 14141  17E3  3002               	movlw	2	; select bank5/6
 14142  17E4  0087               	movwf	7
 14143  17E5  0855               	movf	??_calcDownstroke^(0+128),w
 14144  17E6  0081               	movwf	1
 14145                           
 14146                           ;drv2665.c: 164: printf("%i\n", drv_fifo_downstroke[i]);
 14147  17E7  302A               	movlw	low (STR_55| (0+32768))
 14148  17E8  00A0               	movwf	printf@f^(0+128)
 14149  17E9  30B0               	movlw	high (STR_55| (0+32768))
 14150  17EA  00A1               	movwf	(printf@f^(0+128)+1)
 14151  17EB  085A               	movf	calcDownstroke@i^(0+128),w
 14152  17EC  3EA0               	addlw	(low (_drv_fifo_downstroke| (0+512)))& (0+255)
 14153  17ED  0086               	movwf	6
 14154  17EE  3002               	movlw	2	; select bank5/6
 14155  17EF  0087               	movwf	7
 14156  17F0  0801               	movf	1,w
 14157  17F1  00D5               	movwf	??_calcDownstroke^(0+128)
 14158  17F2  01D6               	clrf	(??_calcDownstroke^(0+128)+1)
 14159  17F3  0855               	movf	??_calcDownstroke^(0+128),w
 14160  17F4  00A2               	movwf	(?_printf^(0+128)+2)
 14161  17F5  0856               	movf	(??_calcDownstroke+1)^(0+128),w
 14162  17F6  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14163  17F7  318E  26CE  3197   	fcall	_printf
 14164  17FA  3001               	movlw	1
 14165  17FB  0021               	movlb	1	; select bank1
 14166  17FC  07DA               	addwf	calcDownstroke@i^(0+128),f
 14167  17FD  3000               	movlw	0
 14168  17FE  3DDB               	addwfc	(calcDownstroke@i+1)^(0+128),f
 14169  17FF  2F58               	goto	L28
 14170  1800                     __end_of_calcDownstroke:	
 14171                           
 14172                           	psect	text40
 14173  1E0F                     __ptext40:	
 14174 ;; *************** function _round *****************
 14175 ;; Defined at:
 14176 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\round.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;  x               3   45[BANK1 ] void 
 14179 ;; Auto vars:     Size  Location     Type
 14180 ;;  f               3   48[BANK1 ] void 
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  3   45[BANK1 ] void 
 14183 ;; Registers used:
 14184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14190 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14191 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14193 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14194 ;;Total ram usage:        6 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; Hardware stack levels required when called:    9
 14197 ;; This function calls:
 14198 ;;		___ftadd
 14199 ;;		___ftneg
 14200 ;;		_trunc
 14201 ;; This function is called by:
 14202 ;;		_calcUpstroke
 14203 ;;		_calcDownstroke
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           
 14208                           ;psect for function _round
 14209  1E0F                     _round:	
 14210                           
 14211                           ;incstack = 0
 14212                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14213  1E0F  0021               	movlb	1	; select bank1
 14214  1E10  084D               	movf	round@x^(0+128),w
 14215  1E11  00AA               	movwf	___ftadd@f1^(0+128)
 14216  1E12  084E               	movf	(round@x+1)^(0+128),w
 14217  1E13  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 14218  1E14  084F               	movf	(round@x+2)^(0+128),w
 14219  1E15  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 14220  1E16  084D               	movf	round@x^(0+128),w
 14221  1E17  00C5               	movwf	trunc@x^(0+128)
 14222  1E18  084E               	movf	(round@x+1)^(0+128),w
 14223  1E19  00C6               	movwf	(trunc@x+1)^(0+128)
 14224  1E1A  084F               	movf	(round@x+2)^(0+128),w
 14225  1E1B  00C7               	movwf	(trunc@x+2)^(0+128)
 14226  1E1C  319C  24B9  319E   	fcall	_trunc
 14227  1E1F  0021               	movlb	1	; select bank1
 14228  1E20  0845               	movf	?_trunc^(0+128),w
 14229  1E21  0020               	movlb	0	; select bank0
 14230  1E22  00C1               	movwf	___ftneg@f1
 14231  1E23  0021               	movlb	1	; select bank1
 14232  1E24  0846               	movf	(?_trunc+1)^(0+128),w
 14233  1E25  0020               	movlb	0	; select bank0
 14234  1E26  00C2               	movwf	___ftneg@f1+1
 14235  1E27  0021               	movlb	1	; select bank1
 14236  1E28  0847               	movf	(?_trunc+2)^(0+128),w
 14237  1E29  0020               	movlb	0	; select bank0
 14238  1E2A  00C3               	movwf	___ftneg@f1+2
 14239  1E2B  31A0  20A7  319E   	fcall	___ftneg
 14240  1E2E  0020               	movlb	0	; select bank0
 14241  1E2F  0841               	movf	?___ftneg,w
 14242  1E30  0021               	movlb	1	; select bank1
 14243  1E31  00AD               	movwf	___ftadd@f2^(0+128)
 14244  1E32  0020               	movlb	0	; select bank0
 14245  1E33  0842               	movf	?___ftneg+1,w
 14246  1E34  0021               	movlb	1	; select bank1
 14247  1E35  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 14248  1E36  0020               	movlb	0	; select bank0
 14249  1E37  0843               	movf	?___ftneg+2,w
 14250  1E38  0021               	movlb	1	; select bank1
 14251  1E39  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 14252  1E3A  318C  249F  319E   	fcall	___ftadd
 14253  1E3D  0021               	movlb	1	; select bank1
 14254  1E3E  082A               	movf	?___ftadd^(0+128),w
 14255  1E3F  00D0               	movwf	round@f^(0+128)
 14256  1E40  082B               	movf	(?___ftadd+1)^(0+128),w
 14257  1E41  00D1               	movwf	(round@f+1)^(0+128)
 14258  1E42  082C               	movf	(?___ftadd+2)^(0+128),w
 14259  1E43  00D2               	movwf	(round@f+2)^(0+128)
 14260  1E44  0850               	movf	round@f^(0+128),w
 14261  1E45  00AA               	movwf	___ftadd@f1^(0+128)
 14262  1E46  0851               	movf	(round@f+1)^(0+128),w
 14263  1E47  00AB               	movwf	(___ftadd@f1+1)^(0+128)
 14264  1E48  0852               	movf	(round@f+2)^(0+128),w
 14265  1E49  00AC               	movwf	(___ftadd@f1+2)^(0+128)
 14266  1E4A  084D               	movf	round@x^(0+128),w
 14267  1E4B  00AD               	movwf	___ftadd@f2^(0+128)
 14268  1E4C  084E               	movf	(round@x+1)^(0+128),w
 14269  1E4D  00AE               	movwf	(___ftadd@f2+1)^(0+128)
 14270  1E4E  084F               	movf	(round@x+2)^(0+128),w
 14271  1E4F  00AF               	movwf	(___ftadd@f2+2)^(0+128)
 14272  1E50  318C  249F  319E   	fcall	___ftadd
 14273  1E53  0021               	movlb	1	; select bank1
 14274  1E54  082A               	movf	?___ftadd^(0+128),w
 14275  1E55  00CD               	movwf	round@x^(0+128)
 14276  1E56  082B               	movf	(?___ftadd+1)^(0+128),w
 14277  1E57  00CE               	movwf	(round@x+1)^(0+128)
 14278  1E58  082C               	movf	(?___ftadd+2)^(0+128),w
 14279  1E59  00CF               	movwf	(round@x+2)^(0+128)
 14280  1E5A  084D               	movf	round@x^(0+128),w
 14281  1E5B  00C5               	movwf	trunc@x^(0+128)
 14282  1E5C  084E               	movf	(round@x+1)^(0+128),w
 14283  1E5D  00C6               	movwf	(trunc@x+1)^(0+128)
 14284  1E5E  084F               	movf	(round@x+2)^(0+128),w
 14285  1E5F  00C7               	movwf	(trunc@x+2)^(0+128)
 14286  1E60  319C  24B9         	fcall	_trunc
 14287  1E62  0021               	movlb	1	; select bank1
 14288  1E63  0845               	movf	?_trunc^(0+128),w
 14289  1E64  00CD               	movwf	?_round^(0+128)
 14290  1E65  0846               	movf	(?_trunc+1)^(0+128),w
 14291  1E66  00CE               	movwf	(?_round+1)^(0+128)
 14292  1E67  0847               	movf	(?_trunc+2)^(0+128),w
 14293  1E68  00CF               	movwf	(?_round+2)^(0+128)
 14294  1E69  0008               	return
 14295  1E6A                     __end_of_round:	
 14296                           
 14297                           	psect	text41
 14298  1CB9                     __ptext41:	
 14299 ;; *************** function _trunc *****************
 14300 ;; Defined at:
 14301 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\trunc.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;  x               3   37[BANK1 ] void 
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;  i               3   40[BANK1 ] void 
 14306 ;;  expon           2   43[BANK1 ] int 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  3   37[BANK1 ] int 
 14309 ;; Registers used:
 14310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14311 ;; Tracked objects:
 14312 ;;		On entry : 0/0
 14313 ;;		On exit  : 0/0
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14316 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14317 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14319 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14320 ;;Total ram usage:        9 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:    8
 14323 ;; This function calls:
 14324 ;;		___altoft
 14325 ;;		___fttol
 14326 ;;		_frexp
 14327 ;; This function is called by:
 14328 ;;		_round
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           
 14333                           ;psect for function _trunc
 14334  1CB9                     _trunc:	
 14335                           
 14336                           ;incstack = 0
 14337                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14338  1CB9  0021               	movlb	1	; select bank1
 14339  1CBA  0845               	movf	trunc@x^(0+128),w
 14340  1CBB  0020               	movlb	0	; select bank0
 14341  1CBC  00B1               	movwf	frexp@value
 14342  1CBD  0021               	movlb	1	; select bank1
 14343  1CBE  0846               	movf	(trunc@x+1)^(0+128),w
 14344  1CBF  0020               	movlb	0	; select bank0
 14345  1CC0  00B2               	movwf	frexp@value+1
 14346  1CC1  0021               	movlb	1	; select bank1
 14347  1CC2  0847               	movf	(trunc@x+2)^(0+128),w
 14348  1CC3  0020               	movlb	0	; select bank0
 14349  1CC4  00B3               	movwf	frexp@value+2
 14350  1CC5  30CB               	movlw	(low (trunc@expon| 0))& (0+255)
 14351  1CC6  00CC               	movwf	??_trunc
 14352  1CC7  084C               	movf	??_trunc,w
 14353  1CC8  00B4               	movwf	frexp@eptr
 14354  1CC9  31A6  26D1  319C   	fcall	_frexp
 14355  1CCC  0021               	movlb	1	; select bank1
 14356  1CCD  1FCC               	btfss	(trunc@expon+1)^(0+128),7
 14357  1CCE  2CD6               	goto	l8016
 14358  1CCF  3000               	movlw	0
 14359  1CD0  00C5               	movwf	?_trunc^(0+128)
 14360  1CD1  3000               	movlw	0
 14361  1CD2  00C6               	movwf	(?_trunc+1)^(0+128)
 14362  1CD3  3000               	movlw	0
 14363  1CD4  00C7               	movwf	(?_trunc+2)^(0+128)
 14364  1CD5  0008               	return
 14365  1CD6                     l8016:	
 14366  1CD6  3000               	movlw	0
 14367  1CD7  024C               	subwf	(trunc@expon+1)^(0+128),w
 14368  1CD8  3015               	movlw	21
 14369  1CD9  1903               	skipnz
 14370  1CDA  024B               	subwf	trunc@expon^(0+128),w
 14371  1CDB  1803               	btfsc	3,0
 14372  1CDC  0008               	return
 14373  1CDD  0845               	movf	trunc@x^(0+128),w
 14374  1CDE  00B7               	movwf	___fttol@f1^(0+128)
 14375  1CDF  0846               	movf	(trunc@x+1)^(0+128),w
 14376  1CE0  00B8               	movwf	(___fttol@f1+1)^(0+128)
 14377  1CE1  0847               	movf	(trunc@x+2)^(0+128),w
 14378  1CE2  00B9               	movwf	(___fttol@f1+2)^(0+128)
 14379  1CE3  3188  2024  319C   	fcall	___fttol
 14380  1CE6  0021               	movlb	1	; select bank1
 14381  1CE7  083A               	movf	(?___fttol+3)^(0+128),w
 14382  1CE8  0020               	movlb	0	; select bank0
 14383  1CE9  00BC               	movwf	___altoft@c+3
 14384  1CEA  0021               	movlb	1	; select bank1
 14385  1CEB  0839               	movf	(?___fttol+2)^(0+128),w
 14386  1CEC  0020               	movlb	0	; select bank0
 14387  1CED  00BB               	movwf	___altoft@c+2
 14388  1CEE  0021               	movlb	1	; select bank1
 14389  1CEF  0838               	movf	(?___fttol+1)^(0+128),w
 14390  1CF0  0020               	movlb	0	; select bank0
 14391  1CF1  00BA               	movwf	___altoft@c+1
 14392  1CF2  0021               	movlb	1	; select bank1
 14393  1CF3  0837               	movf	?___fttol^(0+128),w
 14394  1CF4  0020               	movlb	0	; select bank0
 14395  1CF5  00B9               	movwf	___altoft@c
 14396  1CF6  3198  20F4         	fcall	___altoft
 14397  1CF8  0020               	movlb	0	; select bank0
 14398  1CF9  0839               	movf	?___altoft,w
 14399  1CFA  0021               	movlb	1	; select bank1
 14400  1CFB  00C8               	movwf	trunc@i^(0+128)
 14401  1CFC  0020               	movlb	0	; select bank0
 14402  1CFD  083A               	movf	?___altoft+1,w
 14403  1CFE  0021               	movlb	1	; select bank1
 14404  1CFF  00C9               	movwf	(trunc@i+1)^(0+128)
 14405  1D00  0020               	movlb	0	; select bank0
 14406  1D01  083B               	movf	?___altoft+2,w
 14407  1D02  0021               	movlb	1	; select bank1
 14408  1D03  00CA               	movwf	(trunc@i+2)^(0+128)
 14409  1D04  0848               	movf	trunc@i^(0+128),w
 14410  1D05  00C5               	movwf	?_trunc^(0+128)
 14411  1D06  0849               	movf	(trunc@i+1)^(0+128),w
 14412  1D07  00C6               	movwf	(?_trunc+1)^(0+128)
 14413  1D08  084A               	movf	(trunc@i+2)^(0+128),w
 14414  1D09  00C7               	movwf	(?_trunc+2)^(0+128)
 14415  1D0A  0008               	return
 14416  1D0B                     __end_of_trunc:	
 14417                           
 14418                           	psect	text42
 14419  26D1                     __ptext42:	
 14420 ;; *************** function _frexp *****************
 14421 ;; Defined at:
 14422 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 14423 ;; Parameters:    Size  Location     Type
 14424 ;;  value           3   17[BANK0 ] int 
 14425 ;;  eptr            1   20[BANK0 ] PTR int 
 14426 ;;		 -> floor@expon(2), trunc@expon(2), 
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;		None
 14429 ;; Return value:  Size  Location     Type
 14430 ;;                  3   17[BANK0 ] PTR int 
 14431 ;; Registers used:
 14432 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14433 ;; Tracked objects:
 14434 ;;		On entry : 0/0
 14435 ;;		On exit  : 0/0
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14440 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14441 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14442 ;;Total ram usage:        6 bytes
 14443 ;; Hardware stack levels used:    1
 14444 ;; Hardware stack levels required when called:    6
 14445 ;; This function calls:
 14446 ;;		Nothing
 14447 ;; This function is called by:
 14448 ;;		_trunc
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452                           
 14453                           ;psect for function _frexp
 14454  26D1                     _frexp:	
 14455                           
 14456                           ;incstack = 0
 14457                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
 14458  26D1  0020               	movlb	0	; select bank0
 14459  26D2  0833               	movf	frexp@value+2,w
 14460  26D3  0432               	iorwf	frexp@value+1,w
 14461  26D4  0431               	iorwf	frexp@value,w
 14462  26D5  1D03               	skipz
 14463  26D6  2EDE               	goto	l7862
 14464  26D7  0834               	movf	frexp@eptr,w
 14465  26D8  0086               	movwf	6
 14466  26D9  0187               	clrf	7
 14467  26DA  3000               	movlw	0
 14468  26DB  3FC0               	movwi [0]fsr1
 14469  26DC  3FC1               	movwi [1]fsr1
 14470                           
 14471                           ;	Return value of _frexp is never used
 14472  26DD  0008               	return
 14473  26DE                     l7862:	
 14474  26DE  0833               	movf	frexp@value+2,w
 14475  26DF  397F               	andlw	127
 14476  26E0  00B5               	movwf	??_frexp
 14477  26E1  01B6               	clrf	??_frexp+1
 14478  26E2  35B5               	lslf	??_frexp,f
 14479  26E3  0DB6               	rlf	??_frexp+1,f
 14480  26E4  0834               	movf	frexp@eptr,w
 14481  26E5  0086               	movwf	6
 14482  26E6  0187               	clrf	7
 14483  26E7  0835               	movf	??_frexp,w
 14484  26E8  3FC0               	movwi [0]fsr1
 14485  26E9  0836               	movf	??_frexp+1,w
 14486  26EA  3FC1               	movwi [1]fsr1
 14487  26EB  0D32               	rlf	frexp@value+1,w
 14488  26EC  0D32               	rlf	frexp@value+1,w
 14489  26ED  3901               	andlw	1
 14490  26EE  00B5               	movwf	??_frexp
 14491  26EF  01B6               	clrf	??_frexp+1
 14492  26F0  0834               	movf	frexp@eptr,w
 14493  26F1  0086               	movwf	6
 14494  26F2  0187               	clrf	7
 14495  26F3  0835               	movf	??_frexp,w
 14496  26F4  0481               	iorwf	1,f
 14497  26F5  3141               	addfsr 1,1
 14498  26F6  0836               	movf	??_frexp+1,w
 14499  26F7  0481               	iorwf	1,f
 14500  26F8  0834               	movf	frexp@eptr,w
 14501  26F9  0086               	movwf	6
 14502  26FA  0187               	clrf	7
 14503  26FB  3082               	movlw	130
 14504  26FC  0781               	addwf	1,f
 14505  26FD  3141               	addfsr 1,1
 14506  26FE  30FF               	movlw	255
 14507  26FF  3D81               	addwfc	1,f
 14508  2700  317F               	addfsr 1,-1
 14509  2701  0833               	movf	frexp@value+2,w
 14510  2702  3980               	andlw	-128
 14511  2703  383F               	iorlw	63
 14512  2704  00B3               	movwf	frexp@value+2
 14513  2705  13B2               	bcf	frexp@value+1,7
 14514  2706  0008               	return
 14515  2707                     __end_of_frexp:	
 14516                           ;	Return value of _frexp is never used
 14517                           
 14518                           
 14519                           	psect	text43
 14520  0824                     __ptext43:	
 14521 ;; *************** function ___fttol *****************
 14522 ;; Defined at:
 14523 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;  f1              3   23[BANK1 ] float 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  lval            4   32[BANK1 ] unsigned long 
 14528 ;;  exp1            1   36[BANK1 ] unsigned char 
 14529 ;;  sign1           1   31[BANK1 ] unsigned char 
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  4   23[BANK1 ] long 
 14532 ;; Registers used:
 14533 ;;		wreg, status,2, status,0
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/0
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14539 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14540 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14541 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14542 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14543 ;;Total ram usage:       14 bytes
 14544 ;; Hardware stack levels used:    1
 14545 ;; Hardware stack levels required when called:    6
 14546 ;; This function calls:
 14547 ;;		Nothing
 14548 ;; This function is called by:
 14549 ;;		_main_initialize
 14550 ;;		_setDrvPiezoOnTime
 14551 ;;		_setH1OffTime
 14552 ;;		_setH2OnTime
 14553 ;;		_calcUpstroke
 14554 ;;		_calcDownstroke
 14555 ;;		_trunc
 14556 ;;		_drv_outputSine
 14557 ;; This function uses a non-reentrant model
 14558 ;;
 14559                           
 14560                           
 14561                           ;psect for function ___fttol
 14562  0824                     ___fttol:	
 14563                           
 14564                           ;incstack = 0
 14565                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 14566  0824  0021               	movlb	1	; select bank1
 14567  0825  0837               	movf	___fttol@f1^(0+128),w
 14568  0826  00BB               	movwf	??___fttol^(0+128)
 14569  0827  0838               	movf	(___fttol@f1+1)^(0+128),w
 14570  0828  00BC               	movwf	(??___fttol^(0+128)+1)
 14571  0829  0839               	movf	(___fttol@f1+2)^(0+128),w
 14572  082A  00BD               	movwf	(??___fttol^(0+128)+2)
 14573  082B  1003               	clrc
 14574  082C  0D3C               	rlf	(??___fttol^(0+128)+1),w
 14575  082D  0D3D               	rlf	(??___fttol^(0+128)+2),w
 14576  082E  00BE               	movwf	(??___fttol+3)^(0+128)
 14577  082F  083E               	movf	(??___fttol+3)^(0+128),w
 14578  0830  00C4               	movwf	___fttol@exp1^(0+128)
 14579  0831  0844               	movf	___fttol@exp1^(0+128),w
 14580  0832  1D03               	btfss	3,2
 14581  0833  283D               	goto	l7820
 14582  0834  3000               	movlw	0
 14583  0835  00BA               	movwf	(?___fttol+3)^(0+128)
 14584  0836  3000               	movlw	0
 14585  0837  00B9               	movwf	(?___fttol+2)^(0+128)
 14586  0838  3000               	movlw	0
 14587  0839  00B8               	movwf	(?___fttol+1)^(0+128)
 14588  083A  3000               	movlw	0
 14589  083B  00B7               	movwf	?___fttol^(0+128)
 14590  083C  0008               	return
 14591  083D                     l7820:	
 14592  083D  0837               	movf	___fttol@f1^(0+128),w
 14593  083E  00BB               	movwf	??___fttol^(0+128)
 14594  083F  0838               	movf	(___fttol@f1+1)^(0+128),w
 14595  0840  00BC               	movwf	(??___fttol^(0+128)+1)
 14596  0841  0839               	movf	(___fttol@f1+2)^(0+128),w
 14597  0842  00BD               	movwf	(??___fttol^(0+128)+2)
 14598  0843  3017               	movlw	23
 14599  0844                     u7525:	
 14600  0844  36BD               	lsrf	(??___fttol^(0+128)+2),f
 14601  0845  0CBC               	rrf	(??___fttol^(0+128)+1),f
 14602  0846  0CBB               	rrf	??___fttol^(0+128),f
 14603  0847  0B89               	decfsz	9,f
 14604  0848  2844               	goto	u7525
 14605  0849  083B               	movf	??___fttol^(0+128),w
 14606  084A  00BE               	movwf	(??___fttol+3)^(0+128)
 14607  084B  083E               	movf	(??___fttol+3)^(0+128),w
 14608  084C  00BF               	movwf	___fttol@sign1^(0+128)
 14609  084D  17B8               	bsf	(___fttol@f1^(0+128)+1),7
 14610  084E  30FF               	movlw	255
 14611  084F  05B7               	andwf	___fttol@f1^(0+128),f
 14612  0850  30FF               	movlw	255
 14613  0851  05B8               	andwf	(___fttol@f1+1)^(0+128),f
 14614  0852  3000               	movlw	0
 14615  0853  05B9               	andwf	(___fttol@f1+2)^(0+128),f
 14616  0854  0837               	movf	___fttol@f1^(0+128),w
 14617  0855  00C0               	movwf	___fttol@lval^(0+128)
 14618  0856  0838               	movf	(___fttol@f1+1)^(0+128),w
 14619  0857  00C1               	movwf	(___fttol@lval^(0+128)+1)
 14620  0858  0839               	movf	(___fttol@f1+2)^(0+128),w
 14621  0859  00C2               	movwf	(___fttol@lval^(0+128)+2)
 14622  085A  01C3               	clrf	(___fttol@lval^(0+128)+3)
 14623  085B  308E               	movlw	142
 14624  085C  02C4               	subwf	___fttol@exp1^(0+128),f
 14625  085D  1FC4               	btfss	___fttol@exp1^(0+128),7
 14626  085E  287B               	goto	l7840
 14627  085F  0844               	movf	___fttol@exp1^(0+128),w
 14628  0860  3A80               	xorlw	128
 14629  0861  3E8F               	addlw	143
 14630  0862  1803               	skipnc
 14631  0863  286D               	goto	l7838
 14632  0864  3000               	movlw	0
 14633  0865  00BA               	movwf	(?___fttol+3)^(0+128)
 14634  0866  3000               	movlw	0
 14635  0867  00B9               	movwf	(?___fttol+2)^(0+128)
 14636  0868  3000               	movlw	0
 14637  0869  00B8               	movwf	(?___fttol+1)^(0+128)
 14638  086A  3000               	movlw	0
 14639  086B  00B7               	movwf	?___fttol^(0+128)
 14640  086C  0008               	return
 14641  086D                     l7838:	
 14642  086D  3001               	movlw	1
 14643  086E                     u7555:	
 14644  086E  36C3               	lsrf	(___fttol@lval+3)^(0+128),f
 14645  086F  0CC2               	rrf	(___fttol@lval+2)^(0+128),f
 14646  0870  0CC1               	rrf	(___fttol@lval+1)^(0+128),f
 14647  0871  0CC0               	rrf	___fttol@lval^(0+128),f
 14648  0872  0B89               	decfsz	9,f
 14649  0873  286E               	goto	u7555
 14650  0874  3001               	movlw	1
 14651  0875  00BB               	movwf	??___fttol^(0+128)
 14652  0876  083B               	movf	??___fttol^(0+128),w
 14653  0877  07C4               	addwf	___fttol@exp1^(0+128),f
 14654  0878  1903               	btfsc	3,2
 14655  0879  2894               	goto	l7848
 14656  087A  286D               	goto	l7838
 14657  087B                     l7840:	
 14658  087B  3018               	movlw	24
 14659  087C  0244               	subwf	___fttol@exp1^(0+128),w
 14660  087D  1C03               	skipc
 14661  087E  2891               	goto	l1915
 14662  087F  3000               	movlw	0
 14663  0880  00BA               	movwf	(?___fttol+3)^(0+128)
 14664  0881  3000               	movlw	0
 14665  0882  00B9               	movwf	(?___fttol+2)^(0+128)
 14666  0883  3000               	movlw	0
 14667  0884  00B8               	movwf	(?___fttol+1)^(0+128)
 14668  0885  3000               	movlw	0
 14669  0886  00B7               	movwf	?___fttol^(0+128)
 14670  0887  0008               	return
 14671  0888                     l7846:	
 14672  0888  3001               	movlw	1
 14673  0889                     u7585:	
 14674  0889  35C0               	lslf	___fttol@lval^(0+128),f
 14675  088A  0DC1               	rlf	(___fttol@lval+1)^(0+128),f
 14676  088B  0DC2               	rlf	(___fttol@lval+2)^(0+128),f
 14677  088C  0DC3               	rlf	(___fttol@lval+3)^(0+128),f
 14678  088D  0B89               	decfsz	9,f
 14679  088E  2889               	goto	u7585
 14680  088F  3001               	movlw	1
 14681  0890  02C4               	subwf	___fttol@exp1^(0+128),f
 14682  0891                     l1915:	
 14683  0891  0844               	movf	___fttol@exp1^(0+128),w
 14684  0892  1D03               	btfss	3,2
 14685  0893  2888               	goto	l7846
 14686  0894                     l7848:	
 14687  0894  083F               	movf	___fttol@sign1^(0+128),w
 14688  0895  1903               	btfsc	3,2
 14689  0896  28A2               	goto	l7852
 14690  0897  09C0               	comf	___fttol@lval^(0+128),f
 14691  0898  09C1               	comf	(___fttol@lval+1)^(0+128),f
 14692  0899  09C2               	comf	(___fttol@lval+2)^(0+128),f
 14693  089A  09C3               	comf	(___fttol@lval+3)^(0+128),f
 14694  089B  0AC0               	incf	___fttol@lval^(0+128),f
 14695  089C  1903               	skipnz
 14696  089D  0AC1               	incf	(___fttol@lval+1)^(0+128),f
 14697  089E  1903               	skipnz
 14698  089F  0AC2               	incf	(___fttol@lval+2)^(0+128),f
 14699  08A0  1903               	skipnz
 14700  08A1  0AC3               	incf	(___fttol@lval+3)^(0+128),f
 14701  08A2                     l7852:	
 14702  08A2  0843               	movf	(___fttol@lval+3)^(0+128),w
 14703  08A3  00BA               	movwf	(?___fttol+3)^(0+128)
 14704  08A4  0842               	movf	(___fttol@lval+2)^(0+128),w
 14705  08A5  00B9               	movwf	(?___fttol+2)^(0+128)
 14706  08A6  0841               	movf	(___fttol@lval+1)^(0+128),w
 14707  08A7  00B8               	movwf	(?___fttol+1)^(0+128)
 14708  08A8  0840               	movf	___fttol@lval^(0+128),w
 14709  08A9  00B7               	movwf	?___fttol^(0+128)
 14710  08AA  0008               	return
 14711  08AB                     __end_of___fttol:	
 14712                           
 14713                           	psect	text44
 14714  18F4                     __ptext44:	
 14715 ;; *************** function ___altoft *****************
 14716 ;; Defined at:
 14717 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;  c               4   25[BANK0 ] long 
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;  sign            1   32[BANK0 ] unsigned char 
 14722 ;;  exp             1   31[BANK0 ] unsigned char 
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  3   25[BANK0 ] float 
 14725 ;; Registers used:
 14726 ;;		wreg, status,2, status,0, pclath, cstack
 14727 ;; Tracked objects:
 14728 ;;		On entry : 0/0
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14732 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14733 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14734 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14735 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14736 ;;Total ram usage:        8 bytes
 14737 ;; Hardware stack levels used:    1
 14738 ;; Hardware stack levels required when called:    7
 14739 ;; This function calls:
 14740 ;;		___ftpack
 14741 ;; This function is called by:
 14742 ;;		_trunc
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           
 14747                           ;psect for function ___altoft
 14748  18F4                     ___altoft:	
 14749                           
 14750                           ;incstack = 0
 14751                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 14752  18F4  0020               	movlb	0	; select bank0
 14753  18F5  01C0               	clrf	___altoft@sign
 14754  18F6  308E               	movlw	142
 14755  18F7  00BD               	movwf	??___altoft
 14756  18F8  083D               	movf	??___altoft,w
 14757  18F9  00BF               	movwf	___altoft@exp
 14758  18FA  1FBC               	btfss	___altoft@c+3,7
 14759  18FB  2909               	goto	l7808
 14760  18FC  09B9               	comf	___altoft@c,f
 14761  18FD  09BA               	comf	___altoft@c+1,f
 14762  18FE  09BB               	comf	___altoft@c+2,f
 14763  18FF  09BC               	comf	___altoft@c+3,f
 14764  1900  0AB9               	incf	___altoft@c,f
 14765  1901  1903               	skipnz
 14766  1902  0ABA               	incf	___altoft@c+1,f
 14767  1903  1903               	skipnz
 14768  1904  0ABB               	incf	___altoft@c+2,f
 14769  1905  1903               	skipnz
 14770  1906  0ABC               	incf	___altoft@c+3,f
 14771  1907  01C0               	clrf	___altoft@sign
 14772  1908  0AC0               	incf	___altoft@sign,f
 14773  1909                     l7808:	
 14774  1909  30FF               	movlw	255
 14775  190A  053C               	andwf	___altoft@c+3,w
 14776  190B  1903               	btfsc	3,2
 14777  190C  2919               	goto	l7810
 14778  190D  3001               	movlw	1
 14779  190E                     u7495:	
 14780  190E  36BC               	lsrf	___altoft@c+3,f
 14781  190F  0CBB               	rrf	___altoft@c+2,f
 14782  1910  0CBA               	rrf	___altoft@c+1,f
 14783  1911  0CB9               	rrf	___altoft@c,f
 14784  1912  0B89               	decfsz	9,f
 14785  1913  290E               	goto	u7495
 14786  1914  3001               	movlw	1
 14787  1915  00BD               	movwf	??___altoft
 14788  1916  083D               	movf	??___altoft,w
 14789  1917  07BF               	addwf	___altoft@exp,f
 14790  1918  2909               	goto	l7808
 14791  1919                     l7810:	
 14792  1919  0839               	movf	___altoft@c,w
 14793  191A  00B1               	movwf	___ftpack@arg
 14794  191B  083A               	movf	___altoft@c+1,w
 14795  191C  00B2               	movwf	___ftpack@arg+1
 14796  191D  083B               	movf	___altoft@c+2,w
 14797  191E  00B3               	movwf	___ftpack@arg+2
 14798  191F  083F               	movf	___altoft@exp,w
 14799  1920  00BD               	movwf	??___altoft
 14800  1921  083D               	movf	??___altoft,w
 14801  1922  00B4               	movwf	___ftpack@exp
 14802  1923  0840               	movf	___altoft@sign,w
 14803  1924  00BE               	movwf	??___altoft+1
 14804  1925  083E               	movf	??___altoft+1,w
 14805  1926  00B5               	movwf	___ftpack@sign
 14806  1927  319F  272D         	fcall	___ftpack
 14807  1929  0020               	movlb	0	; select bank0
 14808  192A  0831               	movf	?___ftpack,w
 14809  192B  00B9               	movwf	?___altoft
 14810  192C  0832               	movf	?___ftpack+1,w
 14811  192D  00BA               	movwf	?___altoft+1
 14812  192E  0833               	movf	?___ftpack+2,w
 14813  192F  00BB               	movwf	?___altoft+2
 14814  1930  0008               	return
 14815  1931                     __end_of___altoft:	
 14816                           
 14817                           	psect	text45
 14818  20A7                     __ptext45:	
 14819 ;; *************** function ___ftneg *****************
 14820 ;; Defined at:
 14821 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 14822 ;; Parameters:    Size  Location     Type
 14823 ;;  f1              3   33[BANK0 ] float 
 14824 ;; Auto vars:     Size  Location     Type
 14825 ;;		None
 14826 ;; Return value:  Size  Location     Type
 14827 ;;                  3   33[BANK0 ] float 
 14828 ;; Registers used:
 14829 ;;		wreg
 14830 ;; Tracked objects:
 14831 ;;		On entry : 0/0
 14832 ;;		On exit  : 0/0
 14833 ;;		Unchanged: 0/0
 14834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14835 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14838 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14839 ;;Total ram usage:        3 bytes
 14840 ;; Hardware stack levels used:    1
 14841 ;; Hardware stack levels required when called:    6
 14842 ;; This function calls:
 14843 ;;		Nothing
 14844 ;; This function is called by:
 14845 ;;		_calcDownstroke
 14846 ;;		_round
 14847 ;; This function uses a non-reentrant model
 14848 ;;
 14849                           
 14850                           
 14851                           ;psect for function ___ftneg
 14852  20A7                     ___ftneg:	
 14853                           
 14854                           ;incstack = 0
 14855                           ; Regs used in ___ftneg: [wreg]
 14856  20A7  0020               	movlb	0	; select bank0
 14857  20A8  0843               	movf	___ftneg@f1+2,w
 14858  20A9  0442               	iorwf	___ftneg@f1+1,w
 14859  20AA  0441               	iorwf	___ftneg@f1,w
 14860  20AB  1903               	skipnz
 14861  20AC  0008               	return
 14862  20AD  3080               	movlw	128
 14863  20AE  06C3               	xorwf	___ftneg@f1+2,f
 14864  20AF  0008               	return
 14865  20B0                     __end_of___ftneg:	
 14866                           
 14867                           	psect	text46
 14868  0C9F                     __ptext46:	
 14869 ;; *************** function ___ftadd *****************
 14870 ;; Defined at:
 14871 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;  f1              3   10[BANK1 ] float 
 14874 ;;  f2              3   13[BANK1 ] float 
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;  exp1            1   22[BANK1 ] unsigned char 
 14877 ;;  exp2            1   21[BANK1 ] unsigned char 
 14878 ;;  sign            1   20[BANK1 ] unsigned char 
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  3   10[BANK1 ] float 
 14881 ;; Registers used:
 14882 ;;		wreg, status,2, status,0, pclath, cstack
 14883 ;; Tracked objects:
 14884 ;;		On entry : 0/0
 14885 ;;		On exit  : 0/0
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14888 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14889 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14890 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14891 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14892 ;;Total ram usage:       13 bytes
 14893 ;; Hardware stack levels used:    1
 14894 ;; Hardware stack levels required when called:    7
 14895 ;; This function calls:
 14896 ;;		___ftpack
 14897 ;; This function is called by:
 14898 ;;		_main_initialize
 14899 ;;		_setDrvPiezoOnTime
 14900 ;;		_setH1OffTime
 14901 ;;		_setH2OnTime
 14902 ;;		_calcDownstroke
 14903 ;;		_round
 14904 ;; This function uses a non-reentrant model
 14905 ;;
 14906                           
 14907                           
 14908                           ;psect for function ___ftadd
 14909  0C9F                     ___ftadd:	
 14910                           
 14911                           ;incstack = 0
 14912                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 14913  0C9F  0021               	movlb	1	; select bank1
 14914  0CA0  082A               	movf	___ftadd@f1^(0+128),w
 14915  0CA1  00B0               	movwf	??___ftadd^(0+128)
 14916  0CA2  082B               	movf	(___ftadd@f1+1)^(0+128),w
 14917  0CA3  00B1               	movwf	(??___ftadd^(0+128)+1)
 14918  0CA4  082C               	movf	(___ftadd@f1+2)^(0+128),w
 14919  0CA5  00B2               	movwf	(??___ftadd^(0+128)+2)
 14920  0CA6  1003               	clrc
 14921  0CA7  0D31               	rlf	(??___ftadd^(0+128)+1),w
 14922  0CA8  0D32               	rlf	(??___ftadd^(0+128)+2),w
 14923  0CA9  00B3               	movwf	(??___ftadd+3)^(0+128)
 14924  0CAA  0833               	movf	(??___ftadd+3)^(0+128),w
 14925  0CAB  00B6               	movwf	___ftadd@exp1^(0+128)
 14926  0CAC  082D               	movf	___ftadd@f2^(0+128),w
 14927  0CAD  00B0               	movwf	??___ftadd^(0+128)
 14928  0CAE  082E               	movf	(___ftadd@f2+1)^(0+128),w
 14929  0CAF  00B1               	movwf	(??___ftadd^(0+128)+1)
 14930  0CB0  082F               	movf	(___ftadd@f2+2)^(0+128),w
 14931  0CB1  00B2               	movwf	(??___ftadd^(0+128)+2)
 14932  0CB2  1003               	clrc
 14933  0CB3  0D31               	rlf	(??___ftadd^(0+128)+1),w
 14934  0CB4  0D32               	rlf	(??___ftadd^(0+128)+2),w
 14935  0CB5  00B3               	movwf	(??___ftadd+3)^(0+128)
 14936  0CB6  0833               	movf	(??___ftadd+3)^(0+128),w
 14937  0CB7  00B5               	movwf	___ftadd@exp2^(0+128)
 14938  0CB8  0836               	movf	___ftadd@exp1^(0+128),w
 14939  0CB9  1903               	btfsc	3,2
 14940  0CBA  2CC7               	goto	l7936
 14941  0CBB  0835               	movf	___ftadd@exp2^(0+128),w
 14942  0CBC  0236               	subwf	___ftadd@exp1^(0+128),w
 14943  0CBD  1803               	skipnc
 14944  0CBE  2CCE               	goto	l7940
 14945  0CBF  0336               	decf	___ftadd@exp1^(0+128),w
 14946  0CC0  3AFF               	xorlw	255
 14947  0CC1  0735               	addwf	___ftadd@exp2^(0+128),w
 14948  0CC2  00B0               	movwf	??___ftadd^(0+128)
 14949  0CC3  3019               	movlw	25
 14950  0CC4  0230               	subwf	??___ftadd^(0+128),w
 14951  0CC5  1C03               	skipc
 14952  0CC6  2CCE               	goto	l7940
 14953  0CC7                     l7936:	
 14954  0CC7  082D               	movf	___ftadd@f2^(0+128),w
 14955  0CC8  00AA               	movwf	?___ftadd^(0+128)
 14956  0CC9  082E               	movf	(___ftadd@f2+1)^(0+128),w
 14957  0CCA  00AB               	movwf	(?___ftadd+1)^(0+128)
 14958  0CCB  082F               	movf	(___ftadd@f2+2)^(0+128),w
 14959  0CCC  00AC               	movwf	(?___ftadd+2)^(0+128)
 14960  0CCD  0008               	return
 14961  0CCE                     l7940:	
 14962  0CCE  0835               	movf	___ftadd@exp2^(0+128),w
 14963  0CCF  1903               	btfsc	3,2
 14964  0CD0  0008               	return
 14965  0CD1  0836               	movf	___ftadd@exp1^(0+128),w
 14966  0CD2  0235               	subwf	___ftadd@exp2^(0+128),w
 14967  0CD3  1803               	skipnc
 14968  0CD4  2CDD               	goto	l7946
 14969  0CD5  0335               	decf	___ftadd@exp2^(0+128),w
 14970  0CD6  3AFF               	xorlw	255
 14971  0CD7  0736               	addwf	___ftadd@exp1^(0+128),w
 14972  0CD8  00B0               	movwf	??___ftadd^(0+128)
 14973  0CD9  3019               	movlw	25
 14974  0CDA  0230               	subwf	??___ftadd^(0+128),w
 14975  0CDB  1803               	btfsc	3,0
 14976  0CDC  0008               	return
 14977  0CDD                     l7946:	
 14978  0CDD  3006               	movlw	6
 14979  0CDE  00B0               	movwf	??___ftadd^(0+128)
 14980  0CDF  0830               	movf	??___ftadd^(0+128),w
 14981  0CE0  00B4               	movwf	___ftadd@sign^(0+128)
 14982  0CE1  1BAC               	btfsc	(___ftadd@f1+2)^(0+128),7
 14983  0CE2  17B4               	bsf	___ftadd@sign^(0+128),7
 14984  0CE3  1BAF               	btfsc	(___ftadd@f2+2)^(0+128),7
 14985  0CE4  1734               	bsf	___ftadd@sign^(0+128),6
 14986  0CE5  17AB               	bsf	(___ftadd@f1^(0+128)+1),7
 14987  0CE6  30FF               	movlw	255
 14988  0CE7  05AA               	andwf	___ftadd@f1^(0+128),f
 14989  0CE8  30FF               	movlw	255
 14990  0CE9  05AB               	andwf	(___ftadd@f1+1)^(0+128),f
 14991  0CEA  3000               	movlw	0
 14992  0CEB  05AC               	andwf	(___ftadd@f1+2)^(0+128),f
 14993  0CEC  17AE               	bsf	(___ftadd@f2^(0+128)+1),7
 14994  0CED  30FF               	movlw	255
 14995  0CEE  05AD               	andwf	___ftadd@f2^(0+128),f
 14996  0CEF  30FF               	movlw	255
 14997  0CF0  05AE               	andwf	(___ftadd@f2+1)^(0+128),f
 14998  0CF1  3000               	movlw	0
 14999  0CF2  05AF               	andwf	(___ftadd@f2+2)^(0+128),f
 15000  0CF3  0835               	movf	___ftadd@exp2^(0+128),w
 15001  0CF4  0236               	subwf	___ftadd@exp1^(0+128),w
 15002  0CF5  1803               	skipnc
 15003  0CF6  2D19               	goto	l7968
 15004  0CF7                     l7958:	
 15005  0CF7  3001               	movlw	1
 15006  0CF8                     u7815:	
 15007  0CF8  35AD               	lslf	___ftadd@f2^(0+128),f
 15008  0CF9  0DAE               	rlf	(___ftadd@f2+1)^(0+128),f
 15009  0CFA  0DAF               	rlf	(___ftadd@f2+2)^(0+128),f
 15010  0CFB  0B89               	decfsz	9,f
 15011  0CFC  2CF8               	goto	u7815
 15012  0CFD  3001               	movlw	1
 15013  0CFE  02B5               	subwf	___ftadd@exp2^(0+128),f
 15014  0CFF  0835               	movf	___ftadd@exp2^(0+128),w
 15015  0D00  0636               	xorwf	___ftadd@exp1^(0+128),w
 15016  0D01  1903               	skipnz
 15017  0D02  2D14               	goto	l7966
 15018  0D03  3001               	movlw	1
 15019  0D04  02B4               	subwf	___ftadd@sign^(0+128),f
 15020  0D05  0834               	movf	___ftadd@sign^(0+128),w
 15021  0D06  3907               	andlw	7
 15022  0D07  1903               	btfsc	3,2
 15023  0D08  2D14               	goto	l7966
 15024  0D09  2CF7               	goto	l7958
 15025  0D0A                     l7964:	
 15026  0D0A  3001               	movlw	1
 15027  0D0B                     u7845:	
 15028  0D0B  36AC               	lsrf	(___ftadd@f1+2)^(0+128),f
 15029  0D0C  0CAB               	rrf	(___ftadd@f1+1)^(0+128),f
 15030  0D0D  0CAA               	rrf	___ftadd@f1^(0+128),f
 15031  0D0E  0B89               	decfsz	9,f
 15032  0D0F  2D0B               	goto	u7845
 15033  0D10  3001               	movlw	1
 15034  0D11  00B0               	movwf	??___ftadd^(0+128)
 15035  0D12  0830               	movf	??___ftadd^(0+128),w
 15036  0D13  07B6               	addwf	___ftadd@exp1^(0+128),f
 15037  0D14                     l7966:	
 15038  0D14  0836               	movf	___ftadd@exp1^(0+128),w
 15039  0D15  0635               	xorwf	___ftadd@exp2^(0+128),w
 15040  0D16  1903               	btfsc	3,2
 15041  0D17  2D3E               	goto	l1855
 15042  0D18  2D0A               	goto	l7964
 15043  0D19                     l7968:	
 15044  0D19  0836               	movf	___ftadd@exp1^(0+128),w
 15045  0D1A  0235               	subwf	___ftadd@exp2^(0+128),w
 15046  0D1B  1803               	skipnc
 15047  0D1C  2D3E               	goto	l1855
 15048  0D1D                     l7970:	
 15049  0D1D  3001               	movlw	1
 15050  0D1E                     u7875:	
 15051  0D1E  35AA               	lslf	___ftadd@f1^(0+128),f
 15052  0D1F  0DAB               	rlf	(___ftadd@f1+1)^(0+128),f
 15053  0D20  0DAC               	rlf	(___ftadd@f1+2)^(0+128),f
 15054  0D21  0B89               	decfsz	9,f
 15055  0D22  2D1E               	goto	u7875
 15056  0D23  3001               	movlw	1
 15057  0D24  02B6               	subwf	___ftadd@exp1^(0+128),f
 15058  0D25  0835               	movf	___ftadd@exp2^(0+128),w
 15059  0D26  0636               	xorwf	___ftadd@exp1^(0+128),w
 15060  0D27  1903               	skipnz
 15061  0D28  2D3A               	goto	l7978
 15062  0D29  3001               	movlw	1
 15063  0D2A  02B4               	subwf	___ftadd@sign^(0+128),f
 15064  0D2B  0834               	movf	___ftadd@sign^(0+128),w
 15065  0D2C  3907               	andlw	7
 15066  0D2D  1903               	btfsc	3,2
 15067  0D2E  2D3A               	goto	l7978
 15068  0D2F  2D1D               	goto	l7970
 15069  0D30                     l7976:	
 15070  0D30  3001               	movlw	1
 15071  0D31                     u7905:	
 15072  0D31  36AF               	lsrf	(___ftadd@f2+2)^(0+128),f
 15073  0D32  0CAE               	rrf	(___ftadd@f2+1)^(0+128),f
 15074  0D33  0CAD               	rrf	___ftadd@f2^(0+128),f
 15075  0D34  0B89               	decfsz	9,f
 15076  0D35  2D31               	goto	u7905
 15077  0D36  3001               	movlw	1
 15078  0D37  00B0               	movwf	??___ftadd^(0+128)
 15079  0D38  0830               	movf	??___ftadd^(0+128),w
 15080  0D39  07B5               	addwf	___ftadd@exp2^(0+128),f
 15081  0D3A                     l7978:	
 15082  0D3A  0836               	movf	___ftadd@exp1^(0+128),w
 15083  0D3B  0635               	xorwf	___ftadd@exp2^(0+128),w
 15084  0D3C  1D03               	skipz
 15085  0D3D  2D30               	goto	l7976
 15086  0D3E                     l1855:	
 15087  0D3E  1FB4               	btfss	___ftadd@sign^(0+128),7
 15088  0D3F  2D50               	goto	l7982
 15089  0D40  30FF               	movlw	255
 15090  0D41  06AA               	xorwf	___ftadd@f1^(0+128),f
 15091  0D42  30FF               	movlw	255
 15092  0D43  06AB               	xorwf	(___ftadd@f1+1)^(0+128),f
 15093  0D44  30FF               	movlw	255
 15094  0D45  06AC               	xorwf	(___ftadd@f1+2)^(0+128),f
 15095  0D46  3001               	movlw	1
 15096  0D47  07AA               	addwf	___ftadd@f1^(0+128),f
 15097  0D48  3000               	movlw	0
 15098  0D49  1803               	skipnc
 15099  0D4A  3001               	movlw	1
 15100  0D4B  07AB               	addwf	(___ftadd@f1+1)^(0+128),f
 15101  0D4C  3000               	movlw	0
 15102  0D4D  1803               	skipnc
 15103  0D4E  3001               	movlw	1
 15104  0D4F  07AC               	addwf	(___ftadd@f1+2)^(0+128),f
 15105  0D50                     l7982:	
 15106  0D50  1F34               	btfss	___ftadd@sign^(0+128),6
 15107  0D51  2D62               	goto	l7986
 15108  0D52  30FF               	movlw	255
 15109  0D53  06AD               	xorwf	___ftadd@f2^(0+128),f
 15110  0D54  30FF               	movlw	255
 15111  0D55  06AE               	xorwf	(___ftadd@f2+1)^(0+128),f
 15112  0D56  30FF               	movlw	255
 15113  0D57  06AF               	xorwf	(___ftadd@f2+2)^(0+128),f
 15114  0D58  3001               	movlw	1
 15115  0D59  07AD               	addwf	___ftadd@f2^(0+128),f
 15116  0D5A  3000               	movlw	0
 15117  0D5B  1803               	skipnc
 15118  0D5C  3001               	movlw	1
 15119  0D5D  07AE               	addwf	(___ftadd@f2+1)^(0+128),f
 15120  0D5E  3000               	movlw	0
 15121  0D5F  1803               	skipnc
 15122  0D60  3001               	movlw	1
 15123  0D61  07AF               	addwf	(___ftadd@f2+2)^(0+128),f
 15124  0D62                     l7986:	
 15125  0D62  01B4               	clrf	___ftadd@sign^(0+128)
 15126  0D63  082A               	movf	___ftadd@f1^(0+128),w
 15127  0D64  07AD               	addwf	___ftadd@f2^(0+128),f
 15128  0D65  082B               	movf	(___ftadd@f1+1)^(0+128),w
 15129  0D66  3DAE               	addwfc	(___ftadd@f2+1)^(0+128),f
 15130  0D67  082C               	movf	(___ftadd@f1+2)^(0+128),w
 15131  0D68  3DAF               	addwfc	(___ftadd@f2+2)^(0+128),f
 15132  0D69  1FAF               	btfss	(___ftadd@f2+2)^(0+128),7
 15133  0D6A  2D7D               	goto	l7996
 15134  0D6B  30FF               	movlw	255
 15135  0D6C  06AD               	xorwf	___ftadd@f2^(0+128),f
 15136  0D6D  30FF               	movlw	255
 15137  0D6E  06AE               	xorwf	(___ftadd@f2+1)^(0+128),f
 15138  0D6F  30FF               	movlw	255
 15139  0D70  06AF               	xorwf	(___ftadd@f2+2)^(0+128),f
 15140  0D71  3001               	movlw	1
 15141  0D72  07AD               	addwf	___ftadd@f2^(0+128),f
 15142  0D73  3000               	movlw	0
 15143  0D74  1803               	skipnc
 15144  0D75  3001               	movlw	1
 15145  0D76  07AE               	addwf	(___ftadd@f2+1)^(0+128),f
 15146  0D77  3000               	movlw	0
 15147  0D78  1803               	skipnc
 15148  0D79  3001               	movlw	1
 15149  0D7A  07AF               	addwf	(___ftadd@f2+2)^(0+128),f
 15150  0D7B  01B4               	clrf	___ftadd@sign^(0+128)
 15151  0D7C  0AB4               	incf	___ftadd@sign^(0+128),f
 15152  0D7D                     l7996:	
 15153  0D7D  082D               	movf	___ftadd@f2^(0+128),w
 15154  0D7E  0020               	movlb	0	; select bank0
 15155  0D7F  00B1               	movwf	___ftpack@arg
 15156  0D80  0021               	movlb	1	; select bank1
 15157  0D81  082E               	movf	(___ftadd@f2+1)^(0+128),w
 15158  0D82  0020               	movlb	0	; select bank0
 15159  0D83  00B2               	movwf	___ftpack@arg+1
 15160  0D84  0021               	movlb	1	; select bank1
 15161  0D85  082F               	movf	(___ftadd@f2+2)^(0+128),w
 15162  0D86  0020               	movlb	0	; select bank0
 15163  0D87  00B3               	movwf	___ftpack@arg+2
 15164  0D88  0021               	movlb	1	; select bank1
 15165  0D89  0836               	movf	___ftadd@exp1^(0+128),w
 15166  0D8A  00B0               	movwf	??___ftadd^(0+128)
 15167  0D8B  0830               	movf	??___ftadd^(0+128),w
 15168  0D8C  0020               	movlb	0	; select bank0
 15169  0D8D  00B4               	movwf	___ftpack@exp
 15170  0D8E  0021               	movlb	1	; select bank1
 15171  0D8F  0834               	movf	___ftadd@sign^(0+128),w
 15172  0D90  00B1               	movwf	(??___ftadd+1)^(0+128)
 15173  0D91  0831               	movf	(??___ftadd+1)^(0+128),w
 15174  0D92  0020               	movlb	0	; select bank0
 15175  0D93  00B5               	movwf	___ftpack@sign
 15176  0D94  319F  272D         	fcall	___ftpack
 15177  0D96  0020               	movlb	0	; select bank0
 15178  0D97  0831               	movf	?___ftpack,w
 15179  0D98  0021               	movlb	1	; select bank1
 15180  0D99  00AA               	movwf	?___ftadd^(0+128)
 15181  0D9A  0020               	movlb	0	; select bank0
 15182  0D9B  0832               	movf	?___ftpack+1,w
 15183  0D9C  0021               	movlb	1	; select bank1
 15184  0D9D  00AB               	movwf	(?___ftadd+1)^(0+128)
 15185  0D9E  0020               	movlb	0	; select bank0
 15186  0D9F  0833               	movf	?___ftpack+2,w
 15187  0DA0  0021               	movlb	1	; select bank1
 15188  0DA1  00AC               	movwf	(?___ftadd+2)^(0+128)
 15189  0DA2  0008               	return
 15190  0DA3                     __end_of___ftadd:	
 15191                           
 15192                           	psect	text47
 15193  22B0                     __ptext47:	
 15194 ;; *************** function ___wmul *****************
 15195 ;; Defined at:
 15196 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 15197 ;; Parameters:    Size  Location     Type
 15198 ;;  multiplier      2   17[BANK0 ] unsigned int 
 15199 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;  product         2   21[BANK0 ] unsigned int 
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  2   17[BANK0 ] unsigned int 
 15204 ;; Registers used:
 15205 ;;		wreg, status,2, status,0
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15211 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15212 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15214 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15215 ;;Total ram usage:        6 bytes
 15216 ;; Hardware stack levels used:    1
 15217 ;; Hardware stack levels required when called:    6
 15218 ;; This function calls:
 15219 ;;		Nothing
 15220 ;; This function is called by:
 15221 ;;		_calcUpstroke
 15222 ;;		_calcDownstroke
 15223 ;;		_atoi
 15224 ;; This function uses a non-reentrant model
 15225 ;;
 15226                           
 15227                           
 15228                           ;psect for function ___wmul
 15229  22B0                     ___wmul:	
 15230                           
 15231                           ;incstack = 0
 15232                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15233  22B0  0020               	movlb	0	; select bank0
 15234  22B1  01B5               	clrf	___wmul@product
 15235  22B2  01B6               	clrf	___wmul@product+1
 15236  22B3                     l8102:	
 15237  22B3  1C31               	btfss	___wmul@multiplier,0
 15238  22B4  2AB9               	goto	l1648
 15239  22B5  0833               	movf	___wmul@multiplicand,w
 15240  22B6  07B5               	addwf	___wmul@product,f
 15241  22B7  0834               	movf	___wmul@multiplicand+1,w
 15242  22B8  3DB6               	addwfc	___wmul@product+1,f
 15243  22B9                     l1648:	
 15244  22B9  3001               	movlw	1
 15245  22BA                     u8175:	
 15246  22BA  35B3               	lslf	___wmul@multiplicand,f
 15247  22BB  0DB4               	rlf	___wmul@multiplicand+1,f
 15248  22BC  0B89               	decfsz	9,f
 15249  22BD  2ABA               	goto	u8175
 15250  22BE  3001               	movlw	1
 15251  22BF                     u8185:	
 15252  22BF  36B2               	lsrf	___wmul@multiplier+1,f
 15253  22C0  0CB1               	rrf	___wmul@multiplier,f
 15254  22C1  0B89               	decfsz	9,f
 15255  22C2  2ABF               	goto	u8185
 15256  22C3  0831               	movf	___wmul@multiplier,w
 15257  22C4  0432               	iorwf	___wmul@multiplier+1,w
 15258  22C5  1D03               	btfss	3,2
 15259  22C6  2AB3               	goto	l8102
 15260  22C7  0836               	movf	___wmul@product+1,w
 15261  22C8  00B2               	movwf	?___wmul+1
 15262  22C9  0835               	movf	___wmul@product,w
 15263  22CA  00B1               	movwf	?___wmul
 15264  22CB  0008               	return
 15265  22CC                     __end_of___wmul:	
 15266                           
 15267                           	psect	text48
 15268  2404                     __ptext48:	
 15269 ;; *************** function ___awtoft *****************
 15270 ;; Defined at:
 15271 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 15272 ;; Parameters:    Size  Location     Type
 15273 ;;  c               2   32[BANK0 ] int 
 15274 ;; Auto vars:     Size  Location     Type
 15275 ;;  sign            1   37[BANK0 ] unsigned char 
 15276 ;; Return value:  Size  Location     Type
 15277 ;;                  3   32[BANK0 ] float 
 15278 ;; Registers used:
 15279 ;;		wreg, status,2, status,0, pclath, cstack
 15280 ;; Tracked objects:
 15281 ;;		On entry : 0/0
 15282 ;;		On exit  : 0/0
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15285 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15288 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15289 ;;Total ram usage:        6 bytes
 15290 ;; Hardware stack levels used:    1
 15291 ;; Hardware stack levels required when called:    7
 15292 ;; This function calls:
 15293 ;;		___ftpack
 15294 ;; This function is called by:
 15295 ;;		_main_initialize
 15296 ;;		_setDrvPiezoOnTime
 15297 ;;		_setH1OffTime
 15298 ;;		_setH2OnTime
 15299 ;;		_calcUpstroke
 15300 ;;		_calcDownstroke
 15301 ;;		_drv_outputSine
 15302 ;; This function uses a non-reentrant model
 15303 ;;
 15304                           
 15305                           
 15306                           ;psect for function ___awtoft
 15307  2404                     ___awtoft:	
 15308                           
 15309                           ;incstack = 0
 15310                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15311  2404  0020               	movlb	0	; select bank0
 15312  2405  01C5               	clrf	___awtoft@sign
 15313  2406  1FC1               	btfss	___awtoft@c+1,7
 15314  2407  2C0F               	goto	l8166
 15315  2408  09C0               	comf	___awtoft@c,f
 15316  2409  09C1               	comf	___awtoft@c+1,f
 15317  240A  0AC0               	incf	___awtoft@c,f
 15318  240B  1903               	skipnz
 15319  240C  0AC1               	incf	___awtoft@c+1,f
 15320  240D  01C5               	clrf	___awtoft@sign
 15321  240E  0AC5               	incf	___awtoft@sign,f
 15322  240F                     l8166:	
 15323  240F  0840               	movf	___awtoft@c,w
 15324  2410  00B1               	movwf	___ftpack@arg
 15325  2411  0841               	movf	___awtoft@c+1,w
 15326  2412  00B2               	movwf	___ftpack@arg+1
 15327  2413  01B3               	clrf	___ftpack@arg+2
 15328  2414  308E               	movlw	142
 15329  2415  00C3               	movwf	??___awtoft
 15330  2416  0843               	movf	??___awtoft,w
 15331  2417  00B4               	movwf	___ftpack@exp
 15332  2418  0845               	movf	___awtoft@sign,w
 15333  2419  00C4               	movwf	??___awtoft+1
 15334  241A  0844               	movf	??___awtoft+1,w
 15335  241B  00B5               	movwf	___ftpack@sign
 15336  241C  319F  272D         	fcall	___ftpack
 15337  241E  0020               	movlb	0	; select bank0
 15338  241F  0831               	movf	?___ftpack,w
 15339  2420  00C0               	movwf	?___awtoft
 15340  2421  0832               	movf	?___ftpack+1,w
 15341  2422  00C1               	movwf	?___awtoft+1
 15342  2423  0833               	movf	?___ftpack+2,w
 15343  2424  00C2               	movwf	?___awtoft+2
 15344  2425  0008               	return
 15345  2426                     __end_of___awtoft:	
 15346                           
 15347                           	psect	text49
 15348  1F2D                     __ptext49:	
 15349 ;; *************** function ___ftpack *****************
 15350 ;; Defined at:
 15351 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;  arg             3   17[BANK0 ] unsigned um
 15354 ;;  exp             1   20[BANK0 ] unsigned char 
 15355 ;;  sign            1   21[BANK0 ] unsigned char 
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;		None
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  3   17[BANK0 ] float 
 15360 ;; Registers used:
 15361 ;;		wreg, status,2, status,0
 15362 ;; Tracked objects:
 15363 ;;		On entry : 0/0
 15364 ;;		On exit  : 0/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15367 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15369 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;Total ram usage:        8 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    6
 15374 ;; This function calls:
 15375 ;;		Nothing
 15376 ;; This function is called by:
 15377 ;;		___altoft
 15378 ;;		___awtoft
 15379 ;;		___ftadd
 15380 ;;		___ftmul
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           
 15385                           ;psect for function ___ftpack
 15386  1F2D                     ___ftpack:	
 15387                           
 15388                           ;incstack = 0
 15389                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15390  1F2D  0020               	movlb	0	; select bank0
 15391  1F2E  0834               	movf	___ftpack@exp,w
 15392  1F2F  1903               	btfsc	3,2
 15393  1F30  2F36               	goto	l7618
 15394  1F31  0833               	movf	___ftpack@arg+2,w
 15395  1F32  0432               	iorwf	___ftpack@arg+1,w
 15396  1F33  0431               	iorwf	___ftpack@arg,w
 15397  1F34  1D03               	skipz
 15398  1F35  2F47               	goto	l7624
 15399  1F36                     l7618:	
 15400  1F36  3000               	movlw	0
 15401  1F37  00B1               	movwf	?___ftpack
 15402  1F38  3000               	movlw	0
 15403  1F39  00B2               	movwf	?___ftpack+1
 15404  1F3A  3000               	movlw	0
 15405  1F3B  00B3               	movwf	?___ftpack+2
 15406  1F3C  0008               	return
 15407  1F3D                     l7622:	
 15408  1F3D  3001               	movlw	1
 15409  1F3E  00B6               	movwf	??___ftpack
 15410  1F3F  0836               	movf	??___ftpack,w
 15411  1F40  07B4               	addwf	___ftpack@exp,f
 15412  1F41  3001               	movlw	1
 15413  1F42                     u7015:	
 15414  1F42  36B3               	lsrf	___ftpack@arg+2,f
 15415  1F43  0CB2               	rrf	___ftpack@arg+1,f
 15416  1F44  0CB1               	rrf	___ftpack@arg,f
 15417  1F45  0B89               	decfsz	9,f
 15418  1F46  2F42               	goto	u7015
 15419  1F47                     l7624:	
 15420  1F47  30FE               	movlw	254
 15421  1F48  0533               	andwf	___ftpack@arg+2,w
 15422  1F49  1903               	btfsc	3,2
 15423  1F4A  2F60               	goto	l1824
 15424  1F4B  2F3D               	goto	l7622
 15425  1F4C                     l7626:	
 15426  1F4C  3001               	movlw	1
 15427  1F4D  00B6               	movwf	??___ftpack
 15428  1F4E  0836               	movf	??___ftpack,w
 15429  1F4F  07B4               	addwf	___ftpack@exp,f
 15430  1F50  3001               	movlw	1
 15431  1F51  07B1               	addwf	___ftpack@arg,f
 15432  1F52  3000               	movlw	0
 15433  1F53  1803               	skipnc
 15434  1F54  3001               	movlw	1
 15435  1F55  07B2               	addwf	___ftpack@arg+1,f
 15436  1F56  3000               	movlw	0
 15437  1F57  1803               	skipnc
 15438  1F58  3001               	movlw	1
 15439  1F59  07B3               	addwf	___ftpack@arg+2,f
 15440  1F5A  3001               	movlw	1
 15441  1F5B                     u7035:	
 15442  1F5B  36B3               	lsrf	___ftpack@arg+2,f
 15443  1F5C  0CB2               	rrf	___ftpack@arg+1,f
 15444  1F5D  0CB1               	rrf	___ftpack@arg,f
 15445  1F5E  0B89               	decfsz	9,f
 15446  1F5F  2F5B               	goto	u7035
 15447  1F60                     l1824:	
 15448  1F60  30FF               	movlw	255
 15449  1F61  0533               	andwf	___ftpack@arg+2,w
 15450  1F62  1903               	btfsc	3,2
 15451  1F63  2F6D               	goto	l7634
 15452  1F64  2F4C               	goto	l7626
 15453  1F65                     l7632:	
 15454  1F65  3001               	movlw	1
 15455  1F66  02B4               	subwf	___ftpack@exp,f
 15456  1F67  3001               	movlw	1
 15457  1F68                     u7055:	
 15458  1F68  35B1               	lslf	___ftpack@arg,f
 15459  1F69  0DB2               	rlf	___ftpack@arg+1,f
 15460  1F6A  0DB3               	rlf	___ftpack@arg+2,f
 15461  1F6B  0B89               	decfsz	9,f
 15462  1F6C  2F68               	goto	u7055
 15463  1F6D                     l7634:	
 15464  1F6D  1BB2               	btfsc	___ftpack@arg+1,7
 15465  1F6E  2F73               	goto	l1831
 15466  1F6F  3002               	movlw	2
 15467  1F70  0234               	subwf	___ftpack@exp,w
 15468  1F71  1803               	skipnc
 15469  1F72  2F65               	goto	l7632
 15470  1F73                     l1831:	
 15471  1F73  1834               	btfsc	___ftpack@exp,0
 15472  1F74  2F7B               	goto	l1832
 15473  1F75  30FF               	movlw	255
 15474  1F76  05B1               	andwf	___ftpack@arg,f
 15475  1F77  307F               	movlw	127
 15476  1F78  05B2               	andwf	___ftpack@arg+1,f
 15477  1F79  30FF               	movlw	255
 15478  1F7A  05B3               	andwf	___ftpack@arg+2,f
 15479  1F7B                     l1832:	
 15480  1F7B  1003               	clrc
 15481  1F7C  0CB4               	rrf	___ftpack@exp,f
 15482  1F7D  0834               	movf	___ftpack@exp,w
 15483  1F7E  00B6               	movwf	??___ftpack
 15484  1F7F  01B7               	clrf	??___ftpack+1
 15485  1F80  01B8               	clrf	??___ftpack+2
 15486  1F81  3010               	movlw	16
 15487  1F82                     u7095:	
 15488  1F82  35B6               	lslf	??___ftpack,f
 15489  1F83  0DB7               	rlf	??___ftpack+1,f
 15490  1F84  0DB8               	rlf	??___ftpack+2,f
 15491  1F85  0B89               	decfsz	9,f
 15492  1F86  2F82               	goto	u7095
 15493  1F87  0836               	movf	??___ftpack,w
 15494  1F88  04B1               	iorwf	___ftpack@arg,f
 15495  1F89  0837               	movf	??___ftpack+1,w
 15496  1F8A  04B2               	iorwf	___ftpack@arg+1,f
 15497  1F8B  0838               	movf	??___ftpack+2,w
 15498  1F8C  04B3               	iorwf	___ftpack@arg+2,f
 15499  1F8D  0835               	movf	___ftpack@sign,w
 15500  1F8E  1903               	btfsc	3,2
 15501  1F8F  0008               	return
 15502  1F90  17B3               	bsf	___ftpack@arg+2,7
 15503  1F91  0008               	return
 15504  1F92                     __end_of___ftpack:	
 15505                           
 15506                           	psect	text50
 15507  1931                     __ptext50:	
 15508 ;; *************** function _setDrvGain *****************
 15509 ;; Defined at:
 15510 ;;		line 405 in file "main.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;  gain            2   21[BANK1 ] int 
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;  setGain         2   24[BANK1 ] int 
 15515 ;; Return value:  Size  Location     Type
 15516 ;;                  2   21[BANK1 ] int 
 15517 ;; Registers used:
 15518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15524 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15525 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15526 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15527 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15528 ;;Total ram usage:        5 bytes
 15529 ;; Hardware stack levels used:    1
 15530 ;; Hardware stack levels required when called:   13
 15531 ;; This function calls:
 15532 ;;		_drv_write
 15533 ;;		_printf
 15534 ;; This function is called by:
 15535 ;;		_execCmd
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539                           
 15540                           ;psect for function _setDrvGain
 15541  1931                     _setDrvGain:	
 15542                           
 15543                           ;main.c: 406: int setGain = 0;
 15544                           
 15545                           ;incstack = 0
 15546                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15547  1931  0021               	movlb	1	; select bank1
 15548  1932  01B8               	clrf	setDrvGain@setGain^(0+128)
 15549  1933  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 15550                           
 15551                           ;main.c: 407: switch (gain){
 15552  1934  294D               	goto	l8630
 15553  1935                     l8614:	
 15554                           ;main.c: 408: case 0: setGain = 0x00; break;
 15555                           
 15556  1935  01B8               	clrf	setDrvGain@setGain^(0+128)
 15557  1936  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 15558  1937  2960               	goto	l8632
 15559  1938                     l8616:	
 15560                           ;main.c: 409: case 1: setGain = 0x01; break;
 15561                           
 15562  1938  3001               	movlw	1
 15563  1939  293D               	goto	L30
 15564  193A                     l8618:	
 15565                           ;main.c: 410: case 2: setGain = 0x02; break;
 15566                           
 15567  193A  3002               	movlw	2
 15568  193B  293D               	goto	L30
 15569  193C                     l8620:	
 15570                           ;main.c: 411: case 3: setGain = 0x03; break;
 15571                           
 15572  193C  3003               	movlw	3
 15573  193D                     L30:	
 15574  193D  00B8               	movwf	setDrvGain@setGain^(0+128)
 15575  193E  3000               	movlw	0
 15576  193F  00B9               	movwf	(setDrvGain@setGain^(0+128)+1)
 15577  1940  2960               	goto	l8632
 15578  1941                     l8622:	
 15579                           ;main.c: 412: default: printf("E\n"); return 1;
 15580                           
 15581  1941  303F               	movlw	low (STR_14| (0+32768))
 15582  1942  00A0               	movwf	printf@f^(0+128)
 15583  1943  30B0               	movlw	high (STR_14| (0+32768))
 15584  1944  00A1               	movwf	(printf@f^(0+128)+1)
 15585  1945  318E  26CE         	fcall	_printf
 15586  1947  3001               	movlw	1
 15587  1948  0021               	movlb	1	; select bank1
 15588  1949  00B5               	movwf	?_setDrvGain^(0+128)
 15589  194A  3000               	movlw	0
 15590  194B  00B6               	movwf	(?_setDrvGain^(0+128)+1)
 15591  194C  0008               	return
 15592  194D                     l8630:	
 15593                           ;main.c: 413: }
 15594                           
 15595                           
 15596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15597                           ; Switch size 1, requested type "space"
 15598                           ; Number of cases is 1, Range of values is 0 to 0
 15599                           ; switch strategies available:
 15600                           ; Name         Instructions Cycles
 15601                           ; simple_byte            4     3 (average)
 15602                           ; direct_byte            8     6 (fixed)
 15603                           ; jumptable            260     6 (fixed)
 15604                           ;	Chosen strategy is simple_byte
 15605  194D  0836               	movf	(setDrvGain@gain+1)^(0+128),w
 15606  194E  3A00               	xorlw	0	; case 0
 15607  194F  1903               	skipnz
 15608  1950  2952               	goto	l9610
 15609  1951  2941               	goto	l8622
 15610  1952                     l9610:	
 15611                           
 15612                           ; Switch size 1, requested type "space"
 15613                           ; Number of cases is 4, Range of values is 0 to 3
 15614                           ; switch strategies available:
 15615                           ; Name         Instructions Cycles
 15616                           ; simple_byte           13     7 (average)
 15617                           ; direct_byte           14     6 (fixed)
 15618                           ; jumptable            260     6 (fixed)
 15619                           ;	Chosen strategy is simple_byte
 15620  1952  0835               	movf	setDrvGain@gain^(0+128),w
 15621  1953  3A00               	xorlw	0	; case 0
 15622  1954  1903               	skipnz
 15623  1955  2935               	goto	l8614
 15624  1956  3A01               	xorlw	1	; case 1
 15625  1957  1903               	skipnz
 15626  1958  2938               	goto	l8616
 15627  1959  3A03               	xorlw	3	; case 2
 15628  195A  1903               	skipnz
 15629  195B  293A               	goto	l8618
 15630  195C  3A01               	xorlw	1	; case 3
 15631  195D  1903               	skipnz
 15632  195E  293C               	goto	l8620
 15633  195F  2941               	goto	l8622
 15634  1960                     l8632:	
 15635                           
 15636                           ;main.c: 414: drv_write(0x01, setGain);
 15637  1960  0838               	movf	setDrvGain@setGain^(0+128),w
 15638  1961  00B7               	movwf	??_setDrvGain^(0+128)
 15639  1962  0837               	movf	??_setDrvGain^(0+128),w
 15640  1963  0020               	movlb	0	; select bank0
 15641  1964  00C9               	movwf	drv_write@data
 15642  1965  3001               	movlw	1
 15643  1966  3188  2000  3199   	fcall	_drv_write
 15644                           
 15645                           ;main.c: 415: printf("A\n");
 15646  1969  303C               	movlw	low (STR_7| (0+32768))
 15647  196A  0021               	movlb	1	; select bank1
 15648  196B  00A0               	movwf	printf@f^(0+128)
 15649  196C  30B0               	movlw	high (STR_7| (0+32768))
 15650  196D  00A1               	movwf	(printf@f^(0+128)+1)
 15651  196E  318E  26CE         	fcall	_printf
 15652                           
 15653                           ;main.c: 416: return 0;
 15654  1970  0021               	movlb	1	; select bank1
 15655  1971  01B5               	clrf	?_setDrvGain^(0+128)
 15656  1972  01B6               	clrf	(?_setDrvGain+1)^(0+128)
 15657  1973  0008               	return
 15658  1974                     __end_of_setDrvGain:	
 15659                           
 15660                           	psect	text51
 15661  1461                     __ptext51:	
 15662 ;; *************** function _setActive *****************
 15663 ;; Defined at:
 15664 ;;		line 522 in file "main.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;  probeNum        2   21[BANK1 ] int 
 15667 ;;  onOff           2   23[BANK1 ] int 
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;		None
 15670 ;; Return value:  Size  Location     Type
 15671 ;;                  2   21[BANK1 ] int 
 15672 ;; Registers used:
 15673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15674 ;; Tracked objects:
 15675 ;;		On entry : 0/0
 15676 ;;		On exit  : 0/0
 15677 ;;		Unchanged: 0/0
 15678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15679 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15681 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15682 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15683 ;;Total ram usage:       12 bytes
 15684 ;; Hardware stack levels used:    1
 15685 ;; Hardware stack levels required when called:    9
 15686 ;; This function calls:
 15687 ;;		_printf
 15688 ;; This function is called by:
 15689 ;;		_execCmd
 15690 ;; This function uses a non-reentrant model
 15691 ;;
 15692                           
 15693                           
 15694                           ;psect for function _setActive
 15695  1461                     _setActive:	
 15696                           
 15697                           ;main.c: 525: if(moveMask & 1UL << probeNum){
 15698                           
 15699                           ;incstack = 0
 15700                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15701  1461  0021               	movlb	1	; select bank1
 15702  1462  085E               	movf	_moveMask^(0+128),w
 15703  1463  00B9               	movwf	??_setActive^(0+128)
 15704  1464  085F               	movf	(_moveMask+1)^(0+128),w
 15705  1465  00BA               	movwf	(??_setActive^(0+128)+1)
 15706  1466  0860               	movf	(_moveMask+2)^(0+128),w
 15707  1467  00BB               	movwf	(??_setActive^(0+128)+2)
 15708  1468  0861               	movf	(_moveMask+3)^(0+128),w
 15709  1469  00BC               	movwf	(??_setActive^(0+128)+3)
 15710  146A  3001               	movlw	1
 15711  146B  00BD               	movwf	(??_setActive+4)^(0+128)
 15712  146C  3000               	movlw	0
 15713  146D  00BE               	movwf	((??_setActive+4)^(0+128)+1)
 15714  146E  3000               	movlw	0
 15715  146F  00BF               	movwf	((??_setActive+4)^(0+128)+2)
 15716  1470  3000               	movlw	0
 15717  1471  00C0               	movwf	((??_setActive+4)^(0+128)+3)
 15718  1472  0A35               	incf	setActive@probeNum^(0+128),w
 15719  1473  2C78               	goto	u8840
 15720  1474                     u8845:	
 15721  1474  35BD               	lslf	(??_setActive+4)^(0+128),f
 15722  1475  0DBE               	rlf	((??_setActive+4)^(0+128)+1),f
 15723  1476  0DBF               	rlf	((??_setActive+4)^(0+128)+2),f
 15724  1477  0DC0               	rlf	((??_setActive+4)^(0+128)+3),f
 15725  1478                     u8840:	
 15726  1478  0B89               	decfsz	9,f
 15727  1479  2C74               	goto	u8845
 15728  147A  083D               	movf	(??_setActive+4)^(0+128),w
 15729  147B  05B9               	andwf	??_setActive^(0+128),f
 15730  147C  083E               	movf	(??_setActive+5)^(0+128),w
 15731  147D  05BA               	andwf	(??_setActive^(0+128)+1),f
 15732  147E  083F               	movf	(??_setActive+6)^(0+128),w
 15733  147F  05BB               	andwf	(??_setActive^(0+128)+2),f
 15734  1480  0840               	movf	(??_setActive+7)^(0+128),w
 15735  1481  05BC               	andwf	(??_setActive^(0+128)+3),f
 15736  1482  083C               	movf	(??_setActive+3)^(0+128),w
 15737  1483  043B               	iorwf	(??_setActive+2)^(0+128),w
 15738  1484  043A               	iorwf	(??_setActive+1)^(0+128),w
 15739  1485  0439               	iorwf	??_setActive^(0+128),w
 15740  1486  1903               	skipnz
 15741  1487  2CCB               	goto	l8760
 15742                           
 15743                           ;main.c: 526: if (onOff)
 15744  1488  0837               	movf	setActive@onOff^(0+128),w
 15745  1489  0438               	iorwf	(setActive@onOff+1)^(0+128),w
 15746  148A  1903               	btfsc	3,2
 15747  148B  2CA5               	goto	l8752
 15748                           
 15749                           ;main.c: 527: activeMask |= 1UL << probeNum;
 15750  148C  3001               	movlw	1
 15751  148D  00B9               	movwf	??_setActive^(0+128)
 15752  148E  3000               	movlw	0
 15753  148F  00BA               	movwf	(??_setActive^(0+128)+1)
 15754  1490  3000               	movlw	0
 15755  1491  00BB               	movwf	(??_setActive^(0+128)+2)
 15756  1492  3000               	movlw	0
 15757  1493  00BC               	movwf	(??_setActive^(0+128)+3)
 15758  1494  0A35               	incf	setActive@probeNum^(0+128),w
 15759  1495  2C9A               	goto	u8870
 15760  1496                     u8875:	
 15761  1496  35B9               	lslf	??_setActive^(0+128),f
 15762  1497  0DBA               	rlf	(??_setActive^(0+128)+1),f
 15763  1498  0DBB               	rlf	(??_setActive^(0+128)+2),f
 15764  1499  0DBC               	rlf	(??_setActive^(0+128)+3),f
 15765  149A                     u8870:	
 15766  149A  0B89               	decfsz	9,f
 15767  149B  2C96               	goto	u8875
 15768  149C  0839               	movf	??_setActive^(0+128),w
 15769  149D  04E2               	iorwf	_activeMask^(0+128),f
 15770  149E  083A               	movf	(??_setActive+1)^(0+128),w
 15771  149F  04E3               	iorwf	(_activeMask+1)^(0+128),f
 15772  14A0  083B               	movf	(??_setActive+2)^(0+128),w
 15773  14A1  04E4               	iorwf	(_activeMask+2)^(0+128),f
 15774  14A2  083C               	movf	(??_setActive+3)^(0+128),w
 15775  14A3  04E5               	iorwf	(_activeMask+3)^(0+128),f
 15776  14A4  2CC1               	goto	l8754
 15777  14A5                     l8752:	
 15778                           
 15779                           ;main.c: 528: else
 15780                           ;main.c: 529: activeMask &= ~(1UL << probeNum);
 15781  14A5  3001               	movlw	1
 15782  14A6  00B9               	movwf	??_setActive^(0+128)
 15783  14A7  3000               	movlw	0
 15784  14A8  00BA               	movwf	(??_setActive^(0+128)+1)
 15785  14A9  3000               	movlw	0
 15786  14AA  00BB               	movwf	(??_setActive^(0+128)+2)
 15787  14AB  3000               	movlw	0
 15788  14AC  00BC               	movwf	(??_setActive^(0+128)+3)
 15789  14AD  0A35               	incf	setActive@probeNum^(0+128),w
 15790  14AE  2CB3               	goto	u8880
 15791  14AF                     u8885:	
 15792  14AF  35B9               	lslf	??_setActive^(0+128),f
 15793  14B0  0DBA               	rlf	(??_setActive^(0+128)+1),f
 15794  14B1  0DBB               	rlf	(??_setActive^(0+128)+2),f
 15795  14B2  0DBC               	rlf	(??_setActive^(0+128)+3),f
 15796  14B3                     u8880:	
 15797  14B3  0B89               	decfsz	9,f
 15798  14B4  2CAF               	goto	u8885
 15799  14B5  09B9               	comf	??_setActive^(0+128),f
 15800  14B6  09BA               	comf	(??_setActive^(0+128)+1),f
 15801  14B7  09BB               	comf	(??_setActive^(0+128)+2),f
 15802  14B8  09BC               	comf	(??_setActive^(0+128)+3),f
 15803  14B9  0839               	movf	??_setActive^(0+128),w
 15804  14BA  05E2               	andwf	_activeMask^(0+128),f
 15805  14BB  083A               	movf	(??_setActive+1)^(0+128),w
 15806  14BC  05E3               	andwf	(_activeMask+1)^(0+128),f
 15807  14BD  083B               	movf	(??_setActive+2)^(0+128),w
 15808  14BE  05E4               	andwf	(_activeMask+2)^(0+128),f
 15809  14BF  083C               	movf	(??_setActive+3)^(0+128),w
 15810  14C0  05E5               	andwf	(_activeMask+3)^(0+128),f
 15811  14C1                     l8754:	
 15812                           
 15813                           ;main.c: 530: printf("A\n");
 15814  14C1  303C               	movlw	low (STR_7| (0+32768))
 15815  14C2  00A0               	movwf	printf@f^(0+128)
 15816  14C3  30B0               	movlw	high (STR_7| (0+32768))
 15817  14C4  00A1               	movwf	(printf@f^(0+128)+1)
 15818  14C5  318E  26CE         	fcall	_printf
 15819                           
 15820                           ;main.c: 531: return 0;
 15821  14C7  0021               	movlb	1	; select bank1
 15822  14C8  01B5               	clrf	?_setActive^(0+128)
 15823  14C9  01B6               	clrf	(?_setActive+1)^(0+128)
 15824  14CA  0008               	return
 15825  14CB                     l8760:	
 15826                           
 15827                           ;main.c: 532: }
 15828                           ;main.c: 533: printf("E\n");
 15829  14CB  303F               	movlw	low (STR_14| (0+32768))
 15830  14CC  00A0               	movwf	printf@f^(0+128)
 15831  14CD  30B0               	movlw	high (STR_14| (0+32768))
 15832  14CE  00A1               	movwf	(printf@f^(0+128)+1)
 15833  14CF  318E  26CE         	fcall	_printf
 15834                           
 15835                           ;main.c: 534: return 1;
 15836  14D1  3001               	movlw	1
 15837  14D2  0021               	movlb	1	; select bank1
 15838  14D3  00B5               	movwf	?_setActive^(0+128)
 15839  14D4  3000               	movlw	0
 15840  14D5  00B6               	movwf	(?_setActive^(0+128)+1)
 15841  14D6  0008               	return
 15842  14D7                     __end_of_setActive:	
 15843                           
 15844                           	psect	text52
 15845  273E                     __ptext52:	
 15846 ;; *************** function _getPosition *****************
 15847 ;; Defined at:
 15848 ;;		line 385 in file "main.c"
 15849 ;; Parameters:    Size  Location     Type
 15850 ;;  a               2   21[BANK1 ] int 
 15851 ;; Auto vars:     Size  Location     Type
 15852 ;;		None
 15853 ;; Return value:  Size  Location     Type
 15854 ;;                  2   21[BANK1 ] int 
 15855 ;; Registers used:
 15856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15857 ;; Tracked objects:
 15858 ;;		On entry : 0/0
 15859 ;;		On exit  : 0/0
 15860 ;;		Unchanged: 0/0
 15861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15862 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15864 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15865 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15866 ;;Total ram usage:        6 bytes
 15867 ;; Hardware stack levels used:    1
 15868 ;; Hardware stack levels required when called:    9
 15869 ;; This function calls:
 15870 ;;		_printf
 15871 ;; This function is called by:
 15872 ;;		_execCmd
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           
 15876                           
 15877                           ;psect for function _getPosition
 15878  273E                     _getPosition:	
 15879                           
 15880                           ;main.c: 387: if (a>=0 && a < 24){
 15881                           
 15882                           ;incstack = 0
 15883                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15884  273E  0021               	movlb	1	; select bank1
 15885  273F  1BB6               	btfsc	(getPosition@a+1)^(0+128),7
 15886  2740  2F77               	goto	l8596
 15887  2741  0836               	movf	(getPosition@a+1)^(0+128),w
 15888  2742  3A80               	xorlw	128
 15889  2743  0020               	movlb	0	; select bank0
 15890  2744  00C9               	movwf	??_getPosition
 15891  2745  3080               	movlw	128
 15892  2746  0249               	subwf	??_getPosition,w
 15893  2747  1D03               	skipz
 15894  2748  2F4C               	goto	u8755
 15895  2749  3018               	movlw	24
 15896  274A  0021               	movlb	1	; select bank1
 15897  274B  0235               	subwf	getPosition@a^(0+128),w
 15898  274C                     u8755:	
 15899  274C  1803               	skipnc
 15900  274D  2F77               	goto	l8596
 15901                           
 15902                           ;main.c: 388: printf("%d\n", currentPositions_steps[a]);
 15903  274E  302E               	movlw	low (STR_12| (0+32768))
 15904  274F  0021               	movlb	1	; select bank1
 15905  2750  00A0               	movwf	printf@f^(0+128)
 15906  2751  30B0               	movlw	high (STR_12| (0+32768))
 15907  2752  00A1               	movwf	(printf@f^(0+128)+1)
 15908  2753  0836               	movf	(getPosition@a+1)^(0+128),w
 15909  2754  0020               	movlb	0	; select bank0
 15910  2755  00CA               	movwf	??_getPosition+1
 15911  2756  0021               	movlb	1	; select bank1
 15912  2757  0835               	movf	getPosition@a^(0+128),w
 15913  2758  0020               	movlb	0	; select bank0
 15914  2759  00C9               	movwf	??_getPosition
 15915  275A  35C9               	lslf	??_getPosition,f
 15916  275B  0DCA               	rlf	??_getPosition+1,f
 15917  275C  35C9               	lslf	??_getPosition,f
 15918  275D  0DCA               	rlf	??_getPosition+1,f
 15919  275E  3090               	movlw	144
 15920  275F  00CB               	movwf	??_getPosition+2
 15921  2760  3027               	movlw	39
 15922  2761  00CC               	movwf	??_getPosition+3
 15923  2762  0849               	movf	??_getPosition,w
 15924  2763  074B               	addwf	??_getPosition+2,w
 15925  2764  0086               	movwf	6
 15926  2765  084A               	movf	??_getPosition+1,w
 15927  2766  3D4C               	addwfc	??_getPosition+3,w
 15928  2767  0087               	movwf	7
 15929  2768  3F40               	moviw [0]fsr1
 15930  2769  0021               	movlb	1	; select bank1
 15931  276A  00A2               	movwf	(?_printf^(0+128)+2)
 15932  276B  3F41               	moviw [1]fsr1
 15933  276C  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15934  276D  3F42               	moviw [2]fsr1
 15935  276E  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15936  276F  3F43               	moviw [3]fsr1
 15937  2770  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15938  2771  318E  26CE         	fcall	_printf
 15939                           
 15940                           ;main.c: 389: return 0;
 15941  2773  0021               	movlb	1	; select bank1
 15942  2774  01B5               	clrf	?_getPosition^(0+128)
 15943  2775  01B6               	clrf	(?_getPosition+1)^(0+128)
 15944  2776  0008               	return
 15945  2777                     l8596:	
 15946                           
 15947                           ;main.c: 390: }
 15948                           ;main.c: 392: return 1;
 15949  2777  3001               	movlw	1
 15950  2778  0021               	movlb	1	; select bank1
 15951  2779  00B5               	movwf	?_getPosition^(0+128)
 15952  277A  3000               	movlw	0
 15953  277B  00B6               	movwf	(?_getPosition^(0+128)+1)
 15954  277C  0008               	return
 15955  277D                     __end_of_getPosition:	
 15956                           
 15957                           	psect	text53
 15958  1B30                     __ptext53:	
 15959 ;; *************** function _getMoveMask *****************
 15960 ;; Defined at:
 15961 ;;		line 562 in file "main.c"
 15962 ;; Parameters:    Size  Location     Type
 15963 ;;		None
 15964 ;; Auto vars:     Size  Location     Type
 15965 ;;  i               2   23[BANK1 ] int 
 15966 ;; Return value:  Size  Location     Type
 15967 ;;                  2   21[BANK1 ] int 
 15968 ;; Registers used:
 15969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/0
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15975 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15976 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15977 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15978 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15979 ;;Total ram usage:        8 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    9
 15982 ;; This function calls:
 15983 ;;		_printf
 15984 ;; This function is called by:
 15985 ;;		_execCmd
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989                           
 15990                           ;psect for function _getMoveMask
 15991  1B30                     _getMoveMask:	
 15992                           
 15993                           ;main.c: 563: for(int i=24-1; i>=0; i--){
 15994                           
 15995                           ;incstack = 0
 15996                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15997  1B30  3017               	movlw	23
 15998  1B31  0021               	movlb	1	; select bank1
 15999  1B32  00B7               	movwf	getMoveMask@i^(0+128)
 16000  1B33  3000               	movlw	0
 16001  1B34  00B8               	movwf	(getMoveMask@i^(0+128)+1)
 16002  1B35  1BB8               	btfsc	(getMoveMask@i+1)^(0+128),7
 16003  1B36  2B73               	goto	l8816
 16004  1B37                     l8810:	
 16005                           
 16006                           ;main.c: 564: printf("%d ", (moveMask >> i) & 1 );
 16007  1B37  3032               	movlw	low (STR_1| (0+32768))
 16008  1B38  00A0               	movwf	printf@f^(0+128)
 16009  1B39  30B0               	movlw	high (STR_1| (0+32768))
 16010  1B3A  00A1               	movwf	(printf@f^(0+128)+1)
 16011  1B3B  085E               	movf	_moveMask^(0+128),w
 16012  1B3C  0020               	movlb	0	; select bank0
 16013  1B3D  00C9               	movwf	??_getMoveMask
 16014  1B3E  0021               	movlb	1	; select bank1
 16015  1B3F  085F               	movf	(_moveMask+1)^(0+128),w
 16016  1B40  0020               	movlb	0	; select bank0
 16017  1B41  00CA               	movwf	??_getMoveMask+1
 16018  1B42  0021               	movlb	1	; select bank1
 16019  1B43  0860               	movf	(_moveMask+2)^(0+128),w
 16020  1B44  0020               	movlb	0	; select bank0
 16021  1B45  00CB               	movwf	??_getMoveMask+2
 16022  1B46  0021               	movlb	1	; select bank1
 16023  1B47  0861               	movf	(_moveMask+3)^(0+128),w
 16024  1B48  0020               	movlb	0	; select bank0
 16025  1B49  00CC               	movwf	??_getMoveMask+3
 16026  1B4A  0021               	movlb	1	; select bank1
 16027  1B4B  0A37               	incf	getMoveMask@i^(0+128),w
 16028  1B4C  0020               	movlb	0	; select bank0
 16029  1B4D  2B53               	goto	u8970
 16030  1B4E                     u8975:	
 16031  1B4E  1003               	clrc
 16032  1B4F  0CCC               	rrf	??_getMoveMask+3,f
 16033  1B50  0CCB               	rrf	??_getMoveMask+2,f
 16034  1B51  0CCA               	rrf	??_getMoveMask+1,f
 16035  1B52  0CC9               	rrf	??_getMoveMask,f
 16036  1B53                     u8970:	
 16037  1B53  3EFF               	addlw	-1
 16038  1B54  1D03               	skipz
 16039  1B55  2B4E               	goto	u8975
 16040  1B56  3001               	movlw	1
 16041  1B57  0549               	andwf	??_getMoveMask,w
 16042  1B58  0021               	movlb	1	; select bank1
 16043  1B59  00A2               	movwf	(?_printf^(0+128)+2)
 16044  1B5A  3000               	movlw	0
 16045  1B5B  0020               	movlb	0	; select bank0
 16046  1B5C  054A               	andwf	??_getMoveMask+1,w
 16047  1B5D  0021               	movlb	1	; select bank1
 16048  1B5E  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16049  1B5F  3000               	movlw	0
 16050  1B60  0020               	movlb	0	; select bank0
 16051  1B61  054B               	andwf	??_getMoveMask+2,w
 16052  1B62  0021               	movlb	1	; select bank1
 16053  1B63  00A4               	movwf	((?_printf+2)^(0+128)+2)
 16054  1B64  3000               	movlw	0
 16055  1B65  0020               	movlb	0	; select bank0
 16056  1B66  054C               	andwf	??_getMoveMask+3,w
 16057  1B67  0021               	movlb	1	; select bank1
 16058  1B68  00A5               	movwf	((?_printf+3)^(0+128)+2)
 16059  1B69  318E  26CE  319B   	fcall	_printf
 16060  1B6C  30FF               	movlw	255
 16061  1B6D  0021               	movlb	1	; select bank1
 16062  1B6E  07B7               	addwf	getMoveMask@i^(0+128),f
 16063  1B6F  30FF               	movlw	255
 16064  1B70  3DB8               	addwfc	(getMoveMask@i+1)^(0+128),f
 16065  1B71  1FB8               	btfss	(getMoveMask@i+1)^(0+128),7
 16066  1B72  2B37               	goto	l8810
 16067  1B73                     l8816:	
 16068                           
 16069                           ;main.c: 565: }
 16070                           ;main.c: 566: printf("\n");
 16071  1B73  3063               	movlw	low ((STR_36+28)| (0+32768))
 16072  1B74  00A0               	movwf	printf@f^(0+128)
 16073  1B75  30A8               	movlw	high ((STR_36+28)| (0+32768))
 16074  1B76  00A1               	movwf	(printf@f^(0+128)+1)
 16075  1B77  318E  26CE         	fcall	_printf
 16076                           
 16077                           ;main.c: 567: return 0;
 16078  1B79  0021               	movlb	1	; select bank1
 16079  1B7A  01B5               	clrf	?_getMoveMask^(0+128)
 16080  1B7B  01B6               	clrf	(?_getMoveMask+1)^(0+128)
 16081  1B7C  0008               	return
 16082  1B7D                     __end_of_getMoveMask:	
 16083                           
 16084                           	psect	text54
 16085  2426                     __ptext54:	
 16086 ;; *************** function _getMotionStatus *****************
 16087 ;; Defined at:
 16088 ;;		line 569 in file "main.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;		None
 16091 ;; Auto vars:     Size  Location     Type
 16092 ;;		None
 16093 ;; Return value:  Size  Location     Type
 16094 ;;                  2   21[BANK1 ] int 
 16095 ;; Registers used:
 16096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/0
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16102 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16105 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16106 ;;Total ram usage:        2 bytes
 16107 ;; Hardware stack levels used:    1
 16108 ;; Hardware stack levels required when called:    9
 16109 ;; This function calls:
 16110 ;;		_printf
 16111 ;; This function is called by:
 16112 ;;		_execCmd
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           
 16117                           ;psect for function _getMotionStatus
 16118  2426                     _getMotionStatus:	
 16119                           
 16120                           ;main.c: 570: switch(motionType){
 16121                           
 16122                           ;incstack = 0
 16123                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16124  2426  2C3F               	goto	l8832
 16125  2427                     l8824:	
 16126                           ;main.c: 571: case REL_MOVE: printf("R\n"); break;
 16127                           
 16128  2427  3045               	movlw	low (STR_33| (0+32768))
 16129  2428  0021               	movlb	1	; select bank1
 16130  2429  00A0               	movwf	printf@f^(0+128)
 16131  242A  30B0               	movlw	high (STR_33| (0+32768))
 16132  242B  00A1               	movwf	(printf@f^(0+128)+1)
 16133  242C  318E  26CE         	fcall	_printf
 16134  242E  0008               	return
 16135  242F                     l8826:	
 16136                           ;main.c: 572: case ABS_MOVE: printf("A\n"); break;
 16137                           
 16138  242F  303C               	movlw	low (STR_7| (0+32768))
 16139  2430  0021               	movlb	1	; select bank1
 16140  2431  00A0               	movwf	printf@f^(0+128)
 16141  2432  30B0               	movlw	high (STR_7| (0+32768))
 16142  2433  00A1               	movwf	(printf@f^(0+128)+1)
 16143  2434  318E  26CE         	fcall	_printf
 16144  2436  0008               	return
 16145  2437                     l8828:	
 16146                           ;main.c: 573: default: printf("N\n"); break;
 16147                           
 16148  2437  3042               	movlw	low (STR_35| (0+32768))
 16149  2438  0021               	movlb	1	; select bank1
 16150  2439  00A0               	movwf	printf@f^(0+128)
 16151  243A  30B0               	movlw	high (STR_35| (0+32768))
 16152  243B  00A1               	movwf	(printf@f^(0+128)+1)
 16153  243C  318E  26CE         	fcall	_printf
 16154                           
 16155                           ;main.c: 574: }
 16156  243E  0008               	return
 16157  243F                     l8832:	
 16158  243F  0020               	movlb	0	; select bank0
 16159  2440  0855               	movf	_motionType,w
 16160                           
 16161                           ; Switch size 1, requested type "space"
 16162                           ; Number of cases is 2, Range of values is 1 to 2
 16163                           ; switch strategies available:
 16164                           ; Name         Instructions Cycles
 16165                           ; simple_byte            7     4 (average)
 16166                           ; direct_byte           13     9 (fixed)
 16167                           ; jumptable            263     9 (fixed)
 16168                           ;	Chosen strategy is simple_byte
 16169  2441  3A01               	xorlw	1	; case 1
 16170  2442  1903               	skipnz
 16171  2443  2C27               	goto	l8824
 16172  2444  3A03               	xorlw	3	; case 2
 16173  2445  1903               	skipnz
 16174  2446  2C2F               	goto	l8826
 16175  2447  2C37               	goto	l8828
 16176  2448  0008               	return
 16177  2449                     __end_of_getMotionStatus:	
 16178                           
 16179                           	psect	text55
 16180  1AE3                     __ptext55:	
 16181 ;; *************** function _getActive *****************
 16182 ;; Defined at:
 16183 ;;		line 554 in file "main.c"
 16184 ;; Parameters:    Size  Location     Type
 16185 ;;		None
 16186 ;; Auto vars:     Size  Location     Type
 16187 ;;  i               2   23[BANK1 ] int 
 16188 ;; Return value:  Size  Location     Type
 16189 ;;                  2   21[BANK1 ] int 
 16190 ;; Registers used:
 16191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16192 ;; Tracked objects:
 16193 ;;		On entry : 0/0
 16194 ;;		On exit  : 0/0
 16195 ;;		Unchanged: 0/0
 16196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16197 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16198 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16199 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16200 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16201 ;;Total ram usage:        8 bytes
 16202 ;; Hardware stack levels used:    1
 16203 ;; Hardware stack levels required when called:    9
 16204 ;; This function calls:
 16205 ;;		_printf
 16206 ;; This function is called by:
 16207 ;;		_execCmd
 16208 ;; This function uses a non-reentrant model
 16209 ;;
 16210                           
 16211                           
 16212                           ;psect for function _getActive
 16213  1AE3                     _getActive:	
 16214                           
 16215                           ;main.c: 555: for(int i=24-1; i>=0; i--){
 16216                           
 16217                           ;incstack = 0
 16218                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16219  1AE3  3017               	movlw	23
 16220  1AE4  0021               	movlb	1	; select bank1
 16221  1AE5  00B7               	movwf	getActive@i^(0+128)
 16222  1AE6  3000               	movlw	0
 16223  1AE7  00B8               	movwf	(getActive@i^(0+128)+1)
 16224  1AE8  1BB8               	btfsc	(getActive@i+1)^(0+128),7
 16225  1AE9  2B26               	goto	l8798
 16226  1AEA                     l8792:	
 16227                           
 16228                           ;main.c: 556: printf("%d ", (activeMask >> i) & 1 );
 16229  1AEA  3032               	movlw	low (STR_1| (0+32768))
 16230  1AEB  00A0               	movwf	printf@f^(0+128)
 16231  1AEC  30B0               	movlw	high (STR_1| (0+32768))
 16232  1AED  00A1               	movwf	(printf@f^(0+128)+1)
 16233  1AEE  0862               	movf	_activeMask^(0+128),w
 16234  1AEF  0020               	movlb	0	; select bank0
 16235  1AF0  00C9               	movwf	??_getActive
 16236  1AF1  0021               	movlb	1	; select bank1
 16237  1AF2  0863               	movf	(_activeMask+1)^(0+128),w
 16238  1AF3  0020               	movlb	0	; select bank0
 16239  1AF4  00CA               	movwf	??_getActive+1
 16240  1AF5  0021               	movlb	1	; select bank1
 16241  1AF6  0864               	movf	(_activeMask+2)^(0+128),w
 16242  1AF7  0020               	movlb	0	; select bank0
 16243  1AF8  00CB               	movwf	??_getActive+2
 16244  1AF9  0021               	movlb	1	; select bank1
 16245  1AFA  0865               	movf	(_activeMask+3)^(0+128),w
 16246  1AFB  0020               	movlb	0	; select bank0
 16247  1AFC  00CC               	movwf	??_getActive+3
 16248  1AFD  0021               	movlb	1	; select bank1
 16249  1AFE  0A37               	incf	getActive@i^(0+128),w
 16250  1AFF  0020               	movlb	0	; select bank0
 16251  1B00  2B06               	goto	u8940
 16252  1B01                     u8945:	
 16253  1B01  1003               	clrc
 16254  1B02  0CCC               	rrf	??_getActive+3,f
 16255  1B03  0CCB               	rrf	??_getActive+2,f
 16256  1B04  0CCA               	rrf	??_getActive+1,f
 16257  1B05  0CC9               	rrf	??_getActive,f
 16258  1B06                     u8940:	
 16259  1B06  3EFF               	addlw	-1
 16260  1B07  1D03               	skipz
 16261  1B08  2B01               	goto	u8945
 16262  1B09  3001               	movlw	1
 16263  1B0A  0549               	andwf	??_getActive,w
 16264  1B0B  0021               	movlb	1	; select bank1
 16265  1B0C  00A2               	movwf	(?_printf^(0+128)+2)
 16266  1B0D  3000               	movlw	0
 16267  1B0E  0020               	movlb	0	; select bank0
 16268  1B0F  054A               	andwf	??_getActive+1,w
 16269  1B10  0021               	movlb	1	; select bank1
 16270  1B11  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16271  1B12  3000               	movlw	0
 16272  1B13  0020               	movlb	0	; select bank0
 16273  1B14  054B               	andwf	??_getActive+2,w
 16274  1B15  0021               	movlb	1	; select bank1
 16275  1B16  00A4               	movwf	((?_printf+2)^(0+128)+2)
 16276  1B17  3000               	movlw	0
 16277  1B18  0020               	movlb	0	; select bank0
 16278  1B19  054C               	andwf	??_getActive+3,w
 16279  1B1A  0021               	movlb	1	; select bank1
 16280  1B1B  00A5               	movwf	((?_printf+3)^(0+128)+2)
 16281  1B1C  318E  26CE  319A   	fcall	_printf
 16282  1B1F  30FF               	movlw	255
 16283  1B20  0021               	movlb	1	; select bank1
 16284  1B21  07B7               	addwf	getActive@i^(0+128),f
 16285  1B22  30FF               	movlw	255
 16286  1B23  3DB8               	addwfc	(getActive@i+1)^(0+128),f
 16287  1B24  1FB8               	btfss	(getActive@i+1)^(0+128),7
 16288  1B25  2AEA               	goto	l8792
 16289  1B26                     l8798:	
 16290                           
 16291                           ;main.c: 557: }
 16292                           ;main.c: 558: printf("\n");
 16293  1B26  3063               	movlw	low ((STR_36+28)| (0+32768))
 16294  1B27  00A0               	movwf	printf@f^(0+128)
 16295  1B28  30A8               	movlw	high ((STR_36+28)| (0+32768))
 16296  1B29  00A1               	movwf	(printf@f^(0+128)+1)
 16297  1B2A  318E  26CE         	fcall	_printf
 16298                           
 16299                           ;main.c: 559: return 0;
 16300  1B2C  0021               	movlb	1	; select bank1
 16301  1B2D  01B5               	clrf	?_getActive^(0+128)
 16302  1B2E  01B6               	clrf	(?_getActive+1)^(0+128)
 16303  1B2F  0008               	return
 16304  1B30                     __end_of_getActive:	
 16305                           
 16306                           	psect	text56
 16307  0A1B                     __ptext56:	
 16308 ;; *************** function _commCheck *****************
 16309 ;; Defined at:
 16310 ;;		line 577 in file "main.c"
 16311 ;; Parameters:    Size  Location     Type
 16312 ;;		None
 16313 ;; Auto vars:     Size  Location     Type
 16314 ;;		None
 16315 ;; Return value:  Size  Location     Type
 16316 ;;                  2   52[BANK1 ] int 
 16317 ;; Registers used:
 16318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16319 ;; Tracked objects:
 16320 ;;		On entry : 0/0
 16321 ;;		On exit  : 0/0
 16322 ;;		Unchanged: 0/0
 16323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16324 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16326 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16327 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16328 ;;Total ram usage:        3 bytes
 16329 ;; Hardware stack levels used:    1
 16330 ;; Hardware stack levels required when called:   13
 16331 ;; This function calls:
 16332 ;;		_LED_testComm
 16333 ;;		_LED_test_openshort
 16334 ;;		_drv_read
 16335 ;;		_printf
 16336 ;; This function is called by:
 16337 ;;		_execCmd
 16338 ;; This function uses a non-reentrant model
 16339 ;;
 16340                           
 16341                           
 16342                           ;psect for function _commCheck
 16343  0A1B                     _commCheck:	
 16344                           
 16345                           ;main.c: 578: printf("\n----starting comm test----\n\n");
 16346                           
 16347                           ;incstack = 0
 16348                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16349  0A1B  3047               	movlw	low (STR_36| (0+32768))
 16350  0A1C  0021               	movlb	1	; select bank1
 16351  0A1D  00A0               	movwf	printf@f^(0+128)
 16352  0A1E  30A8               	movlw	high (STR_36| (0+32768))
 16353  0A1F  00A1               	movwf	(printf@f^(0+128)+1)
 16354  0A20  318E  26CE  318A   	fcall	_printf
 16355                           
 16356                           ;main.c: 581: printf("testing top LED driver...");
 16357  0A23  3081               	movlw	low (STR_37| (0+32768))
 16358  0A24  0021               	movlb	1	; select bank1
 16359  0A25  00A0               	movwf	printf@f^(0+128)
 16360  0A26  30A8               	movlw	high (STR_37| (0+32768))
 16361  0A27  00A1               	movwf	(printf@f^(0+128)+1)
 16362  0A28  318E  26CE  318A   	fcall	_printf
 16363                           
 16364                           ;main.c: 582: if (!LED_testComm(1))
 16365  0A2B  3001               	movlw	1
 16366  0A2C  0021               	movlb	1	; select bank1
 16367  0A2D  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 16368  0A2E  3000               	movlw	0
 16369  0A2F  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 16370  0A30  3194  24D7  318A   	fcall	_LED_testComm
 16371  0A33  0021               	movlb	1	; select bank1
 16372  0A34  084A               	movf	?_LED_testComm^(0+128),w
 16373  0A35  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 16374  0A36  1D03               	btfss	3,2
 16375  0A37  2A3C               	goto	l8838
 16376                           
 16377                           ;main.c: 583: printf("passed\n");
 16378  0A38  30EE               	movlw	low (STR_38| (0+32768))
 16379  0A39  00A0               	movwf	printf@f^(0+128)
 16380  0A3A  30A9               	movlw	high (STR_38| (0+32768))
 16381  0A3B  2A40               	goto	L31
 16382  0A3C                     l8838:	
 16383                           
 16384                           ;main.c: 584: else
 16385                           ;main.c: 585: printf("FAILED\n");
 16386  0A3C  30E6               	movlw	low (STR_39| (0+32768))
 16387  0A3D  0021               	movlb	1	; select bank1
 16388  0A3E  00A0               	movwf	printf@f^(0+128)
 16389  0A3F  30A9               	movlw	high (STR_39| (0+32768))
 16390  0A40                     L31:	
 16391  0A40  00A1               	movwf	(printf@f^(0+128)+1)
 16392  0A41  318E  26CE  318A   	fcall	_printf
 16393                           
 16394                           ;main.c: 587: printf("opens: ");
 16395  0A44  30F6               	movlw	low (STR_40| (0+32768))
 16396  0A45  0021               	movlb	1	; select bank1
 16397  0A46  00A0               	movwf	printf@f^(0+128)
 16398  0A47  30A9               	movlw	high (STR_40| (0+32768))
 16399  0A48  00A1               	movwf	(printf@f^(0+128)+1)
 16400  0A49  318E  26CE  318A   	fcall	_printf
 16401                           
 16402                           ;main.c: 588: LED_test_openshort(10, 1);
 16403  0A4C  300A               	movlw	10
 16404  0A4D  0021               	movlb	1	; select bank1
 16405  0A4E  00B5               	movwf	LED_test_openshort@type^(0+128)
 16406  0A4F  3000               	movlw	0
 16407  0A50  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 16408  0A51  3001               	movlw	1
 16409  0A52  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 16410  0A53  3000               	movlw	0
 16411  0A54  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 16412  0A55  3195  254E  318A   	fcall	_LED_test_openshort
 16413                           
 16414                           ;main.c: 589: printf("\n\nshorts: ");
 16415  0A58  3095               	movlw	low (STR_41| (0+32768))
 16416  0A59  0021               	movlb	1	; select bank1
 16417  0A5A  00A0               	movwf	printf@f^(0+128)
 16418  0A5B  30A9               	movlw	high (STR_41| (0+32768))
 16419  0A5C  00A1               	movwf	(printf@f^(0+128)+1)
 16420  0A5D  318E  26CE  318A   	fcall	_printf
 16421                           
 16422                           ;main.c: 590: LED_test_openshort(11, 1);
 16423  0A60  300B               	movlw	11
 16424  0A61  0021               	movlb	1	; select bank1
 16425  0A62  00B5               	movwf	LED_test_openshort@type^(0+128)
 16426  0A63  3000               	movlw	0
 16427  0A64  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 16428  0A65  3001               	movlw	1
 16429  0A66  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 16430  0A67  3000               	movlw	0
 16431  0A68  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 16432  0A69  3195  254E  318A   	fcall	_LED_test_openshort
 16433                           
 16434                           ;main.c: 593: printf("\ntesting bottom LED driver...\n");
 16435  0A6C  3028               	movlw	low (STR_42| (0+32768))
 16436  0A6D  0021               	movlb	1	; select bank1
 16437  0A6E  00A0               	movwf	printf@f^(0+128)
 16438  0A6F  30A8               	movlw	high (STR_42| (0+32768))
 16439  0A70  00A1               	movwf	(printf@f^(0+128)+1)
 16440  0A71  318E  26CE  318A   	fcall	_printf
 16441                           
 16442                           ;main.c: 594: if (!LED_testComm(2))
 16443  0A74  3002               	movlw	2
 16444  0A75  0021               	movlb	1	; select bank1
 16445  0A76  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 16446  0A77  3000               	movlw	0
 16447  0A78  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 16448  0A79  3194  24D7  318A   	fcall	_LED_testComm
 16449  0A7C  0021               	movlb	1	; select bank1
 16450  0A7D  084A               	movf	?_LED_testComm^(0+128),w
 16451  0A7E  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 16452  0A7F  1D03               	btfss	3,2
 16453  0A80  2A85               	goto	l8842
 16454                           
 16455                           ;main.c: 595: printf("passed\n");
 16456  0A81  30EE               	movlw	low (STR_38| (0+32768))
 16457  0A82  00A0               	movwf	printf@f^(0+128)
 16458  0A83  30A9               	movlw	high (STR_38| (0+32768))
 16459  0A84  2A89               	goto	L32
 16460  0A85                     l8842:	
 16461                           
 16462                           ;main.c: 596: else
 16463                           ;main.c: 597: printf("FAILED\n");
 16464  0A85  30E6               	movlw	low (STR_39| (0+32768))
 16465  0A86  0021               	movlb	1	; select bank1
 16466  0A87  00A0               	movwf	printf@f^(0+128)
 16467  0A88  30A9               	movlw	high (STR_39| (0+32768))
 16468  0A89                     L32:	
 16469  0A89  00A1               	movwf	(printf@f^(0+128)+1)
 16470  0A8A  318E  26CE  318A   	fcall	_printf
 16471                           
 16472                           ;main.c: 599: printf("opens: ");
 16473  0A8D  30F6               	movlw	low (STR_40| (0+32768))
 16474  0A8E  0021               	movlb	1	; select bank1
 16475  0A8F  00A0               	movwf	printf@f^(0+128)
 16476  0A90  30A9               	movlw	high (STR_40| (0+32768))
 16477  0A91  00A1               	movwf	(printf@f^(0+128)+1)
 16478  0A92  318E  26CE  318A   	fcall	_printf
 16479                           
 16480                           ;main.c: 600: LED_test_openshort(10, 2);
 16481  0A95  300A               	movlw	10
 16482  0A96  0021               	movlb	1	; select bank1
 16483  0A97  00B5               	movwf	LED_test_openshort@type^(0+128)
 16484  0A98  3000               	movlw	0
 16485  0A99  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 16486  0A9A  3002               	movlw	2
 16487  0A9B  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 16488  0A9C  3000               	movlw	0
 16489  0A9D  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 16490  0A9E  3195  254E  318A   	fcall	_LED_test_openshort
 16491                           
 16492                           ;main.c: 601: printf("\n\nshorts: ");
 16493  0AA1  3095               	movlw	low (STR_41| (0+32768))
 16494  0AA2  0021               	movlb	1	; select bank1
 16495  0AA3  00A0               	movwf	printf@f^(0+128)
 16496  0AA4  30A9               	movlw	high (STR_41| (0+32768))
 16497  0AA5  00A1               	movwf	(printf@f^(0+128)+1)
 16498  0AA6  318E  26CE  318A   	fcall	_printf
 16499                           
 16500                           ;main.c: 602: LED_test_openshort(11, 2);
 16501  0AA9  300B               	movlw	11
 16502  0AAA  0021               	movlb	1	; select bank1
 16503  0AAB  00B5               	movwf	LED_test_openshort@type^(0+128)
 16504  0AAC  3000               	movlw	0
 16505  0AAD  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 16506  0AAE  3002               	movlw	2
 16507  0AAF  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 16508  0AB0  3000               	movlw	0
 16509  0AB1  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 16510  0AB2  3195  254E  318A   	fcall	_LED_test_openshort
 16511                           
 16512                           ;main.c: 604: printf("\ntesting piezo driver...");
 16513  0AB5  309B               	movlw	low (STR_47| (0+32768))
 16514  0AB6  0021               	movlb	1	; select bank1
 16515  0AB7  00A0               	movwf	printf@f^(0+128)
 16516  0AB8  30A8               	movlw	high (STR_47| (0+32768))
 16517  0AB9  00A1               	movwf	(printf@f^(0+128)+1)
 16518  0ABA  318E  26CE  318A   	fcall	_printf
 16519                           
 16520                           ;main.c: 605: if(drv_read(0x01) > 0)
 16521  0ABD  3001               	movlw	1
 16522  0ABE  3199  2174  318A   	fcall	_drv_read
 16523  0AC1  0021               	movlb	1	; select bank1
 16524  0AC2  0836               	movf	(?_drv_read+1)^(0+128),w
 16525  0AC3  3A80               	xorlw	128
 16526  0AC4  00D6               	movwf	??_commCheck^(0+128)
 16527  0AC5  3080               	movlw	128
 16528  0AC6  0256               	subwf	??_commCheck^(0+128),w
 16529  0AC7  1D03               	skipz
 16530  0AC8  2ACB               	goto	u9015
 16531  0AC9  3001               	movlw	1
 16532  0ACA  0235               	subwf	?_drv_read^(0+128),w
 16533  0ACB                     u9015:	
 16534  0ACB  1C03               	skipc
 16535  0ACC  2AD2               	goto	l8846
 16536                           
 16537                           ;main.c: 606: printf("passed\n\n");
 16538  0ACD  30BD               	movlw	low (STR_48| (0+32768))
 16539  0ACE  0021               	movlb	1	; select bank1
 16540  0ACF  00A0               	movwf	printf@f^(0+128)
 16541  0AD0  30A9               	movlw	high (STR_48| (0+32768))
 16542  0AD1  2AD6               	goto	L33
 16543  0AD2                     l8846:	
 16544                           
 16545                           ;main.c: 607: else
 16546                           ;main.c: 608: printf("FAILED\n\n");
 16547  0AD2  30B4               	movlw	low (STR_49| (0+32768))
 16548  0AD3  0021               	movlb	1	; select bank1
 16549  0AD4  00A0               	movwf	printf@f^(0+128)
 16550  0AD5  30A9               	movlw	high (STR_49| (0+32768))
 16551  0AD6                     L33:	
 16552  0AD6  00A1               	movwf	(printf@f^(0+128)+1)
 16553  0AD7  318E  26CE  318A   	fcall	_printf
 16554                           
 16555                           ;main.c: 609: printf("----finished comm test----\n");
 16556  0ADA  3065               	movlw	low (STR_50| (0+32768))
 16557  0ADB  0021               	movlb	1	; select bank1
 16558  0ADC  00A0               	movwf	printf@f^(0+128)
 16559  0ADD  30A8               	movlw	high (STR_50| (0+32768))
 16560  0ADE  00A1               	movwf	(printf@f^(0+128)+1)
 16561  0ADF  318E  26CE         	fcall	_printf
 16562  0AE1  0008               	return
 16563  0AE2                     __end_of_commCheck:	
 16564                           
 16565                           	psect	text57
 16566  1974                     __ptext57:	
 16567 ;; *************** function _drv_read *****************
 16568 ;; Defined at:
 16569 ;;		line 87 in file "drv2665.c"
 16570 ;; Parameters:    Size  Location     Type
 16571 ;;  reg             1    wreg     unsigned char 
 16572 ;; Auto vars:     Size  Location     Type
 16573 ;;  reg             1   43[BANK0 ] unsigned char 
 16574 ;;  buff            1   44[BANK0 ] unsigned char 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  2   21[BANK1 ] int 
 16577 ;; Registers used:
 16578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/0
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16584 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16585 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16587 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16588 ;;Total ram usage:        6 bytes
 16589 ;; Hardware stack levels used:    1
 16590 ;; Hardware stack levels required when called:   12
 16591 ;; This function calls:
 16592 ;;		_i2c_masterOperation
 16593 ;;		_i2c_setBuffer
 16594 ;;		_printf
 16595 ;; This function is called by:
 16596 ;;		_commCheck
 16597 ;;		_fifo_check
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           
 16602                           ;psect for function _drv_read
 16603  1974                     _drv_read:	
 16604                           
 16605                           ;incstack = 0
 16606                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16607                           ;drv_read@reg stored from wreg
 16608  1974  0020               	movlb	0	; select bank0
 16609  1975  00CB               	movwf	drv_read@reg
 16610                           
 16611                           ;drv2665.c: 89: char buff=0;
 16612  1976  01CC               	clrf	drv_read@buff
 16613                           
 16614                           ;drv2665.c: 92: i2c_setBuffer(&reg, 1);
 16615  1977  304B               	movlw	low drv_read@reg
 16616  1978  00B1               	movwf	i2c_setBuffer@buffer
 16617  1979  3000               	movlw	high drv_read@reg
 16618  197A  00B2               	movwf	i2c_setBuffer@buffer+1
 16619  197B  3001               	movlw	1
 16620  197C  00B3               	movwf	i2c_setBuffer@bufferSize
 16621  197D  3000               	movlw	0
 16622  197E  00B4               	movwf	i2c_setBuffer@bufferSize+1
 16623  197F  31A1  21E7  3199   	fcall	_i2c_setBuffer
 16624                           
 16625                           ;drv2665.c: 93: if(i2c_masterOperation(0) != I2C_NOERR)
 16626  1982  3000               	movlw	0
 16627  1983  31A4  246D  3199   	fcall	_i2c_masterOperation
 16628  1986  3A00               	xorlw	0
 16629  1987  1903               	skipnz
 16630  1988  2991               	goto	l8336
 16631                           
 16632                           ;drv2665.c: 94: printf("drv_write error!\n");
 16633  1989  30CB               	movlw	low (STR_52| (0+32768))
 16634  198A  0021               	movlb	1	; select bank1
 16635  198B  00A0               	movwf	printf@f^(0+128)
 16636  198C  30A8               	movlw	high (STR_52| (0+32768))
 16637  198D  00A1               	movwf	(printf@f^(0+128)+1)
 16638  198E  318E  26CE  3199   	fcall	_printf
 16639  1991                     l8336:	
 16640                           
 16641                           ;drv2665.c: 97: _delay((unsigned long)((100)*(1000000/4000000.0)));
 16642  1991  3008               	movlw	8
 16643  1992                     u10167:	
 16644  1992  0B89               	decfsz	9,f
 16645  1993  2992               	goto	u10167
 16646  1994  0000               	nop
 16647                           
 16648                           ;drv2665.c: 100: i2c_setBuffer(&buff, 1);
 16649  1995  304C               	movlw	low drv_read@buff
 16650  1996  0020               	movlb	0	; select bank0
 16651  1997  00B1               	movwf	i2c_setBuffer@buffer
 16652  1998  3000               	movlw	high drv_read@buff
 16653  1999  00B2               	movwf	i2c_setBuffer@buffer+1
 16654  199A  3001               	movlw	1
 16655  199B  00B3               	movwf	i2c_setBuffer@bufferSize
 16656  199C  3000               	movlw	0
 16657  199D  00B4               	movwf	i2c_setBuffer@bufferSize+1
 16658  199E  31A1  21E7  3199   	fcall	_i2c_setBuffer
 16659                           
 16660                           ;drv2665.c: 102: if(i2c_masterOperation(1) != I2C_NOERR)
 16661  19A1  3001               	movlw	1
 16662  19A2  31A4  246D  3199   	fcall	_i2c_masterOperation
 16663  19A5  3A00               	xorlw	0
 16664  19A6  1903               	skipnz
 16665  19A7  29AF               	goto	l8344
 16666                           
 16667                           ;drv2665.c: 103: printf("drv_read error!\n");
 16668  19A8  30DD               	movlw	low (STR_54| (0+32768))
 16669  19A9  0021               	movlb	1	; select bank1
 16670  19AA  00A0               	movwf	printf@f^(0+128)
 16671  19AB  30A8               	movlw	high (STR_54| (0+32768))
 16672  19AC  00A1               	movwf	(printf@f^(0+128)+1)
 16673  19AD  318E  26CE         	fcall	_printf
 16674  19AF                     l8344:	
 16675                           
 16676                           ;drv2665.c: 105: return buff;
 16677  19AF  0020               	movlb	0	; select bank0
 16678  19B0  084C               	movf	drv_read@buff,w
 16679  19B1  00C9               	movwf	??_drv_read
 16680  19B2  01CA               	clrf	??_drv_read+1
 16681  19B3  0849               	movf	??_drv_read,w
 16682  19B4  0021               	movlb	1	; select bank1
 16683  19B5  00B5               	movwf	?_drv_read^(0+128)
 16684  19B6  0020               	movlb	0	; select bank0
 16685  19B7  084A               	movf	??_drv_read+1,w
 16686  19B8  0021               	movlb	1	; select bank1
 16687  19B9  00B6               	movwf	(?_drv_read+1)^(0+128)
 16688  19BA  0008               	return
 16689  19BB                     __end_of_drv_read:	
 16690                           
 16691                           	psect	text58
 16692  154E                     __ptext58:	
 16693 ;; *************** function _LED_test_openshort *****************
 16694 ;; Defined at:
 16695 ;;		line 99 in file "LEDcomm.c"
 16696 ;; Parameters:    Size  Location     Type
 16697 ;;  type            2   21[BANK1 ] int 
 16698 ;;  topOrBottom     2   23[BANK1 ] int 
 16699 ;; Auto vars:     Size  Location     Type
 16700 ;;  j               2   26[BANK1 ] int 
 16701 ;; Return value:  Size  Location     Type
 16702 ;;                  1    wreg      void 
 16703 ;; Registers used:
 16704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16705 ;; Tracked objects:
 16706 ;;		On entry : 0/0
 16707 ;;		On exit  : 0/0
 16708 ;;		Unchanged: 0/0
 16709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16710 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16711 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16712 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16713 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16714 ;;Total ram usage:        7 bytes
 16715 ;; Hardware stack levels used:    1
 16716 ;; Hardware stack levels required when called:    9
 16717 ;; This function calls:
 16718 ;;		_LEDsOn
 16719 ;;		_printf
 16720 ;;		_send_2length_2bytes_IK
 16721 ;; This function is called by:
 16722 ;;		_commCheck
 16723 ;; This function uses a non-reentrant model
 16724 ;;
 16725                           
 16726                           
 16727                           ;psect for function _LED_test_openshort
 16728  154E                     _LED_test_openshort:	
 16729                           
 16730                           ;incstack = 0
 16731                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16732                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 1; } while(0);
 16733  154E  0022               	movlb	2	; select bank2
 16734  154F  148E               	bsf	14,1	;volatile
 16735                           
 16736                           ;LEDcomm.c: 102: LEDsOn(0xFFFFFFFF, topOrBottom);
 16737  1550  30FF               	movlw	255
 16738  1551  0020               	movlb	0	; select bank0
 16739  1552  00C7               	movwf	LEDsOn@LEDpins+3
 16740  1553  30FF               	movlw	255
 16741  1554  00C6               	movwf	LEDsOn@LEDpins+2
 16742  1555  30FF               	movlw	255
 16743  1556  00C5               	movwf	LEDsOn@LEDpins+1
 16744  1557  30FF               	movlw	255
 16745  1558  00C4               	movwf	LEDsOn@LEDpins
 16746  1559  0021               	movlb	1	; select bank1
 16747  155A  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 16748  155B  0020               	movlb	0	; select bank0
 16749  155C  00C9               	movwf	LEDsOn@topOrBottom+1
 16750  155D  0021               	movlb	1	; select bank1
 16751  155E  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 16752  155F  0020               	movlb	0	; select bank0
 16753  1560  00C8               	movwf	LEDsOn@topOrBottom
 16754  1561  31A3  23E3  3195   	fcall	_LEDsOn
 16755                           
 16756                           ;LEDcomm.c: 103: send_2length_2bytes_IK(0,0,type,topOrBottom);
 16757  1564  3000               	movlw	0
 16758  1565  0020               	movlb	0	; select bank0
 16759  1566  00BC               	movwf	send_2length_2bytes_IK@data1
 16760  1567  00BD               	movwf	send_2length_2bytes_IK@data1+1
 16761  1568  3000               	movlw	0
 16762  1569  00BE               	movwf	send_2length_2bytes_IK@data2
 16763  156A  00BF               	movwf	send_2length_2bytes_IK@data2+1
 16764  156B  0021               	movlb	1	; select bank1
 16765  156C  0835               	movf	LED_test_openshort@type^(0+128),w
 16766  156D  00B9               	movwf	??_LED_test_openshort^(0+128)
 16767  156E  0839               	movf	??_LED_test_openshort^(0+128),w
 16768  156F  0020               	movlb	0	; select bank0
 16769  1570  00C0               	movwf	send_2length_2bytes_IK@latch_start
 16770  1571  0021               	movlb	1	; select bank1
 16771  1572  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 16772  1573  0020               	movlb	0	; select bank0
 16773  1574  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 16774  1575  0021               	movlb	1	; select bank1
 16775  1576  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 16776  1577  0020               	movlb	0	; select bank0
 16777  1578  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 16778  1579  31A2  2214  3195   	fcall	_send_2length_2bytes_IK
 16779                           
 16780                           ;LEDcomm.c: 105: do { LATCbits.LATC1 = 0; } while(0);
 16781  157C  0022               	movlb	2	; select bank2
 16782  157D  108E               	bcf	14,1	;volatile
 16783                           
 16784                           ;LEDcomm.c: 107: for(int j = 23; j>=0; j--){
 16785  157E  3017               	movlw	23
 16786  157F  0021               	movlb	1	; select bank1
 16787  1580  00BA               	movwf	LED_test_openshort@j^(0+128)
 16788  1581  3000               	movlw	0
 16789  1582  00BB               	movwf	(LED_test_openshort@j^(0+128)+1)
 16790  1583  1BBB               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 16791  1584  2DC3               	goto	l8212
 16792  1585                     l281:	
 16793                           ;LEDcomm.c: 108: do { LATAbits.LATA2 = 1; } while(0);
 16794                           
 16795  1585  0022               	movlb	2	; select bank2
 16796  1586  150C               	bsf	12,2	;volatile
 16797                           
 16798                           ;LEDcomm.c: 109: _delay((unsigned long)((10)*(1000000/4000000.0)));
 16799  1587  3200               	nop2	;2 cycle nop
 16800                           
 16801                           ;LEDcomm.c: 110: do { LATAbits.LATA2 = 0; } while(0);
 16802  1588  0022               	movlb	2	; select bank2
 16803  1589  110C               	bcf	12,2	;volatile
 16804                           
 16805                           ;LEDcomm.c: 111: if (topOrBottom == 1)
 16806  158A  0021               	movlb	1	; select bank1
 16807  158B  0337               	decf	LED_test_openshort@topOrBottom^(0+128),w
 16808  158C  0438               	iorwf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 16809  158D  1D03               	btfss	3,2
 16810  158E  2DA0               	goto	l8204
 16811                           
 16812                           ;LEDcomm.c: 112: if (PORTCbits.RC6){ printf("%d ", j);}
 16813  158F  0020               	movlb	0	; select bank0
 16814  1590  1B0E               	btfsc	14,6	;volatile
 16815  1591  2D94               	goto	l8202
 16816                           
 16817                           ;LEDcomm.c: 113: else
 16818                           ;LEDcomm.c: 114: if (PORTCbits.RC3){ printf("%d ", j);}
 16819  1592  1D8E               	btfss	14,3	;volatile
 16820  1593  2DA0               	goto	l8204
 16821  1594                     l8202:	
 16822  1594  3032               	movlw	low (STR_1| (0+32768))
 16823  1595  0021               	movlb	1	; select bank1
 16824  1596  00A0               	movwf	printf@f^(0+128)
 16825  1597  30B0               	movlw	high (STR_1| (0+32768))
 16826  1598  00A1               	movwf	(printf@f^(0+128)+1)
 16827  1599  083B               	movf	(LED_test_openshort@j+1)^(0+128),w
 16828  159A  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16829  159B  083A               	movf	LED_test_openshort@j^(0+128),w
 16830  159C  00A2               	movwf	(?_printf^(0+128)+2)
 16831  159D  318E  26CE  3195   	fcall	_printf
 16832  15A0                     l8204:	
 16833                           
 16834                           ;LEDcomm.c: 117: if (j == 23) {do { LATCbits.LATC1 = 1; } while(0); LEDsOn(0, topOrBotto
      +                          m); }
 16835  15A0  3017               	movlw	23
 16836  15A1  0021               	movlb	1	; select bank1
 16837  15A2  063A               	xorwf	LED_test_openshort@j^(0+128),w
 16838  15A3  043B               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 16839  15A4  1D03               	btfss	3,2
 16840  15A5  2DBC               	goto	l8208
 16841  15A6  0022               	movlb	2	; select bank2
 16842  15A7  148E               	bsf	14,1	;volatile
 16843  15A8  3000               	movlw	0
 16844  15A9  0020               	movlb	0	; select bank0
 16845  15AA  00C7               	movwf	LEDsOn@LEDpins+3
 16846  15AB  3000               	movlw	0
 16847  15AC  00C6               	movwf	LEDsOn@LEDpins+2
 16848  15AD  3000               	movlw	0
 16849  15AE  00C5               	movwf	LEDsOn@LEDpins+1
 16850  15AF  3000               	movlw	0
 16851  15B0  00C4               	movwf	LEDsOn@LEDpins
 16852  15B1  0021               	movlb	1	; select bank1
 16853  15B2  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 16854  15B3  0020               	movlb	0	; select bank0
 16855  15B4  00C9               	movwf	LEDsOn@topOrBottom+1
 16856  15B5  0021               	movlb	1	; select bank1
 16857  15B6  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 16858  15B7  0020               	movlb	0	; select bank0
 16859  15B8  00C8               	movwf	LEDsOn@topOrBottom
 16860  15B9  31A3  23E3  3195   	fcall	_LEDsOn
 16861  15BC                     l8208:	
 16862  15BC  30FF               	movlw	255
 16863  15BD  0021               	movlb	1	; select bank1
 16864  15BE  07BA               	addwf	LED_test_openshort@j^(0+128),f
 16865  15BF  30FF               	movlw	255
 16866  15C0  3DBB               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 16867  15C1  1FBB               	btfss	(LED_test_openshort@j+1)^(0+128),7
 16868  15C2  2D85               	goto	l281
 16869  15C3                     l8212:	
 16870                           
 16871                           ;LEDcomm.c: 118: }
 16872                           ;LEDcomm.c: 119: printf("\n");
 16873  15C3  3063               	movlw	low ((STR_36+28)| (0+32768))
 16874  15C4  00A0               	movwf	printf@f^(0+128)
 16875  15C5  30A8               	movlw	high ((STR_36+28)| (0+32768))
 16876  15C6  00A1               	movwf	(printf@f^(0+128)+1)
 16877  15C7  318E  26CE         	fcall	_printf
 16878  15C9  0008               	return
 16879  15CA                     __end_of_LED_test_openshort:	
 16880                           
 16881                           	psect	text59
 16882  14D7                     __ptext59:	
 16883 ;; *************** function _LED_testComm *****************
 16884 ;; Defined at:
 16885 ;;		line 158 in file "LEDcomm.c"
 16886 ;; Parameters:    Size  Location     Type
 16887 ;;  topOrBottom     2   42[BANK1 ] int 
 16888 ;; Auto vars:     Size  Location     Type
 16889 ;;  oldConfigReg    4   48[BANK1 ] long 
 16890 ;;  readResult      2   46[BANK1 ] int 
 16891 ;; Return value:  Size  Location     Type
 16892 ;;                  2   42[BANK1 ] int 
 16893 ;; Registers used:
 16894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16895 ;; Tracked objects:
 16896 ;;		On entry : 0/0
 16897 ;;		On exit  : 0/0
 16898 ;;		Unchanged: 0/0
 16899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16900 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16901 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16902 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16903 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16904 ;;Total ram usage:       10 bytes
 16905 ;; Hardware stack levels used:    1
 16906 ;; Hardware stack levels required when called:   11
 16907 ;; This function calls:
 16908 ;;		_LED_readConfig
 16909 ;;		_LED_setBrightnessRange
 16910 ;; This function is called by:
 16911 ;;		_commCheck
 16912 ;; This function uses a non-reentrant model
 16913 ;;
 16914                           
 16915                           
 16916                           ;psect for function _LED_testComm
 16917  14D7                     _LED_testComm:	
 16918                           
 16919                           ;LEDcomm.c: 160: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 16920                           
 16921                           ;incstack = 0
 16922                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16923  14D7  0021               	movlb	1	; select bank1
 16924  14D8  034A               	decf	LED_testComm@topOrBottom^(0+128),w
 16925  14D9  044B               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 16926  14DA  1903               	btfsc	3,2
 16927  14DB  2CEB               	goto	l8218
 16928  14DC  0022               	movlb	2	; select bank2
 16929  14DD  0849               	movf	(_LED_configReg_bot+3)^(0+256),w
 16930  14DE  0021               	movlb	1	; select bank1
 16931  14DF  00D3               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 16932  14E0  0022               	movlb	2	; select bank2
 16933  14E1  0848               	movf	(_LED_configReg_bot+2)^(0+256),w
 16934  14E2  0021               	movlb	1	; select bank1
 16935  14E3  00D2               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 16936  14E4  0022               	movlb	2	; select bank2
 16937  14E5  0847               	movf	(_LED_configReg_bot+1)^(0+256),w
 16938  14E6  0021               	movlb	1	; select bank1
 16939  14E7  00D1               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 16940  14E8  0022               	movlb	2	; select bank2
 16941  14E9  0846               	movf	_LED_configReg_bot^(0+256),w
 16942  14EA  2CF9               	goto	L34
 16943  14EB                     l8218:	
 16944  14EB  0022               	movlb	2	; select bank2
 16945  14EC  084D               	movf	(_LED_configReg_top+3)^(0+256),w
 16946  14ED  0021               	movlb	1	; select bank1
 16947  14EE  00D3               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 16948  14EF  0022               	movlb	2	; select bank2
 16949  14F0  084C               	movf	(_LED_configReg_top+2)^(0+256),w
 16950  14F1  0021               	movlb	1	; select bank1
 16951  14F2  00D2               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 16952  14F3  0022               	movlb	2	; select bank2
 16953  14F4  084B               	movf	(_LED_configReg_top+1)^(0+256),w
 16954  14F5  0021               	movlb	1	; select bank1
 16955  14F6  00D1               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 16956  14F7  0022               	movlb	2	; select bank2
 16957  14F8  084A               	movf	_LED_configReg_top^(0+256),w
 16958  14F9                     L34:	
 16959  14F9  0021               	movlb	1	; select bank1
 16960  14FA  00D0               	movwf	LED_testComm@oldConfigReg^(0+128)
 16961                           
 16962                           ;LEDcomm.c: 161: LED_setBrightnessRange(1, topOrBottom);
 16963  14FB  3001               	movlw	1
 16964  14FC  0020               	movlb	0	; select bank0
 16965  14FD  00C4               	movwf	LED_setBrightnessRange@range
 16966  14FE  3000               	movlw	0
 16967  14FF  00C5               	movwf	LED_setBrightnessRange@range+1
 16968  1500  0021               	movlb	1	; select bank1
 16969  1501  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 16970  1502  0020               	movlb	0	; select bank0
 16971  1503  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 16972  1504  0021               	movlb	1	; select bank1
 16973  1505  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 16974  1506  0020               	movlb	0	; select bank0
 16975  1507  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 16976  1508  3187  275C  3194   	fcall	_LED_setBrightnessRange
 16977                           
 16978                           ;LEDcomm.c: 162: int readResult = LED_readConfig(topOrBottom);
 16979  150B  0021               	movlb	1	; select bank1
 16980  150C  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 16981  150D  00C7               	movwf	(LED_readConfig@topOrBottom+1)^(0+128)
 16982  150E  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 16983  150F  00C6               	movwf	LED_readConfig@topOrBottom^(0+128)
 16984  1510  31A5  252D  3194   	fcall	_LED_readConfig
 16985  1513  0021               	movlb	1	; select bank1
 16986  1514  0847               	movf	(?_LED_readConfig+1)^(0+128),w
 16987  1515  00CF               	movwf	(LED_testComm@readResult+1)^(0+128)
 16988  1516  0846               	movf	?_LED_readConfig^(0+128),w
 16989  1517  00CE               	movwf	LED_testComm@readResult^(0+128)
 16990                           
 16991                           ;LEDcomm.c: 164: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 16992  1518  1BD3               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 16993  1519  2D29               	goto	u8410
 16994  151A  0853               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 16995  151B  1D03               	btfss	3,2
 16996  151C  2D27               	goto	u8411
 16997  151D  0852               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 16998  151E  1D03               	btfss	3,2
 16999  151F  2D27               	goto	u8411
 17000  1520  0851               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 17001  1521  1D03               	btfss	3,2
 17002  1522  2D27               	goto	u8411
 17003  1523  3001               	movlw	1
 17004  1524  0250               	subwf	LED_testComm@oldConfigReg^(0+128),w
 17005  1525  1C03               	btfss	3,0
 17006  1526  2D29               	goto	u8410
 17007  1527                     u8411:	
 17008  1527  3001               	movlw	1
 17009  1528  2D2A               	goto	u8420
 17010  1529                     u8410:	
 17011  1529  3000               	movlw	0
 17012  152A                     u8420:	
 17013  152A  00CC               	movwf	??_LED_testComm^(0+128)
 17014  152B  01CD               	clrf	(??_LED_testComm^(0+128)+1)
 17015  152C  084C               	movf	??_LED_testComm^(0+128),w
 17016  152D  0020               	movlb	0	; select bank0
 17017  152E  00C4               	movwf	LED_setBrightnessRange@range
 17018  152F  0021               	movlb	1	; select bank1
 17019  1530  084D               	movf	(??_LED_testComm+1)^(0+128),w
 17020  1531  0020               	movlb	0	; select bank0
 17021  1532  00C5               	movwf	LED_setBrightnessRange@range+1
 17022  1533  0021               	movlb	1	; select bank1
 17023  1534  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 17024  1535  0020               	movlb	0	; select bank0
 17025  1536  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 17026  1537  0021               	movlb	1	; select bank1
 17027  1538  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 17028  1539  0020               	movlb	0	; select bank0
 17029  153A  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 17030  153B  3187  275C  3194   	fcall	_LED_setBrightnessRange
 17031                           
 17032                           ;LEDcomm.c: 166: return (readResult != 7);
 17033  153E  3007               	movlw	7
 17034  153F  0021               	movlb	1	; select bank1
 17035  1540  064E               	xorwf	LED_testComm@readResult^(0+128),w
 17036  1541  044F               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 17037  1542  1903               	btfsc	3,2
 17038  1543  2D46               	goto	u8430
 17039  1544  3001               	movlw	1
 17040  1545  2D47               	goto	u8440
 17041  1546                     u8430:	
 17042  1546  3000               	movlw	0
 17043  1547                     u8440:	
 17044  1547  00CC               	movwf	??_LED_testComm^(0+128)
 17045  1548  01CD               	clrf	(??_LED_testComm^(0+128)+1)
 17046  1549  084C               	movf	??_LED_testComm^(0+128),w
 17047  154A  00CA               	movwf	?_LED_testComm^(0+128)
 17048  154B  084D               	movf	(??_LED_testComm+1)^(0+128),w
 17049  154C  00CB               	movwf	(?_LED_testComm+1)^(0+128)
 17050  154D  0008               	return
 17051  154E                     __end_of_LED_testComm:	
 17052                           
 17053                           	psect	text60
 17054  075C                     __ptext60:	
 17055 ;; *************** function _LED_setBrightnessRange *****************
 17056 ;; Defined at:
 17057 ;;		line 77 in file "LEDcomm.c"
 17058 ;; Parameters:    Size  Location     Type
 17059 ;;  range           2   36[BANK0 ] int 
 17060 ;;  topOrBottom     2   38[BANK0 ] int 
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;  LED_configRe    4    0[BANK1 ] long 
 17063 ;; Return value:  Size  Location     Type
 17064 ;;                  1    wreg      void 
 17065 ;; Registers used:
 17066 ;;		wreg, status,2, status,0, pclath, cstack
 17067 ;; Tracked objects:
 17068 ;;		On entry : 0/0
 17069 ;;		On exit  : 0/0
 17070 ;;		Unchanged: 0/0
 17071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17073 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17074 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17075 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17076 ;;Total ram usage:       14 bytes
 17077 ;; Hardware stack levels used:    1
 17078 ;; Hardware stack levels required when called:    8
 17079 ;; This function calls:
 17080 ;;		_send_2length_2bytes_IK
 17081 ;; This function is called by:
 17082 ;;		_LED_testComm
 17083 ;;		_main_initialize
 17084 ;;		_setLEDBrightnessRange
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           
 17089                           ;psect for function _LED_setBrightnessRange
 17090  075C                     _LED_setBrightnessRange:	
 17091                           
 17092                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 17093                           
 17094                           ;incstack = 0
 17095                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 17096  075C  0020               	movlb	0	; select bank0
 17097  075D  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 17098  075E  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 17099  075F  1903               	btfsc	3,2
 17100  0760  2F70               	goto	l8064
 17101  0761  0022               	movlb	2	; select bank2
 17102  0762  0849               	movf	(_LED_configReg_bot+3)^(0+256),w
 17103  0763  0021               	movlb	1	; select bank1
 17104  0764  00A3               	movwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128)
 17105  0765  0022               	movlb	2	; select bank2
 17106  0766  0848               	movf	(_LED_configReg_bot+2)^(0+256),w
 17107  0767  0021               	movlb	1	; select bank1
 17108  0768  00A2               	movwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128)
 17109  0769  0022               	movlb	2	; select bank2
 17110  076A  0847               	movf	(_LED_configReg_bot+1)^(0+256),w
 17111  076B  0021               	movlb	1	; select bank1
 17112  076C  00A1               	movwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128)
 17113  076D  0022               	movlb	2	; select bank2
 17114  076E  0846               	movf	_LED_configReg_bot^(0+256),w
 17115  076F  2F7E               	goto	L35
 17116  0770                     l8064:	
 17117  0770  0022               	movlb	2	; select bank2
 17118  0771  084D               	movf	(_LED_configReg_top+3)^(0+256),w
 17119  0772  0021               	movlb	1	; select bank1
 17120  0773  00A3               	movwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128)
 17121  0774  0022               	movlb	2	; select bank2
 17122  0775  084C               	movf	(_LED_configReg_top+2)^(0+256),w
 17123  0776  0021               	movlb	1	; select bank1
 17124  0777  00A2               	movwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128)
 17125  0778  0022               	movlb	2	; select bank2
 17126  0779  084B               	movf	(_LED_configReg_top+1)^(0+256),w
 17127  077A  0021               	movlb	1	; select bank1
 17128  077B  00A1               	movwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128)
 17129  077C  0022               	movlb	2	; select bank2
 17130  077D  084A               	movf	_LED_configReg_top^(0+256),w
 17131  077E                     L35:	
 17132  077E  0021               	movlb	1	; select bank1
 17133  077F  00A0               	movwf	LED_setBrightnessRange@LED_configReg^(0+128)
 17134                           
 17135                           ;LEDcomm.c: 80: if(range > 0)
 17136  0780  0020               	movlb	0	; select bank0
 17137  0781  0845               	movf	LED_setBrightnessRange@range+1,w
 17138  0782  3A80               	xorlw	128
 17139  0783  00C8               	movwf	??_LED_setBrightnessRange
 17140  0784  3080               	movlw	128
 17141  0785  0248               	subwf	??_LED_setBrightnessRange,w
 17142  0786  1D03               	skipz
 17143  0787  2F8A               	goto	u8125
 17144  0788  3001               	movlw	1
 17145  0789  0244               	subwf	LED_setBrightnessRange@range,w
 17146  078A                     u8125:	
 17147  078A  1C03               	skipc
 17148  078B  2F96               	goto	l8068
 17149                           
 17150                           ;LEDcomm.c: 81: LED_configReg |= (0b111);
 17151  078C  3007               	movlw	7
 17152  078D  0021               	movlb	1	; select bank1
 17153  078E  04A0               	iorwf	LED_setBrightnessRange@LED_configReg^(0+128),f
 17154  078F  3000               	movlw	0
 17155  0790  04A1               	iorwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),f
 17156  0791  3000               	movlw	0
 17157  0792  04A2               	iorwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),f
 17158  0793  3000               	movlw	0
 17159  0794  04A3               	iorwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),f
 17160  0795  2F9F               	goto	l8070
 17161  0796                     l8068:	
 17162                           
 17163                           ;LEDcomm.c: 82: else
 17164                           ;LEDcomm.c: 83: LED_configReg &= ~(0b111);
 17165  0796  30F8               	movlw	248
 17166  0797  0021               	movlb	1	; select bank1
 17167  0798  05A0               	andwf	LED_setBrightnessRange@LED_configReg^(0+128),f
 17168  0799  30FF               	movlw	255
 17169  079A  05A1               	andwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),f
 17170  079B  30FF               	movlw	255
 17171  079C  05A2               	andwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),f
 17172  079D  30FF               	movlw	255
 17173  079E  05A3               	andwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),f
 17174  079F                     l8070:	
 17175                           
 17176                           ;LEDcomm.c: 85: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 17177  079F  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 17178  07A0  0020               	movlb	0	; select bank0
 17179  07A1  00C8               	movwf	??_LED_setBrightnessRange
 17180  07A2  0021               	movlb	1	; select bank1
 17181  07A3  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 17182  07A4  0020               	movlb	0	; select bank0
 17183  07A5  00C9               	movwf	??_LED_setBrightnessRange+1
 17184  07A6  0021               	movlb	1	; select bank1
 17185  07A7  0822               	movf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),w
 17186  07A8  0020               	movlb	0	; select bank0
 17187  07A9  00CA               	movwf	??_LED_setBrightnessRange+2
 17188  07AA  0021               	movlb	1	; select bank1
 17189  07AB  0823               	movf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),w
 17190  07AC  0020               	movlb	0	; select bank0
 17191  07AD  00CB               	movwf	??_LED_setBrightnessRange+3
 17192  07AE  3010               	movlw	16
 17193  07AF  00CC               	movwf	??_LED_setBrightnessRange+4
 17194  07B0                     u8135:	
 17195  07B0  37CB               	asrf	??_LED_setBrightnessRange+3,f
 17196  07B1  0CCA               	rrf	??_LED_setBrightnessRange+2,f
 17197  07B2  0CC9               	rrf	??_LED_setBrightnessRange+1,f
 17198  07B3  0CC8               	rrf	??_LED_setBrightnessRange,f
 17199  07B4  0BCC               	decfsz	??_LED_setBrightnessRange+4,f
 17200  07B5  2FB0               	goto	u8135
 17201  07B6  0849               	movf	??_LED_setBrightnessRange+1,w
 17202  07B7  00BD               	movwf	send_2length_2bytes_IK@data1+1
 17203  07B8  0848               	movf	??_LED_setBrightnessRange,w
 17204  07B9  00BC               	movwf	send_2length_2bytes_IK@data1
 17205  07BA  0021               	movlb	1	; select bank1
 17206  07BB  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 17207  07BC  0020               	movlb	0	; select bank0
 17208  07BD  00BF               	movwf	send_2length_2bytes_IK@data2+1
 17209  07BE  0021               	movlb	1	; select bank1
 17210  07BF  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 17211  07C0  0020               	movlb	0	; select bank0
 17212  07C1  00BE               	movwf	send_2length_2bytes_IK@data2
 17213  07C2  3003               	movlw	3
 17214  07C3  00CD               	movwf	??_LED_setBrightnessRange+5
 17215  07C4  084D               	movf	??_LED_setBrightnessRange+5,w
 17216  07C5  00C0               	movwf	send_2length_2bytes_IK@latch_start
 17217  07C6  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 17218  07C7  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 17219  07C8  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 17220  07C9  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 17221  07CA  31A2  2214  3187   	fcall	_send_2length_2bytes_IK
 17222                           
 17223                           ;LEDcomm.c: 88: if (topOrBottom == 1)
 17224  07CD  0020               	movlb	0	; select bank0
 17225  07CE  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 17226  07CF  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 17227  07D0  1D03               	btfss	3,2
 17228  07D1  2FE3               	goto	l8076
 17229                           
 17230                           ;LEDcomm.c: 89: LED_configReg_top = LED_configReg;
 17231  07D2  0021               	movlb	1	; select bank1
 17232  07D3  0823               	movf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),w
 17233  07D4  0022               	movlb	2	; select bank2
 17234  07D5  00CD               	movwf	(_LED_configReg_top+3)^(0+256)
 17235  07D6  0021               	movlb	1	; select bank1
 17236  07D7  0822               	movf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),w
 17237  07D8  0022               	movlb	2	; select bank2
 17238  07D9  00CC               	movwf	(_LED_configReg_top+2)^(0+256)
 17239  07DA  0021               	movlb	1	; select bank1
 17240  07DB  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 17241  07DC  0022               	movlb	2	; select bank2
 17242  07DD  00CB               	movwf	(_LED_configReg_top+1)^(0+256)
 17243  07DE  0021               	movlb	1	; select bank1
 17244  07DF  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 17245  07E0  0022               	movlb	2	; select bank2
 17246  07E1  00CA               	movwf	_LED_configReg_top^(0+256)
 17247  07E2  0008               	return
 17248  07E3                     l8076:	
 17249                           
 17250                           ;LEDcomm.c: 90: else
 17251                           ;LEDcomm.c: 91: LED_configReg_bot = LED_configReg;
 17252  07E3  0021               	movlb	1	; select bank1
 17253  07E4  0823               	movf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),w
 17254  07E5  0022               	movlb	2	; select bank2
 17255  07E6  00C9               	movwf	(_LED_configReg_bot+3)^(0+256)
 17256  07E7  0021               	movlb	1	; select bank1
 17257  07E8  0822               	movf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),w
 17258  07E9  0022               	movlb	2	; select bank2
 17259  07EA  00C8               	movwf	(_LED_configReg_bot+2)^(0+256)
 17260  07EB  0021               	movlb	1	; select bank1
 17261  07EC  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 17262  07ED  0022               	movlb	2	; select bank2
 17263  07EE  00C7               	movwf	(_LED_configReg_bot+1)^(0+256)
 17264  07EF  0021               	movlb	1	; select bank1
 17265  07F0  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 17266  07F1  0022               	movlb	2	; select bank2
 17267  07F2  00C6               	movwf	_LED_configReg_bot^(0+256)
 17268  07F3  0008               	return
 17269  07F4                     __end_of_LED_setBrightnessRange:	
 17270                           
 17271                           	psect	text61
 17272  252D                     __ptext61:	
 17273 ;; *************** function _LED_readConfig *****************
 17274 ;; Defined at:
 17275 ;;		line 124 in file "LEDcomm.c"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;  topOrBottom     2   38[BANK1 ] int 
 17278 ;; Auto vars:     Size  Location     Type
 17279 ;;		None
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  4   38[BANK1 ] long 
 17282 ;; Registers used:
 17283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17289 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17292 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17293 ;;Total ram usage:        5 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; Hardware stack levels required when called:   10
 17296 ;; This function calls:
 17297 ;;		_LED_getData
 17298 ;;		_send_2length_2bytes_IK
 17299 ;; This function is called by:
 17300 ;;		_LED_testComm
 17301 ;; This function uses a non-reentrant model
 17302 ;;
 17303                           
 17304                           
 17305                           ;psect for function _LED_readConfig
 17306  252D                     _LED_readConfig:	
 17307                           
 17308                           ;incstack = 0
 17309                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17310                           ;LEDcomm.c: 125: do { LATCbits.LATC1 = 1; } while(0);
 17311  252D  0022               	movlb	2	; select bank2
 17312  252E  148E               	bsf	14,1	;volatile
 17313                           
 17314                           ;LEDcomm.c: 126: send_2length_2bytes_IK(0,0,5,topOrBottom);
 17315  252F  3000               	movlw	0
 17316  2530  0020               	movlb	0	; select bank0
 17317  2531  00BC               	movwf	send_2length_2bytes_IK@data1
 17318  2532  00BD               	movwf	send_2length_2bytes_IK@data1+1
 17319  2533  3000               	movlw	0
 17320  2534  00BE               	movwf	send_2length_2bytes_IK@data2
 17321  2535  00BF               	movwf	send_2length_2bytes_IK@data2+1
 17322  2536  3005               	movlw	5
 17323  2537  00C9               	movwf	??_LED_readConfig
 17324  2538  0849               	movf	??_LED_readConfig,w
 17325  2539  00C0               	movwf	send_2length_2bytes_IK@latch_start
 17326  253A  0021               	movlb	1	; select bank1
 17327  253B  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 17328  253C  0020               	movlb	0	; select bank0
 17329  253D  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 17330  253E  0021               	movlb	1	; select bank1
 17331  253F  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 17332  2540  0020               	movlb	0	; select bank0
 17333  2541  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 17334  2542  31A2  2214  31A5   	fcall	_send_2length_2bytes_IK
 17335                           
 17336                           ;LEDcomm.c: 127: return LED_getData(topOrBottom);
 17337  2545  0021               	movlb	1	; select bank1
 17338  2546  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 17339  2547  00B6               	movwf	(LED_getData@topOrBottom+1)^(0+128)
 17340  2548  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 17341  2549  00B5               	movwf	LED_getData@topOrBottom^(0+128)
 17342  254A  3196  26C6         	fcall	_LED_getData
 17343  254C  0021               	movlb	1	; select bank1
 17344  254D  0838               	movf	(?_LED_getData+3)^(0+128),w
 17345  254E  00C9               	movwf	(?_LED_readConfig+3)^(0+128)
 17346  254F  0837               	movf	(?_LED_getData+2)^(0+128),w
 17347  2550  00C8               	movwf	(?_LED_readConfig+2)^(0+128)
 17348  2551  0836               	movf	(?_LED_getData+1)^(0+128),w
 17349  2552  00C7               	movwf	(?_LED_readConfig+1)^(0+128)
 17350  2553  0835               	movf	?_LED_getData^(0+128),w
 17351  2554  00C6               	movwf	?_LED_readConfig^(0+128)
 17352  2555  0008               	return
 17353  2556                     __end_of_LED_readConfig:	
 17354                           
 17355                           	psect	text62
 17356  16C6                     __ptext62:	
 17357 ;; *************** function _LED_getData *****************
 17358 ;; Defined at:
 17359 ;;		line 130 in file "LEDcomm.c"
 17360 ;; Parameters:    Size  Location     Type
 17361 ;;  topOrBottom     2   21[BANK1 ] int 
 17362 ;; Auto vars:     Size  Location     Type
 17363 ;;  j               2   36[BANK1 ] int 
 17364 ;;  readData        4   32[BANK1 ] long 
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  4   21[BANK1 ] long 
 17367 ;; Registers used:
 17368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17374 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17375 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17376 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17377 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17378 ;;Total ram usage:       17 bytes
 17379 ;; Hardware stack levels used:    1
 17380 ;; Hardware stack levels required when called:    9
 17381 ;; This function calls:
 17382 ;;		_printf
 17383 ;; This function is called by:
 17384 ;;		_LED_readConfig
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388                           
 17389                           ;psect for function _LED_getData
 17390  16C6                     _LED_getData:	
 17391                           
 17392                           ;LEDcomm.c: 132: long readData = 0;
 17393                           
 17394                           ;incstack = 0
 17395                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17396  16C6  3000               	movlw	0
 17397  16C7  0021               	movlb	1	; select bank1
 17398  16C8  00C3               	movwf	(LED_getData@readData+3)^(0+128)
 17399  16C9  3000               	movlw	0
 17400  16CA  00C2               	movwf	(LED_getData@readData+2)^(0+128)
 17401  16CB  3000               	movlw	0
 17402  16CC  00C1               	movwf	(LED_getData@readData+1)^(0+128)
 17403  16CD  3000               	movlw	0
 17404  16CE  00C0               	movwf	LED_getData@readData^(0+128)
 17405                           
 17406                           ;LEDcomm.c: 134: if (topOrBottom == 1) do { LATBbits.LATB4 = 0; } while(0);
 17407  16CF  0335               	decf	LED_getData@topOrBottom^(0+128),w
 17408  16D0  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 17409  16D1  1D03               	btfss	3,2
 17410  16D2  2ED6               	goto	l304
 17411  16D3  0022               	movlb	2	; select bank2
 17412  16D4  120D               	bcf	13,4	;volatile
 17413  16D5  2ED8               	goto	l7878
 17414  16D6                     l304:	
 17415                           ;LEDcomm.c: 135: else do { LATCbits.LATC0 = 0; } while(0);
 17416                           
 17417  16D6  0022               	movlb	2	; select bank2
 17418  16D7  100E               	bcf	14,0	;volatile
 17419  16D8                     l7878:	
 17420                           
 17421                           ;LEDcomm.c: 137: for(int j = 23; j>=0; j--){
 17422  16D8  3017               	movlw	23
 17423  16D9  0021               	movlb	1	; select bank1
 17424  16DA  00C4               	movwf	LED_getData@j^(0+128)
 17425  16DB  3000               	movlw	0
 17426  16DC  00C5               	movwf	(LED_getData@j^(0+128)+1)
 17427  16DD  1BC5               	btfsc	(LED_getData@j+1)^(0+128),7
 17428  16DE  2F32               	goto	l314
 17429  16DF                     l308:	
 17430                           ;LEDcomm.c: 138: do { LATAbits.LATA2 = 1; } while(0);
 17431                           
 17432  16DF  0022               	movlb	2	; select bank2
 17433  16E0  150C               	bsf	12,2	;volatile
 17434                           
 17435                           ;LEDcomm.c: 140: if (topOrBottom == 1)
 17436  16E1  0021               	movlb	1	; select bank1
 17437  16E2  0335               	decf	LED_getData@topOrBottom^(0+128),w
 17438  16E3  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 17439  16E4  1D03               	btfss	3,2
 17440  16E5  2F05               	goto	l7888
 17441                           
 17442                           ;LEDcomm.c: 141: {readData |= (PORTCbits.RC6 << j);}
 17443  16E6  0020               	movlb	0	; select bank0
 17444  16E7  0E0E               	swapf	14,w	;volatile
 17445  16E8  0C89               	rrf	9,f
 17446  16E9  0C89               	rrf	9,f
 17447  16EA  3901               	andlw	1
 17448  16EB  0021               	movlb	1	; select bank1
 17449  16EC  00B9               	movwf	??_LED_getData^(0+128)
 17450  16ED  01BA               	clrf	(??_LED_getData^(0+128)+1)
 17451  16EE  0A44               	incf	LED_getData@j^(0+128),w
 17452  16EF  2EF2               	goto	u7654
 17453  16F0                     u7655:	
 17454  16F0  35B9               	lslf	??_LED_getData^(0+128),f
 17455  16F1  0DBA               	rlf	(??_LED_getData^(0+128)+1),f
 17456  16F2                     u7654:	
 17457  16F2  0B89               	decfsz	9,f
 17458  16F3  2EF0               	goto	u7655
 17459  16F4  0839               	movf	??_LED_getData^(0+128),w
 17460  16F5  00BB               	movwf	(??_LED_getData+2)^(0+128)
 17461  16F6  083A               	movf	(??_LED_getData+1)^(0+128),w
 17462  16F7  00BC               	movwf	((??_LED_getData+2)^(0+128)+1)
 17463  16F8  3000               	movlw	0
 17464  16F9  1BBC               	btfsc	((??_LED_getData+2)^(0+128)+1),7
 17465  16FA  30FF               	movlw	255
 17466  16FB  00BD               	movwf	((??_LED_getData+2)^(0+128)+2)
 17467  16FC  00BE               	movwf	((??_LED_getData+2)^(0+128)+3)
 17468  16FD  083B               	movf	(??_LED_getData+2)^(0+128),w
 17469  16FE  04C0               	iorwf	LED_getData@readData^(0+128),f
 17470  16FF  083C               	movf	(??_LED_getData+3)^(0+128),w
 17471  1700  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 17472  1701  083D               	movf	(??_LED_getData+4)^(0+128),w
 17473  1702  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 17474  1703  083E               	movf	(??_LED_getData+5)^(0+128),w
 17475  1704  2F24               	goto	L36
 17476  1705                     l7888:	
 17477                           
 17478                           ;LEDcomm.c: 142: else
 17479                           ;LEDcomm.c: 143: {readData |= (PORTCbits.RC3 << j);}
 17480  1705  0020               	movlb	0	; select bank0
 17481  1706  0C0E               	rrf	14,w	;volatile
 17482  1707  0021               	movlb	1	; select bank1
 17483  1708  00B9               	movwf	??_LED_getData^(0+128)
 17484  1709  0CB9               	rrf	??_LED_getData^(0+128),f
 17485  170A  0C39               	rrf	??_LED_getData^(0+128),w
 17486  170B  3901               	andlw	1
 17487  170C  00BA               	movwf	(??_LED_getData+1)^(0+128)
 17488  170D  01BB               	clrf	((??_LED_getData+1)^(0+128)+1)
 17489  170E  0A44               	incf	LED_getData@j^(0+128),w
 17490  170F  2F12               	goto	u7664
 17491  1710                     u7665:	
 17492  1710  35BA               	lslf	(??_LED_getData+1)^(0+128),f
 17493  1711  0DBB               	rlf	((??_LED_getData+1)^(0+128)+1),f
 17494  1712                     u7664:	
 17495  1712  0B89               	decfsz	9,f
 17496  1713  2F10               	goto	u7665
 17497  1714  083A               	movf	(??_LED_getData+1)^(0+128),w
 17498  1715  00BC               	movwf	(??_LED_getData+3)^(0+128)
 17499  1716  083B               	movf	(??_LED_getData+2)^(0+128),w
 17500  1717  00BD               	movwf	((??_LED_getData+3)^(0+128)+1)
 17501  1718  3000               	movlw	0
 17502  1719  1BBD               	btfsc	((??_LED_getData+3)^(0+128)+1),7
 17503  171A  30FF               	movlw	255
 17504  171B  00BE               	movwf	((??_LED_getData+3)^(0+128)+2)
 17505  171C  00BF               	movwf	((??_LED_getData+3)^(0+128)+3)
 17506  171D  083C               	movf	(??_LED_getData+3)^(0+128),w
 17507  171E  04C0               	iorwf	LED_getData@readData^(0+128),f
 17508  171F  083D               	movf	(??_LED_getData+4)^(0+128),w
 17509  1720  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 17510  1721  083E               	movf	(??_LED_getData+5)^(0+128),w
 17511  1722  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 17512  1723  083F               	movf	(??_LED_getData+6)^(0+128),w
 17513  1724                     L36:	
 17514  1724  04C3               	iorwf	(LED_getData@readData+3)^(0+128),f
 17515                           
 17516                           ;LEDcomm.c: 145: do { LATAbits.LATA2 = 0; } while(0);
 17517  1725  0022               	movlb	2	; select bank2
 17518  1726  110C               	bcf	12,2	;volatile
 17519                           
 17520                           ;LEDcomm.c: 146: _delay((unsigned long)((100)*(1000000/4000000.0)));
 17521  1727  3008               	movlw	8
 17522  1728                     u10177:	
 17523  1728  0B89               	decfsz	9,f
 17524  1729  2F28               	goto	u10177
 17525  172A  0000               	nop
 17526  172B  30FF               	movlw	255
 17527  172C  0021               	movlb	1	; select bank1
 17528  172D  07C4               	addwf	LED_getData@j^(0+128),f
 17529  172E  30FF               	movlw	255
 17530  172F  3DC5               	addwfc	(LED_getData@j+1)^(0+128),f
 17531  1730  1FC5               	btfss	(LED_getData@j+1)^(0+128),7
 17532  1731  2EDF               	goto	l308
 17533  1732                     l314:	
 17534                           ;LEDcomm.c: 148: }
 17535                           ;LEDcomm.c: 150: do { LATAbits.LATA2 = 0; } while(0);
 17536                           
 17537  1732  0022               	movlb	2	; select bank2
 17538  1733  110C               	bcf	12,2	;volatile
 17539                           
 17540                           ;LEDcomm.c: 151: printf("read data: %lu\n", readData);
 17541  1734  300F               	movlw	low (STR_4| (0+32768))
 17542  1735  0021               	movlb	1	; select bank1
 17543  1736  00A0               	movwf	printf@f^(0+128)
 17544  1737  30A9               	movlw	high (STR_4| (0+32768))
 17545  1738  00A1               	movwf	(printf@f^(0+128)+1)
 17546  1739  0843               	movf	(LED_getData@readData+3)^(0+128),w
 17547  173A  00A5               	movwf	((?_printf+3)^(0+128)+2)
 17548  173B  0842               	movf	(LED_getData@readData+2)^(0+128),w
 17549  173C  00A4               	movwf	((?_printf+2)^(0+128)+2)
 17550  173D  0841               	movf	(LED_getData@readData+1)^(0+128),w
 17551  173E  00A3               	movwf	((?_printf+1)^(0+128)+2)
 17552  173F  0840               	movf	LED_getData@readData^(0+128),w
 17553  1740  00A2               	movwf	(?_printf^(0+128)+2)
 17554  1741  318E  26CE         	fcall	_printf
 17555                           
 17556                           ;LEDcomm.c: 152: return readData;
 17557  1743  0021               	movlb	1	; select bank1
 17558  1744  0843               	movf	(LED_getData@readData+3)^(0+128),w
 17559  1745  00B8               	movwf	(?_LED_getData+3)^(0+128)
 17560  1746  0842               	movf	(LED_getData@readData+2)^(0+128),w
 17561  1747  00B7               	movwf	(?_LED_getData+2)^(0+128)
 17562  1748  0841               	movf	(LED_getData@readData+1)^(0+128),w
 17563  1749  00B6               	movwf	(?_LED_getData+1)^(0+128)
 17564  174A  0840               	movf	LED_getData@readData^(0+128),w
 17565  174B  00B5               	movwf	?_LED_getData^(0+128)
 17566  174C  0008               	return
 17567  174D                     __end_of_LED_getData:	
 17568                           
 17569                           	psect	text63
 17570  0DA3                     __ptext63:	
 17571 ;; *************** function _doRelMove *****************
 17572 ;; Defined at:
 17573 ;;		line 340 in file "main.c"
 17574 ;; Parameters:    Size  Location     Type
 17575 ;;		None
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;  j               2   57[BANK1 ] int 
 17578 ;; Return value:  Size  Location     Type
 17579 ;;                  1    wreg      void 
 17580 ;; Registers used:
 17581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17582 ;; Tracked objects:
 17583 ;;		On entry : 0/0
 17584 ;;		On exit  : 0/0
 17585 ;;		Unchanged: 0/0
 17586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17588 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17589 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17590 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17591 ;;Total ram usage:       18 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; Hardware stack levels required when called:   15
 17594 ;; This function calls:
 17595 ;;		_doMove
 17596 ;; This function is called by:
 17597 ;;		_main
 17598 ;; This function uses a non-reentrant model
 17599 ;;
 17600                           
 17601                           
 17602                           ;psect for function _doRelMove
 17603  0DA3                     _doRelMove:	
 17604                           
 17605                           ;main.c: 341: if(remainingSteps == 0){
 17606                           
 17607                           ;incstack = 0
 17608                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17609  0DA3  0022               	movlb	2	; select bank2
 17610  0DA4  0845               	movf	(_remainingSteps+3)^(0+256),w
 17611  0DA5  0444               	iorwf	(_remainingSteps+2)^(0+256),w
 17612  0DA6  0443               	iorwf	(_remainingSteps+1)^(0+256),w
 17613  0DA7  0442               	iorwf	_remainingSteps^(0+256),w
 17614  0DA8  1D03               	skipz
 17615  0DA9  2DBF               	goto	l9224
 17616                           
 17617                           ;main.c: 342: motionType = NONE;
 17618  0DAA  0020               	movlb	0	; select bank0
 17619  0DAB  01D5               	clrf	_motionType
 17620                           
 17621                           ;main.c: 343: moveVector_ups = 0;
 17622  0DAC  3000               	movlw	0
 17623  0DAD  0021               	movlb	1	; select bank1
 17624  0DAE  00E9               	movwf	(_moveVector_ups+3)^(0+128)
 17625  0DAF  3000               	movlw	0
 17626  0DB0  00E8               	movwf	(_moveVector_ups+2)^(0+128)
 17627  0DB1  3000               	movlw	0
 17628  0DB2  00E7               	movwf	(_moveVector_ups+1)^(0+128)
 17629  0DB3  3000               	movlw	0
 17630  0DB4  00E6               	movwf	_moveVector_ups^(0+128)
 17631                           
 17632                           ;main.c: 344: moveVector_downs = 0;
 17633  0DB5  3000               	movlw	0
 17634  0DB6  0020               	movlb	0	; select bank0
 17635  0DB7  00D1               	movwf	_moveVector_downs+3
 17636  0DB8  3000               	movlw	0
 17637  0DB9  00D0               	movwf	_moveVector_downs+2
 17638  0DBA  3000               	movlw	0
 17639  0DBB  00CF               	movwf	_moveVector_downs+1
 17640  0DBC  3000               	movlw	0
 17641  0DBD  00CE               	movwf	_moveVector_downs
 17642                           
 17643                           ;main.c: 346: }
 17644                           
 17645                           ;main.c: 345: return;
 17646  0DBE  0008               	return
 17647  0DBF                     l9224:	
 17648                           
 17649                           ;main.c: 347: else{
 17650                           ;main.c: 348: int j;
 17651                           ;main.c: 349: if (remainingSteps > 0){
 17652  0DBF  0022               	movlb	2	; select bank2
 17653  0DC0  1BC5               	btfsc	(_remainingSteps+3)^(0+256),7
 17654  0DC1  2E51               	goto	l9244
 17655  0DC2  0845               	movf	(_remainingSteps+3)^(0+256),w
 17656  0DC3  1D03               	btfss	3,2
 17657  0DC4  2DCF               	goto	l9226
 17658  0DC5  0844               	movf	(_remainingSteps+2)^(0+256),w
 17659  0DC6  1D03               	btfss	3,2
 17660  0DC7  2DCF               	goto	l9226
 17661  0DC8  0843               	movf	(_remainingSteps+1)^(0+256),w
 17662  0DC9  1D03               	btfss	3,2
 17663  0DCA  2DCF               	goto	l9226
 17664  0DCB  3001               	movlw	1
 17665  0DCC  0242               	subwf	_remainingSteps^(0+256),w
 17666  0DCD  1C03               	btfss	3,0
 17667  0DCE  2E51               	goto	l9244
 17668  0DCF                     l9226:	
 17669                           
 17670                           ;main.c: 350: moveVector_ups = 0;
 17671  0DCF  3000               	movlw	0
 17672  0DD0  0021               	movlb	1	; select bank1
 17673  0DD1  00E9               	movwf	(_moveVector_ups+3)^(0+128)
 17674  0DD2  3000               	movlw	0
 17675  0DD3  00E8               	movwf	(_moveVector_ups+2)^(0+128)
 17676  0DD4  3000               	movlw	0
 17677  0DD5  00E7               	movwf	(_moveVector_ups+1)^(0+128)
 17678  0DD6  3000               	movlw	0
 17679  0DD7  00E6               	movwf	_moveVector_ups^(0+128)
 17680                           
 17681                           ;main.c: 351: moveVector_downs = activeMask;
 17682  0DD8  0865               	movf	(_activeMask+3)^(0+128),w
 17683  0DD9  0020               	movlb	0	; select bank0
 17684  0DDA  00D1               	movwf	_moveVector_downs+3
 17685  0DDB  0021               	movlb	1	; select bank1
 17686  0DDC  0864               	movf	(_activeMask+2)^(0+128),w
 17687  0DDD  0020               	movlb	0	; select bank0
 17688  0DDE  00D0               	movwf	_moveVector_downs+2
 17689  0DDF  0021               	movlb	1	; select bank1
 17690  0DE0  0863               	movf	(_activeMask+1)^(0+128),w
 17691  0DE1  0020               	movlb	0	; select bank0
 17692  0DE2  00CF               	movwf	_moveVector_downs+1
 17693  0DE3  0021               	movlb	1	; select bank1
 17694  0DE4  0862               	movf	_activeMask^(0+128),w
 17695  0DE5  0020               	movlb	0	; select bank0
 17696  0DE6  00CE               	movwf	_moveVector_downs
 17697                           
 17698                           ;main.c: 353: doMove();
 17699  0DE7  3189  2160  318D   	fcall	_doMove
 17700                           
 17701                           ;main.c: 354: remainingSteps--;
 17702  0DEA  30FF               	movlw	255
 17703  0DEB  0022               	movlb	2	; select bank2
 17704  0DEC  07C2               	addwf	_remainingSteps^(0+256),f
 17705  0DED  30FF               	movlw	255
 17706  0DEE  3DC3               	addwfc	(_remainingSteps+1)^(0+256),f
 17707  0DEF  30FF               	movlw	255
 17708  0DF0  3DC4               	addwfc	(_remainingSteps+2)^(0+256),f
 17709  0DF1  30FF               	movlw	255
 17710  0DF2  3DC5               	addwfc	(_remainingSteps+3)^(0+256),f
 17711                           
 17712                           ;main.c: 357: for(j = 0; j<24; j++)
 17713  0DF3  0021               	movlb	1	; select bank1
 17714  0DF4  01D9               	clrf	doRelMove@j^(0+128)
 17715  0DF5  01DA               	clrf	(doRelMove@j+1)^(0+128)
 17716  0DF6                     L37:	
 17717  0DF6  085A               	movf	(doRelMove@j+1)^(0+128),w
 17718  0DF7  3A80               	xorlw	128
 17719  0DF8  00C9               	movwf	??_doRelMove^(0+128)
 17720  0DF9  3080               	movlw	128
 17721  0DFA  0249               	subwf	??_doRelMove^(0+128),w
 17722  0DFB  1D03               	skipz
 17723  0DFC  2DFF               	goto	u9445
 17724  0DFD  3018               	movlw	24
 17725  0DFE  0259               	subwf	doRelMove@j^(0+128),w
 17726  0DFF                     u9445:	
 17727  0DFF  1803               	btfsc	3,0
 17728  0E00  0008               	return
 17729                           
 17730                           ;main.c: 358: currentPositions_steps[j] += (activeMask & (1UL<<j) > 0);
 17731  0E01  0021               	movlb	1	; select bank1
 17732  0E02  0862               	movf	_activeMask^(0+128),w
 17733  0E03  00C9               	movwf	??_doRelMove^(0+128)
 17734  0E04  0863               	movf	(_activeMask+1)^(0+128),w
 17735  0E05  00CA               	movwf	(??_doRelMove^(0+128)+1)
 17736  0E06  0864               	movf	(_activeMask+2)^(0+128),w
 17737  0E07  00CB               	movwf	(??_doRelMove^(0+128)+2)
 17738  0E08  0865               	movf	(_activeMask+3)^(0+128),w
 17739  0E09  00CC               	movwf	(??_doRelMove^(0+128)+3)
 17740  0E0A  3001               	movlw	1
 17741  0E0B  00CD               	movwf	(??_doRelMove+4)^(0+128)
 17742  0E0C  3000               	movlw	0
 17743  0E0D  00CE               	movwf	((??_doRelMove+4)^(0+128)+1)
 17744  0E0E  3000               	movlw	0
 17745  0E0F  00CF               	movwf	((??_doRelMove+4)^(0+128)+2)
 17746  0E10  3000               	movlw	0
 17747  0E11  00D0               	movwf	((??_doRelMove+4)^(0+128)+3)
 17748  0E12  0A59               	incf	doRelMove@j^(0+128),w
 17749  0E13  2E18               	goto	u9450
 17750  0E14                     u9455:	
 17751  0E14  35CD               	lslf	(??_doRelMove+4)^(0+128),f
 17752  0E15  0DCE               	rlf	((??_doRelMove+4)^(0+128)+1),f
 17753  0E16  0DCF               	rlf	((??_doRelMove+4)^(0+128)+2),f
 17754  0E17  0DD0               	rlf	((??_doRelMove+4)^(0+128)+3),f
 17755  0E18                     u9450:	
 17756  0E18  0B89               	decfsz	9,f
 17757  0E19  2E14               	goto	u9455
 17758  0E1A  0850               	movf	(??_doRelMove+7)^(0+128),w
 17759  0E1B  044F               	iorwf	(??_doRelMove+6)^(0+128),w
 17760  0E1C  044E               	iorwf	(??_doRelMove+5)^(0+128),w
 17761  0E1D  044D               	iorwf	(??_doRelMove+4)^(0+128),w
 17762  0E1E  1903               	btfsc	3,2
 17763  0E1F  2E22               	goto	u9460
 17764  0E20  3001               	movlw	1
 17765  0E21  2E23               	goto	u9470
 17766  0E22                     u9460:	
 17767  0E22  3000               	movlw	0
 17768  0E23                     u9470:	
 17769  0E23  00D1               	movwf	(??_doRelMove+8)^(0+128)
 17770  0E24  01D2               	clrf	((??_doRelMove+8)^(0+128)+1)
 17771  0E25  01D3               	clrf	((??_doRelMove+8)^(0+128)+2)
 17772  0E26  01D4               	clrf	((??_doRelMove+8)^(0+128)+3)
 17773  0E27  0851               	movf	(??_doRelMove+8)^(0+128),w
 17774  0E28  05C9               	andwf	??_doRelMove^(0+128),f
 17775  0E29  0852               	movf	(??_doRelMove+9)^(0+128),w
 17776  0E2A  05CA               	andwf	(??_doRelMove^(0+128)+1),f
 17777  0E2B  0853               	movf	(??_doRelMove+10)^(0+128),w
 17778  0E2C  05CB               	andwf	(??_doRelMove^(0+128)+2),f
 17779  0E2D  0854               	movf	(??_doRelMove+11)^(0+128),w
 17780  0E2E  05CC               	andwf	(??_doRelMove^(0+128)+3),f
 17781  0E2F  085A               	movf	(doRelMove@j+1)^(0+128),w
 17782  0E30  00D6               	movwf	((??_doRelMove+12)^(0+128)+1)
 17783  0E31  0859               	movf	doRelMove@j^(0+128),w
 17784  0E32  00D5               	movwf	(??_doRelMove+12)^(0+128)
 17785  0E33  35D5               	lslf	(??_doRelMove+12)^(0+128),f
 17786  0E34  0DD6               	rlf	((??_doRelMove+12)^(0+128)+1),f
 17787  0E35  35D5               	lslf	(??_doRelMove+12)^(0+128),f
 17788  0E36  0DD6               	rlf	((??_doRelMove+12)^(0+128)+1),f
 17789  0E37  3090               	movlw	144
 17790  0E38  00D7               	movwf	(??_doRelMove+14)^(0+128)
 17791  0E39  3027               	movlw	39
 17792  0E3A  00D8               	movwf	((??_doRelMove+14)^(0+128)+1)
 17793  0E3B  0855               	movf	(??_doRelMove+12)^(0+128),w
 17794  0E3C  0757               	addwf	(??_doRelMove+14)^(0+128),w
 17795  0E3D  0086               	movwf	6
 17796  0E3E  0856               	movf	(??_doRelMove+13)^(0+128),w
 17797  0E3F  3D58               	addwfc	(??_doRelMove+15)^(0+128),w
 17798  0E40  0087               	movwf	7
 17799  0E41  0849               	movf	??_doRelMove^(0+128),w
 17800  0E42  0781               	addwf	1,f
 17801  0E43  3141               	addfsr 1,1
 17802  0E44  084A               	movf	(??_doRelMove+1)^(0+128),w
 17803  0E45  3D81               	addwfc	1,f
 17804  0E46  3141               	addfsr 1,1
 17805  0E47  084B               	movf	(??_doRelMove+2)^(0+128),w
 17806  0E48  3D81               	addwfc	1,f
 17807  0E49  3141               	addfsr 1,1
 17808  0E4A  084C               	movf	(??_doRelMove+3)^(0+128),w
 17809  0E4B  3D81               	addwfc	1,f
 17810  0E4C  3001               	movlw	1
 17811  0E4D  07D9               	addwf	doRelMove@j^(0+128),f
 17812  0E4E  3000               	movlw	0
 17813  0E4F  3DDA               	addwfc	(doRelMove@j+1)^(0+128),f
 17814  0E50  2DF6               	goto	L37
 17815  0E51                     l9244:	
 17816                           ;main.c: 360: }
 17817                           
 17818                           
 17819                           ;main.c: 361: else{
 17820                           ;main.c: 362: moveVector_ups = activeMask;
 17821  0E51  0021               	movlb	1	; select bank1
 17822  0E52  0865               	movf	(_activeMask+3)^(0+128),w
 17823  0E53  00E9               	movwf	(_moveVector_ups+3)^(0+128)
 17824  0E54  0864               	movf	(_activeMask+2)^(0+128),w
 17825  0E55  00E8               	movwf	(_moveVector_ups+2)^(0+128)
 17826  0E56  0863               	movf	(_activeMask+1)^(0+128),w
 17827  0E57  00E7               	movwf	(_moveVector_ups+1)^(0+128)
 17828  0E58  0862               	movf	_activeMask^(0+128),w
 17829  0E59  00E6               	movwf	_moveVector_ups^(0+128)
 17830                           
 17831                           ;main.c: 363: moveVector_downs = 0;
 17832  0E5A  3000               	movlw	0
 17833  0E5B  0020               	movlb	0	; select bank0
 17834  0E5C  00D1               	movwf	_moveVector_downs+3
 17835  0E5D  3000               	movlw	0
 17836  0E5E  00D0               	movwf	_moveVector_downs+2
 17837  0E5F  3000               	movlw	0
 17838  0E60  00CF               	movwf	_moveVector_downs+1
 17839  0E61  3000               	movlw	0
 17840  0E62  00CE               	movwf	_moveVector_downs
 17841                           
 17842                           ;main.c: 365: doMove();
 17843  0E63  3189  2160  318D   	fcall	_doMove
 17844                           
 17845                           ;main.c: 366: remainingSteps++;
 17846  0E66  3001               	movlw	1
 17847  0E67  0022               	movlb	2	; select bank2
 17848  0E68  07C2               	addwf	_remainingSteps^(0+256),f
 17849  0E69  3000               	movlw	0
 17850  0E6A  3DC3               	addwfc	(_remainingSteps+1)^(0+256),f
 17851  0E6B  3000               	movlw	0
 17852  0E6C  3DC4               	addwfc	(_remainingSteps+2)^(0+256),f
 17853  0E6D  3000               	movlw	0
 17854  0E6E  3DC5               	addwfc	(_remainingSteps+3)^(0+256),f
 17855                           
 17856                           ;main.c: 367: for(j = 0; j<24; j++)
 17857  0E6F  0021               	movlb	1	; select bank1
 17858  0E70  01D9               	clrf	doRelMove@j^(0+128)
 17859  0E71  01DA               	clrf	(doRelMove@j+1)^(0+128)
 17860  0E72                     L38:	
 17861  0E72  085A               	movf	(doRelMove@j+1)^(0+128),w
 17862  0E73  3A80               	xorlw	128
 17863  0E74  00C9               	movwf	??_doRelMove^(0+128)
 17864  0E75  3080               	movlw	128
 17865  0E76  0249               	subwf	??_doRelMove^(0+128),w
 17866  0E77  1D03               	skipz
 17867  0E78  2E7B               	goto	u9495
 17868  0E79  3018               	movlw	24
 17869  0E7A  0259               	subwf	doRelMove@j^(0+128),w
 17870  0E7B                     u9495:	
 17871  0E7B  1803               	btfsc	3,0
 17872  0E7C  0008               	return
 17873                           
 17874                           ;main.c: 368: currentPositions_steps[j] -= (activeMask & (1UL<<j) > 0);
 17875  0E7D  0021               	movlb	1	; select bank1
 17876  0E7E  0862               	movf	_activeMask^(0+128),w
 17877  0E7F  00C9               	movwf	??_doRelMove^(0+128)
 17878  0E80  0863               	movf	(_activeMask+1)^(0+128),w
 17879  0E81  00CA               	movwf	(??_doRelMove^(0+128)+1)
 17880  0E82  0864               	movf	(_activeMask+2)^(0+128),w
 17881  0E83  00CB               	movwf	(??_doRelMove^(0+128)+2)
 17882  0E84  0865               	movf	(_activeMask+3)^(0+128),w
 17883  0E85  00CC               	movwf	(??_doRelMove^(0+128)+3)
 17884  0E86  3001               	movlw	1
 17885  0E87  00CD               	movwf	(??_doRelMove+4)^(0+128)
 17886  0E88  3000               	movlw	0
 17887  0E89  00CE               	movwf	((??_doRelMove+4)^(0+128)+1)
 17888  0E8A  3000               	movlw	0
 17889  0E8B  00CF               	movwf	((??_doRelMove+4)^(0+128)+2)
 17890  0E8C  3000               	movlw	0
 17891  0E8D  00D0               	movwf	((??_doRelMove+4)^(0+128)+3)
 17892  0E8E  0A59               	incf	doRelMove@j^(0+128),w
 17893  0E8F  2E94               	goto	u9500
 17894  0E90                     u9505:	
 17895  0E90  35CD               	lslf	(??_doRelMove+4)^(0+128),f
 17896  0E91  0DCE               	rlf	((??_doRelMove+4)^(0+128)+1),f
 17897  0E92  0DCF               	rlf	((??_doRelMove+4)^(0+128)+2),f
 17898  0E93  0DD0               	rlf	((??_doRelMove+4)^(0+128)+3),f
 17899  0E94                     u9500:	
 17900  0E94  0B89               	decfsz	9,f
 17901  0E95  2E90               	goto	u9505
 17902  0E96  0850               	movf	(??_doRelMove+7)^(0+128),w
 17903  0E97  044F               	iorwf	(??_doRelMove+6)^(0+128),w
 17904  0E98  044E               	iorwf	(??_doRelMove+5)^(0+128),w
 17905  0E99  044D               	iorwf	(??_doRelMove+4)^(0+128),w
 17906  0E9A  1903               	btfsc	3,2
 17907  0E9B  2E9E               	goto	u9510
 17908  0E9C  3001               	movlw	1
 17909  0E9D  2E9F               	goto	u9520
 17910  0E9E                     u9510:	
 17911  0E9E  3000               	movlw	0
 17912  0E9F                     u9520:	
 17913  0E9F  00D1               	movwf	(??_doRelMove+8)^(0+128)
 17914  0EA0  01D2               	clrf	((??_doRelMove+8)^(0+128)+1)
 17915  0EA1  01D3               	clrf	((??_doRelMove+8)^(0+128)+2)
 17916  0EA2  01D4               	clrf	((??_doRelMove+8)^(0+128)+3)
 17917  0EA3  0851               	movf	(??_doRelMove+8)^(0+128),w
 17918  0EA4  05C9               	andwf	??_doRelMove^(0+128),f
 17919  0EA5  0852               	movf	(??_doRelMove+9)^(0+128),w
 17920  0EA6  05CA               	andwf	(??_doRelMove^(0+128)+1),f
 17921  0EA7  0853               	movf	(??_doRelMove+10)^(0+128),w
 17922  0EA8  05CB               	andwf	(??_doRelMove^(0+128)+2),f
 17923  0EA9  0854               	movf	(??_doRelMove+11)^(0+128),w
 17924  0EAA  05CC               	andwf	(??_doRelMove^(0+128)+3),f
 17925  0EAB  085A               	movf	(doRelMove@j+1)^(0+128),w
 17926  0EAC  00D6               	movwf	((??_doRelMove+12)^(0+128)+1)
 17927  0EAD  0859               	movf	doRelMove@j^(0+128),w
 17928  0EAE  00D5               	movwf	(??_doRelMove+12)^(0+128)
 17929  0EAF  35D5               	lslf	(??_doRelMove+12)^(0+128),f
 17930  0EB0  0DD6               	rlf	((??_doRelMove+12)^(0+128)+1),f
 17931  0EB1  35D5               	lslf	(??_doRelMove+12)^(0+128),f
 17932  0EB2  0DD6               	rlf	((??_doRelMove+12)^(0+128)+1),f
 17933  0EB3  3090               	movlw	144
 17934  0EB4  00D7               	movwf	(??_doRelMove+14)^(0+128)
 17935  0EB5  3027               	movlw	39
 17936  0EB6  00D8               	movwf	((??_doRelMove+14)^(0+128)+1)
 17937  0EB7  0855               	movf	(??_doRelMove+12)^(0+128),w
 17938  0EB8  0757               	addwf	(??_doRelMove+14)^(0+128),w
 17939  0EB9  0086               	movwf	6
 17940  0EBA  0856               	movf	(??_doRelMove+13)^(0+128),w
 17941  0EBB  3D58               	addwfc	(??_doRelMove+15)^(0+128),w
 17942  0EBC  0087               	movwf	7
 17943  0EBD  0849               	movf	??_doRelMove^(0+128),w
 17944  0EBE  0281               	subwf	1,f
 17945  0EBF  3141               	addfsr 1,1
 17946  0EC0  084A               	movf	(??_doRelMove+1)^(0+128),w
 17947  0EC1  3B81               	subwfb	1,f
 17948  0EC2  3141               	addfsr 1,1
 17949  0EC3  084B               	movf	(??_doRelMove+2)^(0+128),w
 17950  0EC4  3B81               	subwfb	1,f
 17951  0EC5  3141               	addfsr 1,1
 17952  0EC6  084C               	movf	(??_doRelMove+3)^(0+128),w
 17953  0EC7  3B81               	subwfb	1,f
 17954  0EC8  317D               	addfsr 1,-3
 17955  0EC9  3001               	movlw	1
 17956  0ECA  07D9               	addwf	doRelMove@j^(0+128),f
 17957  0ECB  3000               	movlw	0
 17958  0ECC  3DDA               	addwfc	(doRelMove@j+1)^(0+128),f
 17959  0ECD  2E72               	goto	L38
 17960  0ECE                     __end_of_doRelMove:	
 17961                           
 17962                           	psect	text64
 17963  00DB                     __ptext64:	
 17964 ;; *************** function _doAbsMove *****************
 17965 ;; Defined at:
 17966 ;;		line 308 in file "main.c"
 17967 ;; Parameters:    Size  Location     Type
 17968 ;;		None
 17969 ;; Auto vars:     Size  Location     Type
 17970 ;;  i               2   45[BANK1 ] int 
 17971 ;;  i               2   47[BANK1 ] int 
 17972 ;;  i               2   43[BANK1 ] int 
 17973 ;;  allThere        2   41[BANK1 ] int 
 17974 ;; Return value:  Size  Location     Type
 17975 ;;                  1    wreg      void 
 17976 ;; Registers used:
 17977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17978 ;; Tracked objects:
 17979 ;;		On entry : 0/0
 17980 ;;		On exit  : 0/0
 17981 ;;		Unchanged: 0/0
 17982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17984 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17985 ;;      Temps:          0       0       0       0       0       0      28       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17986 ;;      Totals:         0       0       8       0       0       0      28       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17987 ;;Total ram usage:       36 bytes
 17988 ;; Hardware stack levels used:    1
 17989 ;; Hardware stack levels required when called:   15
 17990 ;; This function calls:
 17991 ;;		_doMove
 17992 ;;		_printf
 17993 ;; This function is called by:
 17994 ;;		_main
 17995 ;; This function uses a non-reentrant model
 17996 ;;
 17997                           
 17998                           
 17999                           ;psect for function _doAbsMove
 18000  00DB                     _doAbsMove:	
 18001                           
 18002                           ;main.c: 311: int allThere=1;
 18003                           
 18004                           ;incstack = 0
 18005                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18006  00DB  3001               	movlw	1
 18007  00DC  0021               	movlb	1	; select bank1
 18008  00DD  00C9               	movwf	doAbsMove@allThere^(0+128)
 18009  00DE  3000               	movlw	0
 18010  00DF  00CA               	movwf	(doAbsMove@allThere^(0+128)+1)
 18011                           
 18012                           ;main.c: 312: for(int i=0;i<24;i++){
 18013  00E0  01CB               	clrf	doAbsMove@i^(0+128)
 18014  00E1  01CC               	clrf	(doAbsMove@i+1)^(0+128)
 18015  00E2  084C               	movf	(doAbsMove@i+1)^(0+128),w
 18016  00E3  3A80               	xorlw	128
 18017  00E4  0025               	movlb	5	; select bank5
 18018  00E5  00C8               	movwf	??_doAbsMove^(0+640)
 18019  00E6  3080               	movlw	128
 18020  00E7  0248               	subwf	??_doAbsMove^(0+640),w
 18021  00E8  1D03               	skipz
 18022  00E9  28ED               	goto	u9545
 18023  00EA  3018               	movlw	24
 18024  00EB  0021               	movlb	1	; select bank1
 18025  00EC  024B               	subwf	doAbsMove@i^(0+128),w
 18026  00ED                     u9545:	
 18027  00ED  1803               	btfsc	3,0
 18028  00EE  2973               	goto	l9278
 18029  00EF                     l9270:	
 18030                           
 18031                           ;main.c: 313: if((activeMask & (1UL << i)) > 0)
 18032  00EF  0021               	movlb	1	; select bank1
 18033  00F0  0862               	movf	_activeMask^(0+128),w
 18034  00F1  0025               	movlb	5	; select bank5
 18035  00F2  00C8               	movwf	??_doAbsMove^(0+640)
 18036  00F3  0021               	movlb	1	; select bank1
 18037  00F4  0863               	movf	(_activeMask+1)^(0+128),w
 18038  00F5  0025               	movlb	5	; select bank5
 18039  00F6  00C9               	movwf	(??_doAbsMove^(0+640)+1)
 18040  00F7  0021               	movlb	1	; select bank1
 18041  00F8  0864               	movf	(_activeMask+2)^(0+128),w
 18042  00F9  0025               	movlb	5	; select bank5
 18043  00FA  00CA               	movwf	(??_doAbsMove^(0+640)+2)
 18044  00FB  0021               	movlb	1	; select bank1
 18045  00FC  0865               	movf	(_activeMask+3)^(0+128),w
 18046  00FD  0025               	movlb	5	; select bank5
 18047  00FE  00CB               	movwf	(??_doAbsMove^(0+640)+3)
 18048  00FF  3001               	movlw	1
 18049  0100  00CC               	movwf	(??_doAbsMove+4)^(0+640)
 18050  0101  3000               	movlw	0
 18051  0102  00CD               	movwf	((??_doAbsMove+4)^(0+640)+1)
 18052  0103  3000               	movlw	0
 18053  0104  00CE               	movwf	((??_doAbsMove+4)^(0+640)+2)
 18054  0105  3000               	movlw	0
 18055  0106  00CF               	movwf	((??_doAbsMove+4)^(0+640)+3)
 18056  0107  0021               	movlb	1	; select bank1
 18057  0108  0A4B               	incf	doAbsMove@i^(0+128),w
 18058  0109  0025               	movlb	5	; select bank5
 18059  010A  290F               	goto	u9550
 18060  010B                     u9555:	
 18061  010B  35CC               	lslf	(??_doAbsMove+4)^(0+640),f
 18062  010C  0DCD               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 18063  010D  0DCE               	rlf	((??_doAbsMove+4)^(0+640)+2),f
 18064  010E  0DCF               	rlf	((??_doAbsMove+4)^(0+640)+3),f
 18065  010F                     u9550:	
 18066  010F  0B89               	decfsz	9,f
 18067  0110  290B               	goto	u9555
 18068  0111  084C               	movf	(??_doAbsMove+4)^(0+640),w
 18069  0112  05C8               	andwf	??_doAbsMove^(0+640),f
 18070  0113  084D               	movf	(??_doAbsMove+5)^(0+640),w
 18071  0114  05C9               	andwf	(??_doAbsMove^(0+640)+1),f
 18072  0115  084E               	movf	(??_doAbsMove+6)^(0+640),w
 18073  0116  05CA               	andwf	(??_doAbsMove^(0+640)+2),f
 18074  0117  084F               	movf	(??_doAbsMove+7)^(0+640),w
 18075  0118  05CB               	andwf	(??_doAbsMove^(0+640)+3),f
 18076  0119  084B               	movf	(??_doAbsMove+3)^(0+640),w
 18077  011A  044A               	iorwf	(??_doAbsMove+2)^(0+640),w
 18078  011B  0449               	iorwf	(??_doAbsMove+1)^(0+640),w
 18079  011C  0448               	iorwf	??_doAbsMove^(0+640),w
 18080  011D  1903               	skipnz
 18081  011E  2961               	goto	l9274
 18082                           
 18083                           ;main.c: 314: allThere &= (currentPositions_steps[i] == absCommand);
 18084  011F  0021               	movlb	1	; select bank1
 18085  0120  084C               	movf	(doAbsMove@i+1)^(0+128),w
 18086  0121  0025               	movlb	5	; select bank5
 18087  0122  00C9               	movwf	(??_doAbsMove^(0+640)+1)
 18088  0123  0021               	movlb	1	; select bank1
 18089  0124  084B               	movf	doAbsMove@i^(0+128),w
 18090  0125  0025               	movlb	5	; select bank5
 18091  0126  00C8               	movwf	??_doAbsMove^(0+640)
 18092  0127  35C8               	lslf	??_doAbsMove^(0+640),f
 18093  0128  0DC9               	rlf	(??_doAbsMove^(0+640)+1),f
 18094  0129  35C8               	lslf	??_doAbsMove^(0+640),f
 18095  012A  0DC9               	rlf	(??_doAbsMove^(0+640)+1),f
 18096  012B  3090               	movlw	144
 18097  012C  00CA               	movwf	(??_doAbsMove+2)^(0+640)
 18098  012D  3027               	movlw	39
 18099  012E  00CB               	movwf	((??_doAbsMove+2)^(0+640)+1)
 18100  012F  0848               	movf	??_doAbsMove^(0+640),w
 18101  0130  074A               	addwf	(??_doAbsMove+2)^(0+640),w
 18102  0131  0086               	movwf	6
 18103  0132  0849               	movf	(??_doAbsMove+1)^(0+640),w
 18104  0133  3D4B               	addwfc	(??_doAbsMove+3)^(0+640),w
 18105  0134  0087               	movwf	7
 18106  0135  3F40               	moviw [0]fsr1
 18107  0136  00CC               	movwf	(??_doAbsMove+4)^(0+640)
 18108  0137  3F41               	moviw [1]fsr1
 18109  0138  00CD               	movwf	((??_doAbsMove+4)^(0+640)+1)
 18110  0139  3F42               	moviw [2]fsr1
 18111  013A  00CE               	movwf	((??_doAbsMove+4)^(0+640)+2)
 18112  013B  3F43               	moviw [3]fsr1
 18113  013C  00CF               	movwf	((??_doAbsMove+4)^(0+640)+3)
 18114  013D  0022               	movlb	2	; select bank2
 18115  013E  0841               	movf	(_absCommand+3)^(0+256),w
 18116  013F  0025               	movlb	5	; select bank5
 18117  0140  064F               	xorwf	(??_doAbsMove+7)^(0+640),w
 18118  0141  1D03               	skipz
 18119  0142  2953               	goto	u9575
 18120  0143  0022               	movlb	2	; select bank2
 18121  0144  0840               	movf	(_absCommand+2)^(0+256),w
 18122  0145  0025               	movlb	5	; select bank5
 18123  0146  064E               	xorwf	(??_doAbsMove+6)^(0+640),w
 18124  0147  1D03               	skipz
 18125  0148  2953               	goto	u9575
 18126  0149  0022               	movlb	2	; select bank2
 18127  014A  083F               	movf	(_absCommand+1)^(0+256),w
 18128  014B  0025               	movlb	5	; select bank5
 18129  014C  064D               	xorwf	(??_doAbsMove+5)^(0+640),w
 18130  014D  1D03               	skipz
 18131  014E  2953               	goto	u9575
 18132  014F  0022               	movlb	2	; select bank2
 18133  0150  083E               	movf	_absCommand^(0+256),w
 18134  0151  0025               	movlb	5	; select bank5
 18135  0152  064C               	xorwf	(??_doAbsMove+4)^(0+640),w
 18136  0153                     u9575:	
 18137  0153  1D03               	btfss	3,2
 18138  0154  2957               	goto	u9570
 18139  0155  3001               	movlw	1
 18140  0156  2958               	goto	u9580
 18141  0157                     u9570:	
 18142  0157  3000               	movlw	0
 18143  0158                     u9580:	
 18144  0158  00D0               	movwf	(??_doAbsMove+8)^(0+640)
 18145  0159  01D1               	clrf	((??_doAbsMove+8)^(0+640)+1)
 18146  015A  0850               	movf	(??_doAbsMove+8)^(0+640),w
 18147  015B  0021               	movlb	1	; select bank1
 18148  015C  05C9               	andwf	doAbsMove@allThere^(0+128),f
 18149  015D  0025               	movlb	5	; select bank5
 18150  015E  0851               	movf	(??_doAbsMove+9)^(0+640),w
 18151  015F  0021               	movlb	1	; select bank1
 18152  0160  05CA               	andwf	(doAbsMove@allThere+1)^(0+128),f
 18153  0161                     l9274:	
 18154  0161  3001               	movlw	1
 18155  0162  0021               	movlb	1	; select bank1
 18156  0163  07CB               	addwf	doAbsMove@i^(0+128),f
 18157  0164  3000               	movlw	0
 18158  0165  3DCC               	addwfc	(doAbsMove@i+1)^(0+128),f
 18159  0166  084C               	movf	(doAbsMove@i+1)^(0+128),w
 18160  0167  3A80               	xorlw	128
 18161  0168  0025               	movlb	5	; select bank5
 18162  0169  00C8               	movwf	??_doAbsMove^(0+640)
 18163  016A  3080               	movlw	128
 18164  016B  0248               	subwf	??_doAbsMove^(0+640),w
 18165  016C  1D03               	skipz
 18166  016D  2971               	goto	u9595
 18167  016E  3018               	movlw	24
 18168  016F  0021               	movlb	1	; select bank1
 18169  0170  024B               	subwf	doAbsMove@i^(0+128),w
 18170  0171                     u9595:	
 18171  0171  1C03               	skipc
 18172  0172  28EF               	goto	l9270
 18173  0173                     l9278:	
 18174                           
 18175                           ;main.c: 315: }
 18176                           ;main.c: 317: if(allThere){
 18177  0173  0021               	movlb	1	; select bank1
 18178  0174  0849               	movf	doAbsMove@allThere^(0+128),w
 18179  0175  044A               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 18180  0176  1903               	btfsc	3,2
 18181  0177  2993               	goto	l9292
 18182                           
 18183                           ;main.c: 318: printf("abs: all there\n");
 18184  0178  30FF               	movlw	low (STR_10| (0+32768))
 18185  0179  00A0               	movwf	printf@f^(0+128)
 18186  017A  30A8               	movlw	high (STR_10| (0+32768))
 18187  017B  00A1               	movwf	(printf@f^(0+128)+1)
 18188  017C  318E  26CE         	fcall	_printf
 18189                           
 18190                           ;main.c: 319: motionType = NONE;
 18191  017E  0020               	movlb	0	; select bank0
 18192  017F  01D5               	clrf	_motionType
 18193                           
 18194                           ;main.c: 320: moveVector_ups = 0;
 18195  0180  3000               	movlw	0
 18196  0181  0021               	movlb	1	; select bank1
 18197  0182  00E9               	movwf	(_moveVector_ups+3)^(0+128)
 18198  0183  3000               	movlw	0
 18199  0184  00E8               	movwf	(_moveVector_ups+2)^(0+128)
 18200  0185  3000               	movlw	0
 18201  0186  00E7               	movwf	(_moveVector_ups+1)^(0+128)
 18202  0187  3000               	movlw	0
 18203  0188  00E6               	movwf	_moveVector_ups^(0+128)
 18204                           
 18205                           ;main.c: 321: moveVector_downs = 0;
 18206  0189  3000               	movlw	0
 18207  018A  0020               	movlb	0	; select bank0
 18208  018B  00D1               	movwf	_moveVector_downs+3
 18209  018C  3000               	movlw	0
 18210  018D  00D0               	movwf	_moveVector_downs+2
 18211  018E  3000               	movlw	0
 18212  018F  00CF               	movwf	_moveVector_downs+1
 18213  0190  3000               	movlw	0
 18214  0191  00CE               	movwf	_moveVector_downs
 18215                           
 18216                           ;main.c: 323: }
 18217                           
 18218                           ;main.c: 322: return;
 18219  0192  0008               	return
 18220  0193                     l9292:	
 18221                           
 18222                           ;main.c: 324: else{
 18223                           ;main.c: 325: for(int i=0;i<24;i++){
 18224  0193  0021               	movlb	1	; select bank1
 18225  0194  01CF               	clrf	doAbsMove@i_1601^(0+128)
 18226  0195  01D0               	clrf	(doAbsMove@i_1601+1)^(0+128)
 18227  0196  0850               	movf	(doAbsMove@i_1601+1)^(0+128),w
 18228  0197  3A80               	xorlw	128
 18229  0198  0025               	movlb	5	; select bank5
 18230  0199  00C8               	movwf	??_doAbsMove^(0+640)
 18231  019A  3080               	movlw	128
 18232  019B  0248               	subwf	??_doAbsMove^(0+640),w
 18233  019C  1D03               	skipz
 18234  019D  29A1               	goto	u9615
 18235  019E  3018               	movlw	24
 18236  019F  0021               	movlb	1	; select bank1
 18237  01A0  024F               	subwf	doAbsMove@i_1601^(0+128),w
 18238  01A1                     u9615:	
 18239  01A1  1803               	btfsc	3,0
 18240  01A2  2AD8               	goto	l9304
 18241  01A3                     l9298:	
 18242                           
 18243                           ;main.c: 327: moveVector_ups |= (activeMask & (1UL << i)) & ((currentPositions_steps[i] 
      +                          > absCommand)<<i);
 18244  01A3  0021               	movlb	1	; select bank1
 18245  01A4  0862               	movf	_activeMask^(0+128),w
 18246  01A5  0025               	movlb	5	; select bank5
 18247  01A6  00C8               	movwf	??_doAbsMove^(0+640)
 18248  01A7  0021               	movlb	1	; select bank1
 18249  01A8  0863               	movf	(_activeMask+1)^(0+128),w
 18250  01A9  0025               	movlb	5	; select bank5
 18251  01AA  00C9               	movwf	(??_doAbsMove^(0+640)+1)
 18252  01AB  0021               	movlb	1	; select bank1
 18253  01AC  0864               	movf	(_activeMask+2)^(0+128),w
 18254  01AD  0025               	movlb	5	; select bank5
 18255  01AE  00CA               	movwf	(??_doAbsMove^(0+640)+2)
 18256  01AF  0021               	movlb	1	; select bank1
 18257  01B0  0865               	movf	(_activeMask+3)^(0+128),w
 18258  01B1  0025               	movlb	5	; select bank5
 18259  01B2  00CB               	movwf	(??_doAbsMove^(0+640)+3)
 18260  01B3  0021               	movlb	1	; select bank1
 18261  01B4  0850               	movf	(doAbsMove@i_1601+1)^(0+128),w
 18262  01B5  0025               	movlb	5	; select bank5
 18263  01B6  00CD               	movwf	((??_doAbsMove+4)^(0+640)+1)
 18264  01B7  0021               	movlb	1	; select bank1
 18265  01B8  084F               	movf	doAbsMove@i_1601^(0+128),w
 18266  01B9  0025               	movlb	5	; select bank5
 18267  01BA  00CC               	movwf	(??_doAbsMove+4)^(0+640)
 18268  01BB  35CC               	lslf	(??_doAbsMove+4)^(0+640),f
 18269  01BC  0DCD               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 18270  01BD  35CC               	lslf	(??_doAbsMove+4)^(0+640),f
 18271  01BE  0DCD               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 18272  01BF  3090               	movlw	144
 18273  01C0  00CE               	movwf	(??_doAbsMove+6)^(0+640)
 18274  01C1  3027               	movlw	39
 18275  01C2  00CF               	movwf	((??_doAbsMove+6)^(0+640)+1)
 18276  01C3  084C               	movf	(??_doAbsMove+4)^(0+640),w
 18277  01C4  074E               	addwf	(??_doAbsMove+6)^(0+640),w
 18278  01C5  0086               	movwf	6
 18279  01C6  084D               	movf	(??_doAbsMove+5)^(0+640),w
 18280  01C7  3D4F               	addwfc	(??_doAbsMove+7)^(0+640),w
 18281  01C8  0087               	movwf	7
 18282  01C9  3F40               	moviw [0]fsr1
 18283  01CA  00D0               	movwf	(??_doAbsMove+8)^(0+640)
 18284  01CB  3F41               	moviw [1]fsr1
 18285  01CC  00D1               	movwf	((??_doAbsMove+8)^(0+640)+1)
 18286  01CD  3F42               	moviw [2]fsr1
 18287  01CE  00D2               	movwf	((??_doAbsMove+8)^(0+640)+2)
 18288  01CF  3F43               	moviw [3]fsr1
 18289  01D0  00D3               	movwf	((??_doAbsMove+8)^(0+640)+3)
 18290  01D1  0022               	movlb	2	; select bank2
 18291  01D2  0841               	movf	(_absCommand+3)^(0+256),w
 18292  01D3  3A80               	xorlw	128
 18293  01D4  0025               	movlb	5	; select bank5
 18294  01D5  00D4               	movwf	(??_doAbsMove+12)^(0+640)
 18295  01D6  0853               	movf	(??_doAbsMove+11)^(0+640),w
 18296  01D7  3A80               	xorlw	128
 18297  01D8  0254               	subwf	(??_doAbsMove+12)^(0+640),w
 18298  01D9  0022               	movlb	2	; select bank2
 18299  01DA  1D03               	skipz
 18300  01DB  29EC               	goto	u9623
 18301  01DC  0025               	movlb	5	; select bank5
 18302  01DD  0852               	movf	(??_doAbsMove+10)^(0+640),w
 18303  01DE  0022               	movlb	2	; select bank2
 18304  01DF  0240               	subwf	(_absCommand+2)^(0+256),w
 18305  01E0  1D03               	skipz
 18306  01E1  29EC               	goto	u9623
 18307  01E2  0025               	movlb	5	; select bank5
 18308  01E3  0851               	movf	(??_doAbsMove+9)^(0+640),w
 18309  01E4  0022               	movlb	2	; select bank2
 18310  01E5  023F               	subwf	(_absCommand+1)^(0+256),w
 18311  01E6  1D03               	skipz
 18312  01E7  29EC               	goto	u9623
 18313  01E8  0025               	movlb	5	; select bank5
 18314  01E9  0850               	movf	(??_doAbsMove+8)^(0+640),w
 18315  01EA  0022               	movlb	2	; select bank2
 18316  01EB  023E               	subwf	_absCommand^(0+256),w
 18317  01EC                     u9623:	
 18318  01EC  1803               	btfsc	3,0
 18319  01ED  29F0               	goto	u9620
 18320  01EE  3001               	movlw	1
 18321  01EF  29F1               	goto	u9630
 18322  01F0                     u9620:	
 18323  01F0  3000               	movlw	0
 18324  01F1                     u9630:	
 18325  01F1  0025               	movlb	5	; select bank5
 18326  01F2  00D5               	movwf	(??_doAbsMove+13)^(0+640)
 18327  01F3  01D6               	clrf	((??_doAbsMove+13)^(0+640)+1)
 18328  01F4  0021               	movlb	1	; select bank1
 18329  01F5  0A4F               	incf	doAbsMove@i_1601^(0+128),w
 18330  01F6  0025               	movlb	5	; select bank5
 18331  01F7  29FA               	goto	u9644
 18332  01F8                     u9645:	
 18333  01F8  35D5               	lslf	(??_doAbsMove+13)^(0+640),f
 18334  01F9  0DD6               	rlf	((??_doAbsMove+13)^(0+640)+1),f
 18335  01FA                     u9644:	
 18336  01FA  0B89               	decfsz	9,f
 18337  01FB  29F8               	goto	u9645
 18338  01FC  0855               	movf	(??_doAbsMove+13)^(0+640),w
 18339  01FD  00D7               	movwf	(??_doAbsMove+15)^(0+640)
 18340  01FE  0856               	movf	(??_doAbsMove+14)^(0+640),w
 18341  01FF  00D8               	movwf	((??_doAbsMove+15)^(0+640)+1)
 18342  0200  3000               	movlw	0
 18343  0201  1BD8               	btfsc	((??_doAbsMove+15)^(0+640)+1),7
 18344  0202  30FF               	movlw	255
 18345  0203  00D9               	movwf	((??_doAbsMove+15)^(0+640)+2)
 18346  0204  00DA               	movwf	((??_doAbsMove+15)^(0+640)+3)
 18347  0205  3001               	movlw	1
 18348  0206  00DB               	movwf	(??_doAbsMove+19)^(0+640)
 18349  0207  3000               	movlw	0
 18350  0208  00DC               	movwf	((??_doAbsMove+19)^(0+640)+1)
 18351  0209  3000               	movlw	0
 18352  020A  00DD               	movwf	((??_doAbsMove+19)^(0+640)+2)
 18353  020B  3000               	movlw	0
 18354  020C  00DE               	movwf	((??_doAbsMove+19)^(0+640)+3)
 18355  020D  0021               	movlb	1	; select bank1
 18356  020E  0A4F               	incf	doAbsMove@i_1601^(0+128),w
 18357  020F  0025               	movlb	5	; select bank5
 18358  0210  2A15               	goto	u9650
 18359  0211                     u9655:	
 18360  0211  35DB               	lslf	(??_doAbsMove+19)^(0+640),f
 18361  0212  0DDC               	rlf	((??_doAbsMove+19)^(0+640)+1),f
 18362  0213  0DDD               	rlf	((??_doAbsMove+19)^(0+640)+2),f
 18363  0214  0DDE               	rlf	((??_doAbsMove+19)^(0+640)+3),f
 18364  0215                     u9650:	
 18365  0215  0B89               	decfsz	9,f
 18366  0216  2A11               	goto	u9655
 18367  0217  085B               	movf	(??_doAbsMove+19)^(0+640),w
 18368  0218  05D7               	andwf	(??_doAbsMove+15)^(0+640),f
 18369  0219  085C               	movf	(??_doAbsMove+20)^(0+640),w
 18370  021A  05D8               	andwf	((??_doAbsMove+15)^(0+640)+1),f
 18371  021B  085D               	movf	(??_doAbsMove+21)^(0+640),w
 18372  021C  05D9               	andwf	((??_doAbsMove+15)^(0+640)+2),f
 18373  021D  085E               	movf	(??_doAbsMove+22)^(0+640),w
 18374  021E  05DA               	andwf	((??_doAbsMove+15)^(0+640)+3),f
 18375  021F  0857               	movf	(??_doAbsMove+15)^(0+640),w
 18376  0220  05C8               	andwf	??_doAbsMove^(0+640),f
 18377  0221  0858               	movf	(??_doAbsMove+16)^(0+640),w
 18378  0222  05C9               	andwf	(??_doAbsMove^(0+640)+1),f
 18379  0223  0859               	movf	(??_doAbsMove+17)^(0+640),w
 18380  0224  05CA               	andwf	(??_doAbsMove^(0+640)+2),f
 18381  0225  085A               	movf	(??_doAbsMove+18)^(0+640),w
 18382  0226  05CB               	andwf	(??_doAbsMove^(0+640)+3),f
 18383  0227  0848               	movf	??_doAbsMove^(0+640),w
 18384  0228  0021               	movlb	1	; select bank1
 18385  0229  04E6               	iorwf	_moveVector_ups^(0+128),f
 18386  022A  0025               	movlb	5	; select bank5
 18387  022B  0849               	movf	(??_doAbsMove+1)^(0+640),w
 18388  022C  0021               	movlb	1	; select bank1
 18389  022D  04E7               	iorwf	(_moveVector_ups+1)^(0+128),f
 18390  022E  0025               	movlb	5	; select bank5
 18391  022F  084A               	movf	(??_doAbsMove+2)^(0+640),w
 18392  0230  0021               	movlb	1	; select bank1
 18393  0231  04E8               	iorwf	(_moveVector_ups+2)^(0+128),f
 18394  0232  0025               	movlb	5	; select bank5
 18395  0233  084B               	movf	(??_doAbsMove+3)^(0+640),w
 18396  0234  0021               	movlb	1	; select bank1
 18397  0235  04E9               	iorwf	(_moveVector_ups+3)^(0+128),f
 18398                           
 18399                           ;main.c: 328: moveVector_downs |= (activeMask & (1UL << i)) & ((currentPositions_steps[i
      +                          ] < absCommand)<<i);
 18400  0236  0862               	movf	_activeMask^(0+128),w
 18401  0237  0025               	movlb	5	; select bank5
 18402  0238  00C8               	movwf	??_doAbsMove^(0+640)
 18403  0239  0021               	movlb	1	; select bank1
 18404  023A  0863               	movf	(_activeMask+1)^(0+128),w
 18405  023B  0025               	movlb	5	; select bank5
 18406  023C  00C9               	movwf	(??_doAbsMove^(0+640)+1)
 18407  023D  0021               	movlb	1	; select bank1
 18408  023E  0864               	movf	(_activeMask+2)^(0+128),w
 18409  023F  0025               	movlb	5	; select bank5
 18410  0240  00CA               	movwf	(??_doAbsMove^(0+640)+2)
 18411  0241  0021               	movlb	1	; select bank1
 18412  0242  0865               	movf	(_activeMask+3)^(0+128),w
 18413  0243  0025               	movlb	5	; select bank5
 18414  0244  00CB               	movwf	(??_doAbsMove^(0+640)+3)
 18415  0245  0021               	movlb	1	; select bank1
 18416  0246  0850               	movf	(doAbsMove@i_1601+1)^(0+128),w
 18417  0247  0025               	movlb	5	; select bank5
 18418  0248  00CD               	movwf	((??_doAbsMove+4)^(0+640)+1)
 18419  0249  0021               	movlb	1	; select bank1
 18420  024A  084F               	movf	doAbsMove@i_1601^(0+128),w
 18421  024B  0025               	movlb	5	; select bank5
 18422  024C  00CC               	movwf	(??_doAbsMove+4)^(0+640)
 18423  024D  35CC               	lslf	(??_doAbsMove+4)^(0+640),f
 18424  024E  0DCD               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 18425  024F  35CC               	lslf	(??_doAbsMove+4)^(0+640),f
 18426  0250  0DCD               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 18427  0251  3090               	movlw	144
 18428  0252  00CE               	movwf	(??_doAbsMove+6)^(0+640)
 18429  0253  3027               	movlw	39
 18430  0254  00CF               	movwf	((??_doAbsMove+6)^(0+640)+1)
 18431  0255  084C               	movf	(??_doAbsMove+4)^(0+640),w
 18432  0256  074E               	addwf	(??_doAbsMove+6)^(0+640),w
 18433  0257  0086               	movwf	6
 18434  0258  084D               	movf	(??_doAbsMove+5)^(0+640),w
 18435  0259  3D4F               	addwfc	(??_doAbsMove+7)^(0+640),w
 18436  025A  0087               	movwf	7
 18437  025B  3F40               	moviw [0]fsr1
 18438  025C  00D0               	movwf	(??_doAbsMove+8)^(0+640)
 18439  025D  3F41               	moviw [1]fsr1
 18440  025E  00D1               	movwf	((??_doAbsMove+8)^(0+640)+1)
 18441  025F  3F42               	moviw [2]fsr1
 18442  0260  00D2               	movwf	((??_doAbsMove+8)^(0+640)+2)
 18443  0261  3F43               	moviw [3]fsr1
 18444  0262  00D3               	movwf	((??_doAbsMove+8)^(0+640)+3)
 18445  0263  0853               	movf	(??_doAbsMove+11)^(0+640),w
 18446  0264  3A80               	xorlw	128
 18447  0265  00D4               	movwf	(??_doAbsMove+12)^(0+640)
 18448  0266  0022               	movlb	2	; select bank2
 18449  0267  0841               	movf	(_absCommand+3)^(0+256),w
 18450  0268  3A80               	xorlw	128
 18451  0269  0025               	movlb	5	; select bank5
 18452  026A  0254               	subwf	(??_doAbsMove+12)^(0+640),w
 18453  026B  1D03               	skipz
 18454  026C  2A7D               	goto	u9663
 18455  026D  0022               	movlb	2	; select bank2
 18456  026E  0840               	movf	(_absCommand+2)^(0+256),w
 18457  026F  0025               	movlb	5	; select bank5
 18458  0270  0252               	subwf	(??_doAbsMove+10)^(0+640),w
 18459  0271  1D03               	skipz
 18460  0272  2A7D               	goto	u9663
 18461  0273  0022               	movlb	2	; select bank2
 18462  0274  083F               	movf	(_absCommand+1)^(0+256),w
 18463  0275  0025               	movlb	5	; select bank5
 18464  0276  0251               	subwf	(??_doAbsMove+9)^(0+640),w
 18465  0277  1D03               	skipz
 18466  0278  2A7D               	goto	u9663
 18467  0279  0022               	movlb	2	; select bank2
 18468  027A  083E               	movf	_absCommand^(0+256),w
 18469  027B  0025               	movlb	5	; select bank5
 18470  027C  0250               	subwf	(??_doAbsMove+8)^(0+640),w
 18471  027D                     u9663:	
 18472  027D  1803               	btfsc	3,0
 18473  027E  2A81               	goto	u9660
 18474  027F  3001               	movlw	1
 18475  0280  2A82               	goto	u9670
 18476  0281                     u9660:	
 18477  0281  3000               	movlw	0
 18478  0282                     u9670:	
 18479  0282  00D5               	movwf	(??_doAbsMove+13)^(0+640)
 18480  0283  01D6               	clrf	((??_doAbsMove+13)^(0+640)+1)
 18481  0284  0021               	movlb	1	; select bank1
 18482  0285  0A4F               	incf	doAbsMove@i_1601^(0+128),w
 18483  0286  0025               	movlb	5	; select bank5
 18484  0287  2A8A               	goto	u9684
 18485  0288                     u9685:	
 18486  0288  35D5               	lslf	(??_doAbsMove+13)^(0+640),f
 18487  0289  0DD6               	rlf	((??_doAbsMove+13)^(0+640)+1),f
 18488  028A                     u9684:	
 18489  028A  0B89               	decfsz	9,f
 18490  028B  2A88               	goto	u9685
 18491  028C  0855               	movf	(??_doAbsMove+13)^(0+640),w
 18492  028D  00D7               	movwf	(??_doAbsMove+15)^(0+640)
 18493  028E  0856               	movf	(??_doAbsMove+14)^(0+640),w
 18494  028F  00D8               	movwf	((??_doAbsMove+15)^(0+640)+1)
 18495  0290  3000               	movlw	0
 18496  0291  1BD8               	btfsc	((??_doAbsMove+15)^(0+640)+1),7
 18497  0292  30FF               	movlw	255
 18498  0293  00D9               	movwf	((??_doAbsMove+15)^(0+640)+2)
 18499  0294  00DA               	movwf	((??_doAbsMove+15)^(0+640)+3)
 18500  0295  3001               	movlw	1
 18501  0296  00DB               	movwf	(??_doAbsMove+19)^(0+640)
 18502  0297  3000               	movlw	0
 18503  0298  00DC               	movwf	((??_doAbsMove+19)^(0+640)+1)
 18504  0299  3000               	movlw	0
 18505  029A  00DD               	movwf	((??_doAbsMove+19)^(0+640)+2)
 18506  029B  3000               	movlw	0
 18507  029C  00DE               	movwf	((??_doAbsMove+19)^(0+640)+3)
 18508  029D  0021               	movlb	1	; select bank1
 18509  029E  0A4F               	incf	doAbsMove@i_1601^(0+128),w
 18510  029F  0025               	movlb	5	; select bank5
 18511  02A0  2AA5               	goto	u9690
 18512  02A1                     u9695:	
 18513  02A1  35DB               	lslf	(??_doAbsMove+19)^(0+640),f
 18514  02A2  0DDC               	rlf	((??_doAbsMove+19)^(0+640)+1),f
 18515  02A3  0DDD               	rlf	((??_doAbsMove+19)^(0+640)+2),f
 18516  02A4  0DDE               	rlf	((??_doAbsMove+19)^(0+640)+3),f
 18517  02A5                     u9690:	
 18518  02A5  0B89               	decfsz	9,f
 18519  02A6  2AA1               	goto	u9695
 18520  02A7  085B               	movf	(??_doAbsMove+19)^(0+640),w
 18521  02A8  05D7               	andwf	(??_doAbsMove+15)^(0+640),f
 18522  02A9  085C               	movf	(??_doAbsMove+20)^(0+640),w
 18523  02AA  05D8               	andwf	((??_doAbsMove+15)^(0+640)+1),f
 18524  02AB  085D               	movf	(??_doAbsMove+21)^(0+640),w
 18525  02AC  05D9               	andwf	((??_doAbsMove+15)^(0+640)+2),f
 18526  02AD  085E               	movf	(??_doAbsMove+22)^(0+640),w
 18527  02AE  05DA               	andwf	((??_doAbsMove+15)^(0+640)+3),f
 18528  02AF  0857               	movf	(??_doAbsMove+15)^(0+640),w
 18529  02B0  05C8               	andwf	??_doAbsMove^(0+640),f
 18530  02B1  0858               	movf	(??_doAbsMove+16)^(0+640),w
 18531  02B2  05C9               	andwf	(??_doAbsMove^(0+640)+1),f
 18532  02B3  0859               	movf	(??_doAbsMove+17)^(0+640),w
 18533  02B4  05CA               	andwf	(??_doAbsMove^(0+640)+2),f
 18534  02B5  085A               	movf	(??_doAbsMove+18)^(0+640),w
 18535  02B6  05CB               	andwf	(??_doAbsMove^(0+640)+3),f
 18536  02B7  0848               	movf	??_doAbsMove^(0+640),w
 18537  02B8  0020               	movlb	0	; select bank0
 18538  02B9  04CE               	iorwf	_moveVector_downs,f
 18539  02BA  0025               	movlb	5	; select bank5
 18540  02BB  0849               	movf	(??_doAbsMove+1)^(0+640),w
 18541  02BC  0020               	movlb	0	; select bank0
 18542  02BD  04CF               	iorwf	_moveVector_downs+1,f
 18543  02BE  0025               	movlb	5	; select bank5
 18544  02BF  084A               	movf	(??_doAbsMove+2)^(0+640),w
 18545  02C0  0020               	movlb	0	; select bank0
 18546  02C1  04D0               	iorwf	_moveVector_downs+2,f
 18547  02C2  0025               	movlb	5	; select bank5
 18548  02C3  084B               	movf	(??_doAbsMove+3)^(0+640),w
 18549  02C4  0020               	movlb	0	; select bank0
 18550  02C5  04D1               	iorwf	_moveVector_downs+3,f
 18551  02C6  3001               	movlw	1
 18552  02C7  0021               	movlb	1	; select bank1
 18553  02C8  07CF               	addwf	doAbsMove@i_1601^(0+128),f
 18554  02C9  3000               	movlw	0
 18555  02CA  3DD0               	addwfc	(doAbsMove@i_1601+1)^(0+128),f
 18556  02CB  0850               	movf	(doAbsMove@i_1601+1)^(0+128),w
 18557  02CC  3A80               	xorlw	128
 18558  02CD  0025               	movlb	5	; select bank5
 18559  02CE  00C8               	movwf	??_doAbsMove^(0+640)
 18560  02CF  3080               	movlw	128
 18561  02D0  0248               	subwf	??_doAbsMove^(0+640),w
 18562  02D1  1D03               	skipz
 18563  02D2  2AD6               	goto	u9705
 18564  02D3  3018               	movlw	24
 18565  02D4  0021               	movlb	1	; select bank1
 18566  02D5  024F               	subwf	doAbsMove@i_1601^(0+128),w
 18567  02D6                     u9705:	
 18568  02D6  1C03               	skipc
 18569  02D7  29A3               	goto	l9298
 18570  02D8                     l9304:	
 18571                           
 18572                           ;main.c: 330: }
 18573                           ;main.c: 331: doMove();
 18574  02D8  3189  2160  3180   	fcall	_doMove
 18575                           
 18576                           ;main.c: 333: for(int i=0;i<24;i++)
 18577  02DB  0021               	movlb	1	; select bank1
 18578  02DC  01CD               	clrf	doAbsMove@i_1603^(0+128)
 18579  02DD  01CE               	clrf	(doAbsMove@i_1603+1)^(0+128)
 18580  02DE                     L39:	
 18581  02DE  084E               	movf	(doAbsMove@i_1603+1)^(0+128),w
 18582  02DF  3A80               	xorlw	128
 18583  02E0  0025               	movlb	5	; select bank5
 18584  02E1  00C8               	movwf	??_doAbsMove^(0+640)
 18585  02E2  3080               	movlw	128
 18586  02E3  0248               	subwf	??_doAbsMove^(0+640),w
 18587  02E4  1D03               	skipz
 18588  02E5  2AE9               	goto	u9715
 18589  02E6  3018               	movlw	24
 18590  02E7  0021               	movlb	1	; select bank1
 18591  02E8  024D               	subwf	doAbsMove@i_1603^(0+128),w
 18592  02E9                     u9715:	
 18593  02E9  1803               	btfsc	3,0
 18594  02EA  0008               	return
 18595                           
 18596                           ;main.c: 334: currentPositions_steps[i] += ((moveVector_downs & (1UL << i)) > 0) - ((mov
      +                          eVector_ups & (1UL << i)) > 0);
 18597  02EB  0021               	movlb	1	; select bank1
 18598  02EC  0866               	movf	_moveVector_ups^(0+128),w
 18599  02ED  0025               	movlb	5	; select bank5
 18600  02EE  00C8               	movwf	??_doAbsMove^(0+640)
 18601  02EF  0021               	movlb	1	; select bank1
 18602  02F0  0867               	movf	(_moveVector_ups+1)^(0+128),w
 18603  02F1  0025               	movlb	5	; select bank5
 18604  02F2  00C9               	movwf	(??_doAbsMove^(0+640)+1)
 18605  02F3  0021               	movlb	1	; select bank1
 18606  02F4  0868               	movf	(_moveVector_ups+2)^(0+128),w
 18607  02F5  0025               	movlb	5	; select bank5
 18608  02F6  00CA               	movwf	(??_doAbsMove^(0+640)+2)
 18609  02F7  0021               	movlb	1	; select bank1
 18610  02F8  0869               	movf	(_moveVector_ups+3)^(0+128),w
 18611  02F9  0025               	movlb	5	; select bank5
 18612  02FA  00CB               	movwf	(??_doAbsMove^(0+640)+3)
 18613  02FB  3001               	movlw	1
 18614  02FC  00CC               	movwf	(??_doAbsMove+4)^(0+640)
 18615  02FD  3000               	movlw	0
 18616  02FE  00CD               	movwf	((??_doAbsMove+4)^(0+640)+1)
 18617  02FF  3000               	movlw	0
 18618  0300  00CE               	movwf	((??_doAbsMove+4)^(0+640)+2)
 18619  0301  3000               	movlw	0
 18620  0302  00CF               	movwf	((??_doAbsMove+4)^(0+640)+3)
 18621  0303  0021               	movlb	1	; select bank1
 18622  0304  0A4D               	incf	doAbsMove@i_1603^(0+128),w
 18623  0305  0025               	movlb	5	; select bank5
 18624  0306  2B0B               	goto	u9720
 18625  0307                     u9725:	
 18626  0307  35CC               	lslf	(??_doAbsMove+4)^(0+640),f
 18627  0308  0DCD               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 18628  0309  0DCE               	rlf	((??_doAbsMove+4)^(0+640)+2),f
 18629  030A  0DCF               	rlf	((??_doAbsMove+4)^(0+640)+3),f
 18630  030B                     u9720:	
 18631  030B  0B89               	decfsz	9,f
 18632  030C  2B07               	goto	u9725
 18633  030D  084C               	movf	(??_doAbsMove+4)^(0+640),w
 18634  030E  05C8               	andwf	??_doAbsMove^(0+640),f
 18635  030F  084D               	movf	(??_doAbsMove+5)^(0+640),w
 18636  0310  05C9               	andwf	(??_doAbsMove^(0+640)+1),f
 18637  0311  084E               	movf	(??_doAbsMove+6)^(0+640),w
 18638  0312  05CA               	andwf	(??_doAbsMove^(0+640)+2),f
 18639  0313  084F               	movf	(??_doAbsMove+7)^(0+640),w
 18640  0314  05CB               	andwf	(??_doAbsMove^(0+640)+3),f
 18641  0315  084B               	movf	(??_doAbsMove+3)^(0+640),w
 18642  0316  044A               	iorwf	(??_doAbsMove+2)^(0+640),w
 18643  0317  0449               	iorwf	(??_doAbsMove+1)^(0+640),w
 18644  0318  0448               	iorwf	??_doAbsMove^(0+640),w
 18645  0319  1903               	btfsc	3,2
 18646  031A  2B1D               	goto	u9730
 18647  031B  3001               	movlw	1
 18648  031C  2B1E               	goto	u9740
 18649  031D                     u9730:	
 18650  031D  3000               	movlw	0
 18651  031E                     u9740:	
 18652  031E  00D0               	movwf	(??_doAbsMove+8)^(0+640)
 18653  031F  01D1               	clrf	((??_doAbsMove+8)^(0+640)+1)
 18654  0320  09D0               	comf	(??_doAbsMove+8)^(0+640),f
 18655  0321  09D1               	comf	((??_doAbsMove+8)^(0+640)+1),f
 18656  0322  0AD0               	incf	(??_doAbsMove+8)^(0+640),f
 18657  0323  1903               	skipnz
 18658  0324  0AD1               	incf	((??_doAbsMove+8)^(0+640)+1),f
 18659  0325  0020               	movlb	0	; select bank0
 18660  0326  084E               	movf	_moveVector_downs,w
 18661  0327  0025               	movlb	5	; select bank5
 18662  0328  00D2               	movwf	(??_doAbsMove+10)^(0+640)
 18663  0329  0020               	movlb	0	; select bank0
 18664  032A  084F               	movf	_moveVector_downs+1,w
 18665  032B  0025               	movlb	5	; select bank5
 18666  032C  00D3               	movwf	((??_doAbsMove+10)^(0+640)+1)
 18667  032D  0020               	movlb	0	; select bank0
 18668  032E  0850               	movf	_moveVector_downs+2,w
 18669  032F  0025               	movlb	5	; select bank5
 18670  0330  00D4               	movwf	((??_doAbsMove+10)^(0+640)+2)
 18671  0331  0020               	movlb	0	; select bank0
 18672  0332  0851               	movf	_moveVector_downs+3,w
 18673  0333  0025               	movlb	5	; select bank5
 18674  0334  00D5               	movwf	((??_doAbsMove+10)^(0+640)+3)
 18675  0335  3001               	movlw	1
 18676  0336  00D6               	movwf	(??_doAbsMove+14)^(0+640)
 18677  0337  3000               	movlw	0
 18678  0338  00D7               	movwf	((??_doAbsMove+14)^(0+640)+1)
 18679  0339  3000               	movlw	0
 18680  033A  00D8               	movwf	((??_doAbsMove+14)^(0+640)+2)
 18681  033B  3000               	movlw	0
 18682  033C  00D9               	movwf	((??_doAbsMove+14)^(0+640)+3)
 18683  033D  0021               	movlb	1	; select bank1
 18684  033E  0A4D               	incf	doAbsMove@i_1603^(0+128),w
 18685  033F  0025               	movlb	5	; select bank5
 18686  0340  2B45               	goto	u9750
 18687  0341                     u9755:	
 18688  0341  35D6               	lslf	(??_doAbsMove+14)^(0+640),f
 18689  0342  0DD7               	rlf	((??_doAbsMove+14)^(0+640)+1),f
 18690  0343  0DD8               	rlf	((??_doAbsMove+14)^(0+640)+2),f
 18691  0344  0DD9               	rlf	((??_doAbsMove+14)^(0+640)+3),f
 18692  0345                     u9750:	
 18693  0345  0B89               	decfsz	9,f
 18694  0346  2B41               	goto	u9755
 18695  0347  0856               	movf	(??_doAbsMove+14)^(0+640),w
 18696  0348  05D2               	andwf	(??_doAbsMove+10)^(0+640),f
 18697  0349  0857               	movf	(??_doAbsMove+15)^(0+640),w
 18698  034A  05D3               	andwf	((??_doAbsMove+10)^(0+640)+1),f
 18699  034B  0858               	movf	(??_doAbsMove+16)^(0+640),w
 18700  034C  05D4               	andwf	((??_doAbsMove+10)^(0+640)+2),f
 18701  034D  0859               	movf	(??_doAbsMove+17)^(0+640),w
 18702  034E  05D5               	andwf	((??_doAbsMove+10)^(0+640)+3),f
 18703  034F  0855               	movf	(??_doAbsMove+13)^(0+640),w
 18704  0350  0454               	iorwf	(??_doAbsMove+12)^(0+640),w
 18705  0351  0453               	iorwf	(??_doAbsMove+11)^(0+640),w
 18706  0352  0452               	iorwf	(??_doAbsMove+10)^(0+640),w
 18707  0353  1903               	btfsc	3,2
 18708  0354  2B57               	goto	u9760
 18709  0355  3001               	movlw	1
 18710  0356  2B58               	goto	u9770
 18711  0357                     u9760:	
 18712  0357  3000               	movlw	0
 18713  0358                     u9770:	
 18714  0358  0750               	addwf	(??_doAbsMove+8)^(0+640),w
 18715  0359  00DA               	movwf	(??_doAbsMove+18)^(0+640)
 18716  035A  0851               	movf	(??_doAbsMove+9)^(0+640),w
 18717  035B  1803               	skipnc
 18718  035C  0A51               	incf	(??_doAbsMove+9)^(0+640),w
 18719  035D  00DB               	movwf	((??_doAbsMove+18)^(0+640)+1)
 18720  035E  085A               	movf	(??_doAbsMove+18)^(0+640),w
 18721  035F  00DC               	movwf	(??_doAbsMove+20)^(0+640)
 18722  0360  085B               	movf	(??_doAbsMove+19)^(0+640),w
 18723  0361  00DD               	movwf	((??_doAbsMove+20)^(0+640)+1)
 18724  0362  3000               	movlw	0
 18725  0363  1BDD               	btfsc	((??_doAbsMove+20)^(0+640)+1),7
 18726  0364  30FF               	movlw	255
 18727  0365  00DE               	movwf	((??_doAbsMove+20)^(0+640)+2)
 18728  0366  00DF               	movwf	((??_doAbsMove+20)^(0+640)+3)
 18729  0367  0021               	movlb	1	; select bank1
 18730  0368  084E               	movf	(doAbsMove@i_1603+1)^(0+128),w
 18731  0369  0025               	movlb	5	; select bank5
 18732  036A  00E1               	movwf	((??_doAbsMove+24)^(0+640)+1)
 18733  036B  0021               	movlb	1	; select bank1
 18734  036C  084D               	movf	doAbsMove@i_1603^(0+128),w
 18735  036D  0025               	movlb	5	; select bank5
 18736  036E  00E0               	movwf	(??_doAbsMove+24)^(0+640)
 18737  036F  35E0               	lslf	(??_doAbsMove+24)^(0+640),f
 18738  0370  0DE1               	rlf	((??_doAbsMove+24)^(0+640)+1),f
 18739  0371  35E0               	lslf	(??_doAbsMove+24)^(0+640),f
 18740  0372  0DE1               	rlf	((??_doAbsMove+24)^(0+640)+1),f
 18741  0373  3090               	movlw	144
 18742  0374  00E2               	movwf	(??_doAbsMove+26)^(0+640)
 18743  0375  3027               	movlw	39
 18744  0376  00E3               	movwf	((??_doAbsMove+26)^(0+640)+1)
 18745  0377  0860               	movf	(??_doAbsMove+24)^(0+640),w
 18746  0378  0762               	addwf	(??_doAbsMove+26)^(0+640),w
 18747  0379  0086               	movwf	6
 18748  037A  0861               	movf	(??_doAbsMove+25)^(0+640),w
 18749  037B  3D63               	addwfc	(??_doAbsMove+27)^(0+640),w
 18750  037C  0087               	movwf	7
 18751  037D  085C               	movf	(??_doAbsMove+20)^(0+640),w
 18752  037E  0781               	addwf	1,f
 18753  037F  3141               	addfsr 1,1
 18754  0380  085D               	movf	(??_doAbsMove+21)^(0+640),w
 18755  0381  3D81               	addwfc	1,f
 18756  0382  3141               	addfsr 1,1
 18757  0383  085E               	movf	(??_doAbsMove+22)^(0+640),w
 18758  0384  3D81               	addwfc	1,f
 18759  0385  3141               	addfsr 1,1
 18760  0386  085F               	movf	(??_doAbsMove+23)^(0+640),w
 18761  0387  3D81               	addwfc	1,f
 18762  0388  3001               	movlw	1
 18763  0389  0021               	movlb	1	; select bank1
 18764  038A  07CD               	addwf	doAbsMove@i_1603^(0+128),f
 18765  038B  3000               	movlw	0
 18766  038C  3DCE               	addwfc	(doAbsMove@i_1603+1)^(0+128),f
 18767  038D  2ADE               	goto	L39
 18768  038E                     __end_of_doAbsMove:	
 18769                           
 18770                           	psect	text65
 18771  0960                     __ptext65:	
 18772 ;; *************** function _doMove *****************
 18773 ;; Defined at:
 18774 ;;		line 236 in file "main.c"
 18775 ;; Parameters:    Size  Location     Type
 18776 ;;		None
 18777 ;; Auto vars:     Size  Location     Type
 18778 ;;  t               2   39[BANK1 ] int 
 18779 ;;  t               2   37[BANK1 ] int 
 18780 ;;  t               2   35[BANK1 ] int 
 18781 ;; Return value:  Size  Location     Type
 18782 ;;                  2   28[BANK1 ] int 
 18783 ;; Registers used:
 18784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18785 ;; Tracked objects:
 18786 ;;		On entry : 0/0
 18787 ;;		On exit  : 0/0
 18788 ;;		Unchanged: 0/0
 18789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18790 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18791 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18792 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18793 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18794 ;;Total ram usage:       13 bytes
 18795 ;; Hardware stack levels used:    1
 18796 ;; Hardware stack levels required when called:   14
 18797 ;; This function calls:
 18798 ;;		_LEDsOn
 18799 ;;		_TMR0_StartTimer
 18800 ;;		_TMR2_StartTimer
 18801 ;;		_calcHeaterPins
 18802 ;;		_drv_write_DC
 18803 ;;		_drv_write_wvfrm
 18804 ;; This function is called by:
 18805 ;;		_doAbsMove
 18806 ;;		_doRelMove
 18807 ;;		_execCmd
 18808 ;; This function uses a non-reentrant model
 18809 ;;
 18810                           
 18811                           
 18812                           ;psect for function _doMove
 18813  0960                     _doMove:	
 18814                           
 18815                           ;main.c: 238: calcHeaterPins();
 18816                           
 18817                           ;incstack = 0
 18818                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18819  0960  3193  23EB  3189   	fcall	_calcHeaterPins
 18820                           
 18821                           ;main.c: 240: do { LATCbits.LATC1 = 1; } while(0);
 18822  0963  0022               	movlb	2	; select bank2
 18823  0964  148E               	bsf	14,1	;volatile
 18824                           
 18825                           ;main.c: 241: LEDsOn(first_top, 1);
 18826  0965  0855               	movf	(_first_top+3)^(0+256),w
 18827  0966  0020               	movlb	0	; select bank0
 18828  0967  00C7               	movwf	LEDsOn@LEDpins+3
 18829  0968  0022               	movlb	2	; select bank2
 18830  0969  0854               	movf	(_first_top+2)^(0+256),w
 18831  096A  0020               	movlb	0	; select bank0
 18832  096B  00C6               	movwf	LEDsOn@LEDpins+2
 18833  096C  0022               	movlb	2	; select bank2
 18834  096D  0853               	movf	(_first_top+1)^(0+256),w
 18835  096E  0020               	movlb	0	; select bank0
 18836  096F  00C5               	movwf	LEDsOn@LEDpins+1
 18837  0970  0022               	movlb	2	; select bank2
 18838  0971  0852               	movf	_first_top^(0+256),w
 18839  0972  0020               	movlb	0	; select bank0
 18840  0973  00C4               	movwf	LEDsOn@LEDpins
 18841  0974  3001               	movlw	1
 18842  0975  00C8               	movwf	LEDsOn@topOrBottom
 18843  0976  3000               	movlw	0
 18844  0977  00C9               	movwf	LEDsOn@topOrBottom+1
 18845  0978  31A3  23E3  3189   	fcall	_LEDsOn
 18846                           
 18847                           ;main.c: 242: LEDsOn(first_bottom,2);
 18848  097B  0022               	movlb	2	; select bank2
 18849  097C  0859               	movf	(_first_bottom+3)^(0+256),w
 18850  097D  0020               	movlb	0	; select bank0
 18851  097E  00C7               	movwf	LEDsOn@LEDpins+3
 18852  097F  0022               	movlb	2	; select bank2
 18853  0980  0858               	movf	(_first_bottom+2)^(0+256),w
 18854  0981  0020               	movlb	0	; select bank0
 18855  0982  00C6               	movwf	LEDsOn@LEDpins+2
 18856  0983  0022               	movlb	2	; select bank2
 18857  0984  0857               	movf	(_first_bottom+1)^(0+256),w
 18858  0985  0020               	movlb	0	; select bank0
 18859  0986  00C5               	movwf	LEDsOn@LEDpins+1
 18860  0987  0022               	movlb	2	; select bank2
 18861  0988  0856               	movf	_first_bottom^(0+256),w
 18862  0989  0020               	movlb	0	; select bank0
 18863  098A  00C4               	movwf	LEDsOn@LEDpins
 18864  098B  3002               	movlw	2
 18865  098C  00C8               	movwf	LEDsOn@topOrBottom
 18866  098D  3000               	movlw	0
 18867  098E  00C9               	movwf	LEDsOn@topOrBottom+1
 18868  098F  31A3  23E3  3189   	fcall	_LEDsOn
 18869                           
 18870                           ;main.c: 243: do { LATCbits.LATC1 = 0; } while(0);
 18871  0992  0022               	movlb	2	; select bank2
 18872  0993  108E               	bcf	14,1	;volatile
 18873                           
 18874                           ;main.c: 244: for(int t=0; t<heater_pre_time_ms; t++) _delay((unsigned long)((1)*(100000
      +                          0/4000.0)));
 18875  0994  0021               	movlb	1	; select bank1
 18876  0995  01C3               	clrf	doMove@t^(0+128)
 18877  0996  01C4               	clrf	(doMove@t+1)^(0+128)
 18878  0997                     l1111:	
 18879  0997  0844               	movf	(doMove@t+1)^(0+128),w
 18880  0998  3A80               	xorlw	128
 18881  0999  00BE               	movwf	??_doMove^(0+128)
 18882  099A  086D               	movf	(_heater_pre_time_ms+1)^(0+128),w
 18883  099B  3A80               	xorlw	128
 18884  099C  023E               	subwf	??_doMove^(0+128),w
 18885  099D  1D03               	skipz
 18886  099E  29A1               	goto	u8675
 18887  099F  086C               	movf	_heater_pre_time_ms^(0+128),w
 18888  09A0  0243               	subwf	doMove@t^(0+128),w
 18889  09A1                     u8675:	
 18890  09A1  1803               	btfsc	3,0
 18891  09A2  29AD               	goto	l8514
 18892  09A3  3053               	movlw	83
 18893  09A4                     u10187:	
 18894  09A4  0B89               	decfsz	9,f
 18895  09A5  29A4               	goto	u10187
 18896  09A6  0000               	nop
 18897  09A7  3001               	movlw	1
 18898  09A8  0021               	movlb	1	; select bank1
 18899  09A9  07C3               	addwf	doMove@t^(0+128),f
 18900  09AA  3000               	movlw	0
 18901  09AB  3DC4               	addwfc	(doMove@t+1)^(0+128),f
 18902  09AC  2997               	goto	l1111
 18903  09AD                     l8514:	
 18904                           
 18905                           ;main.c: 245: TMR2_StartTimer();
 18906  09AD  31AF  275E  3189   	fcall	_TMR2_StartTimer
 18907                           
 18908                           ;main.c: 246: TMR0_StartTimer();
 18909  09B0  31AF  275B  3189   	fcall	_TMR0_StartTimer
 18910                           
 18911                           ;main.c: 248: drv_write_wvfrm(1);
 18912  09B3  3001               	movlw	1
 18913  09B4  31A2  222C  3189   	fcall	_drv_write_wvfrm
 18914                           
 18915                           ;main.c: 249: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 18916  09B7  0021               	movlb	1	; select bank1
 18917  09B8  086F               	movf	(_drv_peak_val+1)^(0+128),w
 18918  09B9  00B6               	movwf	(drv_write_DC@val+1)^(0+128)
 18919  09BA  086E               	movf	_drv_peak_val^(0+128),w
 18920  09BB  00B5               	movwf	drv_write_DC@val^(0+128)
 18921  09BC  086B               	movf	(_piezo_on_time_ms+1)^(0+128),w
 18922  09BD  00B8               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 18923  09BE  086A               	movf	_piezo_on_time_ms^(0+128),w
 18924  09BF  00B7               	movwf	drv_write_DC@duration_ms^(0+128)
 18925  09C0  3191  21E6  3189   	fcall	_drv_write_DC
 18926                           
 18927                           ;main.c: 250: drv_write_wvfrm(0);
 18928  09C3  3000               	movlw	0
 18929  09C4  31A2  222C  3189   	fcall	_drv_write_wvfrm
 18930                           
 18931                           ;main.c: 251: for(int t=0; t<heater_post_time_ms; t++) _delay((unsigned long)((1)*(10000
      +                          00/4000.0)));
 18932  09C7  0021               	movlb	1	; select bank1
 18933  09C8  01C5               	clrf	doMove@t_1585^(0+128)
 18934  09C9  01C6               	clrf	(doMove@t_1585+1)^(0+128)
 18935  09CA                     l1114:	
 18936  09CA  0846               	movf	(doMove@t_1585+1)^(0+128),w
 18937  09CB  3A80               	xorlw	128
 18938  09CC  00BE               	movwf	??_doMove^(0+128)
 18939  09CD  0022               	movlb	2	; select bank2
 18940  09CE  086D               	movf	(_heater_post_time_ms+1)^(0+256),w
 18941  09CF  3A80               	xorlw	128
 18942  09D0  0021               	movlb	1	; select bank1
 18943  09D1  023E               	subwf	??_doMove^(0+128),w
 18944  09D2  1D03               	skipz
 18945  09D3  29D8               	goto	u8685
 18946  09D4  0022               	movlb	2	; select bank2
 18947  09D5  086C               	movf	_heater_post_time_ms^(0+256),w
 18948  09D6  0021               	movlb	1	; select bank1
 18949  09D7  0245               	subwf	doMove@t_1585^(0+128),w
 18950  09D8                     u8685:	
 18951  09D8  1803               	btfsc	3,0
 18952  09D9  29E4               	goto	l1117
 18953  09DA  3053               	movlw	83
 18954  09DB                     u10197:	
 18955  09DB  0B89               	decfsz	9,f
 18956  09DC  29DB               	goto	u10197
 18957  09DD  0000               	nop
 18958  09DE  3001               	movlw	1
 18959  09DF  0021               	movlb	1	; select bank1
 18960  09E0  07C5               	addwf	doMove@t_1585^(0+128),f
 18961  09E1  3000               	movlw	0
 18962  09E2  3DC6               	addwfc	(doMove@t_1585+1)^(0+128),f
 18963  09E3  29CA               	goto	l1114
 18964  09E4                     l1117:	
 18965                           ;main.c: 253: do { LATCbits.LATC1 = 1; } while(0);
 18966                           
 18967  09E4  0022               	movlb	2	; select bank2
 18968  09E5  148E               	bsf	14,1	;volatile
 18969                           
 18970                           ;main.c: 255: for(int t=0; t<inter_step_interval_ms; t++) _delay((unsigned long)((1)*(10
      +                          00000/4000.0)));
 18971  09E6  0021               	movlb	1	; select bank1
 18972  09E7  01C7               	clrf	doMove@t_1586^(0+128)
 18973  09E8  01C8               	clrf	(doMove@t_1586+1)^(0+128)
 18974  09E9                     l1119:	
 18975  09E9  0847               	movf	doMove@t_1586^(0+128),w
 18976  09EA  00BE               	movwf	??_doMove^(0+128)
 18977  09EB  0848               	movf	(doMove@t_1586+1)^(0+128),w
 18978  09EC  00BF               	movwf	(??_doMove^(0+128)+1)
 18979  09ED  3000               	movlw	0
 18980  09EE  1BBF               	btfsc	(??_doMove^(0+128)+1),7
 18981  09EF  30FF               	movlw	255
 18982  09F0  00C0               	movwf	(??_doMove^(0+128)+2)
 18983  09F1  00C1               	movwf	(??_doMove^(0+128)+3)
 18984  09F2  0841               	movf	(??_doMove+3)^(0+128),w
 18985  09F3  3A80               	xorlw	128
 18986  09F4  00C2               	movwf	(??_doMove+4)^(0+128)
 18987  09F5  0022               	movlb	2	; select bank2
 18988  09F6  086B               	movf	(_inter_step_interval_ms+3)^(0+256),w
 18989  09F7  3A80               	xorlw	128
 18990  09F8  0021               	movlb	1	; select bank1
 18991  09F9  0242               	subwf	(??_doMove+4)^(0+128),w
 18992  09FA  1D03               	skipz
 18993  09FB  2A0C               	goto	u8693
 18994  09FC  0022               	movlb	2	; select bank2
 18995  09FD  086A               	movf	(_inter_step_interval_ms+2)^(0+256),w
 18996  09FE  0021               	movlb	1	; select bank1
 18997  09FF  0240               	subwf	(??_doMove+2)^(0+128),w
 18998  0A00  1D03               	skipz
 18999  0A01  2A0C               	goto	u8693
 19000  0A02  0022               	movlb	2	; select bank2
 19001  0A03  0869               	movf	(_inter_step_interval_ms+1)^(0+256),w
 19002  0A04  0021               	movlb	1	; select bank1
 19003  0A05  023F               	subwf	(??_doMove+1)^(0+128),w
 19004  0A06  1D03               	skipz
 19005  0A07  2A0C               	goto	u8693
 19006  0A08  0022               	movlb	2	; select bank2
 19007  0A09  0868               	movf	_inter_step_interval_ms^(0+256),w
 19008  0A0A  0021               	movlb	1	; select bank1
 19009  0A0B  023E               	subwf	??_doMove^(0+128),w
 19010  0A0C                     u8693:	
 19011  0A0C  1803               	btfsc	3,0
 19012  0A0D  2A18               	goto	l8530
 19013  0A0E  3053               	movlw	83
 19014  0A0F                     u10207:	
 19015  0A0F  0B89               	decfsz	9,f
 19016  0A10  2A0F               	goto	u10207
 19017  0A11  0000               	nop
 19018  0A12  3001               	movlw	1
 19019  0A13  0021               	movlb	1	; select bank1
 19020  0A14  07C7               	addwf	doMove@t_1586^(0+128),f
 19021  0A15  3000               	movlw	0
 19022  0A16  3DC8               	addwfc	(doMove@t_1586+1)^(0+128),f
 19023  0A17  29E9               	goto	l1119
 19024  0A18                     l8530:	
 19025                           
 19026                           ;main.c: 256: return 0;
 19027  0A18  01BC               	clrf	?_doMove^(0+128)
 19028  0A19  01BD               	clrf	(?_doMove+1)^(0+128)
 19029  0A1A  0008               	return
 19030  0A1B                     __end_of_doMove:	
 19031                           
 19032                           	psect	text66
 19033  222C                     __ptext66:	
 19034 ;; *************** function _drv_write_wvfrm *****************
 19035 ;; Defined at:
 19036 ;;		line 77 in file "drv2665.c"
 19037 ;; Parameters:    Size  Location     Type
 19038 ;;  upOrDown        1    wreg     unsigned char 
 19039 ;; Auto vars:     Size  Location     Type
 19040 ;;  upOrDown        1   26[BANK0 ] unsigned char 
 19041 ;; Return value:  Size  Location     Type
 19042 ;;                  1    wreg      void 
 19043 ;; Registers used:
 19044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19045 ;; Tracked objects:
 19046 ;;		On entry : 0/0
 19047 ;;		On exit  : 0/0
 19048 ;;		Unchanged: 0/0
 19049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19053 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19054 ;;Total ram usage:        1 bytes
 19055 ;; Hardware stack levels used:    1
 19056 ;; Hardware stack levels required when called:   12
 19057 ;; This function calls:
 19058 ;;		_i2c_masterOperation
 19059 ;;		_i2c_setBuffer
 19060 ;; This function is called by:
 19061 ;;		_doMove
 19062 ;; This function uses a non-reentrant model
 19063 ;;
 19064                           
 19065                           
 19066                           ;psect for function _drv_write_wvfrm
 19067  222C                     _drv_write_wvfrm:	
 19068                           
 19069                           ;incstack = 0
 19070                           ; Regs used in _drv_write_wvfrm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19071                           ;drv_write_wvfrm@upOrDown stored from wreg
 19072  222C  0020               	movlb	0	; select bank0
 19073  222D  00BA               	movwf	drv_write_wvfrm@upOrDown
 19074                           
 19075                           ;drv2665.c: 80: if (upOrDown)
 19076  222E  083A               	movf	drv_write_wvfrm@upOrDown,w
 19077  222F  1903               	btfsc	3,2
 19078  2230  2A35               	goto	l8290
 19079                           
 19080                           ;drv2665.c: 81: i2c_setBuffer(&drv_fifo_upstroke, (sizeof(drv_fifo_upstroke) / sizeof((d
      +                          rv_fifo_upstroke)[0])));
 19081  2231  3020               	movlw	low _drv_fifo_upstroke
 19082  2232  00B1               	movwf	i2c_setBuffer@buffer
 19083  2233  3002               	movlw	high _drv_fifo_upstroke
 19084  2234  2A39               	goto	L40
 19085  2235                     l8290:	
 19086                           
 19087                           ;drv2665.c: 82: else
 19088                           ;drv2665.c: 83: i2c_setBuffer(&drv_fifo_downstroke, (sizeof(drv_fifo_downstroke) / sizeo
      +                          f((drv_fifo_downstroke)[0])));
 19089  2235  30A0               	movlw	low _drv_fifo_downstroke
 19090  2236  0020               	movlb	0	; select bank0
 19091  2237  00B1               	movwf	i2c_setBuffer@buffer
 19092  2238  3002               	movlw	high _drv_fifo_downstroke
 19093  2239                     L40:	
 19094  2239  00B2               	movwf	i2c_setBuffer@buffer+1
 19095  223A  3028               	movlw	40
 19096  223B  00B3               	movwf	i2c_setBuffer@bufferSize
 19097  223C  3000               	movlw	0
 19098  223D  00B4               	movwf	i2c_setBuffer@bufferSize+1
 19099  223E  31A1  21E7  31A2   	fcall	_i2c_setBuffer
 19100                           
 19101                           ;drv2665.c: 84: i2c_masterOperation(0);
 19102  2241  3000               	movlw	0
 19103  2242  31A4  246D         	fcall	_i2c_masterOperation
 19104  2244  0008               	return
 19105  2245                     __end_of_drv_write_wvfrm:	
 19106                           
 19107                           	psect	text67
 19108  11E6                     __ptext67:	
 19109 ;; *************** function _drv_write_DC *****************
 19110 ;; Defined at:
 19111 ;;		line 109 in file "drv2665.c"
 19112 ;; Parameters:    Size  Location     Type
 19113 ;;  val             2   21[BANK1 ] int 
 19114 ;;  duration_ms     2   23[BANK1 ] int 
 19115 ;; Auto vars:     Size  Location     Type
 19116 ;;  i               2   26[BANK1 ] int 
 19117 ;; Return value:  Size  Location     Type
 19118 ;;                  1    wreg      void 
 19119 ;; Registers used:
 19120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19121 ;; Tracked objects:
 19122 ;;		On entry : 0/0
 19123 ;;		On exit  : 0/0
 19124 ;;		Unchanged: 0/0
 19125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19126 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19127 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19128 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19129 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19130 ;;Total ram usage:        7 bytes
 19131 ;; Hardware stack levels used:    1
 19132 ;; Hardware stack levels required when called:   13
 19133 ;; This function calls:
 19134 ;;		___awdiv
 19135 ;;		_drv_write
 19136 ;; This function is called by:
 19137 ;;		_doMove
 19138 ;; This function uses a non-reentrant model
 19139 ;;
 19140                           
 19141                           
 19142                           ;psect for function _drv_write_DC
 19143  11E6                     _drv_write_DC:	
 19144                           
 19145                           ;drv2665.c: 119: for(int i=0;i<duration_ms/5; i++){
 19146                           
 19147                           ;incstack = 0
 19148                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19149  11E6  0021               	movlb	1	; select bank1
 19150  11E7  01BA               	clrf	drv_write_DC@i^(0+128)
 19151  11E8  01BB               	clrf	(drv_write_DC@i+1)^(0+128)
 19152  11E9                     l8302:	
 19153  11E9  3005               	movlw	5
 19154  11EA  0020               	movlb	0	; select bank0
 19155  11EB  00B7               	movwf	___awdiv@divisor
 19156  11EC  3000               	movlw	0
 19157  11ED  00B8               	movwf	___awdiv@divisor+1
 19158  11EE  0021               	movlb	1	; select bank1
 19159  11EF  0838               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 19160  11F0  0020               	movlb	0	; select bank0
 19161  11F1  00BA               	movwf	___awdiv@dividend+1
 19162  11F2  0021               	movlb	1	; select bank1
 19163  11F3  0837               	movf	drv_write_DC@duration_ms^(0+128),w
 19164  11F4  0020               	movlb	0	; select bank0
 19165  11F5  00B9               	movwf	___awdiv@dividend
 19166  11F6  319C  2467  3191   	fcall	___awdiv
 19167  11F9  0021               	movlb	1	; select bank1
 19168  11FA  083B               	movf	(drv_write_DC@i+1)^(0+128),w
 19169  11FB  3A80               	xorlw	128
 19170  11FC  00B9               	movwf	??_drv_write_DC^(0+128)
 19171  11FD  0020               	movlb	0	; select bank0
 19172  11FE  0838               	movf	?___awdiv+1,w
 19173  11FF  3A80               	xorlw	128
 19174  1200  0021               	movlb	1	; select bank1
 19175  1201  0239               	subwf	??_drv_write_DC^(0+128),w
 19176  1202  1D03               	skipz
 19177  1203  2A08               	goto	u8475
 19178  1204  0020               	movlb	0	; select bank0
 19179  1205  0837               	movf	?___awdiv,w
 19180  1206  0021               	movlb	1	; select bank1
 19181  1207  023A               	subwf	drv_write_DC@i^(0+128),w
 19182  1208                     u8475:	
 19183  1208  1803               	btfsc	3,0
 19184  1209  0008               	return
 19185                           
 19186                           ;drv2665.c: 120: drv_write(0x0b, val);
 19187  120A  0021               	movlb	1	; select bank1
 19188  120B  0835               	movf	drv_write_DC@val^(0+128),w
 19189  120C  00B9               	movwf	??_drv_write_DC^(0+128)
 19190  120D  0839               	movf	??_drv_write_DC^(0+128),w
 19191  120E  0020               	movlb	0	; select bank0
 19192  120F  00C9               	movwf	drv_write@data
 19193  1210  300B               	movlw	11
 19194  1211  3188  2000  3191   	fcall	_drv_write
 19195                           
 19196                           ;drv2665.c: 121: _delay((unsigned long)((20)*(1000000/4000000.0)));
 19197  1214  3200               	nop2	;2 cycle nop
 19198  1215  3200               	nop2	;2 cycle nop
 19199  1216  0000               	nop
 19200  1217  3001               	movlw	1
 19201  1218  0021               	movlb	1	; select bank1
 19202  1219  07BA               	addwf	drv_write_DC@i^(0+128),f
 19203  121A  3000               	movlw	0
 19204  121B  3DBB               	addwfc	(drv_write_DC@i+1)^(0+128),f
 19205  121C  29E9               	goto	l8302
 19206  121D                     __end_of_drv_write_DC:	
 19207                           
 19208                           	psect	text68
 19209  0800                     __ptext68:	
 19210 ;; *************** function _drv_write *****************
 19211 ;; Defined at:
 19212 ;;		line 59 in file "drv2665.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  reg             1    wreg     unsigned char 
 19215 ;;  data            1   41[BANK0 ] unsigned char 
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;  reg             1   43[BANK0 ] unsigned char 
 19218 ;;  buff            2   44[BANK0 ] unsigned char [2]
 19219 ;; Return value:  Size  Location     Type
 19220 ;;                  1    wreg      void 
 19221 ;; Registers used:
 19222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19223 ;; Tracked objects:
 19224 ;;		On entry : 0/0
 19225 ;;		On exit  : 0/0
 19226 ;;		Unchanged: 0/0
 19227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19228 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19229 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19231 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19232 ;;Total ram usage:        5 bytes
 19233 ;; Hardware stack levels used:    1
 19234 ;; Hardware stack levels required when called:   12
 19235 ;; This function calls:
 19236 ;;		_i2c_masterOperation
 19237 ;;		_i2c_setBuffer
 19238 ;;		_printf
 19239 ;; This function is called by:
 19240 ;;		_setDrvGain
 19241 ;;		_drv_init
 19242 ;;		_drv_reset
 19243 ;;		_drv_write_DC
 19244 ;;		_drv_outputSine
 19245 ;;		_drv_outputWave
 19246 ;; This function uses a non-reentrant model
 19247 ;;
 19248                           
 19249                           
 19250                           ;psect for function _drv_write
 19251  0800                     _drv_write:	
 19252                           
 19253                           ;incstack = 0
 19254                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19255                           ;drv_write@reg stored from wreg
 19256  0800  0020               	movlb	0	; select bank0
 19257  0801  00CB               	movwf	drv_write@reg
 19258                           
 19259                           ;drv2665.c: 64: uint8_t buff[2];
 19260                           ;drv2665.c: 66: buff[0] = reg;
 19261  0802  084B               	movf	drv_write@reg,w
 19262  0803  00CA               	movwf	??_drv_write
 19263  0804  084A               	movf	??_drv_write,w
 19264  0805  00CC               	movwf	drv_write@buff
 19265                           
 19266                           ;drv2665.c: 67: buff[1] = data;
 19267  0806  0849               	movf	drv_write@data,w
 19268  0807  00CA               	movwf	??_drv_write
 19269  0808  084A               	movf	??_drv_write,w
 19270  0809  00CD               	movwf	drv_write@buff+1
 19271                           
 19272                           ;drv2665.c: 70: i2c_setBuffer(buff, 2);
 19273  080A  304C               	movlw	low drv_write@buff
 19274  080B  00B1               	movwf	i2c_setBuffer@buffer
 19275  080C  3000               	movlw	high drv_write@buff
 19276  080D  00B2               	movwf	i2c_setBuffer@buffer+1
 19277  080E  3002               	movlw	2
 19278  080F  00B3               	movwf	i2c_setBuffer@bufferSize
 19279  0810  3000               	movlw	0
 19280  0811  00B4               	movwf	i2c_setBuffer@bufferSize+1
 19281  0812  31A1  21E7  3188   	fcall	_i2c_setBuffer
 19282                           
 19283                           ;drv2665.c: 71: if(i2c_masterOperation(0) != I2C_NOERR)
 19284  0815  3000               	movlw	0
 19285  0816  31A4  246D  3188   	fcall	_i2c_masterOperation
 19286  0819  3A00               	xorlw	0
 19287  081A  1903               	skipnz
 19288  081B  0008               	return
 19289                           
 19290                           ;drv2665.c: 72: printf("drv_write error!\n");
 19291  081C  30CB               	movlw	low (STR_52| (0+32768))
 19292  081D  0021               	movlb	1	; select bank1
 19293  081E  00A0               	movwf	printf@f^(0+128)
 19294  081F  30A8               	movlw	high (STR_52| (0+32768))
 19295  0820  00A1               	movwf	(printf@f^(0+128)+1)
 19296  0821  318E  26CE         	fcall	_printf
 19297  0823  0008               	return
 19298  0824                     __end_of_drv_write:	
 19299                           
 19300                           	psect	text69
 19301  0ECE                     __ptext69:	
 19302 ;; *************** function _printf *****************
 19303 ;; Defined at:
 19304 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19305 ;; Parameters:    Size  Location     Type
 19306 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 19307 ;;		 -> STR_85(23), STR_84(3), STR_56(4), STR_55(4), 
 19308 ;;		 -> STR_54(17), STR_53(18), STR_52(18), STR_51(17), 
 19309 ;;		 -> STR_50(28), STR_49(9), STR_48(9), STR_47(25), 
 19310 ;;		 -> STR_46(11), STR_45(8), STR_44(8), STR_43(8), 
 19311 ;;		 -> STR_42(31), STR_41(11), STR_40(8), STR_39(8), 
 19312 ;;		 -> STR_38(8), STR_37(26), STR_36(30), STR_35(3), 
 19313 ;;		 -> STR_34(3), STR_33(3), STR_32(2), STR_31(4), 
 19314 ;;		 -> STR_30(2), STR_29(4), STR_28(3), STR_27(3), 
 19315 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 19316 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(3), 
 19317 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(3), 
 19318 ;;		 -> STR_14(3), STR_13(3), STR_12(4), STR_11(3), 
 19319 ;;		 -> STR_10(16), STR_9(3), STR_8(3), STR_7(3), 
 19320 ;;		 -> STR_6(13), STR_5(15), STR_4(16), STR_3(2), 
 19321 ;;		 -> STR_2(4), STR_1(4), 
 19322 ;; Auto vars:     Size  Location     Type
 19323 ;;  val             4   14[BANK1 ] unsigned long 
 19324 ;;  tmpval          4    0        struct .
 19325 ;;  prec            2   12[BANK1 ] int 
 19326 ;;  cp              2    0        PTR const unsigned char 
 19327 ;;  len             2    0        unsigned int 
 19328 ;;  c               1   20[BANK1 ] char 
 19329 ;;  ap              1   19[BANK1 ] PTR void [1]
 19330 ;;		 -> ?_printf(2), 
 19331 ;;  flag            1   18[BANK1 ] unsigned char 
 19332 ;; Return value:  Size  Location     Type
 19333 ;;                  2    0[BANK1 ] int 
 19334 ;; Registers used:
 19335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19336 ;; Tracked objects:
 19337 ;;		On entry : 0/0
 19338 ;;		On exit  : 0/0
 19339 ;;		Unchanged: 0/0
 19340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19341 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19342 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19343 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19344 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19345 ;;Total ram usage:       21 bytes
 19346 ;; Hardware stack levels used:    1
 19347 ;; Hardware stack levels required when called:    8
 19348 ;; This function calls:
 19349 ;;		___lldiv
 19350 ;;		___llmod
 19351 ;;		_putch
 19352 ;; This function is called by:
 19353 ;;		_LED_test_openshort
 19354 ;;		_LED_getData
 19355 ;;		_main
 19356 ;;		_main_initialize
 19357 ;;		_startRelMove
 19358 ;;		_startAbsMove
 19359 ;;		_stop
 19360 ;;		_doAbsMove
 19361 ;;		_zeroPosition
 19362 ;;		_getPosition
 19363 ;;		_setDrvPeak
 19364 ;;		_setDrvGain
 19365 ;;		_setDrvPiezoOnTime
 19366 ;;		_setHeaterPreTime
 19367 ;;		_setHeaterPostTime
 19368 ;;		_setH1OffTime
 19369 ;;		_setH2OnTime
 19370 ;;		_setLEDBrightnessRange
 19371 ;;		_setLEDPwr
 19372 ;;		_setHeaterToggle
 19373 ;;		_timedActiveHeatOn
 19374 ;;		_setActive
 19375 ;;		_setMoveMask
 19376 ;;		_getActive
 19377 ;;		_getMoveMask
 19378 ;;		_getMotionStatus
 19379 ;;		_commCheck
 19380 ;;		_drv_init
 19381 ;;		_drv_write
 19382 ;;		_drv_read
 19383 ;;		_calcUpstroke
 19384 ;;		_calcDownstroke
 19385 ;;		_execCmd
 19386 ;; This function uses a non-reentrant model
 19387 ;;
 19388                           
 19389                           
 19390                           ;psect for function _printf
 19391  0ECE                     _printf:	
 19392                           
 19393                           ;doprnt.c: 466: va_list ap;
 19394                           ;doprnt.c: 499: signed char c;
 19395                           ;doprnt.c: 504: int prec;
 19396                           ;doprnt.c: 508: unsigned char flag;
 19397                           ;doprnt.c: 523: union {
 19398                           ;doprnt.c: 524: unsigned long vd;
 19399                           ;doprnt.c: 525: double integ;
 19400                           ;doprnt.c: 526: } tmpval;
 19401                           ;doprnt.c: 528: unsigned long val;
 19402                           ;doprnt.c: 529: unsigned len;
 19403                           ;doprnt.c: 530: const char * cp;
 19404                           ;doprnt.c: 533: *ap = __va_start();
 19405                           
 19406                           ;incstack = 0
 19407                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19408  0ECE  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 19409  0ECF  0021               	movlb	1	; select bank1
 19410  0ED0  00A6               	movwf	??_printf^(0+128)
 19411  0ED1  0826               	movf	??_printf^(0+128),w
 19412  0ED2  00B3               	movwf	printf@ap^(0+128)
 19413  0ED3                     l7782:	
 19414                           ;doprnt.c: 536: while(c = *f++) {
 19415                           
 19416  0ED3  0021               	movlb	1	; select bank1
 19417  0ED4  0821               	movf	(printf@f+1)^(0+128),w
 19418  0ED5  00A7               	movwf	(??_printf^(0+128)+1)
 19419  0ED6  0820               	movf	printf@f^(0+128),w
 19420  0ED7  00A6               	movwf	??_printf^(0+128)
 19421  0ED8  0AA0               	incf	printf@f^(0+128),f
 19422  0ED9  1903               	skipnz
 19423  0EDA  0AA1               	incf	(printf@f+1)^(0+128),f
 19424  0EDB  0826               	movf	??_printf^(0+128),w
 19425  0EDC  0084               	movwf	4
 19426  0EDD  0827               	movf	(??_printf+1)^(0+128),w
 19427  0EDE  0085               	movwf	5
 19428  0EDF  0800               	movf	0,w	;code access
 19429  0EE0  00A8               	movwf	(??_printf+2)^(0+128)
 19430  0EE1  0828               	movf	(??_printf+2)^(0+128),w
 19431  0EE2  00B4               	movwf	printf@c^(0+128)
 19432  0EE3  0834               	movf	printf@c^(0+128),w
 19433  0EE4  1903               	btfsc	3,2
 19434  0EE5  0008               	return
 19435                           
 19436                           ;doprnt.c: 538: if(c != '%')
 19437  0EE6  3025               	movlw	37
 19438  0EE7  0634               	xorwf	printf@c^(0+128),w
 19439  0EE8  1903               	btfsc	3,2
 19440  0EE9  2EEF               	goto	l7728
 19441                           
 19442                           ;doprnt.c: 540: {
 19443                           ;doprnt.c: 541: (putch(c) );
 19444  0EEA  0834               	movf	printf@c^(0+128),w
 19445  0EEB  31AF  27E0  318E   	fcall	_putch
 19446                           
 19447                           ;doprnt.c: 542: continue;
 19448  0EEE  2ED3               	goto	l7782
 19449  0EEF                     l7728:	
 19450                           
 19451                           ;doprnt.c: 543: }
 19452                           ;doprnt.c: 548: flag = 0;
 19453  0EEF  0021               	movlb	1	; select bank1
 19454  0EF0  01B2               	clrf	printf@flag^(0+128)
 19455                           
 19456                           ;doprnt.c: 635: switch(c = *f++) {
 19457                           
 19458                           ;doprnt.c: 633: loop:
 19459  0EF1  2EF6               	goto	l7732
 19460  0EF2                     l1545:	
 19461                           ;doprnt.c: 641: case 'l':
 19462                           
 19463                           ;doprnt.c: 638: goto alldone;
 19464                           
 19465                           ;doprnt.c: 637: case 0:
 19466                           
 19467                           
 19468                           ;doprnt.c: 643: flag |= 0x10;
 19469  0EF2  1632               	bsf	printf@flag^(0+128),4
 19470                           
 19471                           ;doprnt.c: 644: goto loop;
 19472  0EF3  2EF6               	goto	l7732
 19473  0EF4                     l1550:	
 19474                           ;doprnt.c: 817: case 'u':
 19475                           
 19476                           ;doprnt.c: 813: continue;
 19477                           
 19478                           ;doprnt.c: 802: default:
 19479                           
 19480                           ;doprnt.c: 698: case 'i':
 19481                           ;doprnt.c: 699: break;
 19482                           
 19483                           ;doprnt.c: 697: case 'd':
 19484                           
 19485                           
 19486                           ;doprnt.c: 818: flag |= 0x40;
 19487  0EF4  1732               	bsf	printf@flag^(0+128),6
 19488                           
 19489                           ;doprnt.c: 822: }
 19490                           
 19491                           ;doprnt.c: 819: break;
 19492  0EF5  2F13               	goto	l1548
 19493  0EF6                     l7732:	
 19494  0EF6  0821               	movf	(printf@f+1)^(0+128),w
 19495  0EF7  00A7               	movwf	(??_printf^(0+128)+1)
 19496  0EF8  0820               	movf	printf@f^(0+128),w
 19497  0EF9  00A6               	movwf	??_printf^(0+128)
 19498  0EFA  0AA0               	incf	printf@f^(0+128),f
 19499  0EFB  1903               	skipnz
 19500  0EFC  0AA1               	incf	(printf@f+1)^(0+128),f
 19501  0EFD  0826               	movf	??_printf^(0+128),w
 19502  0EFE  0084               	movwf	4
 19503  0EFF  0827               	movf	(??_printf+1)^(0+128),w
 19504  0F00  0085               	movwf	5
 19505  0F01  0800               	movf	0,w	;code access
 19506  0F02  00B4               	movwf	printf@c^(0+128)
 19507                           
 19508                           ; Switch size 1, requested type "space"
 19509                           ; Number of cases is 5, Range of values is 0 to 117
 19510                           ; switch strategies available:
 19511                           ; Name         Instructions Cycles
 19512                           ; simple_byte           16     9 (average)
 19513                           ; direct_byte          242     6 (fixed)
 19514                           ; jumptable            260     6 (fixed)
 19515                           ;	Chosen strategy is simple_byte
 19516  0F03  3A00               	xorlw	0	; case 0
 19517  0F04  1903               	skipnz
 19518  0F05  2FFF               	goto	l1566
 19519  0F06  3A64               	xorlw	100	; case 100
 19520  0F07  1903               	skipnz
 19521  0F08  2F13               	goto	l1548
 19522  0F09  3A0D               	xorlw	13	; case 105
 19523  0F0A  1903               	skipnz
 19524  0F0B  2F13               	goto	l1548
 19525  0F0C  3A05               	xorlw	5	; case 108
 19526  0F0D  1903               	skipnz
 19527  0F0E  2EF2               	goto	l1545
 19528  0F0F  3A19               	xorlw	25	; case 117
 19529  0F10  1903               	skipnz
 19530  0F11  2EF4               	goto	l1550
 19531  0F12  2ED3               	goto	l7782
 19532  0F13                     l1548:	
 19533                           
 19534                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 19535  0F13  1B32               	btfsc	printf@flag^(0+128),6
 19536  0F14  2F4A               	goto	l1551
 19537                           
 19538                           ;doprnt.c: 1253: {
 19539                           ;doprnt.c: 1255: if(flag & 0x10)
 19540  0F15  1E32               	btfss	printf@flag^(0+128),4
 19541  0F16  2F24               	goto	l7740
 19542                           
 19543                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 19544  0F17  0833               	movf	printf@ap^(0+128),w
 19545  0F18  0086               	movwf	6
 19546  0F19  0187               	clrf	7
 19547  0F1A  3F40               	moviw [0]fsr1
 19548  0F1B  00AE               	movwf	printf@val^(0+128)
 19549  0F1C  3F41               	moviw [1]fsr1
 19550  0F1D  00AF               	movwf	(printf@val+1)^(0+128)
 19551  0F1E  3F42               	moviw [2]fsr1
 19552  0F1F  00B0               	movwf	(printf@val+2)^(0+128)
 19553  0F20  3F43               	moviw [3]fsr1
 19554  0F21  00B1               	movwf	(printf@val+3)^(0+128)
 19555  0F22  3004               	movlw	4
 19556  0F23  2F35               	goto	L41
 19557  0F24                     l7740:	
 19558                           
 19559                           ;doprnt.c: 1257: else
 19560                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 19561  0F24  0833               	movf	printf@ap^(0+128),w
 19562  0F25  0086               	movwf	6
 19563  0F26  0187               	clrf	7
 19564  0F27  3F40               	moviw [0]fsr1
 19565  0F28  00A6               	movwf	??_printf^(0+128)
 19566  0F29  3F41               	moviw [1]fsr1
 19567  0F2A  00A7               	movwf	(??_printf^(0+128)+1)
 19568  0F2B  0826               	movf	??_printf^(0+128),w
 19569  0F2C  00AE               	movwf	printf@val^(0+128)
 19570  0F2D  0827               	movf	(??_printf+1)^(0+128),w
 19571  0F2E  00AF               	movwf	(printf@val+1)^(0+128)
 19572  0F2F  0D89               	rlf	9,f
 19573  0F30  3B89               	subwfb	9,f
 19574  0F31  0989               	comf	9,f
 19575  0F32  00B0               	movwf	(printf@val+2)^(0+128)
 19576  0F33  00B1               	movwf	(printf@val+3)^(0+128)
 19577  0F34  3002               	movlw	2
 19578  0F35                     L41:	
 19579  0F35  00A6               	movwf	??_printf^(0+128)
 19580  0F36  0826               	movf	??_printf^(0+128),w
 19581  0F37  07B3               	addwf	printf@ap^(0+128),f
 19582                           
 19583                           ;doprnt.c: 1261: if((long)val < 0) {
 19584  0F38  1FB1               	btfss	(printf@val+3)^(0+128),7
 19585  0F39  2F6A               	goto	l7758
 19586                           
 19587                           ;doprnt.c: 1262: flag |= 0x03;
 19588  0F3A  3003               	movlw	3
 19589  0F3B  00A6               	movwf	??_printf^(0+128)
 19590  0F3C  0826               	movf	??_printf^(0+128),w
 19591  0F3D  04B2               	iorwf	printf@flag^(0+128),f
 19592                           
 19593                           ;doprnt.c: 1263: val = -val;
 19594  0F3E  09AE               	comf	printf@val^(0+128),f
 19595  0F3F  09AF               	comf	(printf@val+1)^(0+128),f
 19596  0F40  09B0               	comf	(printf@val+2)^(0+128),f
 19597  0F41  09B1               	comf	(printf@val+3)^(0+128),f
 19598  0F42  0AAE               	incf	printf@val^(0+128),f
 19599  0F43  1903               	skipnz
 19600  0F44  0AAF               	incf	(printf@val+1)^(0+128),f
 19601  0F45  1903               	skipnz
 19602  0F46  0AB0               	incf	(printf@val+2)^(0+128),f
 19603  0F47  1903               	skipnz
 19604  0F48  0AB1               	incf	(printf@val+3)^(0+128),f
 19605                           
 19606                           ;doprnt.c: 1264: }
 19607                           ;doprnt.c: 1266: }
 19608  0F49  2F6A               	goto	l7758
 19609  0F4A                     l1551:	
 19610                           
 19611                           ;doprnt.c: 1268: else
 19612                           ;doprnt.c: 1273: {
 19613                           ;doprnt.c: 1281: if(flag & 0x10)
 19614  0F4A  1E32               	btfss	printf@flag^(0+128),4
 19615  0F4B  2F59               	goto	l7754
 19616                           
 19617                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 19618  0F4C  0833               	movf	printf@ap^(0+128),w
 19619  0F4D  0086               	movwf	6
 19620  0F4E  0187               	clrf	7
 19621  0F4F  3F40               	moviw [0]fsr1
 19622  0F50  00AE               	movwf	printf@val^(0+128)
 19623  0F51  3F41               	moviw [1]fsr1
 19624  0F52  00AF               	movwf	(printf@val+1)^(0+128)
 19625  0F53  3F42               	moviw [2]fsr1
 19626  0F54  00B0               	movwf	(printf@val+2)^(0+128)
 19627  0F55  3F43               	moviw [3]fsr1
 19628  0F56  00B1               	movwf	(printf@val+3)^(0+128)
 19629  0F57  3004               	movlw	4
 19630  0F58  2F67               	goto	L42
 19631  0F59                     l7754:	
 19632                           
 19633                           ;doprnt.c: 1283: else
 19634                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 19635  0F59  0833               	movf	printf@ap^(0+128),w
 19636  0F5A  0086               	movwf	6
 19637  0F5B  0187               	clrf	7
 19638  0F5C  3F40               	moviw [0]fsr1
 19639  0F5D  00A6               	movwf	??_printf^(0+128)
 19640  0F5E  3F41               	moviw [1]fsr1
 19641  0F5F  00A7               	movwf	(??_printf^(0+128)+1)
 19642  0F60  0826               	movf	??_printf^(0+128),w
 19643  0F61  00AE               	movwf	printf@val^(0+128)
 19644  0F62  0827               	movf	(??_printf+1)^(0+128),w
 19645  0F63  00AF               	movwf	(printf@val^(0+128)+1)
 19646  0F64  01B0               	clrf	(printf@val^(0+128)+2)
 19647  0F65  01B1               	clrf	(printf@val^(0+128)+3)
 19648  0F66  3002               	movlw	2
 19649  0F67                     L42:	
 19650  0F67  00A6               	movwf	??_printf^(0+128)
 19651  0F68  0826               	movf	??_printf^(0+128),w
 19652  0F69  07B3               	addwf	printf@ap^(0+128),f
 19653  0F6A                     l7758:	
 19654                           
 19655                           ;doprnt.c: 1287: }
 19656                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 19657  0F6A  01B4               	clrf	printf@c^(0+128)
 19658  0F6B  0AB4               	incf	printf@c^(0+128),f
 19659  0F6C  300A               	movlw	10
 19660  0F6D  0634               	xorwf	printf@c^(0+128),w
 19661  0F6E  1903               	btfsc	3,2
 19662  0F6F  2F9D               	goto	l7770
 19663  0F70                     l7764:	
 19664                           
 19665                           ;doprnt.c: 1306: if(val < dpowers[c])
 19666  0F70  0834               	movf	printf@c^(0+128),w
 19667  0F71  00A6               	movwf	??_printf^(0+128)
 19668  0F72  01A7               	clrf	(??_printf^(0+128)+1)
 19669  0F73  35A6               	lslf	??_printf^(0+128),f
 19670  0F74  0DA7               	rlf	(??_printf^(0+128)+1),f
 19671  0F75  35A6               	lslf	??_printf^(0+128),f
 19672  0F76  0DA7               	rlf	(??_printf^(0+128)+1),f
 19673  0F77  3000               	movlw	low (_dpowers| (0+32768))
 19674  0F78  0726               	addwf	??_printf^(0+128),w
 19675  0F79  0084               	movwf	4
 19676  0F7A  30A8               	movlw	high (_dpowers| (0+32768))
 19677  0F7B  3D27               	addwfc	(??_printf+1)^(0+128),w
 19678  0F7C  0085               	movwf	5
 19679  0F7D  3F00               	moviw [0]fsr0
 19680  0F7E  00A8               	movwf	(??_printf+2)^(0+128)
 19681  0F7F  3F01               	moviw [1]fsr0
 19682  0F80  00A9               	movwf	((??_printf+2)^(0+128)+1)
 19683  0F81  3F02               	moviw [2]fsr0
 19684  0F82  00AA               	movwf	((??_printf+2)^(0+128)+2)
 19685  0F83  3F03               	moviw [3]fsr0
 19686  0F84  00AB               	movwf	((??_printf+2)^(0+128)+3)
 19687  0F85  082B               	movf	(??_printf+5)^(0+128),w
 19688  0F86  0231               	subwf	(printf@val+3)^(0+128),w
 19689  0F87  1D03               	skipz
 19690  0F88  2F93               	goto	u7425
 19691  0F89  082A               	movf	(??_printf+4)^(0+128),w
 19692  0F8A  0230               	subwf	(printf@val+2)^(0+128),w
 19693  0F8B  1D03               	skipz
 19694  0F8C  2F93               	goto	u7425
 19695  0F8D  0829               	movf	(??_printf+3)^(0+128),w
 19696  0F8E  022F               	subwf	(printf@val+1)^(0+128),w
 19697  0F8F  1D03               	skipz
 19698  0F90  2F93               	goto	u7425
 19699  0F91  0828               	movf	(??_printf+2)^(0+128),w
 19700  0F92  022E               	subwf	printf@val^(0+128),w
 19701  0F93                     u7425:	
 19702  0F93  1C03               	btfss	3,0
 19703  0F94  2F9D               	goto	l7770
 19704                           
 19705                           ;doprnt.c: 1307: break;
 19706  0F95  3001               	movlw	1
 19707  0F96  00A6               	movwf	??_printf^(0+128)
 19708  0F97  0826               	movf	??_printf^(0+128),w
 19709  0F98  07B4               	addwf	printf@c^(0+128),f
 19710  0F99  300A               	movlw	10
 19711  0F9A  0634               	xorwf	printf@c^(0+128),w
 19712  0F9B  1D03               	btfss	3,2
 19713  0F9C  2F70               	goto	l7764
 19714  0F9D                     l7770:	
 19715                           
 19716                           ;doprnt.c: 1422: {
 19717                           ;doprnt.c: 1438: if(flag & 0x03)
 19718  0F9D  0832               	movf	printf@flag^(0+128),w
 19719  0F9E  3903               	andlw	3
 19720  0F9F  1903               	btfsc	3,2
 19721  0FA0  2FA5               	goto	l7774
 19722                           
 19723                           ;doprnt.c: 1439: (putch('-') );
 19724  0FA1  302D               	movlw	45
 19725  0FA2  31AF  27E0  318E   	fcall	_putch
 19726  0FA5                     l7774:	
 19727                           
 19728                           ;doprnt.c: 1469: }
 19729                           ;doprnt.c: 1472: prec = c;
 19730  0FA5  0021               	movlb	1	; select bank1
 19731  0FA6  0834               	movf	printf@c^(0+128),w
 19732  0FA7  00AC               	movwf	printf@prec^(0+128)
 19733  0FA8  01AD               	clrf	(printf@prec+1)^(0+128)
 19734  0FA9  1BAC               	btfsc	printf@prec^(0+128),7
 19735  0FAA  03AD               	decf	(printf@prec+1)^(0+128),f
 19736  0FAB                     l7780:	
 19737                           ;doprnt.c: 1474: while(prec--) {
 19738                           
 19739  0FAB  30FF               	movlw	255
 19740  0FAC  0021               	movlb	1	; select bank1
 19741  0FAD  07AC               	addwf	printf@prec^(0+128),f
 19742  0FAE  30FF               	movlw	255
 19743  0FAF  3DAD               	addwfc	(printf@prec+1)^(0+128),f
 19744  0FB0  0A2C               	incf	printf@prec^(0+128),w
 19745  0FB1  1903               	btfsc	3,2
 19746  0FB2  0A2D               	incf	(printf@prec+1)^(0+128),w
 19747  0FB3  1903               	btfsc	3,2
 19748  0FB4  2ED3               	goto	l7782
 19749                           
 19750                           ;doprnt.c: 1478: {
 19751                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 19752  0FB5  3000               	movlw	0
 19753  0FB6  0020               	movlb	0	; select bank0
 19754  0FB7  00C2               	movwf	___llmod@divisor+3
 19755  0FB8  3000               	movlw	0
 19756  0FB9  00C1               	movwf	___llmod@divisor+2
 19757  0FBA  3000               	movlw	0
 19758  0FBB  00C0               	movwf	___llmod@divisor+1
 19759  0FBC  300A               	movlw	10
 19760  0FBD  00BF               	movwf	___llmod@divisor
 19761  0FBE  0021               	movlb	1	; select bank1
 19762  0FBF  082D               	movf	(printf@prec+1)^(0+128),w
 19763  0FC0  0085               	movwf	5
 19764  0FC1  082C               	movf	printf@prec^(0+128),w
 19765  0FC2  0084               	movwf	4
 19766  0FC3  3584               	lslf	4,f
 19767  0FC4  0D85               	rlf	5,f
 19768  0FC5  3584               	lslf	4,f
 19769  0FC6  0D85               	rlf	5,f
 19770  0FC7  3000               	movlw	low (_dpowers| (0+32768))
 19771  0FC8  0784               	addwf	4,f
 19772  0FC9  30A8               	movlw	high (_dpowers| (0+32768))
 19773  0FCA  3D85               	addwfc	5,f
 19774  0FCB  3F00               	moviw [0]fsr0
 19775  0FCC  0020               	movlb	0	; select bank0
 19776  0FCD  00B1               	movwf	___lldiv@divisor
 19777  0FCE  3F01               	moviw [1]fsr0
 19778  0FCF  00B2               	movwf	___lldiv@divisor+1
 19779  0FD0  3F02               	moviw [2]fsr0
 19780  0FD1  00B3               	movwf	___lldiv@divisor+2
 19781  0FD2  3F03               	moviw [3]fsr0
 19782  0FD3  00B4               	movwf	___lldiv@divisor+3
 19783  0FD4  0021               	movlb	1	; select bank1
 19784  0FD5  0831               	movf	(printf@val+3)^(0+128),w
 19785  0FD6  0020               	movlb	0	; select bank0
 19786  0FD7  00B8               	movwf	___lldiv@dividend+3
 19787  0FD8  0021               	movlb	1	; select bank1
 19788  0FD9  0830               	movf	(printf@val+2)^(0+128),w
 19789  0FDA  0020               	movlb	0	; select bank0
 19790  0FDB  00B7               	movwf	___lldiv@dividend+2
 19791  0FDC  0021               	movlb	1	; select bank1
 19792  0FDD  082F               	movf	(printf@val+1)^(0+128),w
 19793  0FDE  0020               	movlb	0	; select bank0
 19794  0FDF  00B6               	movwf	___lldiv@dividend+1
 19795  0FE0  0021               	movlb	1	; select bank1
 19796  0FE1  082E               	movf	printf@val^(0+128),w
 19797  0FE2  0020               	movlb	0	; select bank0
 19798  0FE3  00B5               	movwf	___lldiv@dividend
 19799  0FE4  319D  250B  318E   	fcall	___lldiv
 19800  0FE7  0020               	movlb	0	; select bank0
 19801  0FE8  0834               	movf	?___lldiv+3,w
 19802  0FE9  00C6               	movwf	___llmod@dividend+3
 19803  0FEA  0833               	movf	?___lldiv+2,w
 19804  0FEB  00C5               	movwf	___llmod@dividend+2
 19805  0FEC  0832               	movf	?___lldiv+1,w
 19806  0FED  00C4               	movwf	___llmod@dividend+1
 19807  0FEE  0831               	movf	?___lldiv,w
 19808  0FEF  00C3               	movwf	___llmod@dividend
 19809  0FF0  31A7  27BD  318E   	fcall	___llmod
 19810  0FF3  0020               	movlb	0	; select bank0
 19811  0FF4  083F               	movf	?___llmod,w
 19812  0FF5  3E30               	addlw	48
 19813  0FF6  0021               	movlb	1	; select bank1
 19814  0FF7  00A6               	movwf	??_printf^(0+128)
 19815  0FF8  0826               	movf	??_printf^(0+128),w
 19816  0FF9  00B4               	movwf	printf@c^(0+128)
 19817                           
 19818                           ;doprnt.c: 1523: }
 19819                           ;doprnt.c: 1524: (putch(c) );
 19820  0FFA  0834               	movf	printf@c^(0+128),w
 19821  0FFB  31AF  27E0  318E   	fcall	_putch
 19822  0FFE  2FAB               	goto	l7780
 19823  0FFF                     l1566:	
 19824                           ;doprnt.c: 1540: return 0;
 19825                           ;	Return value of _printf is never used
 19826                           
 19827                           ;doprnt.c: 1525: }
 19828                           ;doprnt.c: 1533: }
 19829                           ;doprnt.c: 1535: alldone:
 19830                           
 19831  0FFF  0008               	return
 19832  1000                     __end_of_printf:	
 19833                           
 19834                           	psect	text70
 19835  2FE0                     __ptext70:	
 19836 ;; *************** function _putch *****************
 19837 ;; Defined at:
 19838 ;;		line 156 in file "mcc_generated_files/eusart.c"
 19839 ;; Parameters:    Size  Location     Type
 19840 ;;  txData          1    wreg     unsigned char 
 19841 ;; Auto vars:     Size  Location     Type
 19842 ;;  txData          1   19[BANK0 ] unsigned char 
 19843 ;; Return value:  Size  Location     Type
 19844 ;;                  1    wreg      void 
 19845 ;; Registers used:
 19846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19847 ;; Tracked objects:
 19848 ;;		On entry : 0/0
 19849 ;;		On exit  : 0/0
 19850 ;;		Unchanged: 0/0
 19851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19856 ;;Total ram usage:        1 bytes
 19857 ;; Hardware stack levels used:    1
 19858 ;; Hardware stack levels required when called:    7
 19859 ;; This function calls:
 19860 ;;		_EUSART_Write
 19861 ;; This function is called by:
 19862 ;;		_printf
 19863 ;; This function uses a non-reentrant model
 19864 ;;
 19865                           
 19866                           
 19867                           ;psect for function _putch
 19868  2FE0                     _putch:	
 19869                           
 19870                           ;incstack = 0
 19871                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19872                           ;putch@txData stored from wreg
 19873  2FE0  0020               	movlb	0	; select bank0
 19874  2FE1  00B3               	movwf	putch@txData
 19875                           
 19876                           ;eusart.c: 158: EUSART_Write(txData);
 19877  2FE2  0833               	movf	putch@txData,w
 19878  2FE3  31A4  2491         	fcall	_EUSART_Write
 19879  2FE5  0008               	return
 19880  2FE6                     __end_of_putch:	
 19881                           
 19882                           	psect	text71
 19883  2491                     __ptext71:	
 19884 ;; *************** function _EUSART_Write *****************
 19885 ;; Defined at:
 19886 ;;		line 128 in file "mcc_generated_files/eusart.c"
 19887 ;; Parameters:    Size  Location     Type
 19888 ;;  txData          1    wreg     unsigned char 
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;  txData          1   18[BANK0 ] unsigned char 
 19891 ;; Return value:  Size  Location     Type
 19892 ;;                  1    wreg      void 
 19893 ;; Registers used:
 19894 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19895 ;; Tracked objects:
 19896 ;;		On entry : 0/0
 19897 ;;		On exit  : 0/0
 19898 ;;		Unchanged: 0/0
 19899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19903 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19904 ;;Total ram usage:        2 bytes
 19905 ;; Hardware stack levels used:    1
 19906 ;; Hardware stack levels required when called:    6
 19907 ;; This function calls:
 19908 ;;		Nothing
 19909 ;; This function is called by:
 19910 ;;		_putch
 19911 ;; This function uses a non-reentrant model
 19912 ;;
 19913                           
 19914                           
 19915                           ;psect for function _EUSART_Write
 19916  2491                     _EUSART_Write:	
 19917                           
 19918                           ;incstack = 0
 19919                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19920                           ;EUSART_Write@txData stored from wreg
 19921  2491  0020               	movlb	0	; select bank0
 19922  2492  00B2               	movwf	EUSART_Write@txData
 19923  2493                     l7438:	
 19924                           ;eusart.c: 131: {
 19925                           
 19926                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 19927                           
 19928  2493  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 19929  2494  1903               	btfsc	3,2
 19930  2495  2C93               	goto	l7438
 19931                           
 19932                           ;eusart.c: 132: }
 19933                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 19934  2496  0021               	movlb	1	; select bank1
 19935  2497  1A11               	btfsc	17,4	;volatile
 19936  2498  2C9E               	goto	l426
 19937                           
 19938                           ;eusart.c: 135: {
 19939                           ;eusart.c: 136: TX1REG = txData;
 19940  2499  0020               	movlb	0	; select bank0
 19941  249A  0832               	movf	EUSART_Write@txData,w
 19942  249B  0023               	movlb	3	; select bank3
 19943  249C  009A               	movwf	26	;volatile
 19944                           
 19945                           ;eusart.c: 137: }
 19946  249D  2CB3               	goto	l7452
 19947  249E                     l426:	
 19948                           
 19949                           ;eusart.c: 138: else
 19950                           ;eusart.c: 139: {
 19951                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 19952  249E  1211               	bcf	17,4	;volatile
 19953                           
 19954                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 19955  249F  0020               	movlb	0	; select bank0
 19956  24A0  0832               	movf	EUSART_Write@txData,w
 19957  24A1  00B1               	movwf	??_EUSART_Write
 19958  24A2  087D               	movf	_eusartTxHead,w
 19959  24A3  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 19960  24A4  0086               	movwf	6
 19961  24A5  3001               	movlw	1	; select bank3/4
 19962  24A6  0087               	movwf	7
 19963  24A7  0831               	movf	??_EUSART_Write,w
 19964  24A8  0081               	movwf	1
 19965  24A9  3001               	movlw	1
 19966  24AA  00B1               	movwf	??_EUSART_Write
 19967  24AB  0831               	movf	??_EUSART_Write,w
 19968  24AC  07FD               	addwf	_eusartTxHead,f	;volatile
 19969                           
 19970                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 19971  24AD  3008               	movlw	8
 19972  24AE  027D               	subwf	_eusartTxHead,w	;volatile
 19973  24AF  1803               	btfsc	3,0
 19974                           
 19975                           ;eusart.c: 143: {
 19976                           ;eusart.c: 144: eusartTxHead = 0;
 19977  24B0  01FD               	clrf	_eusartTxHead	;volatile
 19978                           
 19979                           ;eusart.c: 145: }
 19980                           ;eusart.c: 146: eusartTxBufferRemaining--;
 19981  24B1  3001               	movlw	1
 19982  24B2  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 19983  24B3                     l7452:	
 19984                           
 19985                           ;eusart.c: 147: }
 19986                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 19987  24B3  0021               	movlb	1	; select bank1
 19988  24B4  1611               	bsf	17,4	;volatile
 19989  24B5  0008               	return
 19990  24B6                     __end_of_EUSART_Write:	
 19991                           
 19992                           	psect	text72
 19993  27BD                     __ptext72:	
 19994 ;; *************** function ___llmod *****************
 19995 ;; Defined at:
 19996 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 19997 ;; Parameters:    Size  Location     Type
 19998 ;;  divisor         4   31[BANK0 ] unsigned long 
 19999 ;;  dividend        4   35[BANK0 ] unsigned long 
 20000 ;; Auto vars:     Size  Location     Type
 20001 ;;  counter         1   40[BANK0 ] unsigned char 
 20002 ;; Return value:  Size  Location     Type
 20003 ;;                  4   31[BANK0 ] unsigned long 
 20004 ;; Registers used:
 20005 ;;		wreg, status,2, status,0
 20006 ;; Tracked objects:
 20007 ;;		On entry : 0/0
 20008 ;;		On exit  : 0/0
 20009 ;;		Unchanged: 0/0
 20010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20011 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20014 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20015 ;;Total ram usage:       10 bytes
 20016 ;; Hardware stack levels used:    1
 20017 ;; Hardware stack levels required when called:    6
 20018 ;; This function calls:
 20019 ;;		Nothing
 20020 ;; This function is called by:
 20021 ;;		_printf
 20022 ;; This function uses a non-reentrant model
 20023 ;;
 20024                           
 20025                           
 20026                           ;psect for function ___llmod
 20027  27BD                     ___llmod:	
 20028                           
 20029                           ;incstack = 0
 20030                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 20031  27BD  0020               	movlb	0	; select bank0
 20032  27BE  0842               	movf	___llmod@divisor+3,w
 20033  27BF  0441               	iorwf	___llmod@divisor+2,w
 20034  27C0  0440               	iorwf	___llmod@divisor+1,w
 20035  27C1  043F               	iorwf	___llmod@divisor,w
 20036  27C2  1903               	skipnz
 20037  27C3  2FF7               	goto	l7686
 20038  27C4  01C8               	clrf	___llmod@counter
 20039  27C5  0AC8               	incf	___llmod@counter,f
 20040  27C6                     l7676:	
 20041  27C6  1BC2               	btfsc	___llmod@divisor+3,7
 20042  27C7  2FD4               	goto	l7678
 20043  27C8  3001               	movlw	1
 20044  27C9                     u7195:	
 20045  27C9  35BF               	lslf	___llmod@divisor,f
 20046  27CA  0DC0               	rlf	___llmod@divisor+1,f
 20047  27CB  0DC1               	rlf	___llmod@divisor+2,f
 20048  27CC  0DC2               	rlf	___llmod@divisor+3,f
 20049  27CD  0B89               	decfsz	9,f
 20050  27CE  2FC9               	goto	u7195
 20051  27CF  3001               	movlw	1
 20052  27D0  00C7               	movwf	??___llmod
 20053  27D1  0847               	movf	??___llmod,w
 20054  27D2  07C8               	addwf	___llmod@counter,f
 20055  27D3  2FC6               	goto	l7676
 20056  27D4                     l7678:	
 20057  27D4  0842               	movf	___llmod@divisor+3,w
 20058  27D5  0246               	subwf	___llmod@dividend+3,w
 20059  27D6  1D03               	skipz
 20060  27D7  2FE2               	goto	u7215
 20061  27D8  0841               	movf	___llmod@divisor+2,w
 20062  27D9  0245               	subwf	___llmod@dividend+2,w
 20063  27DA  1D03               	skipz
 20064  27DB  2FE2               	goto	u7215
 20065  27DC  0840               	movf	___llmod@divisor+1,w
 20066  27DD  0244               	subwf	___llmod@dividend+1,w
 20067  27DE  1D03               	skipz
 20068  27DF  2FE2               	goto	u7215
 20069  27E0  083F               	movf	___llmod@divisor,w
 20070  27E1  0243               	subwf	___llmod@dividend,w
 20071  27E2                     u7215:	
 20072  27E2  1C03               	skipc
 20073  27E3  2FEC               	goto	l7682
 20074  27E4  083F               	movf	___llmod@divisor,w
 20075  27E5  02C3               	subwf	___llmod@dividend,f
 20076  27E6  0840               	movf	___llmod@divisor+1,w
 20077  27E7  3BC4               	subwfb	___llmod@dividend+1,f
 20078  27E8  0841               	movf	___llmod@divisor+2,w
 20079  27E9  3BC5               	subwfb	___llmod@dividend+2,f
 20080  27EA  0842               	movf	___llmod@divisor+3,w
 20081  27EB  3BC6               	subwfb	___llmod@dividend+3,f
 20082  27EC                     l7682:	
 20083  27EC  3001               	movlw	1
 20084  27ED                     u7225:	
 20085  27ED  36C2               	lsrf	___llmod@divisor+3,f
 20086  27EE  0CC1               	rrf	___llmod@divisor+2,f
 20087  27EF  0CC0               	rrf	___llmod@divisor+1,f
 20088  27F0  0CBF               	rrf	___llmod@divisor,f
 20089  27F1  0B89               	decfsz	9,f
 20090  27F2  2FED               	goto	u7225
 20091  27F3  3001               	movlw	1
 20092  27F4  02C8               	subwf	___llmod@counter,f
 20093  27F5  1D03               	btfss	3,2
 20094  27F6  2FD4               	goto	l7678
 20095  27F7                     l7686:	
 20096  27F7  0846               	movf	___llmod@dividend+3,w
 20097  27F8  00C2               	movwf	?___llmod+3
 20098  27F9  0845               	movf	___llmod@dividend+2,w
 20099  27FA  00C1               	movwf	?___llmod+2
 20100  27FB  0844               	movf	___llmod@dividend+1,w
 20101  27FC  00C0               	movwf	?___llmod+1
 20102  27FD  0843               	movf	___llmod@dividend,w
 20103  27FE  00BF               	movwf	?___llmod
 20104  27FF  0008               	return
 20105  2800                     __end_of___llmod:	
 20106                           
 20107                           	psect	text73
 20108  1D0B                     __ptext73:	
 20109 ;; *************** function ___lldiv *****************
 20110 ;; Defined at:
 20111 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 20112 ;; Parameters:    Size  Location     Type
 20113 ;;  divisor         4   17[BANK0 ] unsigned long 
 20114 ;;  dividend        4   21[BANK0 ] unsigned long 
 20115 ;; Auto vars:     Size  Location     Type
 20116 ;;  quotient        4   26[BANK0 ] unsigned long 
 20117 ;;  counter         1   30[BANK0 ] unsigned char 
 20118 ;; Return value:  Size  Location     Type
 20119 ;;                  4   17[BANK0 ] unsigned long 
 20120 ;; Registers used:
 20121 ;;		wreg, status,2, status,0
 20122 ;; Tracked objects:
 20123 ;;		On entry : 0/0
 20124 ;;		On exit  : 0/0
 20125 ;;		Unchanged: 0/0
 20126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20127 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20128 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20130 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20131 ;;Total ram usage:       14 bytes
 20132 ;; Hardware stack levels used:    1
 20133 ;; Hardware stack levels required when called:    6
 20134 ;; This function calls:
 20135 ;;		Nothing
 20136 ;; This function is called by:
 20137 ;;		_printf
 20138 ;; This function uses a non-reentrant model
 20139 ;;
 20140                           
 20141                           
 20142                           ;psect for function ___lldiv
 20143  1D0B                     ___lldiv:	
 20144                           
 20145                           ;incstack = 0
 20146                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 20147  1D0B  3000               	movlw	0
 20148  1D0C  0020               	movlb	0	; select bank0
 20149  1D0D  00BD               	movwf	___lldiv@quotient+3
 20150  1D0E  3000               	movlw	0
 20151  1D0F  00BC               	movwf	___lldiv@quotient+2
 20152  1D10  3000               	movlw	0
 20153  1D11  00BB               	movwf	___lldiv@quotient+1
 20154  1D12  3000               	movlw	0
 20155  1D13  00BA               	movwf	___lldiv@quotient
 20156  1D14  0834               	movf	___lldiv@divisor+3,w
 20157  1D15  0433               	iorwf	___lldiv@divisor+2,w
 20158  1D16  0432               	iorwf	___lldiv@divisor+1,w
 20159  1D17  0431               	iorwf	___lldiv@divisor,w
 20160  1D18  1903               	skipnz
 20161  1D19  2D55               	goto	l7666
 20162  1D1A  01BE               	clrf	___lldiv@counter
 20163  1D1B  0ABE               	incf	___lldiv@counter,f
 20164  1D1C                     l7652:	
 20165  1D1C  1BB4               	btfsc	___lldiv@divisor+3,7
 20166  1D1D  2D2A               	goto	l7654
 20167  1D1E  3001               	movlw	1
 20168  1D1F                     u7125:	
 20169  1D1F  35B1               	lslf	___lldiv@divisor,f
 20170  1D20  0DB2               	rlf	___lldiv@divisor+1,f
 20171  1D21  0DB3               	rlf	___lldiv@divisor+2,f
 20172  1D22  0DB4               	rlf	___lldiv@divisor+3,f
 20173  1D23  0B89               	decfsz	9,f
 20174  1D24  2D1F               	goto	u7125
 20175  1D25  3001               	movlw	1
 20176  1D26  00B9               	movwf	??___lldiv
 20177  1D27  0839               	movf	??___lldiv,w
 20178  1D28  07BE               	addwf	___lldiv@counter,f
 20179  1D29  2D1C               	goto	l7652
 20180  1D2A                     l7654:	
 20181  1D2A  3001               	movlw	1
 20182  1D2B                     u7145:	
 20183  1D2B  35BA               	lslf	___lldiv@quotient,f
 20184  1D2C  0DBB               	rlf	___lldiv@quotient+1,f
 20185  1D2D  0DBC               	rlf	___lldiv@quotient+2,f
 20186  1D2E  0DBD               	rlf	___lldiv@quotient+3,f
 20187  1D2F  0B89               	decfsz	9,f
 20188  1D30  2D2B               	goto	u7145
 20189  1D31  0834               	movf	___lldiv@divisor+3,w
 20190  1D32  0238               	subwf	___lldiv@dividend+3,w
 20191  1D33  1D03               	skipz
 20192  1D34  2D3F               	goto	u7155
 20193  1D35  0833               	movf	___lldiv@divisor+2,w
 20194  1D36  0237               	subwf	___lldiv@dividend+2,w
 20195  1D37  1D03               	skipz
 20196  1D38  2D3F               	goto	u7155
 20197  1D39  0832               	movf	___lldiv@divisor+1,w
 20198  1D3A  0236               	subwf	___lldiv@dividend+1,w
 20199  1D3B  1D03               	skipz
 20200  1D3C  2D3F               	goto	u7155
 20201  1D3D  0831               	movf	___lldiv@divisor,w
 20202  1D3E  0235               	subwf	___lldiv@dividend,w
 20203  1D3F                     u7155:	
 20204  1D3F  1C03               	skipc
 20205  1D40  2D4A               	goto	l7662
 20206  1D41  0831               	movf	___lldiv@divisor,w
 20207  1D42  02B5               	subwf	___lldiv@dividend,f
 20208  1D43  0832               	movf	___lldiv@divisor+1,w
 20209  1D44  3BB6               	subwfb	___lldiv@dividend+1,f
 20210  1D45  0833               	movf	___lldiv@divisor+2,w
 20211  1D46  3BB7               	subwfb	___lldiv@dividend+2,f
 20212  1D47  0834               	movf	___lldiv@divisor+3,w
 20213  1D48  3BB8               	subwfb	___lldiv@dividend+3,f
 20214  1D49  143A               	bsf	___lldiv@quotient,0
 20215  1D4A                     l7662:	
 20216  1D4A  3001               	movlw	1
 20217  1D4B                     u7165:	
 20218  1D4B  36B4               	lsrf	___lldiv@divisor+3,f
 20219  1D4C  0CB3               	rrf	___lldiv@divisor+2,f
 20220  1D4D  0CB2               	rrf	___lldiv@divisor+1,f
 20221  1D4E  0CB1               	rrf	___lldiv@divisor,f
 20222  1D4F  0B89               	decfsz	9,f
 20223  1D50  2D4B               	goto	u7165
 20224  1D51  3001               	movlw	1
 20225  1D52  02BE               	subwf	___lldiv@counter,f
 20226  1D53  1D03               	btfss	3,2
 20227  1D54  2D2A               	goto	l7654
 20228  1D55                     l7666:	
 20229  1D55  083D               	movf	___lldiv@quotient+3,w
 20230  1D56  00B4               	movwf	?___lldiv+3
 20231  1D57  083C               	movf	___lldiv@quotient+2,w
 20232  1D58  00B3               	movwf	?___lldiv+2
 20233  1D59  083B               	movf	___lldiv@quotient+1,w
 20234  1D5A  00B2               	movwf	?___lldiv+1
 20235  1D5B  083A               	movf	___lldiv@quotient,w
 20236  1D5C  00B1               	movwf	?___lldiv
 20237  1D5D  0008               	return
 20238  1D5E                     __end_of___lldiv:	
 20239                           
 20240                           	psect	text74
 20241  21E7                     __ptext74:	
 20242 ;; *************** function _i2c_setBuffer *****************
 20243 ;; Defined at:
 20244 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 20245 ;; Parameters:    Size  Location     Type
 20246 ;;  buffer          2   17[BANK0 ] PTR void 
 20247 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv_fifo_downstroke(40), drv_fifo_upstroke(40), 
 20248 ;;		 -> drv_write@buff(2), 
 20249 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 20250 ;; Auto vars:     Size  Location     Type
 20251 ;;		None
 20252 ;; Return value:  Size  Location     Type
 20253 ;;                  1    wreg      void 
 20254 ;; Registers used:
 20255 ;;		wreg
 20256 ;; Tracked objects:
 20257 ;;		On entry : 0/0
 20258 ;;		On exit  : 0/0
 20259 ;;		Unchanged: 0/0
 20260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20261 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20264 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20265 ;;Total ram usage:        4 bytes
 20266 ;; Hardware stack levels used:    1
 20267 ;; Hardware stack levels required when called:    6
 20268 ;; This function calls:
 20269 ;;		Nothing
 20270 ;; This function is called by:
 20271 ;;		_drv_write
 20272 ;;		_drv_write_wvfrm
 20273 ;;		_drv_read
 20274 ;; This function uses a non-reentrant model
 20275 ;;
 20276                           
 20277                           
 20278                           ;psect for function _i2c_setBuffer
 20279  21E7                     _i2c_setBuffer:	
 20280                           
 20281                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 20282                           
 20283                           ;incstack = 0
 20284                           ; Regs used in _i2c_setBuffer: [wreg]
 20285  21E7  0022               	movlb	2	; select bank2
 20286  21E8  1D20               	btfss	_i2c_status^(0+256),2
 20287  21E9  0008               	return
 20288                           
 20289                           ;i2c_master.c: 187: {
 20290                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 20291  21EA  0020               	movlb	0	; select bank0
 20292  21EB  0832               	movf	i2c_setBuffer@buffer+1,w
 20293  21EC  0022               	movlb	2	; select bank2
 20294  21ED  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 20295  21EE  0020               	movlb	0	; select bank0
 20296  21EF  0831               	movf	i2c_setBuffer@buffer,w
 20297  21F0  0022               	movlb	2	; select bank2
 20298  21F1  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 20299                           
 20300                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 20301  21F2  0020               	movlb	0	; select bank0
 20302  21F3  0834               	movf	i2c_setBuffer@bufferSize+1,w
 20303  21F4  0022               	movlb	2	; select bank2
 20304  21F5  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 20305  21F6  0020               	movlb	0	; select bank0
 20306  21F7  0833               	movf	i2c_setBuffer@bufferSize,w
 20307  21F8  0022               	movlb	2	; select bank2
 20308  21F9  00A4               	movwf	(_i2c_status^(0+256)+4)
 20309                           
 20310                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 20311  21FA  1120               	bcf	_i2c_status^(0+256),2
 20312  21FB  0008               	return
 20313  21FC                     __end_of_i2c_setBuffer:	
 20314                           
 20315                           	psect	text75
 20316  246D                     __ptext75:	
 20317 ;; *************** function _i2c_masterOperation *****************
 20318 ;; Defined at:
 20319 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 20320 ;; Parameters:    Size  Location     Type
 20321 ;;  read            1    wreg     unsigned char 
 20322 ;; Auto vars:     Size  Location     Type
 20323 ;;  read            1   24[BANK0 ] unsigned char 
 20324 ;;  ret             1   25[BANK0 ] enum E8193
 20325 ;; Return value:  Size  Location     Type
 20326 ;;                  1    wreg      enum E8193
 20327 ;; Registers used:
 20328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20329 ;; Tracked objects:
 20330 ;;		On entry : 0/0
 20331 ;;		On exit  : 0/0
 20332 ;;		Unchanged: 0/0
 20333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20335 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20337 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20338 ;;Total ram usage:        3 bytes
 20339 ;; Hardware stack levels used:    1
 20340 ;; Hardware stack levels required when called:   11
 20341 ;; This function calls:
 20342 ;;		_i2c1_driver_start
 20343 ;;		_i2c_poller
 20344 ;;		_mssp1_IRQisEnabled
 20345 ;; This function is called by:
 20346 ;;		_drv_write
 20347 ;;		_drv_write_wvfrm
 20348 ;;		_drv_read
 20349 ;;		_i2c_masterRead
 20350 ;;		_i2c_masterWrite
 20351 ;; This function uses a non-reentrant model
 20352 ;;
 20353                           
 20354                           
 20355                           ;psect for function _i2c_masterOperation
 20356  246D                     _i2c_masterOperation:	
 20357                           
 20358                           ;incstack = 0
 20359                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20360                           ;i2c_masterOperation@read stored from wreg
 20361  246D  0020               	movlb	0	; select bank0
 20362  246E  00B8               	movwf	i2c_masterOperation@read
 20363                           
 20364                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 20365  246F  01B9               	clrf	i2c_masterOperation@ret
 20366  2470  0AB9               	incf	i2c_masterOperation@ret,f
 20367                           
 20368                           ;i2c_master.c: 196: if(!i2c_status.busy)
 20369  2471  0022               	movlb	2	; select bank2
 20370  2472  1820               	btfsc	_i2c_status^(0+256),0
 20371  2473  2C8E               	goto	l7926
 20372                           
 20373                           ;i2c_master.c: 197: {
 20374                           ;i2c_master.c: 198: i2c_status.busy = 1;
 20375  2474  1420               	bsf	_i2c_status^(0+256),0
 20376                           
 20377                           ;i2c_master.c: 199: ret = I2C_NOERR;
 20378  2475  0020               	movlb	0	; select bank0
 20379  2476  01B9               	clrf	i2c_masterOperation@ret
 20380                           
 20381                           ;i2c_master.c: 201: if(read)
 20382  2477  0838               	movf	i2c_masterOperation@read,w
 20383  2478  1903               	btfsc	3,2
 20384  2479  2C7E               	goto	l7920
 20385                           
 20386                           ;i2c_master.c: 202: {
 20387                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 20388  247A  0022               	movlb	2	; select bank2
 20389  247B  01AA               	clrf	(_i2c_status^(0+256)+10)
 20390  247C  0AAA               	incf	(_i2c_status^(0+256)+10),f
 20391                           
 20392                           ;i2c_master.c: 204: }
 20393  247D  2C84               	goto	l7922
 20394  247E                     l7920:	
 20395                           
 20396                           ;i2c_master.c: 205: else
 20397                           ;i2c_master.c: 206: {
 20398                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 20399  247E  3002               	movlw	2
 20400  247F  0020               	movlb	0	; select bank0
 20401  2480  00B7               	movwf	??_i2c_masterOperation
 20402  2481  0837               	movf	??_i2c_masterOperation,w
 20403  2482  0022               	movlb	2	; select bank2
 20404  2483  00AA               	movwf	(_i2c_status^(0+256)+10)
 20405  2484                     l7922:	
 20406                           
 20407                           ;i2c_master.c: 208: }
 20408                           ;i2c_master.c: 209: i2c1_driver_start();
 20409  2484  31AF  2761  31A4   	fcall	_i2c1_driver_start
 20410                           
 20411                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 20412  2487  31A0  20D6  31A4   	fcall	_mssp1_IRQisEnabled
 20413  248A  1803               	btfsc	3,0
 20414  248B  2C8E               	goto	l7926
 20415                           
 20416                           ;i2c_master.c: 212: i2c_poller();
 20417  248C  31A1  2115         	fcall	_i2c_poller
 20418  248E                     l7926:	
 20419                           
 20420                           ;i2c_master.c: 213: }
 20421                           ;i2c_master.c: 214: return ret;
 20422  248E  0020               	movlb	0	; select bank0
 20423  248F  0839               	movf	i2c_masterOperation@ret,w
 20424  2490  0008               	return
 20425  2491                     __end_of_i2c_masterOperation:	
 20426                           
 20427                           	psect	text76
 20428  20D6                     __ptext76:	
 20429 ;; *************** function _mssp1_IRQisEnabled *****************
 20430 ;; Defined at:
 20431 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 20432 ;; Parameters:    Size  Location     Type
 20433 ;;		None
 20434 ;; Auto vars:     Size  Location     Type
 20435 ;;		None
 20436 ;; Return value:  Size  Location     Type
 20437 ;;		None               void
 20438 ;; Registers used:
 20439 ;;		wreg, status,2, status,0
 20440 ;; Tracked objects:
 20441 ;;		On entry : 0/0
 20442 ;;		On exit  : 0/0
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20447 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20449 ;;Total ram usage:        2 bytes
 20450 ;; Hardware stack levels used:    1
 20451 ;; Hardware stack levels required when called:    6
 20452 ;; This function calls:
 20453 ;;		Nothing
 20454 ;; This function is called by:
 20455 ;;		_i2c_masterOperation
 20456 ;; This function uses a non-reentrant model
 20457 ;;
 20458                           
 20459                           
 20460                           ;psect for function _mssp1_IRQisEnabled
 20461  20D6                     _mssp1_IRQisEnabled:	
 20462                           
 20463                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 20464                           
 20465                           ;incstack = 0
 20466                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 20467  20D6  0021               	movlb	1	; select bank1
 20468  20D7  0C11               	rrf	17,w	;volatile
 20469  20D8  0020               	movlb	0	; select bank0
 20470  20D9  00B1               	movwf	??_mssp1_IRQisEnabled
 20471  20DA  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 20472  20DB  0C31               	rrf	??_mssp1_IRQisEnabled,w
 20473  20DC  3901               	andlw	1
 20474  20DD  00B2               	movwf	??_mssp1_IRQisEnabled+1
 20475  20DE  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 20476  20DF  0008               	return
 20477  20E0                     __end_of_mssp1_IRQisEnabled:	
 20478                           
 20479                           	psect	text77
 20480  2115                     __ptext77:	
 20481 ;; *************** function _i2c_poller *****************
 20482 ;; Defined at:
 20483 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 20484 ;; Parameters:    Size  Location     Type
 20485 ;;		None
 20486 ;; Auto vars:     Size  Location     Type
 20487 ;;		None
 20488 ;; Return value:  Size  Location     Type
 20489 ;;                  1    wreg      void 
 20490 ;; Registers used:
 20491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20492 ;; Tracked objects:
 20493 ;;		On entry : 0/0
 20494 ;;		On exit  : 0/0
 20495 ;;		Unchanged: 0/0
 20496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20501 ;;Total ram usage:        0 bytes
 20502 ;; Hardware stack levels used:    1
 20503 ;; Hardware stack levels required when called:   10
 20504 ;; This function calls:
 20505 ;;		_i2c_ISR
 20506 ;;		_mssp1_waitForEvent
 20507 ;; This function is called by:
 20508 ;;		_i2c_masterOperation
 20509 ;; This function uses a non-reentrant model
 20510 ;;
 20511                           
 20512                           
 20513                           ;psect for function _i2c_poller
 20514  2115                     _i2c_poller:	
 20515  2115                     l7796:	
 20516                           ;i2c_master.c: 232: while(i2c_status.busy)
 20517                           
 20518                           ;incstack = 0
 20519                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20520                           
 20521  2115  0022               	movlb	2	; select bank2
 20522  2116  1C20               	btfss	_i2c_status^(0+256),0
 20523  2117  0008               	return
 20524                           
 20525                           ;i2c_master.c: 233: {
 20526                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 20527  2118  3000               	movlw	0
 20528  2119  31A1  210A  31A1   	fcall	_mssp1_waitForEvent
 20529                           
 20530                           ;i2c_master.c: 235: i2c_ISR();
 20531  211C  31A4  24B6  31A1   	fcall	_i2c_ISR
 20532  211F  2915               	goto	l7796
 20533  2120                     __end_of_i2c_poller:	
 20534                           
 20535                           	psect	text78
 20536  210A                     __ptext78:	
 20537 ;; *************** function _mssp1_waitForEvent *****************
 20538 ;; Defined at:
 20539 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 20540 ;; Parameters:    Size  Location     Type
 20541 ;;  timeout         1    wreg     PTR unsigned int 
 20542 ;;		 -> NULL(0), 
 20543 ;; Auto vars:     Size  Location     Type
 20544 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 20545 ;;		 -> NULL(0), 
 20546 ;; Return value:  Size  Location     Type
 20547 ;;                  1    wreg      void 
 20548 ;; Registers used:
 20549 ;;		wreg
 20550 ;; Tracked objects:
 20551 ;;		On entry : 0/0
 20552 ;;		On exit  : 0/0
 20553 ;;		Unchanged: 0/0
 20554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20559 ;;Total ram usage:        1 bytes
 20560 ;; Hardware stack levels used:    1
 20561 ;; Hardware stack levels required when called:    6
 20562 ;; This function calls:
 20563 ;;		Nothing
 20564 ;; This function is called by:
 20565 ;;		_i2c_poller
 20566 ;; This function uses a non-reentrant model
 20567 ;;
 20568                           
 20569                           
 20570                           ;psect for function _mssp1_waitForEvent
 20571  210A                     _mssp1_waitForEvent:	
 20572                           
 20573                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 20574                           
 20575                           ;incstack = 0
 20576                           ; Regs used in _mssp1_waitForEvent: [wreg]
 20577  210A  0020               	movlb	0	; select bank0
 20578  210B  1991               	btfsc	17,3	;volatile
 20579  210C  0008               	return
 20580  210D                     l511:	
 20581                           ;i2c1_driver.c: 74: {
 20582                           ;i2c1_driver.c: 75: while(1)
 20583                           
 20584                           
 20585                           ;i2c1_driver.c: 76: {
 20586                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 20587  210D  0020               	movlb	0	; select bank0
 20588  210E  1991               	btfsc	17,3	;volatile
 20589  210F  0008               	return
 20590                           
 20591                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 20592  2110  3008               	movlw	8
 20593  2111                     u10217:	
 20594  2111  0B89               	decfsz	9,f
 20595  2112  2911               	goto	u10217
 20596  2113  0000               	nop
 20597  2114  290D               	goto	l511
 20598  2115                     __end_of_mssp1_waitForEvent:	
 20599                           
 20600                           	psect	text79
 20601  24B6                     __ptext79:	
 20602 ;; *************** function _i2c_ISR *****************
 20603 ;; Defined at:
 20604 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 20605 ;; Parameters:    Size  Location     Type
 20606 ;;		None
 20607 ;; Auto vars:     Size  Location     Type
 20608 ;;		None
 20609 ;; Return value:  Size  Location     Type
 20610 ;;                  1    wreg      void 
 20611 ;; Registers used:
 20612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20613 ;; Tracked objects:
 20614 ;;		On entry : 0/0
 20615 ;;		On exit  : 0/0
 20616 ;;		Unchanged: 0/0
 20617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20622 ;;Total ram usage:        1 bytes
 20623 ;; Hardware stack levels used:    1
 20624 ;; Hardware stack levels required when called:    9
 20625 ;; This function calls:
 20626 ;;		_do_I2C_DO_ACK
 20627 ;;		_do_I2C_DO_ADDRESS_NACK
 20628 ;;		_do_I2C_DO_NACK_RESTART
 20629 ;;		_do_I2C_DO_NACK_STOP
 20630 ;;		_do_I2C_IDLE
 20631 ;;		_do_I2C_RCEN
 20632 ;;		_do_I2C_RESET
 20633 ;;		_do_I2C_RX
 20634 ;;		_do_I2C_SEND_ADR_READ
 20635 ;;		_do_I2C_SEND_ADR_WRITE
 20636 ;;		_do_I2C_SEND_RESTART
 20637 ;;		_do_I2C_SEND_RESTART_READ
 20638 ;;		_do_I2C_SEND_RESTART_WRITE
 20639 ;;		_do_I2C_SEND_STOP
 20640 ;;		_do_I2C_TX
 20641 ;;		_do_I2C_TX_EMPTY
 20642 ;;		_i2c1_driver_isNACK
 20643 ;;		_mssp1_clearIRQ
 20644 ;; This function is called by:
 20645 ;;		_i2c_open
 20646 ;;		_i2c_poller
 20647 ;;		_INTERRUPT_InterruptManager
 20648 ;; This function uses a non-reentrant model
 20649 ;;
 20650                           
 20651                           
 20652                           ;psect for function _i2c_ISR
 20653  24B6                     _i2c_ISR:	
 20654                           
 20655                           ;Skip over the trampoline to the duplicate function for level 1
 20656  24B6  1C7E               	btfss	126,0
 20657  24B7  2CBA               	goto	l7604
 20658  24B8  31A3  2B62         	ljmp	i1l9318
 20659  24BA                     _i2c_ISR$intlevel0:	
 20660  24BA                     l7604:	
 20661                           ;incstack = 0
 20662                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20663                           
 20664                           
 20665                           ;i2c_master.c: 421: mssp1_clearIRQ();
 20666  24BA  31AF  2773  31A4   	fcall	_mssp1_clearIRQ
 20667                           
 20668                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 20669  24BD  0022               	movlb	2	; select bank2
 20670  24BE  1DA0               	btfss	_i2c_status^(0+256),3
 20671  24BF  2CCB               	goto	l7612
 20672  24C0  31A1  215E  31A4   	fcall	_i2c1_driver_isNACK
 20673  24C3  1C03               	btfss	3,0
 20674  24C4  2CCB               	goto	l7612
 20675                           
 20676                           ;i2c_master.c: 428: {
 20677                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 20678  24C5  300F               	movlw	15
 20679  24C6  0020               	movlb	0	; select bank0
 20680  24C7  00B6               	movwf	??_i2c_ISR
 20681  24C8  0836               	movf	??_i2c_ISR,w
 20682  24C9  0022               	movlb	2	; select bank2
 20683  24CA  00AA               	movwf	(_i2c_status^(0+256)+10)
 20684  24CB                     l7612:	
 20685                           
 20686                           ;i2c_master.c: 430: }
 20687                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 20688  24CB  0022               	movlb	2	; select bank2
 20689  24CC  352A               	lslf	(_i2c_status^(0+256)+10),w
 20690  24CD  3E48               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 20691  24CE  0086               	movwf	6
 20692  24CF  3002               	movlw	2	; select bank4/5
 20693  24D0  0087               	movwf	7
 20694  24D1  3F41               	moviw [1]fsr1
 20695  24D2  008A               	movwf	10
 20696  24D3  3F40               	moviw [0]fsr1
 20697  24D4  000A               	callw
 20698  24D5  31A4               	pagesel	$
 20699  24D6  0020               	movlb	0	; select bank0
 20700  24D7  00B6               	movwf	??_i2c_ISR
 20701  24D8  0836               	movf	??_i2c_ISR,w
 20702  24D9  0022               	movlb	2	; select bank2
 20703  24DA  00AA               	movwf	(_i2c_status^(0+256)+10)
 20704  24DB  0008               	return
 20705  24DC                     __end_of_i2c_ISR:	
 20706                           
 20707                           	psect	text80
 20708  2F73                     __ptext80:	
 20709 ;; *************** function _mssp1_clearIRQ *****************
 20710 ;; Defined at:
 20711 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 20712 ;; Parameters:    Size  Location     Type
 20713 ;;		None
 20714 ;; Auto vars:     Size  Location     Type
 20715 ;;		None
 20716 ;; Return value:  Size  Location     Type
 20717 ;;                  1    wreg      void 
 20718 ;; Registers used:
 20719 ;;		None
 20720 ;; Tracked objects:
 20721 ;;		On entry : 0/0
 20722 ;;		On exit  : 0/0
 20723 ;;		Unchanged: 0/0
 20724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20729 ;;Total ram usage:        0 bytes
 20730 ;; Hardware stack levels used:    1
 20731 ;; Hardware stack levels required when called:    6
 20732 ;; This function calls:
 20733 ;;		Nothing
 20734 ;; This function is called by:
 20735 ;;		_i2c_open
 20736 ;;		_i2c_ISR
 20737 ;;		_i2c_close
 20738 ;; This function uses a non-reentrant model
 20739 ;;
 20740                           
 20741                           
 20742                           ;psect for function _mssp1_clearIRQ
 20743  2F73                     _mssp1_clearIRQ:	
 20744                           
 20745                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 20746                           
 20747                           ;incstack = 0
 20748                           ; Regs used in _mssp1_clearIRQ: []
 20749  2F73  0020               	movlb	0	; select bank0
 20750  2F74  1191               	bcf	17,3	;volatile
 20751  2F75  0008               	return
 20752  2F76                     __end_of_mssp1_clearIRQ:	
 20753                           
 20754                           	psect	text81
 20755  19BB                     __ptext81:	
 20756 ;; *************** function _do_I2C_RX *****************
 20757 ;; Defined at:
 20758 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 20759 ;; Parameters:    Size  Location     Type
 20760 ;;		None
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;		None
 20763 ;; Return value:  Size  Location     Type
 20764 ;;                  1    wreg      enum E8364
 20765 ;; Registers used:
 20766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20767 ;; Tracked objects:
 20768 ;;		On entry : 0/0
 20769 ;;		On exit  : 0/0
 20770 ;;		Unchanged: 0/0
 20771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20775 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20776 ;;Total ram usage:        1 bytes
 20777 ;; Hardware stack levels used:    1
 20778 ;; Hardware stack levels required when called:    8
 20779 ;; This function calls:
 20780 ;;		_do_I2C_DO_NACK_RESTART
 20781 ;;		_do_I2C_DO_NACK_STOP
 20782 ;;		_i2c1_driver_getRXData
 20783 ;;		_i2c1_driver_sendACK
 20784 ;;		_returnReset
 20785 ;;		_returnStop
 20786 ;; This function is called by:
 20787 ;;		_i2c_ISR
 20788 ;;		i1_i2c_ISR
 20789 ;; This function uses a non-reentrant model
 20790 ;;
 20791                           
 20792                           
 20793                           ;psect for function _do_I2C_RX
 20794  19BB                     _do_I2C_RX:	
 20795                           
 20796                           ;Skip over the trampoline to the duplicate function for level 1
 20797  19BB  1C7E               	btfss	126,0
 20798  19BC  29BF               	goto	l7550
 20799  19BD  31A7  2F7D         	ljmp	i1l8950
 20800  19BF                     _do_I2C_RX$intlevel0:	
 20801  19BF                     l7550:	
 20802                           ;incstack = 0
 20803                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20804                           
 20805                           
 20806                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 20807  19BF  31AF  276D  3199   	fcall	_i2c1_driver_getRXData
 20808  19C2  0020               	movlb	0	; select bank0
 20809  19C3  00B1               	movwf	??_do_I2C_RX
 20810  19C4  0022               	movlb	2	; select bank2
 20811  19C5  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 20812  19C6  0086               	movwf	6
 20813  19C7  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 20814  19C8  0087               	movwf	7
 20815  19C9  0020               	movlb	0	; select bank0
 20816  19CA  0831               	movf	??_do_I2C_RX,w
 20817  19CB  0081               	movwf	1
 20818  19CC  3001               	movlw	1
 20819  19CD  0022               	movlb	2	; select bank2
 20820  19CE  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 20821  19CF  3000               	movlw	0
 20822  19D0  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 20823                           
 20824                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 20825  19D1  3001               	movlw	1
 20826  19D2  02A4               	subwf	(_i2c_status^(0+256)+4),f
 20827  19D3  3000               	movlw	0
 20828  19D4  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 20829  19D5  0824               	movf	(_i2c_status^(0+256)+4),w
 20830  19D6  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 20831  19D7  1903               	btfsc	3,2
 20832  19D8  29DD               	goto	l772
 20833                           
 20834                           ;i2c_master.c: 361: {
 20835                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 20836  19D9  31AF  279E         	fcall	_i2c1_driver_sendACK
 20837                           
 20838                           ;i2c_master.c: 363: return I2C_RCEN;
 20839  19DB  3005               	movlw	5
 20840                           
 20841                           ;i2c_master.c: 364: }
 20842  19DC  0008               	return
 20843  19DD                     l772:	
 20844                           
 20845                           ;i2c_master.c: 365: else
 20846                           ;i2c_master.c: 366: {
 20847                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 20848  19DD  1520               	bsf	_i2c_status^(0+256),2
 20849                           
 20850                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20851  19DE  29E5               	goto	l7574
 20852  19DF                     l7564:	
 20853                           ;i2c_master.c: 369: {
 20854                           ;i2c_master.c: 370: case i2c_restart_write:
 20855                           
 20856                           
 20857                           ;i2c_master.c: 371: case i2c_restart_read:
 20858                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 20859  19DF  31A0  2073         	fcall	_do_I2C_DO_NACK_RESTART
 20860  19E1  0008               	return
 20861  19E2                     l7568:	
 20862                           ;i2c_master.c: 374: case i2c_continue:
 20863                           
 20864                           ;i2c_master.c: 373: default:
 20865                           
 20866                           
 20867                           ;i2c_master.c: 375: case i2c_stop:
 20868                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 20869  19E2  31A0  206B         	fcall	_do_I2C_DO_NACK_STOP
 20870                           
 20871                           ;i2c_master.c: 377: }
 20872  19E4  0008               	return
 20873  19E5                     l7574:	
 20874  19E5  0022               	movlb	2	; select bank2
 20875  19E6  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 20876  19E7  0020               	movlb	0	; select bank0
 20877  19E8  00B1               	movwf	??_do_I2C_RX
 20878  19E9  0831               	movf	??_do_I2C_RX,w
 20879  19EA  00B1               	movwf	returnReset@p
 20880  19EB  300C               	movlw	12
 20881  19EC  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20882  19ED  0086               	movwf	6
 20883  19EE  3001               	movlw	1	; select bank2/3
 20884  19EF  0087               	movwf	7
 20885  19F0  3F41               	moviw [1]fsr1
 20886  19F1  008A               	movwf	10
 20887  19F2  3F40               	moviw [0]fsr1
 20888  19F3  000A               	callw
 20889  19F4  3199               	pagesel	$
 20890                           
 20891                           ; Switch size 1, requested type "space"
 20892                           ; Number of cases is 4, Range of values is 1 to 4
 20893                           ; switch strategies available:
 20894                           ; Name         Instructions Cycles
 20895                           ; simple_byte           13     7 (average)
 20896                           ; direct_byte           17     9 (fixed)
 20897                           ; jumptable            263     9 (fixed)
 20898                           ;	Chosen strategy is simple_byte
 20899  19F5  3A01               	xorlw	1	; case 1
 20900  19F6  1903               	skipnz
 20901  19F7  29E2               	goto	l7568
 20902  19F8  3A03               	xorlw	3	; case 2
 20903  19F9  1903               	skipnz
 20904  19FA  29DF               	goto	l7564
 20905  19FB  3A01               	xorlw	1	; case 3
 20906  19FC  1903               	skipnz
 20907  19FD  29DF               	goto	l7564
 20908  19FE  3A07               	xorlw	7	; case 4
 20909  19FF  1903               	skipnz
 20910  1A00  29E2               	goto	l7568
 20911  1A01  29E2               	goto	l7568
 20912  1A02  0008               	return
 20913  1A03                     __end_of_do_I2C_RX:	
 20914                           
 20915                           	psect	text82
 20916  1DB6                     __ptext82:	
 20917 ;; *************** function _do_I2C_TX *****************
 20918 ;; Defined at:
 20919 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 20920 ;; Parameters:    Size  Location     Type
 20921 ;;		None
 20922 ;; Auto vars:     Size  Location     Type
 20923 ;;		None
 20924 ;; Return value:  Size  Location     Type
 20925 ;;                  1    wreg      enum E8364
 20926 ;; Registers used:
 20927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20928 ;; Tracked objects:
 20929 ;;		On entry : 0/0
 20930 ;;		On exit  : 0/0
 20931 ;;		Unchanged: 0/0
 20932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20935 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20936 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20937 ;;Total ram usage:        4 bytes
 20938 ;; Hardware stack levels used:    1
 20939 ;; Hardware stack levels required when called:    8
 20940 ;; This function calls:
 20941 ;;		_do_I2C_SEND_RESTART_READ
 20942 ;;		_do_I2C_SEND_RESTART_WRITE
 20943 ;;		_do_I2C_SEND_STOP
 20944 ;;		_i2c1_driver_TXData
 20945 ;;		_i2c1_driver_isNACK
 20946 ;;		_returnReset
 20947 ;;		_returnStop
 20948 ;; This function is called by:
 20949 ;;		_i2c_ISR
 20950 ;;		i1_i2c_ISR
 20951 ;; This function uses a non-reentrant model
 20952 ;;
 20953                           
 20954                           
 20955                           ;psect for function _do_I2C_TX
 20956  1DB6                     _do_I2C_TX:	
 20957                           
 20958                           ;Skip over the trampoline to the duplicate function for level 1
 20959  1DB6  1C7E               	btfss	126,0
 20960  1DB7  2DBA               	goto	l7520
 20961  1DB8  319B  2B7D         	ljmp	i1l8920
 20962  1DBA                     _do_I2C_TX$intlevel0:	
 20963  1DBA                     l7520:	
 20964                           ;incstack = 0
 20965                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20966                           
 20967                           
 20968                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 20969  1DBA  31A1  215E  319D   	fcall	_i2c1_driver_isNACK
 20970  1DBD  1803               	btfsc	3,0
 20971  1DBE  2DC9               	goto	l7538
 20972  1DBF  2DE7               	goto	l756
 20973  1DC0                     l7524:	
 20974                           ;i2c_master.c: 338: {
 20975                           ;i2c_master.c: 339: case i2c_restart_read:
 20976                           
 20977                           ;i2c_master.c: 336: {
 20978                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 20979                           
 20980                           
 20981                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 20982  1DC0  31A0  2043         	fcall	_do_I2C_SEND_RESTART_READ
 20983  1DC2  0008               	return
 20984  1DC3                     l7528:	
 20985                           ;i2c_master.c: 341: case i2c_restart_write:
 20986                           
 20987                           
 20988                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 20989  1DC3  31A0  204B         	fcall	_do_I2C_SEND_RESTART_WRITE
 20990  1DC5  0008               	return
 20991  1DC6                     l7532:	
 20992                           ;i2c_master.c: 344: case i2c_continue:
 20993                           
 20994                           ;i2c_master.c: 343: default:
 20995                           
 20996                           
 20997                           ;i2c_master.c: 345: case i2c_stop:
 20998                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 20999  1DC6  31A0  205B         	fcall	_do_I2C_SEND_STOP
 21000                           
 21001                           ;i2c_master.c: 347: }
 21002  1DC8  0008               	return
 21003  1DC9                     l7538:	
 21004  1DC9  0022               	movlb	2	; select bank2
 21005  1DCA  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 21006  1DCB  0020               	movlb	0	; select bank0
 21007  1DCC  00B2               	movwf	??_do_I2C_TX
 21008  1DCD  0832               	movf	??_do_I2C_TX,w
 21009  1DCE  00B1               	movwf	returnReset@p
 21010  1DCF  3012               	movlw	18
 21011  1DD0  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 21012  1DD1  0086               	movwf	6
 21013  1DD2  3001               	movlw	1	; select bank2/3
 21014  1DD3  0087               	movwf	7
 21015  1DD4  3F41               	moviw [1]fsr1
 21016  1DD5  008A               	movwf	10
 21017  1DD6  3F40               	moviw [0]fsr1
 21018  1DD7  000A               	callw
 21019  1DD8  319D               	pagesel	$
 21020                           
 21021                           ; Switch size 1, requested type "space"
 21022                           ; Number of cases is 4, Range of values is 1 to 4
 21023                           ; switch strategies available:
 21024                           ; Name         Instructions Cycles
 21025                           ; simple_byte           13     7 (average)
 21026                           ; direct_byte           17     9 (fixed)
 21027                           ; jumptable            263     9 (fixed)
 21028                           ;	Chosen strategy is simple_byte
 21029  1DD9  3A01               	xorlw	1	; case 1
 21030  1DDA  1903               	skipnz
 21031  1DDB  2DC6               	goto	l7532
 21032  1DDC  3A03               	xorlw	3	; case 2
 21033  1DDD  1903               	skipnz
 21034  1DDE  2DC0               	goto	l7524
 21035  1DDF  3A01               	xorlw	1	; case 3
 21036  1DE0  1903               	skipnz
 21037  1DE1  2DC3               	goto	l7528
 21038  1DE2  3A07               	xorlw	7	; case 4
 21039  1DE3  1903               	skipnz
 21040  1DE4  2DC6               	goto	l7532
 21041  1DE5  2DC6               	goto	l7532
 21042                           
 21043                           ;i2c_master.c: 348: }
 21044  1DE6  0008               	return
 21045  1DE7                     l756:	
 21046                           
 21047                           ;i2c_master.c: 349: else
 21048                           ;i2c_master.c: 350: {
 21049                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 21050  1DE7  0022               	movlb	2	; select bank2
 21051  1DE8  11A0               	bcf	_i2c_status^(0+256),3
 21052                           
 21053                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 21054  1DE9  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 21055  1DEA  0020               	movlb	0	; select bank0
 21056  1DEB  00B3               	movwf	??_do_I2C_TX+1
 21057  1DEC  0022               	movlb	2	; select bank2
 21058  1DED  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 21059  1DEE  0020               	movlb	0	; select bank0
 21060  1DEF  00B2               	movwf	??_do_I2C_TX
 21061  1DF0  0022               	movlb	2	; select bank2
 21062  1DF1  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 21063  1DF2  1903               	skipnz
 21064  1DF3  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 21065  1DF4  0020               	movlb	0	; select bank0
 21066  1DF5  0832               	movf	??_do_I2C_TX,w
 21067  1DF6  0086               	movwf	6
 21068  1DF7  0833               	movf	??_do_I2C_TX+1,w
 21069  1DF8  0087               	movwf	7
 21070  1DF9  0801               	movf	1,w
 21071  1DFA  31AF  27DA  319D   	fcall	_i2c1_driver_TXData
 21072                           
 21073                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 21074  1DFD  3001               	movlw	1
 21075  1DFE  0022               	movlb	2	; select bank2
 21076  1DFF  02A4               	subwf	(_i2c_status^(0+256)+4),f
 21077  1E00  3000               	movlw	0
 21078  1E01  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 21079  1E02  0824               	movf	(_i2c_status^(0+256)+4),w
 21080  1E03  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 21081  1E04  1D03               	btfss	3,2
 21082  1E05  2E08               	goto	l7546
 21083  1E06  3006               	movlw	6
 21084  1E07  2E09               	goto	L43
 21085  1E08                     l7546:	
 21086  1E08  3003               	movlw	3
 21087  1E09                     L43:	
 21088  1E09  0020               	movlb	0	; select bank0
 21089  1E0A  00B4               	movwf	_do_I2C_TX$1134
 21090  1E0B  3000               	movlw	0
 21091  1E0C  00B5               	movwf	_do_I2C_TX$1134+1
 21092  1E0D  0834               	movf	_do_I2C_TX$1134,w
 21093  1E0E  0008               	return
 21094  1E0F                     __end_of_do_I2C_TX:	
 21095                           
 21096                           	psect	text83
 21097  2580                     __ptext83:	
 21098 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 21099 ;; Defined at:
 21100 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 21101 ;; Parameters:    Size  Location     Type
 21102 ;;		None
 21103 ;; Auto vars:     Size  Location     Type
 21104 ;;		None
 21105 ;; Return value:  Size  Location     Type
 21106 ;;                  1    wreg      enum E8364
 21107 ;; Registers used:
 21108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21109 ;; Tracked objects:
 21110 ;;		On entry : 0/0
 21111 ;;		On exit  : 0/0
 21112 ;;		Unchanged: 0/0
 21113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21118 ;;Total ram usage:        1 bytes
 21119 ;; Hardware stack levels used:    1
 21120 ;; Hardware stack levels required when called:    8
 21121 ;; This function calls:
 21122 ;;		_do_I2C_SEND_RESTART
 21123 ;;		_do_I2C_SEND_STOP
 21124 ;;		_returnReset
 21125 ;;		_returnStop
 21126 ;; This function is called by:
 21127 ;;		_i2c_ISR
 21128 ;;		i1_i2c_ISR
 21129 ;; This function uses a non-reentrant model
 21130 ;;
 21131                           
 21132                           
 21133                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 21134  2580                     _do_I2C_DO_ADDRESS_NACK:	
 21135                           
 21136                           ;Skip over the trampoline to the duplicate function for level 1
 21137  2580  1C7E               	btfss	126,0
 21138  2581  2D84               	goto	l7504
 21139  2582  31A4  2C49         	ljmp	i1l8904
 21140  2584                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 21141  2584                     l7504:	
 21142                           ;incstack = 0
 21143                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21144                           
 21145                           
 21146                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 21147  2584  0022               	movlb	2	; select bank2
 21148  2585  11A0               	bcf	_i2c_status^(0+256),3
 21149                           
 21150                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 21151  2586  3002               	movlw	2
 21152  2587  0020               	movlb	0	; select bank0
 21153  2588  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 21154  2589  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 21155  258A  0022               	movlb	2	; select bank2
 21156  258B  00AB               	movwf	(_i2c_status^(0+256)+11)
 21157                           
 21158                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 21159  258C  2D93               	goto	l7518
 21160  258D                     l7508:	
 21161                           ;i2c_master.c: 324: {
 21162                           ;i2c_master.c: 325: case i2c_restart_read:
 21163                           
 21164                           
 21165                           ;i2c_master.c: 326: case i2c_restart_write:
 21166                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 21167  258D  31A0  2053         	fcall	_do_I2C_SEND_RESTART
 21168  258F  0008               	return
 21169  2590                     l7512:	
 21170                           ;i2c_master.c: 328: default:
 21171                           
 21172                           
 21173                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 21174  2590  31A0  205B         	fcall	_do_I2C_SEND_STOP
 21175                           
 21176                           ;i2c_master.c: 330: }
 21177  2592  0008               	return
 21178  2593                     l7518:	
 21179  2593  0022               	movlb	2	; select bank2
 21180  2594  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 21181  2595  0020               	movlb	0	; select bank0
 21182  2596  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 21183  2597  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 21184  2598  00B1               	movwf	returnReset@p
 21185  2599  3010               	movlw	16
 21186  259A  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 21187  259B  0086               	movwf	6
 21188  259C  3001               	movlw	1	; select bank2/3
 21189  259D  0087               	movwf	7
 21190  259E  3F41               	moviw [1]fsr1
 21191  259F  008A               	movwf	10
 21192  25A0  3F40               	moviw [0]fsr1
 21193  25A1  000A               	callw
 21194  25A2  31A5               	pagesel	$
 21195                           
 21196                           ; Switch size 1, requested type "space"
 21197                           ; Number of cases is 2, Range of values is 2 to 3
 21198                           ; switch strategies available:
 21199                           ; Name         Instructions Cycles
 21200                           ; simple_byte            7     4 (average)
 21201                           ; direct_byte           13     9 (fixed)
 21202                           ; jumptable            263     9 (fixed)
 21203                           ;	Chosen strategy is simple_byte
 21204  25A3  3A02               	xorlw	2	; case 2
 21205  25A4  1903               	skipnz
 21206  25A5  2D8D               	goto	l7508
 21207  25A6  3A01               	xorlw	1	; case 3
 21208  25A7  1903               	skipnz
 21209  25A8  2D8D               	goto	l7508
 21210  25A9  2D90               	goto	l7512
 21211  25AA  0008               	return
 21212  25AB                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 21213                           
 21214                           	psect	text84
 21215  2073                     __ptext84:	
 21216 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 21217 ;; Defined at:
 21218 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 21219 ;; Parameters:    Size  Location     Type
 21220 ;;		None
 21221 ;; Auto vars:     Size  Location     Type
 21222 ;;		None
 21223 ;; Return value:  Size  Location     Type
 21224 ;;                  1    wreg      enum E8364
 21225 ;; Registers used:
 21226 ;;		wreg, status,2, status,0, pclath, cstack
 21227 ;; Tracked objects:
 21228 ;;		On entry : 0/0
 21229 ;;		On exit  : 0/0
 21230 ;;		Unchanged: 0/0
 21231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21236 ;;Total ram usage:        0 bytes
 21237 ;; Hardware stack levels used:    1
 21238 ;; Hardware stack levels required when called:    7
 21239 ;; This function calls:
 21240 ;;		_i2c1_driver_sendNACK
 21241 ;; This function is called by:
 21242 ;;		_do_I2C_RX
 21243 ;;		_i2c_ISR
 21244 ;;		i1_i2c_ISR
 21245 ;; This function uses a non-reentrant model
 21246 ;;
 21247                           
 21248                           
 21249                           ;psect for function _do_I2C_DO_NACK_RESTART
 21250  2073                     _do_I2C_DO_NACK_RESTART:	
 21251                           
 21252                           ;Skip over the trampoline to the duplicate function for level 1
 21253  2073  1C7E               	btfss	126,0
 21254  2074  2877               	goto	l7422
 21255  2075  31AF  2F96         	ljmp	i1l8444
 21256  2077                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 21257  2077                     l7422:	
 21258                           ;incstack = 0
 21259                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21260                           
 21261                           
 21262                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 21263  2077  31AF  27A2         	fcall	_i2c1_driver_sendNACK
 21264                           
 21265                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 21266  2079  3009               	movlw	9
 21267  207A  0008               	return
 21268  207B                     __end_of_do_I2C_DO_NACK_RESTART:	
 21269                           
 21270                           	psect	text85
 21271  206B                     __ptext85:	
 21272 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 21273 ;; Defined at:
 21274 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 21275 ;; Parameters:    Size  Location     Type
 21276 ;;		None
 21277 ;; Auto vars:     Size  Location     Type
 21278 ;;		None
 21279 ;; Return value:  Size  Location     Type
 21280 ;;                  1    wreg      enum E8364
 21281 ;; Registers used:
 21282 ;;		wreg, status,2, status,0, pclath, cstack
 21283 ;; Tracked objects:
 21284 ;;		On entry : 0/0
 21285 ;;		On exit  : 0/0
 21286 ;;		Unchanged: 0/0
 21287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21292 ;;Total ram usage:        0 bytes
 21293 ;; Hardware stack levels used:    1
 21294 ;; Hardware stack levels required when called:    7
 21295 ;; This function calls:
 21296 ;;		_i2c1_driver_sendNACK
 21297 ;; This function is called by:
 21298 ;;		_do_I2C_RX
 21299 ;;		_i2c_ISR
 21300 ;;		i1_i2c_ISR
 21301 ;; This function uses a non-reentrant model
 21302 ;;
 21303                           
 21304                           
 21305                           ;psect for function _do_I2C_DO_NACK_STOP
 21306  206B                     _do_I2C_DO_NACK_STOP:	
 21307                           
 21308                           ;Skip over the trampoline to the duplicate function for level 1
 21309  206B  1C7E               	btfss	126,0
 21310  206C  286F               	goto	l7416
 21311  206D  31AF  2F92         	ljmp	i1l8438
 21312  206F                     _do_I2C_DO_NACK_STOP$intlevel0:	
 21313  206F                     l7416:	
 21314                           ;incstack = 0
 21315                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 21316                           
 21317                           
 21318                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 21319  206F  31AF  27A2         	fcall	_i2c1_driver_sendNACK
 21320                           
 21321                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 21322  2071  300A               	movlw	10
 21323  2072  0008               	return
 21324  2073                     __end_of_do_I2C_DO_NACK_STOP:	
 21325                           
 21326                           	psect	text86
 21327  2063                     __ptext86:	
 21328 ;; *************** function _do_I2C_DO_ACK *****************
 21329 ;; Defined at:
 21330 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;		None
 21333 ;; Auto vars:     Size  Location     Type
 21334 ;;		None
 21335 ;; Return value:  Size  Location     Type
 21336 ;;                  1    wreg      enum E8364
 21337 ;; Registers used:
 21338 ;;		wreg, status,2, status,0, pclath, cstack
 21339 ;; Tracked objects:
 21340 ;;		On entry : 0/0
 21341 ;;		On exit  : 0/0
 21342 ;;		Unchanged: 0/0
 21343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21348 ;;Total ram usage:        0 bytes
 21349 ;; Hardware stack levels used:    1
 21350 ;; Hardware stack levels required when called:    7
 21351 ;; This function calls:
 21352 ;;		_i2c1_driver_sendACK
 21353 ;; This function is called by:
 21354 ;;		_i2c_ISR
 21355 ;;		i1_i2c_ISR
 21356 ;; This function uses a non-reentrant model
 21357 ;;
 21358                           
 21359                           
 21360                           ;psect for function _do_I2C_DO_ACK
 21361  2063                     _do_I2C_DO_ACK:	
 21362                           
 21363                           ;Skip over the trampoline to the duplicate function for level 1
 21364  2063  1C7E               	btfss	126,0
 21365  2064  2867               	goto	l7498
 21366  2065  31AF  2F8E         	ljmp	i1l8898
 21367  2067                     _do_I2C_DO_ACK$intlevel0:	
 21368  2067                     l7498:	
 21369                           ;incstack = 0
 21370                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 21371                           
 21372                           
 21373                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 21374  2067  31AF  279E         	fcall	_i2c1_driver_sendACK
 21375                           
 21376                           ;i2c_master.c: 302: return I2C_RCEN;
 21377  2069  3005               	movlw	5
 21378  206A  0008               	return
 21379  206B                     __end_of_do_I2C_DO_ACK:	
 21380                           
 21381                           	psect	text87
 21382  20CC                     __ptext87:	
 21383 ;; *************** function _do_I2C_RCEN *****************
 21384 ;; Defined at:
 21385 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 21386 ;; Parameters:    Size  Location     Type
 21387 ;;		None
 21388 ;; Auto vars:     Size  Location     Type
 21389 ;;		None
 21390 ;; Return value:  Size  Location     Type
 21391 ;;                  1    wreg      enum E8364
 21392 ;; Registers used:
 21393 ;;		wreg, status,2, status,0, pclath, cstack
 21394 ;; Tracked objects:
 21395 ;;		On entry : 0/0
 21396 ;;		On exit  : 0/0
 21397 ;;		Unchanged: 0/0
 21398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21403 ;;Total ram usage:        0 bytes
 21404 ;; Hardware stack levels used:    1
 21405 ;; Hardware stack levels required when called:    7
 21406 ;; This function calls:
 21407 ;;		_i2c1_driver_startRX
 21408 ;; This function is called by:
 21409 ;;		_i2c_ISR
 21410 ;;		i1_i2c_ISR
 21411 ;; This function uses a non-reentrant model
 21412 ;;
 21413                           
 21414                           
 21415                           ;psect for function _do_I2C_RCEN
 21416  20CC                     _do_I2C_RCEN:	
 21417                           
 21418                           ;Skip over the trampoline to the duplicate function for level 1
 21419  20CC  1C7E               	btfss	126,0
 21420  20CD  28D0               	goto	l7490
 21421  20CE  31AF  2FC8         	ljmp	i1l6662
 21422  20D0                     _do_I2C_RCEN$intlevel0:	
 21423  20D0                     l7490:	
 21424                           ;incstack = 0
 21425                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 21426                           
 21427                           
 21428                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 21429  20D0  0022               	movlb	2	; select bank2
 21430  20D1  11A0               	bcf	_i2c_status^(0+256),3
 21431                           
 21432                           ;i2c_master.c: 295: i2c1_driver_startRX();
 21433  20D2  31AF  276A         	fcall	_i2c1_driver_startRX
 21434                           
 21435                           ;i2c_master.c: 296: return I2C_RX;
 21436  20D4  3004               	movlw	4
 21437  20D5  0008               	return
 21438  20D6                     __end_of_do_I2C_RCEN:	
 21439                           
 21440                           	psect	text88
 21441  20FF                     __ptext88:	
 21442 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 21443 ;; Defined at:
 21444 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 21445 ;; Parameters:    Size  Location     Type
 21446 ;;		None
 21447 ;; Auto vars:     Size  Location     Type
 21448 ;;		None
 21449 ;; Return value:  Size  Location     Type
 21450 ;;                  1    wreg      enum E8364
 21451 ;; Registers used:
 21452 ;;		wreg, status,2, status,0, pclath, cstack
 21453 ;; Tracked objects:
 21454 ;;		On entry : 0/0
 21455 ;;		On exit  : 0/0
 21456 ;;		Unchanged: 0/0
 21457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21462 ;;Total ram usage:        0 bytes
 21463 ;; Hardware stack levels used:    1
 21464 ;; Hardware stack levels required when called:    7
 21465 ;; This function calls:
 21466 ;;		_i2c1_driver_TXData
 21467 ;; This function is called by:
 21468 ;;		_i2c_ISR
 21469 ;;		i1_i2c_ISR
 21470 ;; This function uses a non-reentrant model
 21471 ;;
 21472                           
 21473                           
 21474                           ;psect for function _do_I2C_SEND_ADR_WRITE
 21475  20FF                     _do_I2C_SEND_ADR_WRITE:	
 21476                           
 21477                           ;Skip over the trampoline to the duplicate function for level 1
 21478  20FF  1C7E               	btfss	126,0
 21479  2100  2903               	goto	l7482
 21480  2101  31AF  2FF9         	ljmp	i1l8890
 21481  2103                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 21482  2103                     l7482:	
 21483                           ;incstack = 0
 21484                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21485                           
 21486                           
 21487                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 21488  2103  0022               	movlb	2	; select bank2
 21489  2104  15A0               	bsf	_i2c_status^(0+256),3
 21490                           
 21491                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 21492  2105  3521               	lslf	(_i2c_status^(0+256)+1),w
 21493  2106  31AF  27DA         	fcall	_i2c1_driver_TXData
 21494                           
 21495                           ;i2c_master.c: 289: return I2C_TX;
 21496  2108  3003               	movlw	3
 21497  2109  0008               	return
 21498  210A                     __end_of_do_I2C_SEND_ADR_WRITE:	
 21499                           
 21500                           	psect	text89
 21501  212C                     __ptext89:	
 21502 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 21503 ;; Defined at:
 21504 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 21505 ;; Parameters:    Size  Location     Type
 21506 ;;		None
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;		None
 21509 ;; Return value:  Size  Location     Type
 21510 ;;                  1    wreg      enum E8364
 21511 ;; Registers used:
 21512 ;;		wreg, status,2, status,0, pclath, cstack
 21513 ;; Tracked objects:
 21514 ;;		On entry : 0/0
 21515 ;;		On exit  : 0/0
 21516 ;;		Unchanged: 0/0
 21517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21522 ;;Total ram usage:        0 bytes
 21523 ;; Hardware stack levels used:    1
 21524 ;; Hardware stack levels required when called:    7
 21525 ;; This function calls:
 21526 ;;		_i2c1_driver_TXData
 21527 ;; This function is called by:
 21528 ;;		_i2c_ISR
 21529 ;;		i1_i2c_ISR
 21530 ;; This function uses a non-reentrant model
 21531 ;;
 21532                           
 21533                           
 21534                           ;psect for function _do_I2C_SEND_ADR_READ
 21535  212C                     _do_I2C_SEND_ADR_READ:	
 21536                           
 21537                           ;Skip over the trampoline to the duplicate function for level 1
 21538  212C  1C7E               	btfss	126,0
 21539  212D  2930               	goto	l7474
 21540  212E  31A0  2833         	ljmp	i1l8882
 21541  2130                     _do_I2C_SEND_ADR_READ$intlevel0:	
 21542  2130                     l7474:	
 21543                           ;incstack = 0
 21544                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 21545                           
 21546                           
 21547                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 21548  2130  0022               	movlb	2	; select bank2
 21549  2131  15A0               	bsf	_i2c_status^(0+256),3
 21550                           
 21551                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 21552  2132  1403               	setc
 21553  2133  0D21               	rlf	(_i2c_status^(0+256)+1),w
 21554  2134  31AF  27DA         	fcall	_i2c1_driver_TXData
 21555                           
 21556                           ;i2c_master.c: 282: return I2C_RCEN;
 21557  2136  3005               	movlw	5
 21558  2137  0008               	return
 21559  2138                     __end_of_do_I2C_SEND_ADR_READ:	
 21560                           
 21561                           	psect	text90
 21562  205B                     __ptext90:	
 21563 ;; *************** function _do_I2C_SEND_STOP *****************
 21564 ;; Defined at:
 21565 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 21566 ;; Parameters:    Size  Location     Type
 21567 ;;		None
 21568 ;; Auto vars:     Size  Location     Type
 21569 ;;		None
 21570 ;; Return value:  Size  Location     Type
 21571 ;;                  1    wreg      enum E8364
 21572 ;; Registers used:
 21573 ;;		wreg, status,2, status,0, pclath, cstack
 21574 ;; Tracked objects:
 21575 ;;		On entry : 0/0
 21576 ;;		On exit  : 0/0
 21577 ;;		Unchanged: 0/0
 21578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21583 ;;Total ram usage:        0 bytes
 21584 ;; Hardware stack levels used:    1
 21585 ;; Hardware stack levels required when called:    7
 21586 ;; This function calls:
 21587 ;;		_i2c1_driver_stop
 21588 ;; This function is called by:
 21589 ;;		_do_I2C_DO_ADDRESS_NACK
 21590 ;;		_do_I2C_TX
 21591 ;;		_do_I2C_TX_EMPTY
 21592 ;;		_i2c_ISR
 21593 ;;		i1_i2c_ISR
 21594 ;; This function uses a non-reentrant model
 21595 ;;
 21596                           
 21597                           
 21598                           ;psect for function _do_I2C_SEND_STOP
 21599  205B                     _do_I2C_SEND_STOP:	
 21600                           
 21601                           ;Skip over the trampoline to the duplicate function for level 1
 21602  205B  1C7E               	btfss	126,0
 21603  205C  285F               	goto	l7410
 21604  205D  31AF  2F8A         	ljmp	i1l8432
 21605  205F                     _do_I2C_SEND_STOP$intlevel0:	
 21606  205F                     l7410:	
 21607                           ;incstack = 0
 21608                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 21609                           
 21610                           
 21611                           ;i2c_master.c: 274: i2c1_driver_stop();
 21612  205F  31AF  2767         	fcall	_i2c1_driver_stop
 21613                           
 21614                           ;i2c_master.c: 275: return I2C_IDLE;
 21615  2061  3000               	movlw	0
 21616  2062  0008               	return
 21617  2063                     __end_of_do_I2C_SEND_STOP:	
 21618                           
 21619                           	psect	text91
 21620  2053                     __ptext91:	
 21621 ;; *************** function _do_I2C_SEND_RESTART *****************
 21622 ;; Defined at:
 21623 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 21624 ;; Parameters:    Size  Location     Type
 21625 ;;		None
 21626 ;; Auto vars:     Size  Location     Type
 21627 ;;		None
 21628 ;; Return value:  Size  Location     Type
 21629 ;;                  1    wreg      enum E8364
 21630 ;; Registers used:
 21631 ;;		wreg, status,2, status,0, pclath, cstack
 21632 ;; Tracked objects:
 21633 ;;		On entry : 0/0
 21634 ;;		On exit  : 0/0
 21635 ;;		Unchanged: 0/0
 21636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21641 ;;Total ram usage:        0 bytes
 21642 ;; Hardware stack levels used:    1
 21643 ;; Hardware stack levels required when called:    7
 21644 ;; This function calls:
 21645 ;;		_i2c1_driver_restart
 21646 ;; This function is called by:
 21647 ;;		_do_I2C_DO_ADDRESS_NACK
 21648 ;;		_do_I2C_TX_EMPTY
 21649 ;;		_i2c_ISR
 21650 ;;		i1_i2c_ISR
 21651 ;; This function uses a non-reentrant model
 21652 ;;
 21653                           
 21654                           
 21655                           ;psect for function _do_I2C_SEND_RESTART
 21656  2053                     _do_I2C_SEND_RESTART:	
 21657                           
 21658                           ;Skip over the trampoline to the duplicate function for level 1
 21659  2053  1C7E               	btfss	126,0
 21660  2054  2857               	goto	l7404
 21661  2055  31AF  2F86         	ljmp	i1l8426
 21662  2057                     _do_I2C_SEND_RESTART$intlevel0:	
 21663  2057                     l7404:	
 21664                           ;incstack = 0
 21665                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21666                           
 21667                           
 21668                           ;i2c_master.c: 268: i2c1_driver_restart();
 21669  2057  31AF  2764         	fcall	_i2c1_driver_restart
 21670                           
 21671                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 21672  2059  3001               	movlw	1
 21673  205A  0008               	return
 21674  205B                     __end_of_do_I2C_SEND_RESTART:	
 21675                           
 21676                           	psect	text92
 21677  204B                     __ptext92:	
 21678 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 21679 ;; Defined at:
 21680 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 21681 ;; Parameters:    Size  Location     Type
 21682 ;;		None
 21683 ;; Auto vars:     Size  Location     Type
 21684 ;;		None
 21685 ;; Return value:  Size  Location     Type
 21686 ;;                  1    wreg      enum E8364
 21687 ;; Registers used:
 21688 ;;		wreg, status,2, status,0, pclath, cstack
 21689 ;; Tracked objects:
 21690 ;;		On entry : 0/0
 21691 ;;		On exit  : 0/0
 21692 ;;		Unchanged: 0/0
 21693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21698 ;;Total ram usage:        0 bytes
 21699 ;; Hardware stack levels used:    1
 21700 ;; Hardware stack levels required when called:    7
 21701 ;; This function calls:
 21702 ;;		_i2c1_driver_restart
 21703 ;; This function is called by:
 21704 ;;		_do_I2C_TX
 21705 ;;		_i2c_ISR
 21706 ;;		i1_i2c_ISR
 21707 ;; This function uses a non-reentrant model
 21708 ;;
 21709                           
 21710                           
 21711                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 21712  204B                     _do_I2C_SEND_RESTART_WRITE:	
 21713                           
 21714                           ;Skip over the trampoline to the duplicate function for level 1
 21715  204B  1C7E               	btfss	126,0
 21716  204C  284F               	goto	l7398
 21717  204D  31AF  2F82         	ljmp	i1l8420
 21718  204F                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 21719  204F                     l7398:	
 21720                           ;incstack = 0
 21721                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21722                           
 21723                           
 21724                           ;i2c_master.c: 262: i2c1_driver_restart();
 21725  204F  31AF  2764         	fcall	_i2c1_driver_restart
 21726                           
 21727                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 21728  2051  3002               	movlw	2
 21729  2052  0008               	return
 21730  2053                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 21731                           
 21732                           	psect	text93
 21733  2043                     __ptext93:	
 21734 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 21735 ;; Defined at:
 21736 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 21737 ;; Parameters:    Size  Location     Type
 21738 ;;		None
 21739 ;; Auto vars:     Size  Location     Type
 21740 ;;		None
 21741 ;; Return value:  Size  Location     Type
 21742 ;;                  1    wreg      enum E8364
 21743 ;; Registers used:
 21744 ;;		wreg, status,2, status,0, pclath, cstack
 21745 ;; Tracked objects:
 21746 ;;		On entry : 0/0
 21747 ;;		On exit  : 0/0
 21748 ;;		Unchanged: 0/0
 21749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21754 ;;Total ram usage:        0 bytes
 21755 ;; Hardware stack levels used:    1
 21756 ;; Hardware stack levels required when called:    7
 21757 ;; This function calls:
 21758 ;;		_i2c1_driver_restart
 21759 ;; This function is called by:
 21760 ;;		_do_I2C_TX
 21761 ;;		_i2c_ISR
 21762 ;;		i1_i2c_ISR
 21763 ;; This function uses a non-reentrant model
 21764 ;;
 21765                           
 21766                           
 21767                           ;psect for function _do_I2C_SEND_RESTART_READ
 21768  2043                     _do_I2C_SEND_RESTART_READ:	
 21769                           
 21770                           ;Skip over the trampoline to the duplicate function for level 1
 21771  2043  1C7E               	btfss	126,0
 21772  2044  2847               	goto	l7392
 21773  2045  31AF  2F7E         	ljmp	i1l8414
 21774  2047                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 21775  2047                     l7392:	
 21776                           ;incstack = 0
 21777                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 21778                           
 21779                           
 21780                           ;i2c_master.c: 256: i2c1_driver_restart();
 21781  2047  31AF  2764         	fcall	_i2c1_driver_restart
 21782                           
 21783                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 21784  2049  3001               	movlw	1
 21785  204A  0008               	return
 21786  204B                     __end_of_do_I2C_SEND_RESTART_READ:	
 21787                           
 21788                           	psect	text94
 21789  209E                     __ptext94:	
 21790 ;; *************** function _do_I2C_IDLE *****************
 21791 ;; Defined at:
 21792 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 21793 ;; Parameters:    Size  Location     Type
 21794 ;;		None
 21795 ;; Auto vars:     Size  Location     Type
 21796 ;;		None
 21797 ;; Return value:  Size  Location     Type
 21798 ;;                  1    wreg      enum E8364
 21799 ;; Registers used:
 21800 ;;		wreg, status,2
 21801 ;; Tracked objects:
 21802 ;;		On entry : 0/0
 21803 ;;		On exit  : 0/0
 21804 ;;		Unchanged: 0/0
 21805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21810 ;;Total ram usage:        0 bytes
 21811 ;; Hardware stack levels used:    1
 21812 ;; Hardware stack levels required when called:    6
 21813 ;; This function calls:
 21814 ;;		Nothing
 21815 ;; This function is called by:
 21816 ;;		_i2c_ISR
 21817 ;;		i1_i2c_ISR
 21818 ;; This function uses a non-reentrant model
 21819 ;;
 21820                           
 21821                           
 21822                           ;psect for function _do_I2C_IDLE
 21823  209E                     _do_I2C_IDLE:	
 21824                           
 21825                           ;Skip over the trampoline to the duplicate function for level 1
 21826  209E  1C7E               	btfss	126,0
 21827  209F  28A2               	goto	l7466
 21828  20A0  31AF  2FB9         	ljmp	i1l6638
 21829  20A2                     _do_I2C_IDLE$intlevel0:	
 21830  20A2                     l7466:	
 21831                           ;incstack = 0
 21832                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 21833                           
 21834                           
 21835                           ;i2c_master.c: 249: i2c_status.busy = 0;
 21836  20A2  0022               	movlb	2	; select bank2
 21837  20A3  1020               	bcf	_i2c_status^(0+256),0
 21838                           
 21839                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 21840  20A4  01AB               	clrf	(_i2c_status^(0+256)+11)
 21841                           
 21842                           ;i2c_master.c: 251: return I2C_RESET;
 21843  20A5  300E               	movlw	14
 21844  20A6  0008               	return
 21845  20A7                     __end_of_do_I2C_IDLE:	
 21846                           
 21847                           	psect	text95
 21848  20F4                     __ptext95:	
 21849 ;; *************** function _do_I2C_RESET *****************
 21850 ;; Defined at:
 21851 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 21852 ;; Parameters:    Size  Location     Type
 21853 ;;		None
 21854 ;; Auto vars:     Size  Location     Type
 21855 ;;		None
 21856 ;; Return value:  Size  Location     Type
 21857 ;;                  1    wreg      enum E8364
 21858 ;; Registers used:
 21859 ;;		wreg, status,2, status,0, pclath, cstack
 21860 ;; Tracked objects:
 21861 ;;		On entry : 0/0
 21862 ;;		On exit  : 0/0
 21863 ;;		Unchanged: 0/0
 21864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21869 ;;Total ram usage:        0 bytes
 21870 ;; Hardware stack levels used:    1
 21871 ;; Hardware stack levels required when called:    7
 21872 ;; This function calls:
 21873 ;;		_i2c1_driver_resetBus
 21874 ;; This function is called by:
 21875 ;;		_i2c_ISR
 21876 ;;		i1_i2c_ISR
 21877 ;; This function uses a non-reentrant model
 21878 ;;
 21879                           
 21880                           
 21881                           ;psect for function _do_I2C_RESET
 21882  20F4                     _do_I2C_RESET:	
 21883                           
 21884                           ;Skip over the trampoline to the duplicate function for level 1
 21885  20F4  1C7E               	btfss	126,0
 21886  20F5  28F8               	goto	l7456
 21887  20F6  31AF  2FF2         	ljmp	i1l6628
 21888  20F8                     _do_I2C_RESET$intlevel0:	
 21889  20F8                     l7456:	
 21890                           ;incstack = 0
 21891                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 21892                           
 21893                           
 21894                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 21895  20F8  31A0  2032         	fcall	_i2c1_driver_resetBus
 21896                           
 21897                           ;i2c_master.c: 242: i2c_status.busy = 0;
 21898  20FA  0022               	movlb	2	; select bank2
 21899  20FB  1020               	bcf	_i2c_status^(0+256),0
 21900                           
 21901                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 21902  20FC  01AB               	clrf	(_i2c_status^(0+256)+11)
 21903                           
 21904                           ;i2c_master.c: 244: return I2C_RESET;
 21905  20FD  300E               	movlw	14
 21906  20FE  0008               	return
 21907  20FF                     __end_of_do_I2C_RESET:	
 21908                           
 21909                           	psect	text96
 21910  25AB                     __ptext96:	
 21911 ;; *************** function _do_I2C_TX_EMPTY *****************
 21912 ;; Defined at:
 21913 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 21914 ;; Parameters:    Size  Location     Type
 21915 ;;		None
 21916 ;; Auto vars:     Size  Location     Type
 21917 ;;		None
 21918 ;; Return value:  Size  Location     Type
 21919 ;;                  1    wreg      enum E8364
 21920 ;; Registers used:
 21921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21922 ;; Tracked objects:
 21923 ;;		On entry : 0/0
 21924 ;;		On exit  : 0/0
 21925 ;;		Unchanged: 0/0
 21926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21931 ;;Total ram usage:        1 bytes
 21932 ;; Hardware stack levels used:    1
 21933 ;; Hardware stack levels required when called:    8
 21934 ;; This function calls:
 21935 ;;		_do_I2C_SEND_RESTART
 21936 ;;		_do_I2C_SEND_STOP
 21937 ;;		_mssp1_setIRQ
 21938 ;;		_returnReset
 21939 ;;		_returnStop
 21940 ;; This function is called by:
 21941 ;;		_i2c_ISR
 21942 ;;		i1_i2c_ISR
 21943 ;; This function uses a non-reentrant model
 21944 ;;
 21945                           
 21946                           
 21947                           ;psect for function _do_I2C_TX_EMPTY
 21948  25AB                     _do_I2C_TX_EMPTY:	
 21949                           
 21950                           ;Skip over the trampoline to the duplicate function for level 1
 21951  25AB  1C7E               	btfss	126,0
 21952  25AC  2DAF               	goto	l7576
 21953  25AD  31A5  2D56         	ljmp	i1l8976
 21954  25AF                     _do_I2C_TX_EMPTY$intlevel0:	
 21955  25AF                     l7576:	
 21956                           ;incstack = 0
 21957                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21958                           
 21959                           
 21960                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 21961  25AF  0022               	movlb	2	; select bank2
 21962  25B0  1520               	bsf	_i2c_status^(0+256),2
 21963                           
 21964                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 21965  25B1  2DBC               	goto	l7594
 21966  25B2                     l7578:	
 21967                           ;i2c_master.c: 386: {
 21968                           ;i2c_master.c: 387: case i2c_restart_read:
 21969                           
 21970                           
 21971                           ;i2c_master.c: 388: case i2c_restart_write:
 21972                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 21973  25B2  31A0  2053         	fcall	_do_I2C_SEND_RESTART
 21974  25B4  0008               	return
 21975  25B5                     l7582:	
 21976                           ;i2c_master.c: 390: case i2c_continue:
 21977                           
 21978                           
 21979                           ;i2c_master.c: 391: mssp1_setIRQ();
 21980  25B5  31AF  2770         	fcall	_mssp1_setIRQ
 21981                           
 21982                           ;i2c_master.c: 392: return I2C_TX;
 21983  25B7  3003               	movlw	3
 21984  25B8  0008               	return
 21985  25B9                     l7588:	
 21986                           ;i2c_master.c: 394: case i2c_stop:
 21987                           
 21988                           ;i2c_master.c: 393: default:
 21989                           
 21990                           
 21991                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 21992  25B9  31A0  205B         	fcall	_do_I2C_SEND_STOP
 21993                           
 21994                           ;i2c_master.c: 396: }
 21995  25BB  0008               	return
 21996  25BC                     l7594:	
 21997  25BC  0022               	movlb	2	; select bank2
 21998  25BD  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 21999  25BE  0020               	movlb	0	; select bank0
 22000  25BF  00B1               	movwf	??_do_I2C_TX_EMPTY
 22001  25C0  0831               	movf	??_do_I2C_TX_EMPTY,w
 22002  25C1  00B1               	movwf	returnReset@p
 22003  25C2  300C               	movlw	12
 22004  25C3  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 22005  25C4  0086               	movwf	6
 22006  25C5  3001               	movlw	1	; select bank2/3
 22007  25C6  0087               	movwf	7
 22008  25C7  3F41               	moviw [1]fsr1
 22009  25C8  008A               	movwf	10
 22010  25C9  3F40               	moviw [0]fsr1
 22011  25CA  000A               	callw
 22012  25CB  31A5               	pagesel	$
 22013                           
 22014                           ; Switch size 1, requested type "space"
 22015                           ; Number of cases is 4, Range of values is 1 to 4
 22016                           ; switch strategies available:
 22017                           ; Name         Instructions Cycles
 22018                           ; simple_byte           13     7 (average)
 22019                           ; direct_byte           17     9 (fixed)
 22020                           ; jumptable            263     9 (fixed)
 22021                           ;	Chosen strategy is simple_byte
 22022  25CC  3A01               	xorlw	1	; case 1
 22023  25CD  1903               	skipnz
 22024  25CE  2DB9               	goto	l7588
 22025  25CF  3A03               	xorlw	3	; case 2
 22026  25D0  1903               	skipnz
 22027  25D1  2DB2               	goto	l7578
 22028  25D2  3A01               	xorlw	1	; case 3
 22029  25D3  1903               	skipnz
 22030  25D4  2DB2               	goto	l7578
 22031  25D5  3A07               	xorlw	7	; case 4
 22032  25D6  1903               	skipnz
 22033  25D7  2DB5               	goto	l7582
 22034  25D8  2DB9               	goto	l7588
 22035  25D9  0008               	return
 22036  25DA                     __end_of_do_I2C_TX_EMPTY:	
 22037                           
 22038                           	psect	text97
 22039  2F70                     __ptext97:	
 22040 ;; *************** function _mssp1_setIRQ *****************
 22041 ;; Defined at:
 22042 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 22043 ;; Parameters:    Size  Location     Type
 22044 ;;		None
 22045 ;; Auto vars:     Size  Location     Type
 22046 ;;		None
 22047 ;; Return value:  Size  Location     Type
 22048 ;;                  1    wreg      void 
 22049 ;; Registers used:
 22050 ;;		None
 22051 ;; Tracked objects:
 22052 ;;		On entry : 0/0
 22053 ;;		On exit  : 0/0
 22054 ;;		Unchanged: 0/0
 22055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22060 ;;Total ram usage:        0 bytes
 22061 ;; Hardware stack levels used:    1
 22062 ;; Hardware stack levels required when called:    6
 22063 ;; This function calls:
 22064 ;;		Nothing
 22065 ;; This function is called by:
 22066 ;;		_do_I2C_TX_EMPTY
 22067 ;; This function uses a non-reentrant model
 22068 ;;
 22069                           
 22070                           
 22071                           ;psect for function _mssp1_setIRQ
 22072  2F70                     _mssp1_setIRQ:	
 22073                           
 22074                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 22075                           
 22076                           ;incstack = 0
 22077                           ; Regs used in _mssp1_setIRQ: []
 22078  2F70  0020               	movlb	0	; select bank0
 22079  2F71  1591               	bsf	17,3	;volatile
 22080  2F72  0008               	return
 22081  2F73                     __end_of_mssp1_setIRQ:	
 22082                           
 22083                           	psect	text98
 22084  215E                     __ptext98:	
 22085 ;; *************** function _i2c1_driver_isNACK *****************
 22086 ;; Defined at:
 22087 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 22088 ;; Parameters:    Size  Location     Type
 22089 ;;		None
 22090 ;; Auto vars:     Size  Location     Type
 22091 ;;		None
 22092 ;; Return value:  Size  Location     Type
 22093 ;;		None               void
 22094 ;; Registers used:
 22095 ;;		wreg, status,2, status,0
 22096 ;; Tracked objects:
 22097 ;;		On entry : 0/0
 22098 ;;		On exit  : 0/0
 22099 ;;		Unchanged: 0/0
 22100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22104 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22105 ;;Total ram usage:        1 bytes
 22106 ;; Hardware stack levels used:    1
 22107 ;; Hardware stack levels required when called:    6
 22108 ;; This function calls:
 22109 ;;		Nothing
 22110 ;; This function is called by:
 22111 ;;		_do_I2C_TX
 22112 ;;		_i2c_ISR
 22113 ;; This function uses a non-reentrant model
 22114 ;;
 22115                           
 22116                           
 22117                           ;psect for function _i2c1_driver_isNACK
 22118  215E                     _i2c1_driver_isNACK:	
 22119                           
 22120                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 22121                           
 22122                           ;incstack = 0
 22123                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 22124  215E  0024               	movlb	4	; select bank4
 22125  215F  0816               	movf	22,w	;volatile
 22126  2160  39BF               	andlw	-65
 22127  2161  3840               	iorlw	64
 22128  2162  0096               	movwf	22	;volatile
 22129  2163  0E16               	swapf	22,w	;volatile
 22130  2164  0C89               	rrf	9,f
 22131  2165  0C89               	rrf	9,f
 22132  2166  3901               	andlw	1
 22133  2167  0020               	movlb	0	; select bank0
 22134  2168  00B1               	movwf	??_i2c1_driver_isNACK
 22135  2169  0C31               	rrf	??_i2c1_driver_isNACK,w
 22136  216A  0008               	return
 22137  216B                     __end_of_i2c1_driver_isNACK:	
 22138                           
 22139                           	psect	text99
 22140  2FDA                     __ptext99:	
 22141 ;; *************** function _i2c1_driver_TXData *****************
 22142 ;; Defined at:
 22143 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 22144 ;; Parameters:    Size  Location     Type
 22145 ;;  d               1    wreg     unsigned char 
 22146 ;; Auto vars:     Size  Location     Type
 22147 ;;  d               1   17[BANK0 ] unsigned char 
 22148 ;; Return value:  Size  Location     Type
 22149 ;;                  1    wreg      void 
 22150 ;; Registers used:
 22151 ;;		wreg
 22152 ;; Tracked objects:
 22153 ;;		On entry : 0/0
 22154 ;;		On exit  : 0/0
 22155 ;;		Unchanged: 0/0
 22156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22161 ;;Total ram usage:        1 bytes
 22162 ;; Hardware stack levels used:    1
 22163 ;; Hardware stack levels required when called:    6
 22164 ;; This function calls:
 22165 ;;		Nothing
 22166 ;; This function is called by:
 22167 ;;		_do_I2C_SEND_ADR_READ
 22168 ;;		_do_I2C_SEND_ADR_WRITE
 22169 ;;		_do_I2C_TX
 22170 ;; This function uses a non-reentrant model
 22171 ;;
 22172                           
 22173                           
 22174                           ;psect for function _i2c1_driver_TXData
 22175  2FDA                     _i2c1_driver_TXData:	
 22176                           
 22177                           ;incstack = 0
 22178                           ; Regs used in _i2c1_driver_TXData: [wreg]
 22179                           ;i2c1_driver_TXData@d stored from wreg
 22180  2FDA  0020               	movlb	0	; select bank0
 22181  2FDB  00B1               	movwf	i2c1_driver_TXData@d
 22182                           
 22183                           ;i2c1_driver.c: 188: SSP1BUF = d;
 22184  2FDC  0831               	movf	i2c1_driver_TXData@d,w
 22185  2FDD  0024               	movlb	4	; select bank4
 22186  2FDE  0091               	movwf	17	;volatile
 22187  2FDF  0008               	return
 22188  2FE0                     __end_of_i2c1_driver_TXData:	
 22189                           
 22190                           	psect	text100
 22191  2F6D                     __ptext100:	
 22192 ;; *************** function _i2c1_driver_getRXData *****************
 22193 ;; Defined at:
 22194 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 22195 ;; Parameters:    Size  Location     Type
 22196 ;;		None
 22197 ;; Auto vars:     Size  Location     Type
 22198 ;;		None
 22199 ;; Return value:  Size  Location     Type
 22200 ;;                  1    wreg      unsigned char 
 22201 ;; Registers used:
 22202 ;;		wreg
 22203 ;; Tracked objects:
 22204 ;;		On entry : 0/0
 22205 ;;		On exit  : 0/0
 22206 ;;		Unchanged: 0/0
 22207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22212 ;;Total ram usage:        0 bytes
 22213 ;; Hardware stack levels used:    1
 22214 ;; Hardware stack levels required when called:    6
 22215 ;; This function calls:
 22216 ;;		Nothing
 22217 ;; This function is called by:
 22218 ;;		_do_I2C_RX
 22219 ;; This function uses a non-reentrant model
 22220 ;;
 22221                           
 22222                           
 22223                           ;psect for function _i2c1_driver_getRXData
 22224  2F6D                     _i2c1_driver_getRXData:	
 22225                           
 22226                           ;i2c1_driver.c: 173: return SSP1BUF;
 22227                           
 22228                           ;incstack = 0
 22229                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 22230  2F6D  0024               	movlb	4	; select bank4
 22231  2F6E  0811               	movf	17,w	;volatile
 22232  2F6F  0008               	return
 22233  2F70                     __end_of_i2c1_driver_getRXData:	
 22234                           
 22235                           	psect	text101
 22236  2FA2                     __ptext101:	
 22237 ;; *************** function _i2c1_driver_sendNACK *****************
 22238 ;; Defined at:
 22239 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 22240 ;; Parameters:    Size  Location     Type
 22241 ;;		None
 22242 ;; Auto vars:     Size  Location     Type
 22243 ;;		None
 22244 ;; Return value:  Size  Location     Type
 22245 ;;                  1    wreg      void 
 22246 ;; Registers used:
 22247 ;;		None
 22248 ;; Tracked objects:
 22249 ;;		On entry : 0/0
 22250 ;;		On exit  : 0/0
 22251 ;;		Unchanged: 0/0
 22252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22257 ;;Total ram usage:        0 bytes
 22258 ;; Hardware stack levels used:    1
 22259 ;; Hardware stack levels required when called:    6
 22260 ;; This function calls:
 22261 ;;		Nothing
 22262 ;; This function is called by:
 22263 ;;		_do_I2C_DO_NACK_STOP
 22264 ;;		_do_I2C_DO_NACK_RESTART
 22265 ;; This function uses a non-reentrant model
 22266 ;;
 22267                           
 22268                           
 22269                           ;psect for function _i2c1_driver_sendNACK
 22270  2FA2                     _i2c1_driver_sendNACK:	
 22271                           
 22272                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 22273                           
 22274                           ;incstack = 0
 22275                           ; Regs used in _i2c1_driver_sendNACK: []
 22276  2FA2  0024               	movlb	4	; select bank4
 22277  2FA3  1696               	bsf	22,5	;volatile
 22278                           
 22279                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 22280  2FA4  1616               	bsf	22,4	;volatile
 22281  2FA5  0008               	return
 22282  2FA6                     __end_of_i2c1_driver_sendNACK:	
 22283                           
 22284                           	psect	text102
 22285  2032                     __ptext102:	
 22286 ;; *************** function _i2c1_driver_resetBus *****************
 22287 ;; Defined at:
 22288 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 22289 ;; Parameters:    Size  Location     Type
 22290 ;;		None
 22291 ;; Auto vars:     Size  Location     Type
 22292 ;;		None
 22293 ;; Return value:  Size  Location     Type
 22294 ;;                  1    wreg      void 
 22295 ;; Registers used:
 22296 ;;		None
 22297 ;; Tracked objects:
 22298 ;;		On entry : 0/0
 22299 ;;		On exit  : 0/0
 22300 ;;		Unchanged: 0/0
 22301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22306 ;;Total ram usage:        0 bytes
 22307 ;; Hardware stack levels used:    1
 22308 ;; Hardware stack levels required when called:    6
 22309 ;; This function calls:
 22310 ;;		Nothing
 22311 ;; This function is called by:
 22312 ;;		_do_I2C_RESET
 22313 ;; This function uses a non-reentrant model
 22314 ;;
 22315                           
 22316                           
 22317                           ;psect for function _i2c1_driver_resetBus
 22318  2032                     _i2c1_driver_resetBus:	
 22319                           
 22320                           ;incstack = 0
 22321                           ; Regs used in _i2c1_driver_resetBus: []
 22322  2032  0008               	return
 22323  2033                     __end_of_i2c1_driver_resetBus:	
 22324                           
 22325                           	psect	text103
 22326  2F6A                     __ptext103:	
 22327 ;; *************** function _i2c1_driver_startRX *****************
 22328 ;; Defined at:
 22329 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 22330 ;; Parameters:    Size  Location     Type
 22331 ;;		None
 22332 ;; Auto vars:     Size  Location     Type
 22333 ;;		None
 22334 ;; Return value:  Size  Location     Type
 22335 ;;                  1    wreg      void 
 22336 ;; Registers used:
 22337 ;;		None
 22338 ;; Tracked objects:
 22339 ;;		On entry : 0/0
 22340 ;;		On exit  : 0/0
 22341 ;;		Unchanged: 0/0
 22342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22347 ;;Total ram usage:        0 bytes
 22348 ;; Hardware stack levels used:    1
 22349 ;; Hardware stack levels required when called:    6
 22350 ;; This function calls:
 22351 ;;		Nothing
 22352 ;; This function is called by:
 22353 ;;		_do_I2C_RCEN
 22354 ;; This function uses a non-reentrant model
 22355 ;;
 22356                           
 22357                           
 22358                           ;psect for function _i2c1_driver_startRX
 22359  2F6A                     _i2c1_driver_startRX:	
 22360                           
 22361                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 22362                           
 22363                           ;incstack = 0
 22364                           ; Regs used in _i2c1_driver_startRX: []
 22365  2F6A  0024               	movlb	4	; select bank4
 22366  2F6B  1596               	bsf	22,3	;volatile
 22367  2F6C  0008               	return
 22368  2F6D                     __end_of_i2c1_driver_startRX:	
 22369                           
 22370                           	psect	text104
 22371  2FD4                     __ptext104:	
 22372 ;; *************** function _returnReset *****************
 22373 ;; Defined at:
 22374 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 22375 ;; Parameters:    Size  Location     Type
 22376 ;;  p               1   17[BANK0 ] PTR void 
 22377 ;;		 -> NULL(0), 
 22378 ;; Auto vars:     Size  Location     Type
 22379 ;;		None
 22380 ;; Return value:  Size  Location     Type
 22381 ;;                  1    wreg      enum E8198
 22382 ;; Registers used:
 22383 ;;		wreg
 22384 ;; Tracked objects:
 22385 ;;		On entry : 0/0
 22386 ;;		On exit  : 0/0
 22387 ;;		Unchanged: 0/0
 22388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22389 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22392 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22393 ;;Total ram usage:        1 bytes
 22394 ;; Hardware stack levels used:    1
 22395 ;; Hardware stack levels required when called:    6
 22396 ;; This function calls:
 22397 ;;		Nothing
 22398 ;; This function is called by:
 22399 ;;		_i2c_open
 22400 ;;		_do_I2C_DO_ADDRESS_NACK
 22401 ;;		_do_I2C_TX
 22402 ;;		_do_I2C_RX
 22403 ;;		_do_I2C_TX_EMPTY
 22404 ;;		i1_do_I2C_DO_ADDRESS_NACK
 22405 ;;		i1_do_I2C_TX
 22406 ;;		i1_do_I2C_RX
 22407 ;;		i1_do_I2C_TX_EMPTY
 22408 ;; This function uses a non-reentrant model
 22409 ;;
 22410                           
 22411                           
 22412                           ;psect for function _returnReset
 22413  2FD4                     _returnReset:	
 22414                           
 22415                           ;Skip over the trampoline to the duplicate function for level 1
 22416  2FD4  1C7E               	btfss	126,0
 22417  2FD5  2FD8               	goto	l7432
 22418  2FD6  3180  2802         	ljmp	i1l8454
 22419  2FD8                     _returnReset$intlevel0:	
 22420  2FD8                     l7432:	
 22421                           ;incstack = 0
 22422                           ; Regs used in _returnReset: [wreg]
 22423                           
 22424                           
 22425                           ;i2c_master.c: 450: return i2c_reset_link;
 22426  2FD8  3005               	movlw	5
 22427  2FD9  0008               	return
 22428  2FDA                     __end_of_returnReset:	
 22429                           
 22430                           	psect	text105
 22431  2FCE                     __ptext105:	
 22432 ;; *************** function _returnStop *****************
 22433 ;; Defined at:
 22434 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 22435 ;; Parameters:    Size  Location     Type
 22436 ;;  p               1   17[BANK0 ] PTR void 
 22437 ;;		 -> NULL(0), 
 22438 ;; Auto vars:     Size  Location     Type
 22439 ;;		None
 22440 ;; Return value:  Size  Location     Type
 22441 ;;                  1    wreg      enum E8198
 22442 ;; Registers used:
 22443 ;;		wreg
 22444 ;; Tracked objects:
 22445 ;;		On entry : 0/0
 22446 ;;		On exit  : 0/0
 22447 ;;		Unchanged: 0/0
 22448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22449 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22453 ;;Total ram usage:        1 bytes
 22454 ;; Hardware stack levels used:    1
 22455 ;; Hardware stack levels required when called:    6
 22456 ;; This function calls:
 22457 ;;		Nothing
 22458 ;; This function is called by:
 22459 ;;		_i2c_open
 22460 ;;		_setCallBack
 22461 ;;		_do_I2C_DO_ADDRESS_NACK
 22462 ;;		_do_I2C_TX
 22463 ;;		_do_I2C_RX
 22464 ;;		_do_I2C_TX_EMPTY
 22465 ;;		i1_do_I2C_DO_ADDRESS_NACK
 22466 ;;		i1_do_I2C_TX
 22467 ;;		i1_do_I2C_RX
 22468 ;;		i1_do_I2C_TX_EMPTY
 22469 ;; This function uses a non-reentrant model
 22470 ;;
 22471                           
 22472                           
 22473                           ;psect for function _returnStop
 22474  2FCE                     _returnStop:	
 22475                           
 22476                           ;Skip over the trampoline to the duplicate function for level 1
 22477  2FCE  1C7E               	btfss	126,0
 22478  2FCF  2FD2               	goto	l7428
 22479  2FD0  3191  29E4         	ljmp	i1l8450
 22480  2FD2                     _returnStop$intlevel0:	
 22481  2FD2                     l7428:	
 22482                           ;incstack = 0
 22483                           ; Regs used in _returnStop: [wreg]
 22484                           
 22485                           
 22486                           ;i2c_master.c: 445: return i2c_stop;
 22487  2FD2  3001               	movlw	1
 22488  2FD3  0008               	return
 22489  2FD4                     __end_of_returnStop:	
 22490                           
 22491                           	psect	text106
 22492  2F67                     __ptext106:	
 22493 ;; *************** function _i2c1_driver_stop *****************
 22494 ;; Defined at:
 22495 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 22496 ;; Parameters:    Size  Location     Type
 22497 ;;		None
 22498 ;; Auto vars:     Size  Location     Type
 22499 ;;		None
 22500 ;; Return value:  Size  Location     Type
 22501 ;;                  1    wreg      void 
 22502 ;; Registers used:
 22503 ;;		None
 22504 ;; Tracked objects:
 22505 ;;		On entry : 0/0
 22506 ;;		On exit  : 0/0
 22507 ;;		Unchanged: 0/0
 22508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22513 ;;Total ram usage:        0 bytes
 22514 ;; Hardware stack levels used:    1
 22515 ;; Hardware stack levels required when called:    6
 22516 ;; This function calls:
 22517 ;;		Nothing
 22518 ;; This function is called by:
 22519 ;;		_do_I2C_SEND_STOP
 22520 ;; This function uses a non-reentrant model
 22521 ;;
 22522                           
 22523                           
 22524                           ;psect for function _i2c1_driver_stop
 22525  2F67                     _i2c1_driver_stop:	
 22526                           
 22527                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 22528                           
 22529                           ;incstack = 0
 22530                           ; Regs used in _i2c1_driver_stop: []
 22531  2F67  0024               	movlb	4	; select bank4
 22532  2F68  1516               	bsf	22,2	;volatile
 22533  2F69  0008               	return
 22534  2F6A                     __end_of_i2c1_driver_stop:	
 22535                           
 22536                           	psect	text107
 22537  2F64                     __ptext107:	
 22538 ;; *************** function _i2c1_driver_restart *****************
 22539 ;; Defined at:
 22540 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 22541 ;; Parameters:    Size  Location     Type
 22542 ;;		None
 22543 ;; Auto vars:     Size  Location     Type
 22544 ;;		None
 22545 ;; Return value:  Size  Location     Type
 22546 ;;                  1    wreg      void 
 22547 ;; Registers used:
 22548 ;;		None
 22549 ;; Tracked objects:
 22550 ;;		On entry : 0/0
 22551 ;;		On exit  : 0/0
 22552 ;;		Unchanged: 0/0
 22553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22558 ;;Total ram usage:        0 bytes
 22559 ;; Hardware stack levels used:    1
 22560 ;; Hardware stack levels required when called:    6
 22561 ;; This function calls:
 22562 ;;		Nothing
 22563 ;; This function is called by:
 22564 ;;		_do_I2C_SEND_RESTART_READ
 22565 ;;		_do_I2C_SEND_RESTART_WRITE
 22566 ;;		_do_I2C_SEND_RESTART
 22567 ;; This function uses a non-reentrant model
 22568 ;;
 22569                           
 22570                           
 22571                           ;psect for function _i2c1_driver_restart
 22572  2F64                     _i2c1_driver_restart:	
 22573                           
 22574                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 22575                           
 22576                           ;incstack = 0
 22577                           ; Regs used in _i2c1_driver_restart: []
 22578  2F64  0024               	movlb	4	; select bank4
 22579  2F65  1496               	bsf	22,1	;volatile
 22580  2F66  0008               	return
 22581  2F67                     __end_of_i2c1_driver_restart:	
 22582                           
 22583                           	psect	text108
 22584  2F9E                     __ptext108:	
 22585 ;; *************** function _i2c1_driver_sendACK *****************
 22586 ;; Defined at:
 22587 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 22588 ;; Parameters:    Size  Location     Type
 22589 ;;		None
 22590 ;; Auto vars:     Size  Location     Type
 22591 ;;		None
 22592 ;; Return value:  Size  Location     Type
 22593 ;;                  1    wreg      void 
 22594 ;; Registers used:
 22595 ;;		None
 22596 ;; Tracked objects:
 22597 ;;		On entry : 0/0
 22598 ;;		On exit  : 0/0
 22599 ;;		Unchanged: 0/0
 22600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22605 ;;Total ram usage:        0 bytes
 22606 ;; Hardware stack levels used:    1
 22607 ;; Hardware stack levels required when called:    6
 22608 ;; This function calls:
 22609 ;;		Nothing
 22610 ;; This function is called by:
 22611 ;;		_do_I2C_DO_ACK
 22612 ;;		_do_I2C_RX
 22613 ;; This function uses a non-reentrant model
 22614 ;;
 22615                           
 22616                           
 22617                           ;psect for function _i2c1_driver_sendACK
 22618  2F9E                     _i2c1_driver_sendACK:	
 22619                           
 22620                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 22621                           
 22622                           ;incstack = 0
 22623                           ; Regs used in _i2c1_driver_sendACK: []
 22624  2F9E  0024               	movlb	4	; select bank4
 22625  2F9F  1296               	bcf	22,5	;volatile
 22626                           
 22627                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 22628  2FA0  1616               	bsf	22,4	;volatile
 22629  2FA1  0008               	return
 22630  2FA2                     __end_of_i2c1_driver_sendACK:	
 22631                           
 22632                           	psect	text109
 22633  2F61                     __ptext109:	
 22634 ;; *************** function _i2c1_driver_start *****************
 22635 ;; Defined at:
 22636 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 22637 ;; Parameters:    Size  Location     Type
 22638 ;;		None
 22639 ;; Auto vars:     Size  Location     Type
 22640 ;;		None
 22641 ;; Return value:  Size  Location     Type
 22642 ;;                  1    wreg      void 
 22643 ;; Registers used:
 22644 ;;		None
 22645 ;; Tracked objects:
 22646 ;;		On entry : 0/0
 22647 ;;		On exit  : 0/0
 22648 ;;		Unchanged: 0/0
 22649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22654 ;;Total ram usage:        0 bytes
 22655 ;; Hardware stack levels used:    1
 22656 ;; Hardware stack levels required when called:    6
 22657 ;; This function calls:
 22658 ;;		Nothing
 22659 ;; This function is called by:
 22660 ;;		_i2c_masterOperation
 22661 ;; This function uses a non-reentrant model
 22662 ;;
 22663                           
 22664                           
 22665                           ;psect for function _i2c1_driver_start
 22666  2F61                     _i2c1_driver_start:	
 22667                           
 22668                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 22669                           
 22670                           ;incstack = 0
 22671                           ; Regs used in _i2c1_driver_start: []
 22672  2F61  0024               	movlb	4	; select bank4
 22673  2F62  1416               	bsf	22,0	;volatile
 22674  2F63  0008               	return
 22675  2F64                     __end_of_i2c1_driver_start:	
 22676                           
 22677                           	psect	text110
 22678  1C67                     __ptext110:	
 22679 ;; *************** function ___awdiv *****************
 22680 ;; Defined at:
 22681 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 22682 ;; Parameters:    Size  Location     Type
 22683 ;;  divisor         2   23[BANK0 ] int 
 22684 ;;  dividend        2   25[BANK0 ] int 
 22685 ;; Auto vars:     Size  Location     Type
 22686 ;;  quotient        2   30[BANK0 ] int 
 22687 ;;  sign            1   29[BANK0 ] unsigned char 
 22688 ;;  counter         1   28[BANK0 ] unsigned char 
 22689 ;; Return value:  Size  Location     Type
 22690 ;;                  2   23[BANK0 ] int 
 22691 ;; Registers used:
 22692 ;;		wreg, status,2, status,0
 22693 ;; Tracked objects:
 22694 ;;		On entry : 0/0
 22695 ;;		On exit  : 0/0
 22696 ;;		Unchanged: 0/0
 22697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22699 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22701 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22702 ;;Total ram usage:        9 bytes
 22703 ;; Hardware stack levels used:    1
 22704 ;; Hardware stack levels required when called:    6
 22705 ;; This function calls:
 22706 ;;		Nothing
 22707 ;; This function is called by:
 22708 ;;		_drv_write_DC
 22709 ;;		_calcUpstroke
 22710 ;;		_calcDownstroke
 22711 ;;		_drv_outputSine
 22712 ;; This function uses a non-reentrant model
 22713 ;;
 22714                           
 22715                           
 22716                           ;psect for function ___awdiv
 22717  1C67                     ___awdiv:	
 22718                           
 22719                           ;incstack = 0
 22720                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 22721  1C67  0020               	movlb	0	; select bank0
 22722  1C68  01BD               	clrf	___awdiv@sign
 22723  1C69  1FB8               	btfss	___awdiv@divisor+1,7
 22724  1C6A  2C72               	goto	l8122
 22725  1C6B  09B7               	comf	___awdiv@divisor,f
 22726  1C6C  09B8               	comf	___awdiv@divisor+1,f
 22727  1C6D  0AB7               	incf	___awdiv@divisor,f
 22728  1C6E  1903               	skipnz
 22729  1C6F  0AB8               	incf	___awdiv@divisor+1,f
 22730  1C70  01BD               	clrf	___awdiv@sign
 22731  1C71  0ABD               	incf	___awdiv@sign,f
 22732  1C72                     l8122:	
 22733  1C72  1FBA               	btfss	___awdiv@dividend+1,7
 22734  1C73  2C7D               	goto	l8128
 22735  1C74  09B9               	comf	___awdiv@dividend,f
 22736  1C75  09BA               	comf	___awdiv@dividend+1,f
 22737  1C76  0AB9               	incf	___awdiv@dividend,f
 22738  1C77  1903               	skipnz
 22739  1C78  0ABA               	incf	___awdiv@dividend+1,f
 22740  1C79  3001               	movlw	1
 22741  1C7A  00BB               	movwf	??___awdiv
 22742  1C7B  083B               	movf	??___awdiv,w
 22743  1C7C  06BD               	xorwf	___awdiv@sign,f
 22744  1C7D                     l8128:	
 22745  1C7D  01BE               	clrf	___awdiv@quotient
 22746  1C7E  01BF               	clrf	___awdiv@quotient+1
 22747  1C7F  0837               	movf	___awdiv@divisor,w
 22748  1C80  0438               	iorwf	___awdiv@divisor+1,w
 22749  1C81  1903               	btfsc	3,2
 22750  1C82  2CAC               	goto	l8150
 22751  1C83  01BC               	clrf	___awdiv@counter
 22752  1C84  0ABC               	incf	___awdiv@counter,f
 22753  1C85                     l8138:	
 22754  1C85  1BB8               	btfsc	___awdiv@divisor+1,7
 22755  1C86  2C91               	goto	l8140
 22756  1C87  3001               	movlw	1
 22757  1C88                     u8235:	
 22758  1C88  35B7               	lslf	___awdiv@divisor,f
 22759  1C89  0DB8               	rlf	___awdiv@divisor+1,f
 22760  1C8A  0B89               	decfsz	9,f
 22761  1C8B  2C88               	goto	u8235
 22762  1C8C  3001               	movlw	1
 22763  1C8D  00BB               	movwf	??___awdiv
 22764  1C8E  083B               	movf	??___awdiv,w
 22765  1C8F  07BC               	addwf	___awdiv@counter,f
 22766  1C90  2C85               	goto	l8138
 22767  1C91                     l8140:	
 22768  1C91  3001               	movlw	1
 22769  1C92                     u8255:	
 22770  1C92  35BE               	lslf	___awdiv@quotient,f
 22771  1C93  0DBF               	rlf	___awdiv@quotient+1,f
 22772  1C94  0B89               	decfsz	9,f
 22773  1C95  2C92               	goto	u8255
 22774  1C96  0838               	movf	___awdiv@divisor+1,w
 22775  1C97  023A               	subwf	___awdiv@dividend+1,w
 22776  1C98  1D03               	skipz
 22777  1C99  2C9C               	goto	u8265
 22778  1C9A  0837               	movf	___awdiv@divisor,w
 22779  1C9B  0239               	subwf	___awdiv@dividend,w
 22780  1C9C                     u8265:	
 22781  1C9C  1C03               	skipc
 22782  1C9D  2CA3               	goto	l8146
 22783  1C9E  0837               	movf	___awdiv@divisor,w
 22784  1C9F  02B9               	subwf	___awdiv@dividend,f
 22785  1CA0  0838               	movf	___awdiv@divisor+1,w
 22786  1CA1  3BBA               	subwfb	___awdiv@dividend+1,f
 22787  1CA2  143E               	bsf	___awdiv@quotient,0
 22788  1CA3                     l8146:	
 22789  1CA3  3001               	movlw	1
 22790  1CA4                     u8275:	
 22791  1CA4  36B8               	lsrf	___awdiv@divisor+1,f
 22792  1CA5  0CB7               	rrf	___awdiv@divisor,f
 22793  1CA6  0B89               	decfsz	9,f
 22794  1CA7  2CA4               	goto	u8275
 22795  1CA8  3001               	movlw	1
 22796  1CA9  02BC               	subwf	___awdiv@counter,f
 22797  1CAA  1D03               	btfss	3,2
 22798  1CAB  2C91               	goto	l8140
 22799  1CAC                     l8150:	
 22800  1CAC  083D               	movf	___awdiv@sign,w
 22801  1CAD  1903               	btfsc	3,2
 22802  1CAE  2CB4               	goto	l8154
 22803  1CAF  09BE               	comf	___awdiv@quotient,f
 22804  1CB0  09BF               	comf	___awdiv@quotient+1,f
 22805  1CB1  0ABE               	incf	___awdiv@quotient,f
 22806  1CB2  1903               	skipnz
 22807  1CB3  0ABF               	incf	___awdiv@quotient+1,f
 22808  1CB4                     l8154:	
 22809  1CB4  083F               	movf	___awdiv@quotient+1,w
 22810  1CB5  00B8               	movwf	?___awdiv+1
 22811  1CB6  083E               	movf	___awdiv@quotient,w
 22812  1CB7  00B7               	movwf	?___awdiv
 22813  1CB8  0008               	return
 22814  1CB9                     __end_of___awdiv:	
 22815                           
 22816                           	psect	text111
 22817  13EB                     __ptext111:	
 22818 ;; *************** function _calcHeaterPins *****************
 22819 ;; Defined at:
 22820 ;;		line 262 in file "main.c"
 22821 ;; Parameters:    Size  Location     Type
 22822 ;;		None
 22823 ;; Auto vars:     Size  Location     Type
 22824 ;;		None
 22825 ;; Return value:  Size  Location     Type
 22826 ;;                  1    wreg      void 
 22827 ;; Registers used:
 22828 ;;		wreg, status,2, status,0
 22829 ;; Tracked objects:
 22830 ;;		On entry : 0/0
 22831 ;;		On exit  : 0/0
 22832 ;;		Unchanged: 0/0
 22833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22837 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22838 ;;Total ram usage:        4 bytes
 22839 ;; Hardware stack levels used:    1
 22840 ;; Hardware stack levels required when called:    6
 22841 ;; This function calls:
 22842 ;;		Nothing
 22843 ;; This function is called by:
 22844 ;;		_doMove
 22845 ;; This function uses a non-reentrant model
 22846 ;;
 22847                           
 22848                           
 22849                           ;psect for function _calcHeaterPins
 22850  13EB                     _calcHeaterPins:	
 22851                           
 22852                           ;main.c: 263: first_top = moveVector_downs & moveMask;
 22853                           
 22854                           ;incstack = 0
 22855                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 22856  13EB  0021               	movlb	1	; select bank1
 22857  13EC  085E               	movf	_moveMask^(0+128),w
 22858  13ED  0020               	movlb	0	; select bank0
 22859  13EE  054E               	andwf	_moveVector_downs,w
 22860  13EF  0022               	movlb	2	; select bank2
 22861  13F0  00D2               	movwf	_first_top^(0+256)
 22862  13F1  0021               	movlb	1	; select bank1
 22863  13F2  085F               	movf	(_moveMask+1)^(0+128),w
 22864  13F3  0020               	movlb	0	; select bank0
 22865  13F4  054F               	andwf	_moveVector_downs+1,w
 22866  13F5  0022               	movlb	2	; select bank2
 22867  13F6  00D3               	movwf	(_first_top+1)^(0+256)
 22868  13F7  0021               	movlb	1	; select bank1
 22869  13F8  0860               	movf	(_moveMask+2)^(0+128),w
 22870  13F9  0020               	movlb	0	; select bank0
 22871  13FA  0550               	andwf	_moveVector_downs+2,w
 22872  13FB  0022               	movlb	2	; select bank2
 22873  13FC  00D4               	movwf	(_first_top+2)^(0+256)
 22874  13FD  0021               	movlb	1	; select bank1
 22875  13FE  0861               	movf	(_moveMask+3)^(0+128),w
 22876  13FF  0020               	movlb	0	; select bank0
 22877  1400  0551               	andwf	_moveVector_downs+3,w
 22878  1401  0022               	movlb	2	; select bank2
 22879  1402  00D5               	movwf	(_first_top+3)^(0+256)
 22880                           
 22881                           ;main.c: 264: first_bottom = (~moveVector_downs) & moveMask;
 22882  1403  0020               	movlb	0	; select bank0
 22883  1404  094E               	comf	_moveVector_downs,w
 22884  1405  00B1               	movwf	??_calcHeaterPins
 22885  1406  094F               	comf	_moveVector_downs+1,w
 22886  1407  00B2               	movwf	??_calcHeaterPins+1
 22887  1408  0950               	comf	_moveVector_downs+2,w
 22888  1409  00B3               	movwf	??_calcHeaterPins+2
 22889  140A  0951               	comf	_moveVector_downs+3,w
 22890  140B  00B4               	movwf	??_calcHeaterPins+3
 22891  140C  0021               	movlb	1	; select bank1
 22892  140D  085E               	movf	_moveMask^(0+128),w
 22893  140E  0020               	movlb	0	; select bank0
 22894  140F  0531               	andwf	??_calcHeaterPins,w
 22895  1410  0022               	movlb	2	; select bank2
 22896  1411  00D6               	movwf	_first_bottom^(0+256)
 22897  1412  0021               	movlb	1	; select bank1
 22898  1413  085F               	movf	(_moveMask+1)^(0+128),w
 22899  1414  0020               	movlb	0	; select bank0
 22900  1415  0532               	andwf	??_calcHeaterPins+1,w
 22901  1416  0022               	movlb	2	; select bank2
 22902  1417  00D7               	movwf	(_first_bottom+1)^(0+256)
 22903  1418  0021               	movlb	1	; select bank1
 22904  1419  0860               	movf	(_moveMask+2)^(0+128),w
 22905  141A  0020               	movlb	0	; select bank0
 22906  141B  0533               	andwf	??_calcHeaterPins+2,w
 22907  141C  0022               	movlb	2	; select bank2
 22908  141D  00D8               	movwf	(_first_bottom+2)^(0+256)
 22909  141E  0021               	movlb	1	; select bank1
 22910  141F  0861               	movf	(_moveMask+3)^(0+128),w
 22911  1420  0020               	movlb	0	; select bank0
 22912  1421  0534               	andwf	??_calcHeaterPins+3,w
 22913  1422  0022               	movlb	2	; select bank2
 22914  1423  00D9               	movwf	(_first_bottom+3)^(0+256)
 22915                           
 22916                           ;main.c: 265: second_top = moveVector_ups & moveMask;
 22917  1424  0021               	movlb	1	; select bank1
 22918  1425  085E               	movf	_moveMask^(0+128),w
 22919  1426  0566               	andwf	_moveVector_ups^(0+128),w
 22920  1427  0022               	movlb	2	; select bank2
 22921  1428  00DA               	movwf	_second_top^(0+256)
 22922  1429  0021               	movlb	1	; select bank1
 22923  142A  085F               	movf	(_moveMask+1)^(0+128),w
 22924  142B  0567               	andwf	(_moveVector_ups+1)^(0+128),w
 22925  142C  0022               	movlb	2	; select bank2
 22926  142D  00DB               	movwf	(_second_top+1)^(0+256)
 22927  142E  0021               	movlb	1	; select bank1
 22928  142F  0860               	movf	(_moveMask+2)^(0+128),w
 22929  1430  0568               	andwf	(_moveVector_ups+2)^(0+128),w
 22930  1431  0022               	movlb	2	; select bank2
 22931  1432  00DC               	movwf	(_second_top+2)^(0+256)
 22932  1433  0021               	movlb	1	; select bank1
 22933  1434  0861               	movf	(_moveMask+3)^(0+128),w
 22934  1435  0569               	andwf	(_moveVector_ups+3)^(0+128),w
 22935  1436  0022               	movlb	2	; select bank2
 22936  1437  00DD               	movwf	(_second_top+3)^(0+256)
 22937                           
 22938                           ;main.c: 266: second_bottom = (~moveVector_ups) & moveMask;
 22939  1438  0021               	movlb	1	; select bank1
 22940  1439  0966               	comf	_moveVector_ups^(0+128),w
 22941  143A  0020               	movlb	0	; select bank0
 22942  143B  00B1               	movwf	??_calcHeaterPins
 22943  143C  0021               	movlb	1	; select bank1
 22944  143D  0967               	comf	(_moveVector_ups+1)^(0+128),w
 22945  143E  0020               	movlb	0	; select bank0
 22946  143F  00B2               	movwf	??_calcHeaterPins+1
 22947  1440  0021               	movlb	1	; select bank1
 22948  1441  0968               	comf	(_moveVector_ups+2)^(0+128),w
 22949  1442  0020               	movlb	0	; select bank0
 22950  1443  00B3               	movwf	??_calcHeaterPins+2
 22951  1444  0021               	movlb	1	; select bank1
 22952  1445  0969               	comf	(_moveVector_ups+3)^(0+128),w
 22953  1446  0020               	movlb	0	; select bank0
 22954  1447  00B4               	movwf	??_calcHeaterPins+3
 22955  1448  0021               	movlb	1	; select bank1
 22956  1449  085E               	movf	_moveMask^(0+128),w
 22957  144A  0020               	movlb	0	; select bank0
 22958  144B  0531               	andwf	??_calcHeaterPins,w
 22959  144C  0022               	movlb	2	; select bank2
 22960  144D  00CE               	movwf	_second_bottom^(0+256)
 22961  144E  0021               	movlb	1	; select bank1
 22962  144F  085F               	movf	(_moveMask+1)^(0+128),w
 22963  1450  0020               	movlb	0	; select bank0
 22964  1451  0532               	andwf	??_calcHeaterPins+1,w
 22965  1452  0022               	movlb	2	; select bank2
 22966  1453  00CF               	movwf	(_second_bottom+1)^(0+256)
 22967  1454  0021               	movlb	1	; select bank1
 22968  1455  0860               	movf	(_moveMask+2)^(0+128),w
 22969  1456  0020               	movlb	0	; select bank0
 22970  1457  0533               	andwf	??_calcHeaterPins+2,w
 22971  1458  0022               	movlb	2	; select bank2
 22972  1459  00D0               	movwf	(_second_bottom+2)^(0+256)
 22973  145A  0021               	movlb	1	; select bank1
 22974  145B  0861               	movf	(_moveMask+3)^(0+128),w
 22975  145C  0020               	movlb	0	; select bank0
 22976  145D  0534               	andwf	??_calcHeaterPins+3,w
 22977  145E  0022               	movlb	2	; select bank2
 22978  145F  00D1               	movwf	(_second_bottom+3)^(0+256)
 22979  1460  0008               	return
 22980  1461                     __end_of_calcHeaterPins:	
 22981                           
 22982                           	psect	text112
 22983  2F5E                     __ptext112:	
 22984 ;; *************** function _TMR2_StartTimer *****************
 22985 ;; Defined at:
 22986 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 22987 ;; Parameters:    Size  Location     Type
 22988 ;;		None
 22989 ;; Auto vars:     Size  Location     Type
 22990 ;;		None
 22991 ;; Return value:  Size  Location     Type
 22992 ;;                  1    wreg      void 
 22993 ;; Registers used:
 22994 ;;		None
 22995 ;; Tracked objects:
 22996 ;;		On entry : 0/0
 22997 ;;		On exit  : 0/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23004 ;;Total ram usage:        0 bytes
 23005 ;; Hardware stack levels used:    1
 23006 ;; Hardware stack levels required when called:    6
 23007 ;; This function calls:
 23008 ;;		Nothing
 23009 ;; This function is called by:
 23010 ;;		_doMove
 23011 ;; This function uses a non-reentrant model
 23012 ;;
 23013                           
 23014                           
 23015                           ;psect for function _TMR2_StartTimer
 23016  2F5E                     _TMR2_StartTimer:	
 23017                           
 23018                           ;tmr2.c: 88: T2CONbits.TMR2ON = 1;
 23019                           
 23020                           ;incstack = 0
 23021                           ; Regs used in _TMR2_StartTimer: []
 23022  2F5E  0020               	movlb	0	; select bank0
 23023  2F5F  151F               	bsf	31,2	;volatile
 23024  2F60  0008               	return
 23025  2F61                     __end_of_TMR2_StartTimer:	
 23026                           
 23027                           	psect	text113
 23028  2F5B                     __ptext113:	
 23029 ;; *************** function _TMR0_StartTimer *****************
 23030 ;; Defined at:
 23031 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 23032 ;; Parameters:    Size  Location     Type
 23033 ;;		None
 23034 ;; Auto vars:     Size  Location     Type
 23035 ;;		None
 23036 ;; Return value:  Size  Location     Type
 23037 ;;                  1    wreg      void 
 23038 ;; Registers used:
 23039 ;;		None
 23040 ;; Tracked objects:
 23041 ;;		On entry : 0/0
 23042 ;;		On exit  : 0/0
 23043 ;;		Unchanged: 0/0
 23044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23049 ;;Total ram usage:        0 bytes
 23050 ;; Hardware stack levels used:    1
 23051 ;; Hardware stack levels required when called:    6
 23052 ;; This function calls:
 23053 ;;		Nothing
 23054 ;; This function is called by:
 23055 ;;		_doMove
 23056 ;; This function uses a non-reentrant model
 23057 ;;
 23058                           
 23059                           
 23060                           ;psect for function _TMR0_StartTimer
 23061  2F5B                     _TMR0_StartTimer:	
 23062                           
 23063                           ;tmr0.c: 88: T0CON0bits.T0EN = 1;
 23064                           
 23065                           ;incstack = 0
 23066                           ; Regs used in _TMR0_StartTimer: []
 23067  2F5B  0020               	movlb	0	; select bank0
 23068  2F5C  1797               	bsf	23,7	;volatile
 23069  2F5D  0008               	return
 23070  2F5E                     __end_of_TMR0_StartTimer:	
 23071                           
 23072                           	psect	text114
 23073  23E3                     __ptext114:	
 23074 ;; *************** function _LEDsOn *****************
 23075 ;; Defined at:
 23076 ;;		line 6 in file "LEDcomm.c"
 23077 ;; Parameters:    Size  Location     Type
 23078 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 23079 ;;  topOrBottom     2   40[BANK0 ] int 
 23080 ;; Auto vars:     Size  Location     Type
 23081 ;;		None
 23082 ;; Return value:  Size  Location     Type
 23083 ;;                  1    wreg      void 
 23084 ;; Registers used:
 23085 ;;		wreg, status,2, status,0, pclath, cstack
 23086 ;; Tracked objects:
 23087 ;;		On entry : 0/0
 23088 ;;		On exit  : 0/0
 23089 ;;		Unchanged: 0/0
 23090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23091 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23093 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23094 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23095 ;;Total ram usage:       10 bytes
 23096 ;; Hardware stack levels used:    1
 23097 ;; Hardware stack levels required when called:    8
 23098 ;; This function calls:
 23099 ;;		_send_2length_2bytes_IK
 23100 ;; This function is called by:
 23101 ;;		_LED_test_openshort
 23102 ;;		_doMove
 23103 ;;		_setHeaterToggle
 23104 ;;		_timedActiveHeatOn
 23105 ;;		_demoSequence
 23106 ;; This function uses a non-reentrant model
 23107 ;;
 23108                           
 23109                           
 23110                           ;psect for function _LEDsOn
 23111  23E3                     _LEDsOn:	
 23112                           
 23113                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 23114                           
 23115                           ;incstack = 0
 23116                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 23117  23E3  0020               	movlb	0	; select bank0
 23118  23E4  0844               	movf	LEDsOn@LEDpins,w
 23119  23E5  00CA               	movwf	??_LEDsOn
 23120  23E6  0845               	movf	LEDsOn@LEDpins+1,w
 23121  23E7  00CB               	movwf	??_LEDsOn+1
 23122  23E8  0846               	movf	LEDsOn@LEDpins+2,w
 23123  23E9  00CC               	movwf	??_LEDsOn+2
 23124  23EA  0847               	movf	LEDsOn@LEDpins+3,w
 23125  23EB  00CD               	movwf	??_LEDsOn+3
 23126  23EC  3010               	movlw	16
 23127  23ED                     u8105:	
 23128  23ED  36CD               	lsrf	??_LEDsOn+3,f
 23129  23EE  0CCC               	rrf	??_LEDsOn+2,f
 23130  23EF  0CCB               	rrf	??_LEDsOn+1,f
 23131  23F0  0CCA               	rrf	??_LEDsOn,f
 23132  23F1  0B89               	decfsz	9,f
 23133  23F2  2BED               	goto	u8105
 23134  23F3  084B               	movf	??_LEDsOn+1,w
 23135  23F4  00BD               	movwf	send_2length_2bytes_IK@data1+1
 23136  23F5  084A               	movf	??_LEDsOn,w
 23137  23F6  00BC               	movwf	send_2length_2bytes_IK@data1
 23138  23F7  0845               	movf	LEDsOn@LEDpins+1,w
 23139  23F8  00BF               	movwf	send_2length_2bytes_IK@data2+1
 23140  23F9  0844               	movf	LEDsOn@LEDpins,w
 23141  23FA  00BE               	movwf	send_2length_2bytes_IK@data2
 23142  23FB  01C0               	clrf	send_2length_2bytes_IK@latch_start
 23143  23FC  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 23144  23FD  0849               	movf	LEDsOn@topOrBottom+1,w
 23145  23FE  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 23146  23FF  0848               	movf	LEDsOn@topOrBottom,w
 23147  2400  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 23148  2401  31A2  2214         	fcall	_send_2length_2bytes_IK
 23149  2403  0008               	return
 23150  2404                     __end_of_LEDsOn:	
 23151                           
 23152                           	psect	text115
 23153  2214                     __ptext115:	
 23154 ;; *************** function _send_2length_2bytes_IK *****************
 23155 ;; Defined at:
 23156 ;;		line 70 in file "LEDcomm.c"
 23157 ;; Parameters:    Size  Location     Type
 23158 ;;  data1           2   28[BANK0 ] unsigned int 
 23159 ;;  data2           2   30[BANK0 ] unsigned int 
 23160 ;;  latch_start     1   32[BANK0 ] unsigned char 
 23161 ;;  topOrBottom     2   33[BANK0 ] int 
 23162 ;; Auto vars:     Size  Location     Type
 23163 ;;		None
 23164 ;; Return value:  Size  Location     Type
 23165 ;;                  1    wreg      void 
 23166 ;; Registers used:
 23167 ;;		wreg, status,2, status,0, pclath, cstack
 23168 ;; Tracked objects:
 23169 ;;		On entry : 0/0
 23170 ;;		On exit  : 0/0
 23171 ;;		Unchanged: 0/0
 23172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23173 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23176 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23177 ;;Total ram usage:        8 bytes
 23178 ;; Hardware stack levels used:    1
 23179 ;; Hardware stack levels required when called:    7
 23180 ;; This function calls:
 23181 ;;		_send_2bytes_latchless_IK
 23182 ;;		_send_last_2bytes_IK
 23183 ;; This function is called by:
 23184 ;;		_LEDsOn
 23185 ;;		_LEDsPwr
 23186 ;;		_LED_setBrightnessRange
 23187 ;;		_LED_test_openshort
 23188 ;;		_LED_readConfig
 23189 ;; This function uses a non-reentrant model
 23190 ;;
 23191                           
 23192                           
 23193                           ;psect for function _send_2length_2bytes_IK
 23194  2214                     _send_2length_2bytes_IK:	
 23195                           
 23196                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 23197                           
 23198                           ;incstack = 0
 23199                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 23200  2214  0020               	movlb	0	; select bank0
 23201  2215  083D               	movf	send_2length_2bytes_IK@data1+1,w
 23202  2216  00B2               	movwf	send_2bytes_latchless_IK@data+1
 23203  2217  083C               	movf	send_2length_2bytes_IK@data1,w
 23204  2218  00B1               	movwf	send_2bytes_latchless_IK@data
 23205  2219  31A5  25DA  31A2   	fcall	_send_2bytes_latchless_IK
 23206                           
 23207                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 23208  221C  0020               	movlb	0	; select bank0
 23209  221D  083F               	movf	send_2length_2bytes_IK@data2+1,w
 23210  221E  00B2               	movwf	send_last_2bytes_IK@data+1
 23211  221F  083E               	movf	send_2length_2bytes_IK@data2,w
 23212  2220  00B1               	movwf	send_last_2bytes_IK@data
 23213  2221  0840               	movf	send_2length_2bytes_IK@latch_start,w
 23214  2222  00C3               	movwf	??_send_2length_2bytes_IK
 23215  2223  0843               	movf	??_send_2length_2bytes_IK,w
 23216  2224  00B3               	movwf	send_last_2bytes_IK@latch_start
 23217  2225  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 23218  2226  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 23219  2227  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 23220  2228  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 23221  2229  319D  255E         	fcall	_send_last_2bytes_IK
 23222  222B  0008               	return
 23223  222C                     __end_of_send_2length_2bytes_IK:	
 23224                           
 23225                           	psect	text116
 23226  1D5E                     __ptext116:	
 23227 ;; *************** function _send_last_2bytes_IK *****************
 23228 ;; Defined at:
 23229 ;;		line 19 in file "LEDcomm.c"
 23230 ;; Parameters:    Size  Location     Type
 23231 ;;  data            2   17[BANK0 ] unsigned int 
 23232 ;;  latch_start     1   19[BANK0 ] unsigned char 
 23233 ;;  topOrBottom     2   20[BANK0 ] int 
 23234 ;; Auto vars:     Size  Location     Type
 23235 ;;  j               2   26[BANK0 ] int 
 23236 ;; Return value:  Size  Location     Type
 23237 ;;                  1    wreg      void 
 23238 ;; Registers used:
 23239 ;;		wreg, status,2, status,0
 23240 ;; Tracked objects:
 23241 ;;		On entry : 0/0
 23242 ;;		On exit  : 0/0
 23243 ;;		Unchanged: 0/0
 23244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23245 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23247 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23248 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23249 ;;Total ram usage:       11 bytes
 23250 ;; Hardware stack levels used:    1
 23251 ;; Hardware stack levels required when called:    6
 23252 ;; This function calls:
 23253 ;;		Nothing
 23254 ;; This function is called by:
 23255 ;;		_send_2length_2bytes_IK
 23256 ;; This function uses a non-reentrant model
 23257 ;;
 23258                           
 23259                           
 23260                           ;psect for function _send_last_2bytes_IK
 23261  1D5E                     _send_last_2bytes_IK:	
 23262                           
 23263                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 23264                           
 23265                           ;incstack = 0
 23266                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 23267  1D5E  0020               	movlb	0	; select bank0
 23268  1D5F  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 23269  1D60  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 23270  1D61  1D03               	btfss	3,2
 23271  1D62  2D66               	goto	l210
 23272  1D63  0022               	movlb	2	; select bank2
 23273  1D64  120D               	bcf	13,4	;volatile
 23274  1D65  2D68               	goto	l7692
 23275  1D66                     l210:	
 23276  1D66  0022               	movlb	2	; select bank2
 23277  1D67  100E               	bcf	14,0	;volatile
 23278  1D68                     l7692:	
 23279                           
 23280                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 23281  1D68  300F               	movlw	15
 23282  1D69  0020               	movlb	0	; select bank0
 23283  1D6A  00BA               	movwf	send_last_2bytes_IK@j
 23284  1D6B  3000               	movlw	0
 23285  1D6C  00BB               	movwf	send_last_2bytes_IK@j+1
 23286  1D6D  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 23287  1D6E  2DA9               	goto	l231
 23288  1D6F                     l214:	
 23289                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 23290                           
 23291  1D6F  0022               	movlb	2	; select bank2
 23292  1D70  110C               	bcf	12,2	;volatile
 23293                           
 23294                           ;LEDcomm.c: 28: if (data & 1 << j){
 23295  1D71  3001               	movlw	1
 23296  1D72  0020               	movlb	0	; select bank0
 23297  1D73  00B6               	movwf	??_send_last_2bytes_IK
 23298  1D74  3000               	movlw	0
 23299  1D75  00B7               	movwf	??_send_last_2bytes_IK+1
 23300  1D76  0A3A               	incf	send_last_2bytes_IK@j,w
 23301  1D77  2D7A               	goto	u7264
 23302  1D78                     u7265:	
 23303  1D78  35B6               	lslf	??_send_last_2bytes_IK,f
 23304  1D79  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 23305  1D7A                     u7264:	
 23306  1D7A  0B89               	decfsz	9,f
 23307  1D7B  2D78               	goto	u7265
 23308  1D7C  0831               	movf	send_last_2bytes_IK@data,w
 23309  1D7D  0536               	andwf	??_send_last_2bytes_IK,w
 23310  1D7E  00B8               	movwf	??_send_last_2bytes_IK+2
 23311  1D7F  0832               	movf	send_last_2bytes_IK@data+1,w
 23312  1D80  0537               	andwf	??_send_last_2bytes_IK+1,w
 23313  1D81  00B9               	movwf	??_send_last_2bytes_IK+3
 23314  1D82  0838               	movf	??_send_last_2bytes_IK+2,w
 23315  1D83  0439               	iorwf	??_send_last_2bytes_IK+3,w
 23316  1D84  1903               	btfsc	3,2
 23317  1D85  2D89               	goto	l220
 23318                           
 23319                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 23320  1D86  0022               	movlb	2	; select bank2
 23321  1D87  150E               	bsf	14,2	;volatile
 23322                           
 23323                           ;LEDcomm.c: 30: }
 23324  1D88  2D8B               	goto	l7700
 23325  1D89                     l220:	
 23326                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 23327                           
 23328  1D89  0022               	movlb	2	; select bank2
 23329  1D8A  110E               	bcf	14,2	;volatile
 23330  1D8B                     l7700:	
 23331                           
 23332                           ;LEDcomm.c: 33: if( j == latch_start) {
 23333  1D8B  0020               	movlb	0	; select bank0
 23334  1D8C  0833               	movf	send_last_2bytes_IK@latch_start,w
 23335  1D8D  00B6               	movwf	??_send_last_2bytes_IK
 23336  1D8E  01B7               	clrf	??_send_last_2bytes_IK+1
 23337  1D8F  083B               	movf	send_last_2bytes_IK@j+1,w
 23338  1D90  0637               	xorwf	??_send_last_2bytes_IK+1,w
 23339  1D91  1D03               	skipz
 23340  1D92  2D95               	goto	u7285
 23341  1D93  083A               	movf	send_last_2bytes_IK@j,w
 23342  1D94  0636               	xorwf	??_send_last_2bytes_IK,w
 23343  1D95                     u7285:	
 23344  1D95  1D03               	skipz
 23345  1D96  2DA0               	goto	l229
 23346                           
 23347                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 23348  1D97  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 23349  1D98  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 23350  1D99  1D03               	btfss	3,2
 23351  1D9A  2D9E               	goto	l227
 23352  1D9B  0022               	movlb	2	; select bank2
 23353  1D9C  160D               	bsf	13,4	;volatile
 23354  1D9D  2DA0               	goto	l229
 23355  1D9E                     l227:	
 23356  1D9E  0022               	movlb	2	; select bank2
 23357  1D9F  140E               	bsf	14,0	;volatile
 23358  1DA0                     l229:	
 23359                           ;LEDcomm.c: 37: }
 23360                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 23361                           
 23362  1DA0  0022               	movlb	2	; select bank2
 23363  1DA1  150C               	bsf	12,2	;volatile
 23364  1DA2  30FF               	movlw	255
 23365  1DA3  0020               	movlb	0	; select bank0
 23366  1DA4  07BA               	addwf	send_last_2bytes_IK@j,f
 23367  1DA5  30FF               	movlw	255
 23368  1DA6  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 23369  1DA7  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 23370  1DA8  2D6F               	goto	l214
 23371  1DA9                     l231:	
 23372                           ;LEDcomm.c: 41: }
 23373                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 23374                           
 23375  1DA9  0022               	movlb	2	; select bank2
 23376  1DAA  110C               	bcf	12,2	;volatile
 23377                           
 23378                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 23379  1DAB  0020               	movlb	0	; select bank0
 23380  1DAC  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 23381  1DAD  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 23382  1DAE  1D03               	btfss	3,2
 23383  1DAF  2DB3               	goto	l237
 23384  1DB0  0022               	movlb	2	; select bank2
 23385  1DB1  120D               	bcf	13,4	;volatile
 23386  1DB2  0008               	return
 23387  1DB3                     l237:	
 23388  1DB3  0022               	movlb	2	; select bank2
 23389  1DB4  100E               	bcf	14,0	;volatile
 23390  1DB5  0008               	return
 23391  1DB6                     __end_of_send_last_2bytes_IK:	
 23392                           
 23393                           	psect	text117
 23394  25DA                     __ptext117:	
 23395 ;; *************** function _send_2bytes_latchless_IK *****************
 23396 ;; Defined at:
 23397 ;;		line 49 in file "LEDcomm.c"
 23398 ;; Parameters:    Size  Location     Type
 23399 ;;  data            2   17[BANK0 ] unsigned int 
 23400 ;; Auto vars:     Size  Location     Type
 23401 ;;  j               2   23[BANK0 ] int 
 23402 ;; Return value:  Size  Location     Type
 23403 ;;                  1    wreg      void 
 23404 ;; Registers used:
 23405 ;;		wreg, status,2, status,0
 23406 ;; Tracked objects:
 23407 ;;		On entry : 0/0
 23408 ;;		On exit  : 0/0
 23409 ;;		Unchanged: 0/0
 23410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23412 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23413 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23414 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23415 ;;Total ram usage:        8 bytes
 23416 ;; Hardware stack levels used:    1
 23417 ;; Hardware stack levels required when called:    6
 23418 ;; This function calls:
 23419 ;;		Nothing
 23420 ;; This function is called by:
 23421 ;;		_send_2length_2bytes_IK
 23422 ;; This function uses a non-reentrant model
 23423 ;;
 23424                           
 23425                           
 23426                           ;psect for function _send_2bytes_latchless_IK
 23427  25DA                     _send_2bytes_latchless_IK:	
 23428                           
 23429                           ;incstack = 0
 23430                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 23431                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 23432  25DA  0022               	movlb	2	; select bank2
 23433  25DB  120D               	bcf	13,4	;volatile
 23434                           
 23435                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 23436  25DC  300F               	movlw	15
 23437  25DD  0020               	movlb	0	; select bank0
 23438  25DE  00B7               	movwf	send_2bytes_latchless_IK@j
 23439  25DF  3000               	movlw	0
 23440  25E0  00B8               	movwf	send_2bytes_latchless_IK@j+1
 23441  25E1  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 23442  25E2  2E07               	goto	l256
 23443  25E3                     l246:	
 23444                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 23445                           
 23446  25E3  0022               	movlb	2	; select bank2
 23447  25E4  110C               	bcf	12,2	;volatile
 23448                           
 23449                           ;LEDcomm.c: 56: if (data & 1 << j){
 23450  25E5  3001               	movlw	1
 23451  25E6  0020               	movlb	0	; select bank0
 23452  25E7  00B3               	movwf	??_send_2bytes_latchless_IK
 23453  25E8  3000               	movlw	0
 23454  25E9  00B4               	movwf	??_send_2bytes_latchless_IK+1
 23455  25EA  0A37               	incf	send_2bytes_latchless_IK@j,w
 23456  25EB  2DEE               	goto	u7334
 23457  25EC                     u7335:	
 23458  25EC  35B3               	lslf	??_send_2bytes_latchless_IK,f
 23459  25ED  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 23460  25EE                     u7334:	
 23461  25EE  0B89               	decfsz	9,f
 23462  25EF  2DEC               	goto	u7335
 23463  25F0  0831               	movf	send_2bytes_latchless_IK@data,w
 23464  25F1  0533               	andwf	??_send_2bytes_latchless_IK,w
 23465  25F2  00B5               	movwf	??_send_2bytes_latchless_IK+2
 23466  25F3  0832               	movf	send_2bytes_latchless_IK@data+1,w
 23467  25F4  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 23468  25F5  00B6               	movwf	??_send_2bytes_latchless_IK+3
 23469  25F6  0835               	movf	??_send_2bytes_latchless_IK+2,w
 23470  25F7  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 23471  25F8  1903               	btfsc	3,2
 23472  25F9  2DFD               	goto	l252
 23473                           
 23474                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 23475  25FA  0022               	movlb	2	; select bank2
 23476  25FB  150E               	bsf	14,2	;volatile
 23477                           
 23478                           ;LEDcomm.c: 58: }
 23479  25FC  2DFF               	goto	l254
 23480  25FD                     l252:	
 23481                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 23482                           
 23483  25FD  0022               	movlb	2	; select bank2
 23484  25FE  110E               	bcf	14,2	;volatile
 23485  25FF                     l254:	
 23486                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 23487                           
 23488  25FF  150C               	bsf	12,2	;volatile
 23489  2600  30FF               	movlw	255
 23490  2601  0020               	movlb	0	; select bank0
 23491  2602  07B7               	addwf	send_2bytes_latchless_IK@j,f
 23492  2603  30FF               	movlw	255
 23493  2604  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 23494  2605  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 23495  2606  2DE3               	goto	l246
 23496  2607                     l256:	
 23497                           ;LEDcomm.c: 64: }
 23498                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 23499                           
 23500  2607  0022               	movlb	2	; select bank2
 23501  2608  110C               	bcf	12,2	;volatile
 23502  2609  0008               	return
 23503  260A                     __end_of_send_2bytes_latchless_IK:	
 23504                           
 23505                           	psect	text118
 23506  21D2                     __ptext118:	
 23507 ;; *************** function _SYSTEM_Initialize *****************
 23508 ;; Defined at:
 23509 ;;		line 77 in file "mcc_generated_files/mcc.c"
 23510 ;; Parameters:    Size  Location     Type
 23511 ;;		None
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;		None
 23514 ;; Return value:  Size  Location     Type
 23515 ;;                  1    wreg      void 
 23516 ;; Registers used:
 23517 ;;		wreg, status,2, status,0, pclath, cstack
 23518 ;; Tracked objects:
 23519 ;;		On entry : 0/0
 23520 ;;		On exit  : 0/0
 23521 ;;		Unchanged: 0/0
 23522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23527 ;;Total ram usage:        0 bytes
 23528 ;; Hardware stack levels used:    1
 23529 ;; Hardware stack levels required when called:    8
 23530 ;; This function calls:
 23531 ;;		_EUSART_Initialize
 23532 ;;		_OSCILLATOR_Initialize
 23533 ;;		_PIN_MANAGER_Initialize
 23534 ;;		_PMD_Initialize
 23535 ;;		_TMR0_Initialize
 23536 ;;		_TMR2_Initialize
 23537 ;;		_WDT_Initialize
 23538 ;; This function is called by:
 23539 ;;		_main
 23540 ;; This function uses a non-reentrant model
 23541 ;;
 23542                           
 23543                           
 23544                           ;psect for function _SYSTEM_Initialize
 23545  21D2                     _SYSTEM_Initialize:	
 23546                           
 23547                           ;mcc.c: 80: PMD_Initialize();
 23548                           
 23549                           ;incstack = 0
 23550                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23551  21D2  31A0  203B  31A1   	fcall	_PMD_Initialize
 23552                           
 23553                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 23554  21D5  31A6  266A  31A1   	fcall	_PIN_MANAGER_Initialize
 23555                           
 23556                           ;mcc.c: 82: OSCILLATOR_Initialize();
 23557  21D8  31A0  20C2  31A1   	fcall	_OSCILLATOR_Initialize
 23558                           
 23559                           ;mcc.c: 83: WDT_Initialize();
 23560  21DB  31AF  279A  31A1   	fcall	_WDT_Initialize
 23561                           
 23562                           ;mcc.c: 84: TMR2_Initialize();
 23563  21DE  31A1  2199  31A1   	fcall	_TMR2_Initialize
 23564                           
 23565                           ;mcc.c: 85: TMR0_Initialize();
 23566  21E1  31A1  21BE  31A1   	fcall	_TMR0_Initialize
 23567                           
 23568                           ;mcc.c: 86: EUSART_Initialize();
 23569  21E4  31A2  2245         	fcall	_EUSART_Initialize
 23570  21E6  0008               	return
 23571  21E7                     __end_of_SYSTEM_Initialize:	
 23572                           
 23573                           	psect	text119
 23574  2F9A                     __ptext119:	
 23575 ;; *************** function _WDT_Initialize *****************
 23576 ;; Defined at:
 23577 ;;		line 103 in file "mcc_generated_files/mcc.c"
 23578 ;; Parameters:    Size  Location     Type
 23579 ;;		None
 23580 ;; Auto vars:     Size  Location     Type
 23581 ;;		None
 23582 ;; Return value:  Size  Location     Type
 23583 ;;                  1    wreg      void 
 23584 ;; Registers used:
 23585 ;;		wreg
 23586 ;; Tracked objects:
 23587 ;;		On entry : 0/0
 23588 ;;		On exit  : 0/0
 23589 ;;		Unchanged: 0/0
 23590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23595 ;;Total ram usage:        0 bytes
 23596 ;; Hardware stack levels used:    1
 23597 ;; Hardware stack levels required when called:    6
 23598 ;; This function calls:
 23599 ;;		Nothing
 23600 ;; This function is called by:
 23601 ;;		_SYSTEM_Initialize
 23602 ;; This function uses a non-reentrant model
 23603 ;;
 23604                           
 23605                           
 23606                           ;psect for function _WDT_Initialize
 23607  2F9A                     _WDT_Initialize:	
 23608                           
 23609                           ;mcc.c: 106: WDTCON = 0x16;
 23610                           
 23611                           ;incstack = 0
 23612                           ; Regs used in _WDT_Initialize: [wreg]
 23613  2F9A  3016               	movlw	22
 23614  2F9B  0021               	movlb	1	; select bank1
 23615  2F9C  0097               	movwf	23	;volatile
 23616  2F9D  0008               	return
 23617  2F9E                     __end_of_WDT_Initialize:	
 23618                           
 23619                           	psect	text120
 23620  2199                     __ptext120:	
 23621 ;; *************** function _TMR2_Initialize *****************
 23622 ;; Defined at:
 23623 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23624 ;; Parameters:    Size  Location     Type
 23625 ;;		None
 23626 ;; Auto vars:     Size  Location     Type
 23627 ;;		None
 23628 ;; Return value:  Size  Location     Type
 23629 ;;                  1    wreg      void 
 23630 ;; Registers used:
 23631 ;;		wreg, status,2, status,0, pclath, cstack
 23632 ;; Tracked objects:
 23633 ;;		On entry : 0/0
 23634 ;;		On exit  : 0/0
 23635 ;;		Unchanged: 0/0
 23636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23641 ;;Total ram usage:        0 bytes
 23642 ;; Hardware stack levels used:    1
 23643 ;; Hardware stack levels required when called:    7
 23644 ;; This function calls:
 23645 ;;		_TMR2_SetInterruptHandler
 23646 ;; This function is called by:
 23647 ;;		_SYSTEM_Initialize
 23648 ;; This function uses a non-reentrant model
 23649 ;;
 23650                           
 23651                           
 23652                           ;psect for function _TMR2_Initialize
 23653  2199                     _TMR2_Initialize:	
 23654                           
 23655                           ;tmr2.c: 67: PR2 = 0x0F;
 23656                           
 23657                           ;incstack = 0
 23658                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23659  2199  300F               	movlw	15
 23660  219A  0020               	movlb	0	; select bank0
 23661  219B  009E               	movwf	30	;volatile
 23662                           
 23663                           ;tmr2.c: 70: TMR2 = 0x00;
 23664  219C  019D               	clrf	29	;volatile
 23665                           
 23666                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 23667  219D  1091               	bcf	17,1	;volatile
 23668                           
 23669                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
 23670  219E  0021               	movlb	1	; select bank1
 23671  219F  1491               	bsf	17,1	;volatile
 23672                           
 23673                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 23674  21A0  3083               	movlw	low _TMR2_DefaultInterruptHandler
 23675  21A1  0020               	movlb	0	; select bank0
 23676  21A2  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 23677  21A3  3020               	movlw	high _TMR2_DefaultInterruptHandler
 23678  21A4  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 23679  21A5  31A0  2095         	fcall	_TMR2_SetInterruptHandler
 23680                           
 23681                           ;tmr2.c: 82: T2CON = 0x4E;
 23682  21A7  304E               	movlw	78
 23683  21A8  0020               	movlb	0	; select bank0
 23684  21A9  009F               	movwf	31	;volatile
 23685  21AA  0008               	return
 23686  21AB                     __end_of_TMR2_Initialize:	
 23687                           
 23688                           	psect	text121
 23689  2095                     __ptext121:	
 23690 ;; *************** function _TMR2_SetInterruptHandler *****************
 23691 ;; Defined at:
 23692 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 23693 ;; Parameters:    Size  Location     Type
 23694 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 23695 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 23696 ;; Auto vars:     Size  Location     Type
 23697 ;;		None
 23698 ;; Return value:  Size  Location     Type
 23699 ;;                  1    wreg      void 
 23700 ;; Registers used:
 23701 ;;		wreg
 23702 ;; Tracked objects:
 23703 ;;		On entry : 0/0
 23704 ;;		On exit  : 0/0
 23705 ;;		Unchanged: 0/0
 23706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23711 ;;Total ram usage:        2 bytes
 23712 ;; Hardware stack levels used:    1
 23713 ;; Hardware stack levels required when called:    6
 23714 ;; This function calls:
 23715 ;;		Nothing
 23716 ;; This function is called by:
 23717 ;;		_TMR2_Initialize
 23718 ;; This function uses a non-reentrant model
 23719 ;;
 23720                           
 23721                           
 23722                           ;psect for function _TMR2_SetInterruptHandler
 23723  2095                     _TMR2_SetInterruptHandler:	
 23724                           
 23725                           ;tmr2.c: 131: TMR2_InterruptHandler = InterruptHandler;
 23726                           
 23727                           ;incstack = 0
 23728                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 23729  2095  0020               	movlb	0	; select bank0
 23730  2096  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 23731  2097  0023               	movlb	3	; select bank3
 23732  2098  00E2               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
 23733  2099  0020               	movlb	0	; select bank0
 23734  209A  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 23735  209B  0023               	movlb	3	; select bank3
 23736  209C  00E1               	movwf	_TMR2_InterruptHandler^(0+384)
 23737  209D  0008               	return
 23738  209E                     __end_of_TMR2_SetInterruptHandler:	
 23739                           
 23740                           	psect	text122
 23741  21BE                     __ptext122:	
 23742 ;; *************** function _TMR0_Initialize *****************
 23743 ;; Defined at:
 23744 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 23745 ;; Parameters:    Size  Location     Type
 23746 ;;		None
 23747 ;; Auto vars:     Size  Location     Type
 23748 ;;		None
 23749 ;; Return value:  Size  Location     Type
 23750 ;;                  1    wreg      void 
 23751 ;; Registers used:
 23752 ;;		wreg, status,2, status,0, pclath, cstack
 23753 ;; Tracked objects:
 23754 ;;		On entry : 0/0
 23755 ;;		On exit  : 0/0
 23756 ;;		Unchanged: 0/0
 23757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23762 ;;Total ram usage:        0 bytes
 23763 ;; Hardware stack levels used:    1
 23764 ;; Hardware stack levels required when called:    7
 23765 ;; This function calls:
 23766 ;;		_TMR0_SetInterruptHandler
 23767 ;; This function is called by:
 23768 ;;		_SYSTEM_Initialize
 23769 ;; This function uses a non-reentrant model
 23770 ;;
 23771                           
 23772                           
 23773                           ;psect for function _TMR0_Initialize
 23774  21BE                     _TMR0_Initialize:	
 23775                           
 23776                           ;tmr0.c: 64: T0CON1 = 0x58;
 23777                           
 23778                           ;incstack = 0
 23779                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23780  21BE  3058               	movlw	88
 23781  21BF  0020               	movlb	0	; select bank0
 23782  21C0  0098               	movwf	24	;volatile
 23783                           
 23784                           ;tmr0.c: 67: TMR0H = 0x61;
 23785  21C1  3061               	movlw	97
 23786  21C2  0096               	movwf	22	;volatile
 23787                           
 23788                           ;tmr0.c: 70: TMR0L = 0x00;
 23789  21C3  0195               	clrf	21	;volatile
 23790                           
 23791                           ;tmr0.c: 73: PIR0bits.TMR0IF = 0;
 23792  21C4  1290               	bcf	16,5	;volatile
 23793                           
 23794                           ;tmr0.c: 76: PIE0bits.TMR0IE = 1;
 23795  21C5  0021               	movlb	1	; select bank1
 23796  21C6  1690               	bsf	16,5	;volatile
 23797                           
 23798                           ;tmr0.c: 79: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 23799  21C7  3007               	movlw	low _TMR0_DefaultInterruptHandler
 23800  21C8  0020               	movlb	0	; select bank0
 23801  21C9  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 23802  21CA  3027               	movlw	high _TMR0_DefaultInterruptHandler
 23803  21CB  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 23804  21CC  31A0  208C         	fcall	_TMR0_SetInterruptHandler
 23805                           
 23806                           ;tmr0.c: 82: T0CON0 = 0x89;
 23807  21CE  3089               	movlw	137
 23808  21CF  0020               	movlb	0	; select bank0
 23809  21D0  0097               	movwf	23	;volatile
 23810  21D1  0008               	return
 23811  21D2                     __end_of_TMR0_Initialize:	
 23812                           
 23813                           	psect	text123
 23814  208C                     __ptext123:	
 23815 ;; *************** function _TMR0_SetInterruptHandler *****************
 23816 ;; Defined at:
 23817 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 23818 ;; Parameters:    Size  Location     Type
 23819 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 23820 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23821 ;; Auto vars:     Size  Location     Type
 23822 ;;		None
 23823 ;; Return value:  Size  Location     Type
 23824 ;;                  1    wreg      void 
 23825 ;; Registers used:
 23826 ;;		wreg
 23827 ;; Tracked objects:
 23828 ;;		On entry : 0/0
 23829 ;;		On exit  : 0/0
 23830 ;;		Unchanged: 0/0
 23831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23835 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23836 ;;Total ram usage:        2 bytes
 23837 ;; Hardware stack levels used:    1
 23838 ;; Hardware stack levels required when called:    6
 23839 ;; This function calls:
 23840 ;;		Nothing
 23841 ;; This function is called by:
 23842 ;;		_TMR0_Initialize
 23843 ;; This function uses a non-reentrant model
 23844 ;;
 23845                           
 23846                           
 23847                           ;psect for function _TMR0_SetInterruptHandler
 23848  208C                     _TMR0_SetInterruptHandler:	
 23849                           
 23850                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
 23851                           
 23852                           ;incstack = 0
 23853                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 23854  208C  0020               	movlb	0	; select bank0
 23855  208D  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 23856  208E  0023               	movlb	3	; select bank3
 23857  208F  00E4               	movwf	(_TMR0_InterruptHandler+1)^(0+384)
 23858  2090  0020               	movlb	0	; select bank0
 23859  2091  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 23860  2092  0023               	movlb	3	; select bank3
 23861  2093  00E3               	movwf	_TMR0_InterruptHandler^(0+384)
 23862  2094  0008               	return
 23863  2095                     __end_of_TMR0_SetInterruptHandler:	
 23864                           
 23865                           	psect	text124
 23866  203B                     __ptext124:	
 23867 ;; *************** function _PMD_Initialize *****************
 23868 ;; Defined at:
 23869 ;;		line 109 in file "mcc_generated_files/mcc.c"
 23870 ;; Parameters:    Size  Location     Type
 23871 ;;		None
 23872 ;; Auto vars:     Size  Location     Type
 23873 ;;		None
 23874 ;; Return value:  Size  Location     Type
 23875 ;;                  1    wreg      void 
 23876 ;; Registers used:
 23877 ;;		status,2
 23878 ;; Tracked objects:
 23879 ;;		On entry : 0/0
 23880 ;;		On exit  : 0/0
 23881 ;;		Unchanged: 0/0
 23882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23887 ;;Total ram usage:        0 bytes
 23888 ;; Hardware stack levels used:    1
 23889 ;; Hardware stack levels required when called:    6
 23890 ;; This function calls:
 23891 ;;		Nothing
 23892 ;; This function is called by:
 23893 ;;		_SYSTEM_Initialize
 23894 ;; This function uses a non-reentrant model
 23895 ;;
 23896                           
 23897                           
 23898                           ;psect for function _PMD_Initialize
 23899  203B                     _PMD_Initialize:	
 23900                           
 23901                           ;mcc.c: 112: PMD0 = 0x00;
 23902                           
 23903                           ;incstack = 0
 23904                           ; Regs used in _PMD_Initialize: [status,2]
 23905  203B  0032               	movlb	18	; select bank18
 23906  203C  0191               	clrf	17	;volatile
 23907                           
 23908                           ;mcc.c: 114: PMD1 = 0x00;
 23909  203D  0192               	clrf	18	;volatile
 23910                           
 23911                           ;mcc.c: 116: PMD2 = 0x00;
 23912  203E  0193               	clrf	19	;volatile
 23913                           
 23914                           ;mcc.c: 118: PMD3 = 0x00;
 23915  203F  0194               	clrf	20	;volatile
 23916                           
 23917                           ;mcc.c: 120: PMD4 = 0x00;
 23918  2040  0195               	clrf	21	;volatile
 23919                           
 23920                           ;mcc.c: 122: PMD5 = 0x00;
 23921  2041  0196               	clrf	22	;volatile
 23922  2042  0008               	return
 23923  2043                     __end_of_PMD_Initialize:	
 23924                           
 23925                           	psect	text125
 23926  266A                     __ptext125:	
 23927 ;; *************** function _PIN_MANAGER_Initialize *****************
 23928 ;; Defined at:
 23929 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 23930 ;; Parameters:    Size  Location     Type
 23931 ;;		None
 23932 ;; Auto vars:     Size  Location     Type
 23933 ;;		None
 23934 ;; Return value:  Size  Location     Type
 23935 ;;                  1    wreg      void 
 23936 ;; Registers used:
 23937 ;;		wreg, status,2, status,0
 23938 ;; Tracked objects:
 23939 ;;		On entry : 0/0
 23940 ;;		On exit  : 0/0
 23941 ;;		Unchanged: 0/0
 23942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23947 ;;Total ram usage:        0 bytes
 23948 ;; Hardware stack levels used:    1
 23949 ;; Hardware stack levels required when called:    6
 23950 ;; This function calls:
 23951 ;;		Nothing
 23952 ;; This function is called by:
 23953 ;;		_SYSTEM_Initialize
 23954 ;; This function uses a non-reentrant model
 23955 ;;
 23956                           
 23957                           
 23958                           ;psect for function _PIN_MANAGER_Initialize
 23959  266A                     _PIN_MANAGER_Initialize:	
 23960                           
 23961                           ;pin_manager.c: 57: LATA = 0x00;
 23962                           
 23963                           ;incstack = 0
 23964                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 23965  266A  0022               	movlb	2	; select bank2
 23966  266B  018C               	clrf	12	;volatile
 23967                           
 23968                           ;pin_manager.c: 58: LATB = 0x00;
 23969  266C  018D               	clrf	13	;volatile
 23970                           
 23971                           ;pin_manager.c: 59: LATC = 0x00;
 23972  266D  018E               	clrf	14	;volatile
 23973                           
 23974                           ;pin_manager.c: 64: TRISA = 0x33;
 23975  266E  3033               	movlw	51
 23976  266F  0021               	movlb	1	; select bank1
 23977  2670  008C               	movwf	12	;volatile
 23978                           
 23979                           ;pin_manager.c: 65: TRISB = 0x60;
 23980  2671  3060               	movlw	96
 23981  2672  008D               	movwf	13	;volatile
 23982                           
 23983                           ;pin_manager.c: 66: TRISC = 0xF8;
 23984  2673  30F8               	movlw	248
 23985  2674  008E               	movwf	14	;volatile
 23986                           
 23987                           ;pin_manager.c: 71: ANSELC = 0x00;
 23988  2675  0023               	movlb	3	; select bank3
 23989  2676  018E               	clrf	14	;volatile
 23990                           
 23991                           ;pin_manager.c: 72: ANSELB = 0x00;
 23992  2677  018D               	clrf	13	;volatile
 23993                           
 23994                           ;pin_manager.c: 73: ANSELA = 0x00;
 23995  2678  018C               	clrf	12	;volatile
 23996                           
 23997                           ;pin_manager.c: 78: WPUB = 0x00;
 23998  2679  0024               	movlb	4	; select bank4
 23999  267A  018D               	clrf	13	;volatile
 24000                           
 24001                           ;pin_manager.c: 79: WPUA = 0x00;
 24002  267B  018C               	clrf	12	;volatile
 24003                           
 24004                           ;pin_manager.c: 80: WPUC = 0xC8;
 24005  267C  30C8               	movlw	200
 24006  267D  008E               	movwf	14	;volatile
 24007                           
 24008                           ;pin_manager.c: 85: ODCONA = 0x00;
 24009  267E  0025               	movlb	5	; select bank5
 24010  267F  018C               	clrf	12	;volatile
 24011                           
 24012                           ;pin_manager.c: 86: ODCONB = 0x00;
 24013  2680  018D               	clrf	13	;volatile
 24014                           
 24015                           ;pin_manager.c: 87: ODCONC = 0x00;
 24016  2681  018E               	clrf	14	;volatile
 24017                           
 24018                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 24019  2682  003C               	movlb	28	; select bank28
 24020  2683  0821               	movf	33,w	;volatile
 24021  2684  39E0               	andlw	-32
 24022  2685  380D               	iorlw	13
 24023  2686  00A1               	movwf	33	;volatile
 24024                           
 24025                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 24026  2687  0820               	movf	32,w	;volatile
 24027  2688  39E0               	andlw	-32
 24028  2689  380E               	iorlw	14
 24029  268A  00A0               	movwf	32	;volatile
 24030                           
 24031                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x17;
 24032  268B  0824               	movf	36,w	;volatile
 24033  268C  39E0               	andlw	-32
 24034  268D  3817               	iorlw	23
 24035  268E  00A4               	movwf	36	;volatile
 24036                           
 24037                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x14;
 24038  268F  003D               	movlb	29	; select bank29
 24039  2690  081F               	movf	31,w	;volatile
 24040  2691  39E0               	andlw	-32
 24041  2692  3814               	iorlw	20
 24042  2693  009F               	movwf	31	;volatile
 24043                           
 24044                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 24045  2694  081E               	movf	30,w	;volatile
 24046  2695  39E0               	andlw	-32
 24047  2696  3818               	iorlw	24
 24048  2697  009E               	movwf	30	;volatile
 24049                           
 24050                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 24051  2698  081D               	movf	29,w	;volatile
 24052  2699  39E0               	andlw	-32
 24053  269A  3819               	iorlw	25
 24054  269B  009D               	movwf	29	;volatile
 24055  269C  0008               	return
 24056  269D                     __end_of_PIN_MANAGER_Initialize:	
 24057                           
 24058                           	psect	text126
 24059  20C2                     __ptext126:	
 24060 ;; *************** function _OSCILLATOR_Initialize *****************
 24061 ;; Defined at:
 24062 ;;		line 89 in file "mcc_generated_files/mcc.c"
 24063 ;; Parameters:    Size  Location     Type
 24064 ;;		None
 24065 ;; Auto vars:     Size  Location     Type
 24066 ;;		None
 24067 ;; Return value:  Size  Location     Type
 24068 ;;                  1    wreg      void 
 24069 ;; Registers used:
 24070 ;;		wreg, status,2
 24071 ;; Tracked objects:
 24072 ;;		On entry : 0/0
 24073 ;;		On exit  : 0/0
 24074 ;;		Unchanged: 0/0
 24075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24080 ;;Total ram usage:        0 bytes
 24081 ;; Hardware stack levels used:    1
 24082 ;; Hardware stack levels required when called:    6
 24083 ;; This function calls:
 24084 ;;		Nothing
 24085 ;; This function is called by:
 24086 ;;		_SYSTEM_Initialize
 24087 ;; This function uses a non-reentrant model
 24088 ;;
 24089                           
 24090                           
 24091                           ;psect for function _OSCILLATOR_Initialize
 24092  20C2                     _OSCILLATOR_Initialize:	
 24093                           
 24094                           ;mcc.c: 92: OSCCON1 = 0x62;
 24095                           
 24096                           ;incstack = 0
 24097                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 24098  20C2  3062               	movlw	98
 24099  20C3  0032               	movlb	18	; select bank18
 24100  20C4  0099               	movwf	25	;volatile
 24101                           
 24102                           ;mcc.c: 94: OSCCON3 = 0x00;
 24103  20C5  019B               	clrf	27	;volatile
 24104                           
 24105                           ;mcc.c: 96: OSCEN = 0x00;
 24106  20C6  019D               	clrf	29	;volatile
 24107                           
 24108                           ;mcc.c: 98: OSCFRQ = 0x03;
 24109  20C7  3003               	movlw	3
 24110  20C8  009F               	movwf	31	;volatile
 24111                           
 24112                           ;mcc.c: 100: OSCTUNE = 0x20;
 24113  20C9  3020               	movlw	32
 24114  20CA  009E               	movwf	30	;volatile
 24115  20CB  0008               	return
 24116  20CC                     __end_of_OSCILLATOR_Initialize:	
 24117                           
 24118                           	psect	text127
 24119  2245                     __ptext127:	
 24120 ;; *************** function _EUSART_Initialize *****************
 24121 ;; Defined at:
 24122 ;;		line 72 in file "mcc_generated_files/eusart.c"
 24123 ;; Parameters:    Size  Location     Type
 24124 ;;		None
 24125 ;; Auto vars:     Size  Location     Type
 24126 ;;		None
 24127 ;; Return value:  Size  Location     Type
 24128 ;;                  1    wreg      void 
 24129 ;; Registers used:
 24130 ;;		wreg, status,2
 24131 ;; Tracked objects:
 24132 ;;		On entry : 0/0
 24133 ;;		On exit  : 0/0
 24134 ;;		Unchanged: 0/0
 24135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24140 ;;Total ram usage:        1 bytes
 24141 ;; Hardware stack levels used:    1
 24142 ;; Hardware stack levels required when called:    6
 24143 ;; This function calls:
 24144 ;;		Nothing
 24145 ;; This function is called by:
 24146 ;;		_SYSTEM_Initialize
 24147 ;; This function uses a non-reentrant model
 24148 ;;
 24149                           
 24150                           
 24151                           ;psect for function _EUSART_Initialize
 24152  2245                     _EUSART_Initialize:	
 24153                           
 24154                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 24155                           
 24156                           ;incstack = 0
 24157                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 24158  2245  0021               	movlb	1	; select bank1
 24159  2246  1291               	bcf	17,5	;volatile
 24160                           
 24161                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 24162  2247  1211               	bcf	17,4	;volatile
 24163                           
 24164                           ;eusart.c: 80: BAUD1CON = 0x08;
 24165  2248  3008               	movlw	8
 24166  2249  0023               	movlb	3	; select bank3
 24167  224A  009F               	movwf	31	;volatile
 24168                           
 24169                           ;eusart.c: 83: RC1STA = 0x90;
 24170  224B  3090               	movlw	144
 24171  224C  009D               	movwf	29	;volatile
 24172                           
 24173                           ;eusart.c: 86: TX1STA = 0x24;
 24174  224D  3024               	movlw	36
 24175  224E  009E               	movwf	30	;volatile
 24176                           
 24177                           ;eusart.c: 89: SP1BRGL = 0x19;
 24178  224F  3019               	movlw	25
 24179  2250  009B               	movwf	27	;volatile
 24180                           
 24181                           ;eusart.c: 92: SP1BRGH = 0x00;
 24182  2251  019C               	clrf	28	;volatile
 24183                           
 24184                           ;eusart.c: 96: eusartTxHead = 0;
 24185  2252  01FD               	clrf	_eusartTxHead	;volatile
 24186                           
 24187                           ;eusart.c: 97: eusartTxTail = 0;
 24188  2253  0020               	movlb	0	; select bank0
 24189  2254  01D9               	clrf	_eusartTxTail	;volatile
 24190                           
 24191                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 24192  2255  3008               	movlw	8
 24193  2256  00B1               	movwf	??_EUSART_Initialize
 24194  2257  0831               	movf	??_EUSART_Initialize,w
 24195  2258  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 24196                           
 24197                           ;eusart.c: 100: eusartRxHead = 0;
 24198  2259  01D8               	clrf	_eusartRxHead	;volatile
 24199                           
 24200                           ;eusart.c: 101: eusartRxTail = 0;
 24201  225A  01D7               	clrf	_eusartRxTail	;volatile
 24202                           
 24203                           ;eusart.c: 102: eusartRxCount = 0;
 24204  225B  01D6               	clrf	_eusartRxCount	;volatile
 24205                           
 24206                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 24207  225C  0021               	movlb	1	; select bank1
 24208  225D  1691               	bsf	17,5	;volatile
 24209  225E  0008               	return
 24210  225F                     __end_of_EUSART_Initialize:	
 24211                           
 24212                           	psect	text128
 24213  2382                     __ptext128:	
 24214 ;; *************** function _EUSART_Read *****************
 24215 ;; Defined at:
 24216 ;;		line 108 in file "mcc_generated_files/eusart.c"
 24217 ;; Parameters:    Size  Location     Type
 24218 ;;		None
 24219 ;; Auto vars:     Size  Location     Type
 24220 ;;  readValue       1   18[BANK0 ] unsigned char 
 24221 ;; Return value:  Size  Location     Type
 24222 ;;                  1    wreg      unsigned char 
 24223 ;; Registers used:
 24224 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24225 ;; Tracked objects:
 24226 ;;		On entry : 0/0
 24227 ;;		On exit  : 0/0
 24228 ;;		Unchanged: 0/0
 24229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24232 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24234 ;;Total ram usage:        2 bytes
 24235 ;; Hardware stack levels used:    1
 24236 ;; Hardware stack levels required when called:    6
 24237 ;; This function calls:
 24238 ;;		Nothing
 24239 ;; This function is called by:
 24240 ;;		_main
 24241 ;;		_getch
 24242 ;; This function uses a non-reentrant model
 24243 ;;
 24244                           
 24245                           
 24246                           ;psect for function _EUSART_Read
 24247  2382                     _EUSART_Read:	
 24248                           
 24249                           ;eusart.c: 110: uint8_t readValue = 0;
 24250                           
 24251                           ;incstack = 0
 24252                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 24253  2382  0020               	movlb	0	; select bank0
 24254  2383  01B2               	clrf	EUSART_Read@readValue
 24255  2384                     l6822:	
 24256                           ;eusart.c: 113: {
 24257                           
 24258                           ;eusart.c: 112: while(0 == eusartRxCount)
 24259                           
 24260  2384  0856               	movf	_eusartRxCount,w	;volatile
 24261  2385  1903               	btfsc	3,2
 24262  2386  2B84               	goto	l6822
 24263                           
 24264                           ;eusart.c: 114: }
 24265                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 24266  2387  0857               	movf	_eusartRxTail,w
 24267  2388  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 24268  2389  0086               	movwf	6
 24269  238A  3001               	movlw	1	; select bank3/4
 24270  238B  0087               	movwf	7
 24271  238C  0801               	movf	1,w
 24272  238D  00B1               	movwf	??_EUSART_Read
 24273  238E  0831               	movf	??_EUSART_Read,w
 24274  238F  00B2               	movwf	EUSART_Read@readValue
 24275  2390  3001               	movlw	1
 24276  2391  00B1               	movwf	??_EUSART_Read
 24277  2392  0831               	movf	??_EUSART_Read,w
 24278  2393  07D7               	addwf	_eusartRxTail,f	;volatile
 24279                           
 24280                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 24281  2394  3008               	movlw	8
 24282  2395  0257               	subwf	_eusartRxTail,w	;volatile
 24283  2396  1803               	btfsc	3,0
 24284                           
 24285                           ;eusart.c: 118: {
 24286                           ;eusart.c: 119: eusartRxTail = 0;
 24287  2397  01D7               	clrf	_eusartRxTail	;volatile
 24288                           
 24289                           ;eusart.c: 120: }
 24290                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 24291  2398  0021               	movlb	1	; select bank1
 24292  2399  1291               	bcf	17,5	;volatile
 24293                           
 24294                           ;eusart.c: 122: eusartRxCount--;
 24295  239A  3001               	movlw	1
 24296  239B  0020               	movlb	0	; select bank0
 24297  239C  02D6               	subwf	_eusartRxCount,f	;volatile
 24298                           
 24299                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 24300  239D  0021               	movlb	1	; select bank1
 24301  239E  1691               	bsf	17,5	;volatile
 24302                           
 24303                           ;eusart.c: 125: return readValue;
 24304  239F  0020               	movlb	0	; select bank0
 24305  23A0  0832               	movf	EUSART_Read@readValue,w
 24306  23A1  0008               	return
 24307  23A2                     __end_of_EUSART_Read:	
 24308                           
 24309                           	psect	intentry
 24310  0004                     __pintentry:	
 24311 ;; *************** function _INTERRUPT_InterruptManager *****************
 24312 ;; Defined at:
 24313 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 24314 ;; Parameters:    Size  Location     Type
 24315 ;;		None
 24316 ;; Auto vars:     Size  Location     Type
 24317 ;;		None
 24318 ;; Return value:  Size  Location     Type
 24319 ;;                  1    wreg      void 
 24320 ;; Registers used:
 24321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24322 ;; Tracked objects:
 24323 ;;		On entry : 0/0
 24324 ;;		On exit  : 0/0
 24325 ;;		Unchanged: 0/0
 24326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24331 ;;Total ram usage:        1 bytes
 24332 ;; Hardware stack levels used:    1
 24333 ;; Hardware stack levels required when called:    5
 24334 ;; This function calls:
 24335 ;;		Absolute function
 24336 ;;		_EUSART_Receive_ISR
 24337 ;;		_EUSART_Transmit_ISR
 24338 ;;		_TMR0_ISR
 24339 ;;		_TMR2_ISR
 24340 ;;		_i2c_busCollisionISR
 24341 ;;		i1_i2c_ISR
 24342 ;; This function is called by:
 24343 ;;		Interrupt level 1
 24344 ;; This function uses a non-reentrant model
 24345 ;;
 24346                           
 24347  0004                     _INTERRUPT_InterruptManager:	
 24348                           
 24349                           ;incstack = 0
 24350  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 24351                           
 24352                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24353  0005  3180               	pagesel	$
 24354  0006  0020               	movlb	0	; select bank0
 24355  0007  087F               	movf	127,w
 24356  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 24357                           
 24358                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 24359  0009  0021               	movlb	1	; select bank1
 24360  000A  1E90               	btfss	16,5	;volatile
 24361  000B  2813               	goto	i1l362
 24362  000C  0020               	movlb	0	; select bank0
 24363  000D  1E90               	btfss	16,5	;volatile
 24364  000E  2813               	goto	i1l362
 24365                           
 24366                           ;interrupt_manager.c: 55: {
 24367                           ;interrupt_manager.c: 56: TMR0_ISR();
 24368  000F  31A1  2144  3180   	fcall	_TMR0_ISR
 24369                           
 24370                           ;interrupt_manager.c: 57: }
 24371  0012  284B               	goto	i1l376
 24372  0013                     i1l362:	
 24373                           
 24374                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 24375  0013  1F0B               	btfss	11,6	;volatile
 24376  0014  284B               	goto	i1l376
 24377                           
 24378                           ;interrupt_manager.c: 59: {
 24379                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 24380  0015  0021               	movlb	1	; select bank1
 24381  0016  1D11               	btfss	17,2	;volatile
 24382  0017  2822               	goto	i1l365
 24383  0018  0020               	movlb	0	; select bank0
 24384  0019  1D11               	btfss	17,2	;volatile
 24385  001A  2822               	goto	i1l365
 24386                           
 24387                           ;interrupt_manager.c: 61: {
 24388                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 24389  001B  0022               	movlb	2	; select bank2
 24390  001C  0867               	movf	(_i2c1_driver_busCollisionISR+1)^(0+256),w
 24391  001D  008A               	movwf	10
 24392  001E  0866               	movf	_i2c1_driver_busCollisionISR^(0+256),w
 24393  001F  000A               	callw
 24394  0020  3180               	pagesel	$
 24395                           
 24396                           ;interrupt_manager.c: 63: }
 24397  0021  284B               	goto	i1l376
 24398  0022                     i1l365:	
 24399                           
 24400                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 24401  0022  0021               	movlb	1	; select bank1
 24402  0023  1D91               	btfss	17,3	;volatile
 24403  0024  282F               	goto	i1l367
 24404  0025  0020               	movlb	0	; select bank0
 24405  0026  1D91               	btfss	17,3	;volatile
 24406  0027  282F               	goto	i1l367
 24407                           
 24408                           ;interrupt_manager.c: 65: {
 24409                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 24410  0028  0022               	movlb	2	; select bank2
 24411  0029  0865               	movf	(_i2c1_driver_i2cISR+1)^(0+256),w
 24412  002A  008A               	movwf	10
 24413  002B  0864               	movf	_i2c1_driver_i2cISR^(0+256),w
 24414  002C  000A               	callw
 24415  002D  3180               	pagesel	$
 24416                           
 24417                           ;interrupt_manager.c: 67: }
 24418  002E  284B               	goto	i1l376
 24419  002F                     i1l367:	
 24420                           
 24421                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 24422  002F  0021               	movlb	1	; select bank1
 24423  0030  1C91               	btfss	17,1	;volatile
 24424  0031  2839               	goto	i1l369
 24425  0032  0020               	movlb	0	; select bank0
 24426  0033  1C91               	btfss	17,1	;volatile
 24427  0034  2839               	goto	i1l369
 24428                           
 24429                           ;interrupt_manager.c: 69: {
 24430                           ;interrupt_manager.c: 70: TMR2_ISR();
 24431  0035  31A1  2151  3180   	fcall	_TMR2_ISR
 24432                           
 24433                           ;interrupt_manager.c: 71: }
 24434  0038  284B               	goto	i1l376
 24435  0039                     i1l369:	
 24436                           
 24437                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 24438  0039  0021               	movlb	1	; select bank1
 24439  003A  1E91               	btfss	17,5	;volatile
 24440  003B  2843               	goto	i1l371
 24441  003C  0020               	movlb	0	; select bank0
 24442  003D  1E91               	btfss	17,5	;volatile
 24443  003E  2843               	goto	i1l371
 24444                           
 24445                           ;interrupt_manager.c: 73: {
 24446                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 24447  003F  31A2  2294  3180   	fcall	_EUSART_Receive_ISR
 24448                           
 24449                           ;interrupt_manager.c: 75: }
 24450  0042  284B               	goto	i1l376
 24451  0043                     i1l371:	
 24452                           
 24453                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 24454  0043  0021               	movlb	1	; select bank1
 24455  0044  1E11               	btfss	17,4	;volatile
 24456  0045  284B               	goto	i1l376
 24457  0046  0020               	movlb	0	; select bank0
 24458  0047  1E11               	btfss	17,4	;volatile
 24459  0048  284B               	goto	i1l376
 24460                           
 24461                           ;interrupt_manager.c: 77: {
 24462                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 24463  0049  31A2  22E9         	fcall	_EUSART_Transmit_ISR
 24464  004B                     i1l376:	
 24465                           ;interrupt_manager.c: 85: else
 24466                           ;interrupt_manager.c: 86: {
 24467                           
 24468                           ;interrupt_manager.c: 83: }
 24469                           ;interrupt_manager.c: 84: }
 24470                           
 24471                           ;interrupt_manager.c: 80: else
 24472                           ;interrupt_manager.c: 81: {
 24473                           
 24474                           ;interrupt_manager.c: 79: }
 24475                           
 24476  004B  087C               	movf	??_INTERRUPT_InterruptManager,w
 24477  004C  0020               	movlb	0	; select bank0
 24478  004D  00FF               	movwf	127
 24479  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 24480  004F  0009               	retfie
 24481  0050                     __end_of_INTERRUPT_InterruptManager:	
 24482                           
 24483                           	psect	text130
 24484  2362                     __ptext130:	
 24485 ;; *************** function i1_i2c_ISR *****************
 24486 ;; Defined at:
 24487 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 24488 ;; Parameters:    Size  Location     Type
 24489 ;;		None
 24490 ;; Auto vars:     Size  Location     Type
 24491 ;;		None
 24492 ;; Return value:  Size  Location     Type
 24493 ;;                  1    wreg      void 
 24494 ;; Registers used:
 24495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24496 ;; Tracked objects:
 24497 ;;		On entry : 0/0
 24498 ;;		On exit  : 0/0
 24499 ;;		Unchanged: 0/0
 24500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24505 ;;Total ram usage:        1 bytes
 24506 ;; Hardware stack levels used:    1
 24507 ;; Hardware stack levels required when called:    3
 24508 ;; This function calls:
 24509 ;;		i1_do_I2C_DO_ACK
 24510 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24511 ;;		i1_do_I2C_DO_NACK_RESTART
 24512 ;;		i1_do_I2C_DO_NACK_STOP
 24513 ;;		i1_do_I2C_IDLE
 24514 ;;		i1_do_I2C_RCEN
 24515 ;;		i1_do_I2C_RESET
 24516 ;;		i1_do_I2C_RX
 24517 ;;		i1_do_I2C_SEND_ADR_READ
 24518 ;;		i1_do_I2C_SEND_ADR_WRITE
 24519 ;;		i1_do_I2C_SEND_RESTART
 24520 ;;		i1_do_I2C_SEND_RESTART_READ
 24521 ;;		i1_do_I2C_SEND_RESTART_WRITE
 24522 ;;		i1_do_I2C_SEND_STOP
 24523 ;;		i1_do_I2C_TX
 24524 ;;		i1_do_I2C_TX_EMPTY
 24525 ;;		i1_i2c1_driver_isNACK
 24526 ;;		i1_mssp1_clearIRQ
 24527 ;; This function is called by:
 24528 ;; This function uses a non-reentrant model
 24529 ;;
 24530                           
 24531                           
 24532                           ;psect for function i1_i2c_ISR
 24533  2362                     i1_i2c_ISR:	
 24534  2362                     i1l9318:	
 24535                           ;incstack = 0
 24536                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24537                           
 24538                           
 24539                           ;i2c_master.c: 421: mssp1_clearIRQ();
 24540  2362  31AF  2758  31A3   	fcall	i1_mssp1_clearIRQ
 24541                           
 24542                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 24543  2365  0022               	movlb	2	; select bank2
 24544  2366  1DA0               	btfss	_i2c_status^(0+256),3
 24545  2367  2B72               	goto	i1l9326
 24546  2368  31A1  2120  31A3   	fcall	i1_i2c1_driver_isNACK
 24547  236B  1C03               	btfss	3,0
 24548  236C  2B72               	goto	i1l9326
 24549                           
 24550                           ;i2c_master.c: 428: {
 24551                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 24552  236D  300F               	movlw	15
 24553  236E  00F5               	movwf	??i1_i2c_ISR
 24554  236F  0875               	movf	??i1_i2c_ISR,w
 24555  2370  0022               	movlb	2	; select bank2
 24556  2371  00AA               	movwf	(_i2c_status^(0+256)+10)
 24557  2372                     i1l9326:	
 24558                           
 24559                           ;i2c_master.c: 430: }
 24560                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 24561  2372  0022               	movlb	2	; select bank2
 24562  2373  352A               	lslf	(_i2c_status^(0+256)+10),w
 24563  2374  3E48               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 24564  2375  0086               	movwf	6
 24565  2376  3002               	movlw	2	; select bank4/5
 24566  2377  0087               	movwf	7
 24567  2378  3F41               	moviw [1]fsr1
 24568  2379  008A               	movwf	10
 24569  237A  3F40               	moviw [0]fsr1
 24570  237B  000A               	callw
 24571  237C  31A3               	pagesel	$
 24572  237D  00F5               	movwf	??i1_i2c_ISR
 24573  237E  0875               	movf	??i1_i2c_ISR,w
 24574  237F  0022               	movlb	2	; select bank2
 24575  2380  00AA               	movwf	(_i2c_status^(0+256)+10)
 24576  2381  0008               	return
 24577  2382                     __end_ofi1_i2c_ISR:	
 24578                           
 24579                           	psect	text131
 24580  2F58                     __ptext131:	
 24581 ;; *************** function i1_mssp1_clearIRQ *****************
 24582 ;; Defined at:
 24583 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 24584 ;; Parameters:    Size  Location     Type
 24585 ;;		None
 24586 ;; Auto vars:     Size  Location     Type
 24587 ;;		None
 24588 ;; Return value:  Size  Location     Type
 24589 ;;                  1    wreg      void 
 24590 ;; Registers used:
 24591 ;;		None
 24592 ;; Tracked objects:
 24593 ;;		On entry : 0/0
 24594 ;;		On exit  : 0/0
 24595 ;;		Unchanged: 0/0
 24596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24601 ;;Total ram usage:        0 bytes
 24602 ;; Hardware stack levels used:    1
 24603 ;; This function calls:
 24604 ;;		Nothing
 24605 ;; This function is called by:
 24606 ;;		i1_i2c_ISR
 24607 ;; This function uses a non-reentrant model
 24608 ;;
 24609                           
 24610                           
 24611                           ;psect for function i1_mssp1_clearIRQ
 24612  2F58                     i1_mssp1_clearIRQ:	
 24613                           
 24614                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 24615                           
 24616                           ;incstack = 0
 24617                           ; Regs used in i1_mssp1_clearIRQ: []
 24618  2F58  0020               	movlb	0	; select bank0
 24619  2F59  1191               	bcf	17,3	;volatile
 24620  2F5A  0008               	return
 24621  2F5B                     __end_ofi1_mssp1_clearIRQ:	
 24622                           
 24623                           	psect	text132
 24624  277D                     __ptext132:	
 24625 ;; *************** function i1_do_I2C_RX *****************
 24626 ;; Defined at:
 24627 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 24628 ;; Parameters:    Size  Location     Type
 24629 ;;		None
 24630 ;; Auto vars:     Size  Location     Type
 24631 ;;		None
 24632 ;; Return value:  Size  Location     Type
 24633 ;;                  1    wreg      enum E8364
 24634 ;; Registers used:
 24635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24636 ;; Tracked objects:
 24637 ;;		On entry : 0/0
 24638 ;;		On exit  : 0/0
 24639 ;;		Unchanged: 0/0
 24640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24645 ;;Total ram usage:        1 bytes
 24646 ;; Hardware stack levels used:    1
 24647 ;; Hardware stack levels required when called:    2
 24648 ;; This function calls:
 24649 ;;		i1_do_I2C_DO_NACK_RESTART
 24650 ;;		i1_do_I2C_DO_NACK_STOP
 24651 ;;		i1_i2c1_driver_getRXData
 24652 ;;		i1_i2c1_driver_sendACK
 24653 ;;		i1_returnReset
 24654 ;;		i1_returnStop
 24655 ;; This function is called by:
 24656 ;; This function uses a non-reentrant model
 24657 ;;
 24658                           
 24659                           
 24660                           ;psect for function i1_do_I2C_RX
 24661  277D                     i1_do_I2C_RX:	
 24662  277D                     i1l8950:	
 24663                           ;incstack = 0
 24664                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24665                           
 24666                           
 24667                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 24668  277D  31AF  2752  31A7   	fcall	i1_i2c1_driver_getRXData
 24669  2780  00F0               	movwf	??i1_do_I2C_RX
 24670  2781  0022               	movlb	2	; select bank2
 24671  2782  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 24672  2783  0086               	movwf	6
 24673  2784  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 24674  2785  0087               	movwf	7
 24675  2786  0870               	movf	??i1_do_I2C_RX,w
 24676  2787  0081               	movwf	1
 24677  2788  3001               	movlw	1
 24678  2789  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 24679  278A  3000               	movlw	0
 24680  278B  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 24681                           
 24682                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 24683  278C  3001               	movlw	1
 24684  278D  02A4               	subwf	(_i2c_status^(0+256)+4),f
 24685  278E  3000               	movlw	0
 24686  278F  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 24687  2790  0824               	movf	(_i2c_status^(0+256)+4),w
 24688  2791  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 24689  2792  1903               	btfsc	3,2
 24690  2793  2F98               	goto	i1l772
 24691                           
 24692                           ;i2c_master.c: 361: {
 24693                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 24694  2794  31AF  2776         	fcall	i1_i2c1_driver_sendACK
 24695                           
 24696                           ;i2c_master.c: 363: return I2C_RCEN;
 24697  2796  3005               	movlw	5
 24698                           
 24699                           ;i2c_master.c: 364: }
 24700  2797  0008               	return
 24701  2798                     i1l772:	
 24702                           
 24703                           ;i2c_master.c: 365: else
 24704                           ;i2c_master.c: 366: {
 24705                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 24706  2798  1520               	bsf	_i2c_status^(0+256),2
 24707                           
 24708                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 24709  2799  2FA0               	goto	i1l8974
 24710  279A                     i1l8964:	
 24711                           ;i2c_master.c: 369: {
 24712                           ;i2c_master.c: 370: case i2c_restart_write:
 24713                           
 24714                           
 24715                           ;i2c_master.c: 371: case i2c_restart_read:
 24716                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 24717  279A  31AF  2796         	fcall	i1_do_I2C_DO_NACK_RESTART
 24718  279C  0008               	return
 24719  279D                     i1l8968:	
 24720                           ;i2c_master.c: 374: case i2c_continue:
 24721                           
 24722                           ;i2c_master.c: 373: default:
 24723                           
 24724                           
 24725                           ;i2c_master.c: 375: case i2c_stop:
 24726                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 24727  279D  31AF  2792         	fcall	i1_do_I2C_DO_NACK_STOP
 24728                           
 24729                           ;i2c_master.c: 377: }
 24730  279F  0008               	return
 24731  27A0                     i1l8974:	
 24732  27A0  0022               	movlb	2	; select bank2
 24733  27A1  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 24734  27A2  00F0               	movwf	??i1_do_I2C_RX
 24735  27A3  0870               	movf	??i1_do_I2C_RX,w
 24736  27A4  00F0               	movwf	i1returnReset@p
 24737  27A5  300C               	movlw	12
 24738  27A6  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24739  27A7  0086               	movwf	6
 24740  27A8  3001               	movlw	1	; select bank2/3
 24741  27A9  0087               	movwf	7
 24742  27AA  3F41               	moviw [1]fsr1
 24743  27AB  008A               	movwf	10
 24744  27AC  3F40               	moviw [0]fsr1
 24745  27AD  000A               	callw
 24746  27AE  31A7               	pagesel	$
 24747                           
 24748                           ; Switch size 1, requested type "space"
 24749                           ; Number of cases is 4, Range of values is 1 to 4
 24750                           ; switch strategies available:
 24751                           ; Name         Instructions Cycles
 24752                           ; simple_byte           13     7 (average)
 24753                           ; direct_byte           17     9 (fixed)
 24754                           ; jumptable            263     9 (fixed)
 24755                           ;	Chosen strategy is simple_byte
 24756  27AF  3A01               	xorlw	1	; case 1
 24757  27B0  1903               	skipnz
 24758  27B1  2F9D               	goto	i1l8968
 24759  27B2  3A03               	xorlw	3	; case 2
 24760  27B3  1903               	skipnz
 24761  27B4  2F9A               	goto	i1l8964
 24762  27B5  3A01               	xorlw	1	; case 3
 24763  27B6  1903               	skipnz
 24764  27B7  2F9A               	goto	i1l8964
 24765  27B8  3A07               	xorlw	7	; case 4
 24766  27B9  1903               	skipnz
 24767  27BA  2F9D               	goto	i1l8968
 24768  27BB  2F9D               	goto	i1l8968
 24769  27BC  0008               	return
 24770  27BD                     __end_ofi1_do_I2C_RX:	
 24771                           
 24772                           	psect	text133
 24773  1B7D                     __ptext133:	
 24774 ;; *************** function i1_do_I2C_TX *****************
 24775 ;; Defined at:
 24776 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 24777 ;; Parameters:    Size  Location     Type
 24778 ;;		None
 24779 ;; Auto vars:     Size  Location     Type
 24780 ;;		None
 24781 ;; Return value:  Size  Location     Type
 24782 ;;                  1    wreg      enum E8364
 24783 ;; Registers used:
 24784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24785 ;; Tracked objects:
 24786 ;;		On entry : 0/0
 24787 ;;		On exit  : 0/0
 24788 ;;		Unchanged: 0/0
 24789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24794 ;;Total ram usage:        4 bytes
 24795 ;; Hardware stack levels used:    1
 24796 ;; Hardware stack levels required when called:    2
 24797 ;; This function calls:
 24798 ;;		i1_do_I2C_SEND_RESTART_READ
 24799 ;;		i1_do_I2C_SEND_RESTART_WRITE
 24800 ;;		i1_do_I2C_SEND_STOP
 24801 ;;		i1_i2c1_driver_TXData
 24802 ;;		i1_i2c1_driver_isNACK
 24803 ;;		i1_returnReset
 24804 ;;		i1_returnStop
 24805 ;; This function is called by:
 24806 ;; This function uses a non-reentrant model
 24807 ;;
 24808                           
 24809                           
 24810                           ;psect for function i1_do_I2C_TX
 24811  1B7D                     i1_do_I2C_TX:	
 24812  1B7D                     i1l8920:	
 24813                           ;incstack = 0
 24814                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24815                           
 24816                           
 24817                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 24818  1B7D  31A1  2120  319B   	fcall	i1_i2c1_driver_isNACK
 24819  1B80  1803               	btfsc	3,0
 24820  1B81  2B8C               	goto	i1l8938
 24821  1B82  2BA9               	goto	i1l756
 24822  1B83                     i1l8924:	
 24823                           ;i2c_master.c: 338: {
 24824                           ;i2c_master.c: 339: case i2c_restart_read:
 24825                           
 24826                           ;i2c_master.c: 336: {
 24827                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 24828                           
 24829                           
 24830                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 24831  1B83  31AF  277E         	fcall	i1_do_I2C_SEND_RESTART_READ
 24832  1B85  0008               	return
 24833  1B86                     i1l8928:	
 24834                           ;i2c_master.c: 341: case i2c_restart_write:
 24835                           
 24836                           
 24837                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 24838  1B86  31AF  2782         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 24839  1B88  0008               	return
 24840  1B89                     i1l8932:	
 24841                           ;i2c_master.c: 344: case i2c_continue:
 24842                           
 24843                           ;i2c_master.c: 343: default:
 24844                           
 24845                           
 24846                           ;i2c_master.c: 345: case i2c_stop:
 24847                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 24848  1B89  31AF  278A         	fcall	i1_do_I2C_SEND_STOP
 24849                           
 24850                           ;i2c_master.c: 347: }
 24851  1B8B  0008               	return
 24852  1B8C                     i1l8938:	
 24853  1B8C  0022               	movlb	2	; select bank2
 24854  1B8D  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 24855  1B8E  00F1               	movwf	??i1_do_I2C_TX
 24856  1B8F  0871               	movf	??i1_do_I2C_TX,w
 24857  1B90  00F0               	movwf	i1returnReset@p
 24858  1B91  3012               	movlw	18
 24859  1B92  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24860  1B93  0086               	movwf	6
 24861  1B94  3001               	movlw	1	; select bank2/3
 24862  1B95  0087               	movwf	7
 24863  1B96  3F41               	moviw [1]fsr1
 24864  1B97  008A               	movwf	10
 24865  1B98  3F40               	moviw [0]fsr1
 24866  1B99  000A               	callw
 24867  1B9A  319B               	pagesel	$
 24868                           
 24869                           ; Switch size 1, requested type "space"
 24870                           ; Number of cases is 4, Range of values is 1 to 4
 24871                           ; switch strategies available:
 24872                           ; Name         Instructions Cycles
 24873                           ; simple_byte           13     7 (average)
 24874                           ; direct_byte           17     9 (fixed)
 24875                           ; jumptable            263     9 (fixed)
 24876                           ;	Chosen strategy is simple_byte
 24877  1B9B  3A01               	xorlw	1	; case 1
 24878  1B9C  1903               	skipnz
 24879  1B9D  2B89               	goto	i1l8932
 24880  1B9E  3A03               	xorlw	3	; case 2
 24881  1B9F  1903               	skipnz
 24882  1BA0  2B83               	goto	i1l8924
 24883  1BA1  3A01               	xorlw	1	; case 3
 24884  1BA2  1903               	skipnz
 24885  1BA3  2B86               	goto	i1l8928
 24886  1BA4  3A07               	xorlw	7	; case 4
 24887  1BA5  1903               	skipnz
 24888  1BA6  2B89               	goto	i1l8932
 24889  1BA7  2B89               	goto	i1l8932
 24890                           
 24891                           ;i2c_master.c: 348: }
 24892  1BA8  0008               	return
 24893  1BA9                     i1l756:	
 24894                           
 24895                           ;i2c_master.c: 349: else
 24896                           ;i2c_master.c: 350: {
 24897                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 24898  1BA9  0022               	movlb	2	; select bank2
 24899  1BAA  11A0               	bcf	_i2c_status^(0+256),3
 24900                           
 24901                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 24902  1BAB  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 24903  1BAC  00F2               	movwf	??i1_do_I2C_TX+1
 24904  1BAD  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 24905  1BAE  00F1               	movwf	??i1_do_I2C_TX
 24906  1BAF  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 24907  1BB0  1903               	skipnz
 24908  1BB1  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 24909  1BB2  0871               	movf	??i1_do_I2C_TX,w
 24910  1BB3  0086               	movwf	6
 24911  1BB4  0872               	movf	??i1_do_I2C_TX+1,w
 24912  1BB5  0087               	movwf	7
 24913  1BB6  0801               	movf	1,w
 24914  1BB7  31AF  27B4  319B   	fcall	i1_i2c1_driver_TXData
 24915                           
 24916                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 24917  1BBA  3001               	movlw	1
 24918  1BBB  0022               	movlb	2	; select bank2
 24919  1BBC  02A4               	subwf	(_i2c_status^(0+256)+4),f
 24920  1BBD  3000               	movlw	0
 24921  1BBE  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 24922  1BBF  0824               	movf	(_i2c_status^(0+256)+4),w
 24923  1BC0  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 24924  1BC1  1D03               	btfss	3,2
 24925  1BC2  2BC5               	goto	i1l8946
 24926  1BC3  3006               	movlw	6
 24927  1BC4  2BC6               	goto	L44
 24928  1BC5                     i1l8946:	
 24929  1BC5  3003               	movlw	3
 24930  1BC6                     L44:	
 24931  1BC6  00F3               	movwf	i1_do_I2C_TX$1134
 24932  1BC7  3000               	movlw	0
 24933  1BC8  00F4               	movwf	i1_do_I2C_TX$1134+1
 24934  1BC9  0873               	movf	i1_do_I2C_TX$1134,w
 24935  1BCA  0008               	return
 24936  1BCB                     __end_ofi1_do_I2C_TX:	
 24937                           
 24938                           	psect	text134
 24939  2449                     __ptext134:	
 24940 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 24941 ;; Defined at:
 24942 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 24943 ;; Parameters:    Size  Location     Type
 24944 ;;		None
 24945 ;; Auto vars:     Size  Location     Type
 24946 ;;		None
 24947 ;; Return value:  Size  Location     Type
 24948 ;;                  1    wreg      enum E8364
 24949 ;; Registers used:
 24950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24951 ;; Tracked objects:
 24952 ;;		On entry : 0/0
 24953 ;;		On exit  : 0/0
 24954 ;;		Unchanged: 0/0
 24955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24960 ;;Total ram usage:        1 bytes
 24961 ;; Hardware stack levels used:    1
 24962 ;; Hardware stack levels required when called:    2
 24963 ;; This function calls:
 24964 ;;		i1_do_I2C_SEND_RESTART
 24965 ;;		i1_do_I2C_SEND_STOP
 24966 ;;		i1_returnReset
 24967 ;;		i1_returnStop
 24968 ;; This function is called by:
 24969 ;; This function uses a non-reentrant model
 24970 ;;
 24971                           
 24972                           
 24973                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 24974  2449                     i1_do_I2C_DO_ADDRESS_NACK:	
 24975  2449                     i1l8904:	
 24976                           ;incstack = 0
 24977                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24978                           
 24979                           
 24980                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 24981  2449  0022               	movlb	2	; select bank2
 24982  244A  11A0               	bcf	_i2c_status^(0+256),3
 24983                           
 24984                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 24985  244B  3002               	movlw	2
 24986  244C  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 24987  244D  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 24988  244E  00AB               	movwf	(_i2c_status^(0+256)+11)
 24989                           
 24990                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 24991  244F  2C56               	goto	i1l8918
 24992  2450                     i1l8908:	
 24993                           ;i2c_master.c: 324: {
 24994                           ;i2c_master.c: 325: case i2c_restart_read:
 24995                           
 24996                           
 24997                           ;i2c_master.c: 326: case i2c_restart_write:
 24998                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 24999  2450  31AF  2786         	fcall	i1_do_I2C_SEND_RESTART
 25000  2452  0008               	return
 25001  2453                     i1l8912:	
 25002                           ;i2c_master.c: 328: default:
 25003                           
 25004                           
 25005                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 25006  2453  31AF  278A         	fcall	i1_do_I2C_SEND_STOP
 25007                           
 25008                           ;i2c_master.c: 330: }
 25009  2455  0008               	return
 25010  2456                     i1l8918:	
 25011  2456  0022               	movlb	2	; select bank2
 25012  2457  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 25013  2458  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 25014  2459  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 25015  245A  00F0               	movwf	i1returnReset@p
 25016  245B  3010               	movlw	16
 25017  245C  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 25018  245D  0086               	movwf	6
 25019  245E  3001               	movlw	1	; select bank2/3
 25020  245F  0087               	movwf	7
 25021  2460  3F41               	moviw [1]fsr1
 25022  2461  008A               	movwf	10
 25023  2462  3F40               	moviw [0]fsr1
 25024  2463  000A               	callw
 25025  2464  31A4               	pagesel	$
 25026                           
 25027                           ; Switch size 1, requested type "space"
 25028                           ; Number of cases is 2, Range of values is 2 to 3
 25029                           ; switch strategies available:
 25030                           ; Name         Instructions Cycles
 25031                           ; simple_byte            7     4 (average)
 25032                           ; direct_byte           13     9 (fixed)
 25033                           ; jumptable            263     9 (fixed)
 25034                           ;	Chosen strategy is simple_byte
 25035  2465  3A02               	xorlw	2	; case 2
 25036  2466  1903               	skipnz
 25037  2467  2C50               	goto	i1l8908
 25038  2468  3A01               	xorlw	1	; case 3
 25039  2469  1903               	skipnz
 25040  246A  2C50               	goto	i1l8908
 25041  246B  2C53               	goto	i1l8912
 25042  246C  0008               	return
 25043  246D                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 25044                           
 25045                           	psect	text135
 25046  2F96                     __ptext135:	
 25047 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 25048 ;; Defined at:
 25049 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 25050 ;; Parameters:    Size  Location     Type
 25051 ;;		None
 25052 ;; Auto vars:     Size  Location     Type
 25053 ;;		None
 25054 ;; Return value:  Size  Location     Type
 25055 ;;                  1    wreg      enum E8364
 25056 ;; Registers used:
 25057 ;;		wreg, status,2, status,0, pclath, cstack
 25058 ;; Tracked objects:
 25059 ;;		On entry : 0/0
 25060 ;;		On exit  : 0/0
 25061 ;;		Unchanged: 0/0
 25062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25067 ;;Total ram usage:        0 bytes
 25068 ;; Hardware stack levels used:    1
 25069 ;; Hardware stack levels required when called:    1
 25070 ;; This function calls:
 25071 ;;		i1_i2c1_driver_sendNACK
 25072 ;; This function is called by:
 25073 ;;		i1_do_I2C_RX
 25074 ;; This function uses a non-reentrant model
 25075 ;;
 25076                           
 25077                           
 25078                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 25079  2F96                     i1_do_I2C_DO_NACK_RESTART:	
 25080  2F96                     i1l8444:	
 25081                           ;incstack = 0
 25082                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25083                           
 25084                           
 25085                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 25086  2F96  31AF  277A         	fcall	i1_i2c1_driver_sendNACK
 25087                           
 25088                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 25089  2F98  3009               	movlw	9
 25090  2F99  0008               	return
 25091  2F9A                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 25092                           
 25093                           	psect	text136
 25094  2F92                     __ptext136:	
 25095 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 25096 ;; Defined at:
 25097 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 25098 ;; Parameters:    Size  Location     Type
 25099 ;;		None
 25100 ;; Auto vars:     Size  Location     Type
 25101 ;;		None
 25102 ;; Return value:  Size  Location     Type
 25103 ;;                  1    wreg      enum E8364
 25104 ;; Registers used:
 25105 ;;		wreg, status,2, status,0, pclath, cstack
 25106 ;; Tracked objects:
 25107 ;;		On entry : 0/0
 25108 ;;		On exit  : 0/0
 25109 ;;		Unchanged: 0/0
 25110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25115 ;;Total ram usage:        0 bytes
 25116 ;; Hardware stack levels used:    1
 25117 ;; Hardware stack levels required when called:    1
 25118 ;; This function calls:
 25119 ;;		i1_i2c1_driver_sendNACK
 25120 ;; This function is called by:
 25121 ;;		i1_do_I2C_RX
 25122 ;; This function uses a non-reentrant model
 25123 ;;
 25124                           
 25125                           
 25126                           ;psect for function i1_do_I2C_DO_NACK_STOP
 25127  2F92                     i1_do_I2C_DO_NACK_STOP:	
 25128  2F92                     i1l8438:	
 25129                           ;incstack = 0
 25130                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25131                           
 25132                           
 25133                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 25134  2F92  31AF  277A         	fcall	i1_i2c1_driver_sendNACK
 25135                           
 25136                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 25137  2F94  300A               	movlw	10
 25138  2F95  0008               	return
 25139  2F96                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 25140                           
 25141                           	psect	text137
 25142  2F8E                     __ptext137:	
 25143 ;; *************** function i1_do_I2C_DO_ACK *****************
 25144 ;; Defined at:
 25145 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 25146 ;; Parameters:    Size  Location     Type
 25147 ;;		None
 25148 ;; Auto vars:     Size  Location     Type
 25149 ;;		None
 25150 ;; Return value:  Size  Location     Type
 25151 ;;                  1    wreg      enum E8364
 25152 ;; Registers used:
 25153 ;;		wreg, status,2, status,0, pclath, cstack
 25154 ;; Tracked objects:
 25155 ;;		On entry : 0/0
 25156 ;;		On exit  : 0/0
 25157 ;;		Unchanged: 0/0
 25158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25163 ;;Total ram usage:        0 bytes
 25164 ;; Hardware stack levels used:    1
 25165 ;; Hardware stack levels required when called:    1
 25166 ;; This function calls:
 25167 ;;		i1_i2c1_driver_sendACK
 25168 ;; This function is called by:
 25169 ;; This function uses a non-reentrant model
 25170 ;;
 25171                           
 25172                           
 25173                           ;psect for function i1_do_I2C_DO_ACK
 25174  2F8E                     i1_do_I2C_DO_ACK:	
 25175  2F8E                     i1l8898:	
 25176                           ;incstack = 0
 25177                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 25178                           
 25179                           
 25180                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 25181  2F8E  31AF  2776         	fcall	i1_i2c1_driver_sendACK
 25182                           
 25183                           ;i2c_master.c: 302: return I2C_RCEN;
 25184  2F90  3005               	movlw	5
 25185  2F91  0008               	return
 25186  2F92                     __end_ofi1_do_I2C_DO_ACK:	
 25187                           
 25188                           	psect	text138
 25189  2FC8                     __ptext138:	
 25190 ;; *************** function i1_do_I2C_RCEN *****************
 25191 ;; Defined at:
 25192 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 25193 ;; Parameters:    Size  Location     Type
 25194 ;;		None
 25195 ;; Auto vars:     Size  Location     Type
 25196 ;;		None
 25197 ;; Return value:  Size  Location     Type
 25198 ;;                  1    wreg      enum E8364
 25199 ;; Registers used:
 25200 ;;		wreg, status,2, status,0, pclath, cstack
 25201 ;; Tracked objects:
 25202 ;;		On entry : 0/0
 25203 ;;		On exit  : 0/0
 25204 ;;		Unchanged: 0/0
 25205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25210 ;;Total ram usage:        0 bytes
 25211 ;; Hardware stack levels used:    1
 25212 ;; Hardware stack levels required when called:    1
 25213 ;; This function calls:
 25214 ;;		i1_i2c1_driver_startRX
 25215 ;; This function is called by:
 25216 ;; This function uses a non-reentrant model
 25217 ;;
 25218                           
 25219                           
 25220                           ;psect for function i1_do_I2C_RCEN
 25221  2FC8                     i1_do_I2C_RCEN:	
 25222  2FC8                     i1l6662:	
 25223                           ;incstack = 0
 25224                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 25225                           
 25226                           
 25227                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 25228  2FC8  0022               	movlb	2	; select bank2
 25229  2FC9  11A0               	bcf	_i2c_status^(0+256),3
 25230                           
 25231                           ;i2c_master.c: 295: i2c1_driver_startRX();
 25232  2FCA  31AF  274F         	fcall	i1_i2c1_driver_startRX
 25233                           
 25234                           ;i2c_master.c: 296: return I2C_RX;
 25235  2FCC  3004               	movlw	4
 25236  2FCD  0008               	return
 25237  2FCE                     __end_ofi1_do_I2C_RCEN:	
 25238                           
 25239                           	psect	text139
 25240  2FF9                     __ptext139:	
 25241 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 25242 ;; Defined at:
 25243 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 25244 ;; Parameters:    Size  Location     Type
 25245 ;;		None
 25246 ;; Auto vars:     Size  Location     Type
 25247 ;;		None
 25248 ;; Return value:  Size  Location     Type
 25249 ;;                  1    wreg      enum E8364
 25250 ;; Registers used:
 25251 ;;		wreg, status,2, status,0, pclath, cstack
 25252 ;; Tracked objects:
 25253 ;;		On entry : 0/0
 25254 ;;		On exit  : 0/0
 25255 ;;		Unchanged: 0/0
 25256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25261 ;;Total ram usage:        0 bytes
 25262 ;; Hardware stack levels used:    1
 25263 ;; Hardware stack levels required when called:    1
 25264 ;; This function calls:
 25265 ;;		i1_i2c1_driver_TXData
 25266 ;; This function is called by:
 25267 ;; This function uses a non-reentrant model
 25268 ;;
 25269                           
 25270                           
 25271                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 25272  2FF9                     i1_do_I2C_SEND_ADR_WRITE:	
 25273  2FF9                     i1l8890:	
 25274                           ;incstack = 0
 25275                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 25276                           
 25277                           
 25278                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 25279  2FF9  0022               	movlb	2	; select bank2
 25280  2FFA  15A0               	bsf	_i2c_status^(0+256),3
 25281                           
 25282                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 25283  2FFB  3521               	lslf	(_i2c_status^(0+256)+1),w
 25284  2FFC  31AF  27B4         	fcall	i1_i2c1_driver_TXData
 25285                           
 25286                           ;i2c_master.c: 289: return I2C_TX;
 25287  2FFE  3003               	movlw	3
 25288  2FFF  0008               	return
 25289  3000                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 25290                           
 25291                           	psect	text140
 25292  2033                     __ptext140:	
 25293 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 25294 ;; Defined at:
 25295 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 25296 ;; Parameters:    Size  Location     Type
 25297 ;;		None
 25298 ;; Auto vars:     Size  Location     Type
 25299 ;;		None
 25300 ;; Return value:  Size  Location     Type
 25301 ;;                  1    wreg      enum E8364
 25302 ;; Registers used:
 25303 ;;		wreg, status,2, status,0, pclath, cstack
 25304 ;; Tracked objects:
 25305 ;;		On entry : 0/0
 25306 ;;		On exit  : 0/0
 25307 ;;		Unchanged: 0/0
 25308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25313 ;;Total ram usage:        0 bytes
 25314 ;; Hardware stack levels used:    1
 25315 ;; Hardware stack levels required when called:    1
 25316 ;; This function calls:
 25317 ;;		i1_i2c1_driver_TXData
 25318 ;; This function is called by:
 25319 ;; This function uses a non-reentrant model
 25320 ;;
 25321                           
 25322                           
 25323                           ;psect for function i1_do_I2C_SEND_ADR_READ
 25324  2033                     i1_do_I2C_SEND_ADR_READ:	
 25325  2033                     i1l8882:	
 25326                           ;incstack = 0
 25327                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 25328                           
 25329                           
 25330                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 25331  2033  0022               	movlb	2	; select bank2
 25332  2034  15A0               	bsf	_i2c_status^(0+256),3
 25333                           
 25334                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 25335  2035  1403               	setc
 25336  2036  0D21               	rlf	(_i2c_status^(0+256)+1),w
 25337  2037  31AF  27B4         	fcall	i1_i2c1_driver_TXData
 25338                           
 25339                           ;i2c_master.c: 282: return I2C_RCEN;
 25340  2039  3005               	movlw	5
 25341  203A  0008               	return
 25342  203B                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 25343                           
 25344                           	psect	text141
 25345  2F8A                     __ptext141:	
 25346 ;; *************** function i1_do_I2C_SEND_STOP *****************
 25347 ;; Defined at:
 25348 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 25349 ;; Parameters:    Size  Location     Type
 25350 ;;		None
 25351 ;; Auto vars:     Size  Location     Type
 25352 ;;		None
 25353 ;; Return value:  Size  Location     Type
 25354 ;;                  1    wreg      enum E8364
 25355 ;; Registers used:
 25356 ;;		wreg, status,2, status,0, pclath, cstack
 25357 ;; Tracked objects:
 25358 ;;		On entry : 0/0
 25359 ;;		On exit  : 0/0
 25360 ;;		Unchanged: 0/0
 25361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25366 ;;Total ram usage:        0 bytes
 25367 ;; Hardware stack levels used:    1
 25368 ;; Hardware stack levels required when called:    1
 25369 ;; This function calls:
 25370 ;;		i1_i2c1_driver_stop
 25371 ;; This function is called by:
 25372 ;;		i1_do_I2C_DO_ADDRESS_NACK
 25373 ;;		i1_do_I2C_TX
 25374 ;;		i1_do_I2C_TX_EMPTY
 25375 ;; This function uses a non-reentrant model
 25376 ;;
 25377                           
 25378                           
 25379                           ;psect for function i1_do_I2C_SEND_STOP
 25380  2F8A                     i1_do_I2C_SEND_STOP:	
 25381  2F8A                     i1l8432:	
 25382                           ;incstack = 0
 25383                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 25384                           
 25385                           
 25386                           ;i2c_master.c: 274: i2c1_driver_stop();
 25387  2F8A  31AF  274C         	fcall	i1_i2c1_driver_stop
 25388                           
 25389                           ;i2c_master.c: 275: return I2C_IDLE;
 25390  2F8C  3000               	movlw	0
 25391  2F8D  0008               	return
 25392  2F8E                     __end_ofi1_do_I2C_SEND_STOP:	
 25393                           
 25394                           	psect	text142
 25395  2F86                     __ptext142:	
 25396 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 25397 ;; Defined at:
 25398 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 25399 ;; Parameters:    Size  Location     Type
 25400 ;;		None
 25401 ;; Auto vars:     Size  Location     Type
 25402 ;;		None
 25403 ;; Return value:  Size  Location     Type
 25404 ;;                  1    wreg      enum E8364
 25405 ;; Registers used:
 25406 ;;		wreg, status,2, status,0, pclath, cstack
 25407 ;; Tracked objects:
 25408 ;;		On entry : 0/0
 25409 ;;		On exit  : 0/0
 25410 ;;		Unchanged: 0/0
 25411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25416 ;;Total ram usage:        0 bytes
 25417 ;; Hardware stack levels used:    1
 25418 ;; Hardware stack levels required when called:    1
 25419 ;; This function calls:
 25420 ;;		i1_i2c1_driver_restart
 25421 ;; This function is called by:
 25422 ;;		i1_do_I2C_DO_ADDRESS_NACK
 25423 ;;		i1_do_I2C_TX_EMPTY
 25424 ;; This function uses a non-reentrant model
 25425 ;;
 25426                           
 25427                           
 25428                           ;psect for function i1_do_I2C_SEND_RESTART
 25429  2F86                     i1_do_I2C_SEND_RESTART:	
 25430  2F86                     i1l8426:	
 25431                           ;incstack = 0
 25432                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25433                           
 25434                           
 25435                           ;i2c_master.c: 268: i2c1_driver_restart();
 25436  2F86  31AF  2749         	fcall	i1_i2c1_driver_restart
 25437                           
 25438                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 25439  2F88  3001               	movlw	1
 25440  2F89  0008               	return
 25441  2F8A                     __end_ofi1_do_I2C_SEND_RESTART:	
 25442                           
 25443                           	psect	text143
 25444  2F82                     __ptext143:	
 25445 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 25446 ;; Defined at:
 25447 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 25448 ;; Parameters:    Size  Location     Type
 25449 ;;		None
 25450 ;; Auto vars:     Size  Location     Type
 25451 ;;		None
 25452 ;; Return value:  Size  Location     Type
 25453 ;;                  1    wreg      enum E8364
 25454 ;; Registers used:
 25455 ;;		wreg, status,2, status,0, pclath, cstack
 25456 ;; Tracked objects:
 25457 ;;		On entry : 0/0
 25458 ;;		On exit  : 0/0
 25459 ;;		Unchanged: 0/0
 25460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25465 ;;Total ram usage:        0 bytes
 25466 ;; Hardware stack levels used:    1
 25467 ;; Hardware stack levels required when called:    1
 25468 ;; This function calls:
 25469 ;;		i1_i2c1_driver_restart
 25470 ;; This function is called by:
 25471 ;;		i1_do_I2C_TX
 25472 ;; This function uses a non-reentrant model
 25473 ;;
 25474                           
 25475                           
 25476                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 25477  2F82                     i1_do_I2C_SEND_RESTART_WRITE:	
 25478  2F82                     i1l8420:	
 25479                           ;incstack = 0
 25480                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 25481                           
 25482                           
 25483                           ;i2c_master.c: 262: i2c1_driver_restart();
 25484  2F82  31AF  2749         	fcall	i1_i2c1_driver_restart
 25485                           
 25486                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 25487  2F84  3002               	movlw	2
 25488  2F85  0008               	return
 25489  2F86                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 25490                           
 25491                           	psect	text144
 25492  2F7E                     __ptext144:	
 25493 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 25494 ;; Defined at:
 25495 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 25496 ;; Parameters:    Size  Location     Type
 25497 ;;		None
 25498 ;; Auto vars:     Size  Location     Type
 25499 ;;		None
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1    wreg      enum E8364
 25502 ;; Registers used:
 25503 ;;		wreg, status,2, status,0, pclath, cstack
 25504 ;; Tracked objects:
 25505 ;;		On entry : 0/0
 25506 ;;		On exit  : 0/0
 25507 ;;		Unchanged: 0/0
 25508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25513 ;;Total ram usage:        0 bytes
 25514 ;; Hardware stack levels used:    1
 25515 ;; Hardware stack levels required when called:    1
 25516 ;; This function calls:
 25517 ;;		i1_i2c1_driver_restart
 25518 ;; This function is called by:
 25519 ;;		i1_do_I2C_TX
 25520 ;; This function uses a non-reentrant model
 25521 ;;
 25522                           
 25523                           
 25524                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 25525  2F7E                     i1_do_I2C_SEND_RESTART_READ:	
 25526  2F7E                     i1l8414:	
 25527                           ;incstack = 0
 25528                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 25529                           
 25530                           
 25531                           ;i2c_master.c: 256: i2c1_driver_restart();
 25532  2F7E  31AF  2749         	fcall	i1_i2c1_driver_restart
 25533                           
 25534                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 25535  2F80  3001               	movlw	1
 25536  2F81  0008               	return
 25537  2F82                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 25538                           
 25539                           	psect	text145
 25540  2FB9                     __ptext145:	
 25541 ;; *************** function i1_do_I2C_IDLE *****************
 25542 ;; Defined at:
 25543 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 25544 ;; Parameters:    Size  Location     Type
 25545 ;;		None
 25546 ;; Auto vars:     Size  Location     Type
 25547 ;;		None
 25548 ;; Return value:  Size  Location     Type
 25549 ;;                  1    wreg      enum E8364
 25550 ;; Registers used:
 25551 ;;		wreg, status,2
 25552 ;; Tracked objects:
 25553 ;;		On entry : 0/0
 25554 ;;		On exit  : 0/0
 25555 ;;		Unchanged: 0/0
 25556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25561 ;;Total ram usage:        0 bytes
 25562 ;; Hardware stack levels used:    1
 25563 ;; This function calls:
 25564 ;;		Nothing
 25565 ;; This function is called by:
 25566 ;; This function uses a non-reentrant model
 25567 ;;
 25568                           
 25569                           
 25570                           ;psect for function i1_do_I2C_IDLE
 25571  2FB9                     i1_do_I2C_IDLE:	
 25572  2FB9                     i1l6638:	
 25573                           ;incstack = 0
 25574                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 25575                           
 25576                           
 25577                           ;i2c_master.c: 249: i2c_status.busy = 0;
 25578  2FB9  0022               	movlb	2	; select bank2
 25579  2FBA  1020               	bcf	_i2c_status^(0+256),0
 25580                           
 25581                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 25582  2FBB  01AB               	clrf	(_i2c_status^(0+256)+11)
 25583                           
 25584                           ;i2c_master.c: 251: return I2C_RESET;
 25585  2FBC  300E               	movlw	14
 25586  2FBD  0008               	return
 25587  2FBE                     __end_ofi1_do_I2C_IDLE:	
 25588                           
 25589                           	psect	text146
 25590  2FF2                     __ptext146:	
 25591 ;; *************** function i1_do_I2C_RESET *****************
 25592 ;; Defined at:
 25593 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 25594 ;; Parameters:    Size  Location     Type
 25595 ;;		None
 25596 ;; Auto vars:     Size  Location     Type
 25597 ;;		None
 25598 ;; Return value:  Size  Location     Type
 25599 ;;                  1    wreg      enum E8364
 25600 ;; Registers used:
 25601 ;;		wreg, status,2, status,0, pclath, cstack
 25602 ;; Tracked objects:
 25603 ;;		On entry : 0/0
 25604 ;;		On exit  : 0/0
 25605 ;;		Unchanged: 0/0
 25606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25611 ;;Total ram usage:        0 bytes
 25612 ;; Hardware stack levels used:    1
 25613 ;; Hardware stack levels required when called:    1
 25614 ;; This function calls:
 25615 ;;		i1_i2c1_driver_resetBus
 25616 ;; This function is called by:
 25617 ;; This function uses a non-reentrant model
 25618 ;;
 25619                           
 25620                           
 25621                           ;psect for function i1_do_I2C_RESET
 25622  2FF2                     i1_do_I2C_RESET:	
 25623  2FF2                     i1l6628:	
 25624                           ;incstack = 0
 25625                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 25626                           
 25627                           
 25628                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 25629  2FF2  31AF  273C         	fcall	i1_i2c1_driver_resetBus
 25630                           
 25631                           ;i2c_master.c: 242: i2c_status.busy = 0;
 25632  2FF4  0022               	movlb	2	; select bank2
 25633  2FF5  1020               	bcf	_i2c_status^(0+256),0
 25634                           
 25635                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 25636  2FF6  01AB               	clrf	(_i2c_status^(0+256)+11)
 25637                           
 25638                           ;i2c_master.c: 244: return I2C_RESET;
 25639  2FF7  300E               	movlw	14
 25640  2FF8  0008               	return
 25641  2FF9                     __end_ofi1_do_I2C_RESET:	
 25642                           
 25643                           	psect	text147
 25644  2556                     __ptext147:	
 25645 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 25646 ;; Defined at:
 25647 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 25648 ;; Parameters:    Size  Location     Type
 25649 ;;		None
 25650 ;; Auto vars:     Size  Location     Type
 25651 ;;		None
 25652 ;; Return value:  Size  Location     Type
 25653 ;;                  1    wreg      enum E8364
 25654 ;; Registers used:
 25655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25656 ;; Tracked objects:
 25657 ;;		On entry : 0/0
 25658 ;;		On exit  : 0/0
 25659 ;;		Unchanged: 0/0
 25660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25665 ;;Total ram usage:        1 bytes
 25666 ;; Hardware stack levels used:    1
 25667 ;; Hardware stack levels required when called:    2
 25668 ;; This function calls:
 25669 ;;		i1_do_I2C_SEND_RESTART
 25670 ;;		i1_do_I2C_SEND_STOP
 25671 ;;		i1_mssp1_setIRQ
 25672 ;;		i1_returnReset
 25673 ;;		i1_returnStop
 25674 ;; This function is called by:
 25675 ;; This function uses a non-reentrant model
 25676 ;;
 25677                           
 25678                           
 25679                           ;psect for function i1_do_I2C_TX_EMPTY
 25680  2556                     i1_do_I2C_TX_EMPTY:	
 25681  2556                     i1l8976:	
 25682                           ;incstack = 0
 25683                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25684                           
 25685                           
 25686                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 25687  2556  0022               	movlb	2	; select bank2
 25688  2557  1520               	bsf	_i2c_status^(0+256),2
 25689                           
 25690                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 25691  2558  2D63               	goto	i1l8994
 25692  2559                     i1l8978:	
 25693                           ;i2c_master.c: 386: {
 25694                           ;i2c_master.c: 387: case i2c_restart_read:
 25695                           
 25696                           
 25697                           ;i2c_master.c: 388: case i2c_restart_write:
 25698                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 25699  2559  31AF  2786         	fcall	i1_do_I2C_SEND_RESTART
 25700  255B  0008               	return
 25701  255C                     i1l8982:	
 25702                           ;i2c_master.c: 390: case i2c_continue:
 25703                           
 25704                           
 25705                           ;i2c_master.c: 391: mssp1_setIRQ();
 25706  255C  31AF  2755         	fcall	i1_mssp1_setIRQ
 25707                           
 25708                           ;i2c_master.c: 392: return I2C_TX;
 25709  255E  3003               	movlw	3
 25710  255F  0008               	return
 25711  2560                     i1l8988:	
 25712                           ;i2c_master.c: 394: case i2c_stop:
 25713                           
 25714                           ;i2c_master.c: 393: default:
 25715                           
 25716                           
 25717                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 25718  2560  31AF  278A         	fcall	i1_do_I2C_SEND_STOP
 25719                           
 25720                           ;i2c_master.c: 396: }
 25721  2562  0008               	return
 25722  2563                     i1l8994:	
 25723  2563  0022               	movlb	2	; select bank2
 25724  2564  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 25725  2565  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 25726  2566  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 25727  2567  00F0               	movwf	i1returnReset@p
 25728  2568  300C               	movlw	12
 25729  2569  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 25730  256A  0086               	movwf	6
 25731  256B  3001               	movlw	1	; select bank2/3
 25732  256C  0087               	movwf	7
 25733  256D  3F41               	moviw [1]fsr1
 25734  256E  008A               	movwf	10
 25735  256F  3F40               	moviw [0]fsr1
 25736  2570  000A               	callw
 25737  2571  31A5               	pagesel	$
 25738                           
 25739                           ; Switch size 1, requested type "space"
 25740                           ; Number of cases is 4, Range of values is 1 to 4
 25741                           ; switch strategies available:
 25742                           ; Name         Instructions Cycles
 25743                           ; simple_byte           13     7 (average)
 25744                           ; direct_byte           17     9 (fixed)
 25745                           ; jumptable            263     9 (fixed)
 25746                           ;	Chosen strategy is simple_byte
 25747  2572  3A01               	xorlw	1	; case 1
 25748  2573  1903               	skipnz
 25749  2574  2D60               	goto	i1l8988
 25750  2575  3A03               	xorlw	3	; case 2
 25751  2576  1903               	skipnz
 25752  2577  2D59               	goto	i1l8978
 25753  2578  3A01               	xorlw	1	; case 3
 25754  2579  1903               	skipnz
 25755  257A  2D59               	goto	i1l8978
 25756  257B  3A07               	xorlw	7	; case 4
 25757  257C  1903               	skipnz
 25758  257D  2D5C               	goto	i1l8982
 25759  257E  2D60               	goto	i1l8988
 25760  257F  0008               	return
 25761  2580                     __end_ofi1_do_I2C_TX_EMPTY:	
 25762                           
 25763                           	psect	text148
 25764  2F55                     __ptext148:	
 25765 ;; *************** function i1_mssp1_setIRQ *****************
 25766 ;; Defined at:
 25767 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 25768 ;; Parameters:    Size  Location     Type
 25769 ;;		None
 25770 ;; Auto vars:     Size  Location     Type
 25771 ;;		None
 25772 ;; Return value:  Size  Location     Type
 25773 ;;                  1    wreg      void 
 25774 ;; Registers used:
 25775 ;;		None
 25776 ;; Tracked objects:
 25777 ;;		On entry : 0/0
 25778 ;;		On exit  : 0/0
 25779 ;;		Unchanged: 0/0
 25780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25785 ;;Total ram usage:        0 bytes
 25786 ;; Hardware stack levels used:    1
 25787 ;; This function calls:
 25788 ;;		Nothing
 25789 ;; This function is called by:
 25790 ;;		i1_do_I2C_TX_EMPTY
 25791 ;; This function uses a non-reentrant model
 25792 ;;
 25793                           
 25794                           
 25795                           ;psect for function i1_mssp1_setIRQ
 25796  2F55                     i1_mssp1_setIRQ:	
 25797                           
 25798                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 25799                           
 25800                           ;incstack = 0
 25801                           ; Regs used in i1_mssp1_setIRQ: []
 25802  2F55  0020               	movlb	0	; select bank0
 25803  2F56  1591               	bsf	17,3	;volatile
 25804  2F57  0008               	return
 25805  2F58                     __end_ofi1_mssp1_setIRQ:	
 25806                           
 25807                           	psect	text149
 25808  2120                     __ptext149:	
 25809 ;; *************** function i1_i2c1_driver_isNACK *****************
 25810 ;; Defined at:
 25811 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 25812 ;; Parameters:    Size  Location     Type
 25813 ;;		None
 25814 ;; Auto vars:     Size  Location     Type
 25815 ;;		None
 25816 ;; Return value:  Size  Location     Type
 25817 ;;		None               void
 25818 ;; Registers used:
 25819 ;;		wreg, status,2, status,0
 25820 ;; Tracked objects:
 25821 ;;		On entry : 0/0
 25822 ;;		On exit  : 0/0
 25823 ;;		Unchanged: 0/0
 25824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25829 ;;Total ram usage:        1 bytes
 25830 ;; Hardware stack levels used:    1
 25831 ;; This function calls:
 25832 ;;		Nothing
 25833 ;; This function is called by:
 25834 ;;		i1_do_I2C_TX
 25835 ;;		i1_i2c_ISR
 25836 ;; This function uses a non-reentrant model
 25837 ;;
 25838                           
 25839                           
 25840                           ;psect for function i1_i2c1_driver_isNACK
 25841  2120                     i1_i2c1_driver_isNACK:	
 25842                           
 25843                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 25844                           
 25845                           ;incstack = 0
 25846                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 25847  2120  0024               	movlb	4	; select bank4
 25848  2121  0816               	movf	22,w	;volatile
 25849  2122  39BF               	andlw	-65
 25850  2123  3840               	iorlw	64
 25851  2124  0096               	movwf	22	;volatile
 25852  2125  0E16               	swapf	22,w	;volatile
 25853  2126  0C89               	rrf	9,f
 25854  2127  0C89               	rrf	9,f
 25855  2128  3901               	andlw	1
 25856  2129  00F0               	movwf	??i1_i2c1_driver_isNACK
 25857  212A  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 25858  212B  0008               	return
 25859  212C                     __end_ofi1_i2c1_driver_isNACK:	
 25860                           
 25861                           	psect	text150
 25862  2FB4                     __ptext150:	
 25863 ;; *************** function i1_i2c1_driver_TXData *****************
 25864 ;; Defined at:
 25865 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 25866 ;; Parameters:    Size  Location     Type
 25867 ;;  d               1    wreg     unsigned char 
 25868 ;; Auto vars:     Size  Location     Type
 25869 ;;  d               1    0[COMMON] unsigned char 
 25870 ;; Return value:  Size  Location     Type
 25871 ;;                  1    wreg      void 
 25872 ;; Registers used:
 25873 ;;		wreg
 25874 ;; Tracked objects:
 25875 ;;		On entry : 0/0
 25876 ;;		On exit  : 0/0
 25877 ;;		Unchanged: 0/0
 25878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25883 ;;Total ram usage:        1 bytes
 25884 ;; Hardware stack levels used:    1
 25885 ;; This function calls:
 25886 ;;		Nothing
 25887 ;; This function is called by:
 25888 ;;		i1_do_I2C_SEND_ADR_READ
 25889 ;;		i1_do_I2C_SEND_ADR_WRITE
 25890 ;;		i1_do_I2C_TX
 25891 ;; This function uses a non-reentrant model
 25892 ;;
 25893                           
 25894                           
 25895                           ;psect for function i1_i2c1_driver_TXData
 25896  2FB4                     i1_i2c1_driver_TXData:	
 25897                           
 25898                           ;incstack = 0
 25899                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 25900                           ;i1i2c1_driver_TXData@d stored from wreg
 25901  2FB4  00F0               	movwf	i1i2c1_driver_TXData@d
 25902                           
 25903                           ;i2c1_driver.c: 188: SSP1BUF = d;
 25904  2FB5  0870               	movf	i1i2c1_driver_TXData@d,w
 25905  2FB6  0024               	movlb	4	; select bank4
 25906  2FB7  0091               	movwf	17	;volatile
 25907  2FB8  0008               	return
 25908  2FB9                     __end_ofi1_i2c1_driver_TXData:	
 25909                           
 25910                           	psect	text151
 25911  2F52                     __ptext151:	
 25912 ;; *************** function i1_i2c1_driver_getRXData *****************
 25913 ;; Defined at:
 25914 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 25915 ;; Parameters:    Size  Location     Type
 25916 ;;		None
 25917 ;; Auto vars:     Size  Location     Type
 25918 ;;		None
 25919 ;; Return value:  Size  Location     Type
 25920 ;;                  1    wreg      unsigned char 
 25921 ;; Registers used:
 25922 ;;		wreg
 25923 ;; Tracked objects:
 25924 ;;		On entry : 0/0
 25925 ;;		On exit  : 0/0
 25926 ;;		Unchanged: 0/0
 25927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25932 ;;Total ram usage:        0 bytes
 25933 ;; Hardware stack levels used:    1
 25934 ;; This function calls:
 25935 ;;		Nothing
 25936 ;; This function is called by:
 25937 ;;		i1_do_I2C_RX
 25938 ;; This function uses a non-reentrant model
 25939 ;;
 25940                           
 25941                           
 25942                           ;psect for function i1_i2c1_driver_getRXData
 25943  2F52                     i1_i2c1_driver_getRXData:	
 25944                           
 25945                           ;i2c1_driver.c: 173: return SSP1BUF;
 25946                           
 25947                           ;incstack = 0
 25948                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 25949  2F52  0024               	movlb	4	; select bank4
 25950  2F53  0811               	movf	17,w	;volatile
 25951  2F54  0008               	return
 25952  2F55                     __end_ofi1_i2c1_driver_getRXData:	
 25953                           
 25954                           	psect	text152
 25955  2F7A                     __ptext152:	
 25956 ;; *************** function i1_i2c1_driver_sendNACK *****************
 25957 ;; Defined at:
 25958 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 25959 ;; Parameters:    Size  Location     Type
 25960 ;;		None
 25961 ;; Auto vars:     Size  Location     Type
 25962 ;;		None
 25963 ;; Return value:  Size  Location     Type
 25964 ;;                  1    wreg      void 
 25965 ;; Registers used:
 25966 ;;		None
 25967 ;; Tracked objects:
 25968 ;;		On entry : 0/0
 25969 ;;		On exit  : 0/0
 25970 ;;		Unchanged: 0/0
 25971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25976 ;;Total ram usage:        0 bytes
 25977 ;; Hardware stack levels used:    1
 25978 ;; This function calls:
 25979 ;;		Nothing
 25980 ;; This function is called by:
 25981 ;;		i1_do_I2C_DO_NACK_STOP
 25982 ;;		i1_do_I2C_DO_NACK_RESTART
 25983 ;; This function uses a non-reentrant model
 25984 ;;
 25985                           
 25986                           
 25987                           ;psect for function i1_i2c1_driver_sendNACK
 25988  2F7A                     i1_i2c1_driver_sendNACK:	
 25989                           
 25990                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 25991                           
 25992                           ;incstack = 0
 25993                           ; Regs used in i1_i2c1_driver_sendNACK: []
 25994  2F7A  0024               	movlb	4	; select bank4
 25995  2F7B  1696               	bsf	22,5	;volatile
 25996                           
 25997                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 25998  2F7C  1616               	bsf	22,4	;volatile
 25999  2F7D  0008               	return
 26000  2F7E                     __end_ofi1_i2c1_driver_sendNACK:	
 26001                           
 26002                           	psect	text153
 26003  2F3C                     __ptext153:	
 26004 ;; *************** function i1_i2c1_driver_resetBus *****************
 26005 ;; Defined at:
 26006 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;		None
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;		None
 26011 ;; Return value:  Size  Location     Type
 26012 ;;                  1    wreg      void 
 26013 ;; Registers used:
 26014 ;;		None
 26015 ;; Tracked objects:
 26016 ;;		On entry : 0/0
 26017 ;;		On exit  : 0/0
 26018 ;;		Unchanged: 0/0
 26019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26024 ;;Total ram usage:        0 bytes
 26025 ;; Hardware stack levels used:    1
 26026 ;; This function calls:
 26027 ;;		Nothing
 26028 ;; This function is called by:
 26029 ;;		i1_do_I2C_RESET
 26030 ;; This function uses a non-reentrant model
 26031 ;;
 26032                           
 26033                           
 26034                           ;psect for function i1_i2c1_driver_resetBus
 26035  2F3C                     i1_i2c1_driver_resetBus:	
 26036                           
 26037                           ;incstack = 0
 26038                           ; Regs used in i1_i2c1_driver_resetBus: []
 26039  2F3C  0008               	return
 26040  2F3D                     __end_ofi1_i2c1_driver_resetBus:	
 26041                           
 26042                           	psect	text154
 26043  2F4F                     __ptext154:	
 26044 ;; *************** function i1_i2c1_driver_startRX *****************
 26045 ;; Defined at:
 26046 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 26047 ;; Parameters:    Size  Location     Type
 26048 ;;		None
 26049 ;; Auto vars:     Size  Location     Type
 26050 ;;		None
 26051 ;; Return value:  Size  Location     Type
 26052 ;;                  1    wreg      void 
 26053 ;; Registers used:
 26054 ;;		None
 26055 ;; Tracked objects:
 26056 ;;		On entry : 0/0
 26057 ;;		On exit  : 0/0
 26058 ;;		Unchanged: 0/0
 26059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26064 ;;Total ram usage:        0 bytes
 26065 ;; Hardware stack levels used:    1
 26066 ;; This function calls:
 26067 ;;		Nothing
 26068 ;; This function is called by:
 26069 ;;		i1_do_I2C_RCEN
 26070 ;; This function uses a non-reentrant model
 26071 ;;
 26072                           
 26073                           
 26074                           ;psect for function i1_i2c1_driver_startRX
 26075  2F4F                     i1_i2c1_driver_startRX:	
 26076                           
 26077                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 26078                           
 26079                           ;incstack = 0
 26080                           ; Regs used in i1_i2c1_driver_startRX: []
 26081  2F4F  0024               	movlb	4	; select bank4
 26082  2F50  1596               	bsf	22,3	;volatile
 26083  2F51  0008               	return
 26084  2F52                     __end_ofi1_i2c1_driver_startRX:	
 26085                           
 26086                           	psect	text155
 26087  0002                     __ptext155:	
 26088 ;; *************** function i1_returnReset *****************
 26089 ;; Defined at:
 26090 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 26091 ;; Parameters:    Size  Location     Type
 26092 ;;  p               1    0[COMMON] PTR void 
 26093 ;;		 -> NULL(0), 
 26094 ;; Auto vars:     Size  Location     Type
 26095 ;;		None
 26096 ;; Return value:  Size  Location     Type
 26097 ;;                  1    wreg      enum E8198
 26098 ;; Registers used:
 26099 ;;		wreg
 26100 ;; Tracked objects:
 26101 ;;		On entry : 0/0
 26102 ;;		On exit  : 0/0
 26103 ;;		Unchanged: 0/0
 26104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26109 ;;Total ram usage:        1 bytes
 26110 ;; Hardware stack levels used:    1
 26111 ;; This function calls:
 26112 ;;		Nothing
 26113 ;; This function is called by:
 26114 ;; This function uses a non-reentrant model
 26115 ;;
 26116                           
 26117                           
 26118                           ;psect for function i1_returnReset
 26119  0002                     i1_returnReset:	
 26120  0002                     i1l8454:	
 26121                           ;incstack = 0
 26122                           ; Regs used in i1_returnReset: [wreg]
 26123                           
 26124                           
 26125                           ;i2c_master.c: 450: return i2c_reset_link;
 26126  0002  3005               	movlw	5
 26127  0003  0008               	return
 26128  0004                     __end_ofi1_returnReset:	
 26129                           
 26130                           	psect	text156
 26131  11E4                     __ptext156:	
 26132 ;; *************** function i1_returnStop *****************
 26133 ;; Defined at:
 26134 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 26135 ;; Parameters:    Size  Location     Type
 26136 ;;  p               1    0[COMMON] PTR void 
 26137 ;;		 -> NULL(0), 
 26138 ;; Auto vars:     Size  Location     Type
 26139 ;;		None
 26140 ;; Return value:  Size  Location     Type
 26141 ;;                  1    wreg      enum E8198
 26142 ;; Registers used:
 26143 ;;		wreg
 26144 ;; Tracked objects:
 26145 ;;		On entry : 0/0
 26146 ;;		On exit  : 0/0
 26147 ;;		Unchanged: 0/0
 26148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26149 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26152 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26153 ;;Total ram usage:        1 bytes
 26154 ;; Hardware stack levels used:    1
 26155 ;; This function calls:
 26156 ;;		Nothing
 26157 ;; This function is called by:
 26158 ;; This function uses a non-reentrant model
 26159 ;;
 26160                           
 26161                           
 26162                           ;psect for function i1_returnStop
 26163  11E4                     i1_returnStop:	
 26164  11E4                     i1l8450:	
 26165                           ;incstack = 0
 26166                           ; Regs used in i1_returnStop: [wreg]
 26167                           
 26168                           
 26169                           ;i2c_master.c: 445: return i2c_stop;
 26170  11E4  3001               	movlw	1
 26171  11E5  0008               	return
 26172  11E6                     __end_ofi1_returnStop:	
 26173                           
 26174                           	psect	text157
 26175  2F4C                     __ptext157:	
 26176 ;; *************** function i1_i2c1_driver_stop *****************
 26177 ;; Defined at:
 26178 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 26179 ;; Parameters:    Size  Location     Type
 26180 ;;		None
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;		None
 26183 ;; Return value:  Size  Location     Type
 26184 ;;                  1    wreg      void 
 26185 ;; Registers used:
 26186 ;;		None
 26187 ;; Tracked objects:
 26188 ;;		On entry : 0/0
 26189 ;;		On exit  : 0/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26196 ;;Total ram usage:        0 bytes
 26197 ;; Hardware stack levels used:    1
 26198 ;; This function calls:
 26199 ;;		Nothing
 26200 ;; This function is called by:
 26201 ;;		i1_do_I2C_SEND_STOP
 26202 ;; This function uses a non-reentrant model
 26203 ;;
 26204                           
 26205                           
 26206                           ;psect for function i1_i2c1_driver_stop
 26207  2F4C                     i1_i2c1_driver_stop:	
 26208                           
 26209                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 26210                           
 26211                           ;incstack = 0
 26212                           ; Regs used in i1_i2c1_driver_stop: []
 26213  2F4C  0024               	movlb	4	; select bank4
 26214  2F4D  1516               	bsf	22,2	;volatile
 26215  2F4E  0008               	return
 26216  2F4F                     __end_ofi1_i2c1_driver_stop:	
 26217                           
 26218                           	psect	text158
 26219  2F49                     __ptext158:	
 26220 ;; *************** function i1_i2c1_driver_restart *****************
 26221 ;; Defined at:
 26222 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 26223 ;; Parameters:    Size  Location     Type
 26224 ;;		None
 26225 ;; Auto vars:     Size  Location     Type
 26226 ;;		None
 26227 ;; Return value:  Size  Location     Type
 26228 ;;                  1    wreg      void 
 26229 ;; Registers used:
 26230 ;;		None
 26231 ;; Tracked objects:
 26232 ;;		On entry : 0/0
 26233 ;;		On exit  : 0/0
 26234 ;;		Unchanged: 0/0
 26235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26240 ;;Total ram usage:        0 bytes
 26241 ;; Hardware stack levels used:    1
 26242 ;; This function calls:
 26243 ;;		Nothing
 26244 ;; This function is called by:
 26245 ;;		i1_do_I2C_SEND_RESTART_READ
 26246 ;;		i1_do_I2C_SEND_RESTART_WRITE
 26247 ;;		i1_do_I2C_SEND_RESTART
 26248 ;; This function uses a non-reentrant model
 26249 ;;
 26250                           
 26251                           
 26252                           ;psect for function i1_i2c1_driver_restart
 26253  2F49                     i1_i2c1_driver_restart:	
 26254                           
 26255                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 26256                           
 26257                           ;incstack = 0
 26258                           ; Regs used in i1_i2c1_driver_restart: []
 26259  2F49  0024               	movlb	4	; select bank4
 26260  2F4A  1496               	bsf	22,1	;volatile
 26261  2F4B  0008               	return
 26262  2F4C                     __end_ofi1_i2c1_driver_restart:	
 26263                           
 26264                           	psect	text159
 26265  2F76                     __ptext159:	
 26266 ;; *************** function i1_i2c1_driver_sendACK *****************
 26267 ;; Defined at:
 26268 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 26269 ;; Parameters:    Size  Location     Type
 26270 ;;		None
 26271 ;; Auto vars:     Size  Location     Type
 26272 ;;		None
 26273 ;; Return value:  Size  Location     Type
 26274 ;;                  1    wreg      void 
 26275 ;; Registers used:
 26276 ;;		None
 26277 ;; Tracked objects:
 26278 ;;		On entry : 0/0
 26279 ;;		On exit  : 0/0
 26280 ;;		Unchanged: 0/0
 26281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26286 ;;Total ram usage:        0 bytes
 26287 ;; Hardware stack levels used:    1
 26288 ;; This function calls:
 26289 ;;		Nothing
 26290 ;; This function is called by:
 26291 ;;		i1_do_I2C_DO_ACK
 26292 ;;		i1_do_I2C_RX
 26293 ;; This function uses a non-reentrant model
 26294 ;;
 26295                           
 26296                           
 26297                           ;psect for function i1_i2c1_driver_sendACK
 26298  2F76                     i1_i2c1_driver_sendACK:	
 26299                           
 26300                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 26301                           
 26302                           ;incstack = 0
 26303                           ; Regs used in i1_i2c1_driver_sendACK: []
 26304  2F76  0024               	movlb	4	; select bank4
 26305  2F77  1296               	bcf	22,5	;volatile
 26306                           
 26307                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 26308  2F78  1616               	bsf	22,4	;volatile
 26309  2F79  0008               	return
 26310  2F7A                     __end_ofi1_i2c1_driver_sendACK:	
 26311                           
 26312                           	psect	text160
 26313  2F46                     __ptext160:	
 26314 ;; *************** function _i2c_busCollisionISR *****************
 26315 ;; Defined at:
 26316 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 26317 ;; Parameters:    Size  Location     Type
 26318 ;;		None
 26319 ;; Auto vars:     Size  Location     Type
 26320 ;;		None
 26321 ;; Return value:  Size  Location     Type
 26322 ;;                  1    wreg      void 
 26323 ;; Registers used:
 26324 ;;		status,2, status,0, pclath, cstack
 26325 ;; Tracked objects:
 26326 ;;		On entry : 0/0
 26327 ;;		On exit  : 0/0
 26328 ;;		Unchanged: 0/0
 26329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26334 ;;Total ram usage:        0 bytes
 26335 ;; Hardware stack levels used:    1
 26336 ;; Hardware stack levels required when called:    1
 26337 ;; This function calls:
 26338 ;;		_i2c1_driver_clearBusCollision
 26339 ;; This function is called by:
 26340 ;;		_i2c_open
 26341 ;;		_INTERRUPT_InterruptManager
 26342 ;; This function uses a non-reentrant model
 26343 ;;
 26344                           
 26345                           
 26346                           ;psect for function _i2c_busCollisionISR
 26347  2F46                     _i2c_busCollisionISR:	
 26348                           
 26349                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 26350                           
 26351                           ;incstack = 0
 26352                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 26353  2F46  31AF  2743         	fcall	_i2c1_driver_clearBusCollision
 26354  2F48  0008               	return
 26355  2F49                     __end_of_i2c_busCollisionISR:	
 26356                           
 26357                           	psect	text161
 26358  2F43                     __ptext161:	
 26359 ;; *************** function _i2c1_driver_clearBusCollision *****************
 26360 ;; Defined at:
 26361 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 26362 ;; Parameters:    Size  Location     Type
 26363 ;;		None
 26364 ;; Auto vars:     Size  Location     Type
 26365 ;;		None
 26366 ;; Return value:  Size  Location     Type
 26367 ;;                  1    wreg      void 
 26368 ;; Registers used:
 26369 ;;		None
 26370 ;; Tracked objects:
 26371 ;;		On entry : 0/0
 26372 ;;		On exit  : 0/0
 26373 ;;		Unchanged: 0/0
 26374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26379 ;;Total ram usage:        0 bytes
 26380 ;; Hardware stack levels used:    1
 26381 ;; This function calls:
 26382 ;;		Nothing
 26383 ;; This function is called by:
 26384 ;;		_i2c_busCollisionISR
 26385 ;; This function uses a non-reentrant model
 26386 ;;
 26387                           
 26388                           
 26389                           ;psect for function _i2c1_driver_clearBusCollision
 26390  2F43                     _i2c1_driver_clearBusCollision:	
 26391                           
 26392                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 26393                           
 26394                           ;incstack = 0
 26395                           ; Regs used in _i2c1_driver_clearBusCollision: []
 26396  2F43  0020               	movlb	0	; select bank0
 26397  2F44  1111               	bcf	17,2	;volatile
 26398  2F45  0008               	return
 26399  2F46                     __end_of_i2c1_driver_clearBusCollision:	
 26400                           
 26401                           	psect	text162
 26402  2151                     __ptext162:	
 26403 ;; *************** function _TMR2_ISR *****************
 26404 ;; Defined at:
 26405 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 26406 ;; Parameters:    Size  Location     Type
 26407 ;;		None
 26408 ;; Auto vars:     Size  Location     Type
 26409 ;;		None
 26410 ;; Return value:  Size  Location     Type
 26411 ;;                  1    wreg      void 
 26412 ;; Registers used:
 26413 ;;		wreg, status,2, status,0, pclath, cstack
 26414 ;; Tracked objects:
 26415 ;;		On entry : 0/0
 26416 ;;		On exit  : 0/0
 26417 ;;		Unchanged: 0/0
 26418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26423 ;;Total ram usage:        0 bytes
 26424 ;; Hardware stack levels used:    1
 26425 ;; Hardware stack levels required when called:    2
 26426 ;; This function calls:
 26427 ;;		Absolute function
 26428 ;;		_TMR2_DefaultInterruptHandler
 26429 ;; This function is called by:
 26430 ;;		_INTERRUPT_InterruptManager
 26431 ;; This function uses a non-reentrant model
 26432 ;;
 26433                           
 26434                           
 26435                           ;psect for function _TMR2_ISR
 26436  2151                     _TMR2_ISR:	
 26437                           
 26438                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
 26439                           
 26440                           ;incstack = 0
 26441                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 26442  2151  0020               	movlb	0	; select bank0
 26443  2152  1091               	bcf	17,1	;volatile
 26444                           
 26445                           ;tmr2.c: 123: if(TMR2_InterruptHandler)
 26446  2153  0023               	movlb	3	; select bank3
 26447  2154  0861               	movf	_TMR2_InterruptHandler^(0+384),w
 26448  2155  0462               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 26449  2156  1903               	btfsc	3,2
 26450  2157  0008               	return
 26451                           
 26452                           ;tmr2.c: 124: {
 26453                           ;tmr2.c: 125: TMR2_InterruptHandler();
 26454  2158  0862               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 26455  2159  008A               	movwf	10
 26456  215A  0861               	movf	_TMR2_InterruptHandler^(0+384),w
 26457  215B  000A               	callw
 26458  215C  31A1               	pagesel	$
 26459  215D  0008               	return
 26460  215E                     __end_of_TMR2_ISR:	
 26461                           
 26462                           	psect	text163
 26463  2083                     __ptext163:	
 26464 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 26465 ;; Defined at:
 26466 ;;		line 134 in file "mcc_generated_files/tmr2.c"
 26467 ;; Parameters:    Size  Location     Type
 26468 ;;		None
 26469 ;; Auto vars:     Size  Location     Type
 26470 ;;		None
 26471 ;; Return value:  Size  Location     Type
 26472 ;;                  1    wreg      void 
 26473 ;; Registers used:
 26474 ;;		wreg, status,2, status,0, pclath, cstack
 26475 ;; Tracked objects:
 26476 ;;		On entry : 0/0
 26477 ;;		On exit  : 0/0
 26478 ;;		Unchanged: 0/0
 26479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26484 ;;Total ram usage:        0 bytes
 26485 ;; Hardware stack levels used:    1
 26486 ;; Hardware stack levels required when called:    1
 26487 ;; This function calls:
 26488 ;;		_TMR2_StopTimer
 26489 ;;		_TMR2_WriteTimer
 26490 ;; This function is called by:
 26491 ;;		_TMR2_Initialize
 26492 ;;		_TMR2_ISR
 26493 ;; This function uses a non-reentrant model
 26494 ;;
 26495                           
 26496                           
 26497                           ;psect for function _TMR2_DefaultInterruptHandler
 26498  2083                     _TMR2_DefaultInterruptHandler:	
 26499                           
 26500                           ;incstack = 0
 26501                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 26502                           ;tmr2.c: 138: do { LATCbits.LATC1 = 1; } while(0);
 26503  2083  0022               	movlb	2	; select bank2
 26504  2084  148E               	bsf	14,1	;volatile
 26505                           
 26506                           ;tmr2.c: 141: TMR2_StopTimer();
 26507  2085  31AF  2740  31A0   	fcall	_TMR2_StopTimer
 26508                           
 26509                           ;tmr2.c: 142: TMR2_WriteTimer(0);
 26510  2088  3000               	movlw	0
 26511  2089  31AF  27AF         	fcall	_TMR2_WriteTimer
 26512  208B  0008               	return
 26513  208C                     __end_of_TMR2_DefaultInterruptHandler:	
 26514                           
 26515                           	psect	text164
 26516  2FAF                     __ptext164:	
 26517 ;; *************** function _TMR2_WriteTimer *****************
 26518 ;; Defined at:
 26519 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 26520 ;; Parameters:    Size  Location     Type
 26521 ;;  timerVal        1    wreg     unsigned char 
 26522 ;; Auto vars:     Size  Location     Type
 26523 ;;  timerVal        1    0[COMMON] unsigned char 
 26524 ;; Return value:  Size  Location     Type
 26525 ;;                  1    wreg      void 
 26526 ;; Registers used:
 26527 ;;		wreg
 26528 ;; Tracked objects:
 26529 ;;		On entry : 0/0
 26530 ;;		On exit  : 0/0
 26531 ;;		Unchanged: 0/0
 26532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26537 ;;Total ram usage:        1 bytes
 26538 ;; Hardware stack levels used:    1
 26539 ;; This function calls:
 26540 ;;		Nothing
 26541 ;; This function is called by:
 26542 ;;		_TMR2_DefaultInterruptHandler
 26543 ;; This function uses a non-reentrant model
 26544 ;;
 26545                           
 26546                           
 26547                           ;psect for function _TMR2_WriteTimer
 26548  2FAF                     _TMR2_WriteTimer:	
 26549                           
 26550                           ;incstack = 0
 26551                           ; Regs used in _TMR2_WriteTimer: [wreg]
 26552                           ;TMR2_WriteTimer@timerVal stored from wreg
 26553  2FAF  00F0               	movwf	TMR2_WriteTimer@timerVal
 26554                           
 26555                           ;tmr2.c: 109: TMR2 = timerVal;
 26556  2FB0  0870               	movf	TMR2_WriteTimer@timerVal,w
 26557  2FB1  0020               	movlb	0	; select bank0
 26558  2FB2  009D               	movwf	29	;volatile
 26559  2FB3  0008               	return
 26560  2FB4                     __end_of_TMR2_WriteTimer:	
 26561                           
 26562                           	psect	text165
 26563  2F40                     __ptext165:	
 26564 ;; *************** function _TMR2_StopTimer *****************
 26565 ;; Defined at:
 26566 ;;		line 91 in file "mcc_generated_files/tmr2.c"
 26567 ;; Parameters:    Size  Location     Type
 26568 ;;		None
 26569 ;; Auto vars:     Size  Location     Type
 26570 ;;		None
 26571 ;; Return value:  Size  Location     Type
 26572 ;;                  1    wreg      void 
 26573 ;; Registers used:
 26574 ;;		None
 26575 ;; Tracked objects:
 26576 ;;		On entry : 0/0
 26577 ;;		On exit  : 0/0
 26578 ;;		Unchanged: 0/0
 26579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26584 ;;Total ram usage:        0 bytes
 26585 ;; Hardware stack levels used:    1
 26586 ;; This function calls:
 26587 ;;		Nothing
 26588 ;; This function is called by:
 26589 ;;		_TMR2_DefaultInterruptHandler
 26590 ;; This function uses a non-reentrant model
 26591 ;;
 26592                           
 26593                           
 26594                           ;psect for function _TMR2_StopTimer
 26595  2F40                     _TMR2_StopTimer:	
 26596                           
 26597                           ;tmr2.c: 94: T2CONbits.TMR2ON = 0;
 26598                           
 26599                           ;incstack = 0
 26600                           ; Regs used in _TMR2_StopTimer: []
 26601  2F40  0020               	movlb	0	; select bank0
 26602  2F41  111F               	bcf	31,2	;volatile
 26603  2F42  0008               	return
 26604  2F43                     __end_of_TMR2_StopTimer:	
 26605                           
 26606                           	psect	text166
 26607  2144                     __ptext166:	
 26608 ;; *************** function _TMR0_ISR *****************
 26609 ;; Defined at:
 26610 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 26611 ;; Parameters:    Size  Location     Type
 26612 ;;		None
 26613 ;; Auto vars:     Size  Location     Type
 26614 ;;		None
 26615 ;; Return value:  Size  Location     Type
 26616 ;;                  1    wreg      void 
 26617 ;; Registers used:
 26618 ;;		wreg, status,2, status,0, pclath, cstack
 26619 ;; Tracked objects:
 26620 ;;		On entry : 0/0
 26621 ;;		On exit  : 0/0
 26622 ;;		Unchanged: 0/0
 26623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26628 ;;Total ram usage:        0 bytes
 26629 ;; Hardware stack levels used:    1
 26630 ;; Hardware stack levels required when called:    4
 26631 ;; This function calls:
 26632 ;;		Absolute function
 26633 ;;		_TMR0_DefaultInterruptHandler
 26634 ;; This function is called by:
 26635 ;;		_INTERRUPT_InterruptManager
 26636 ;; This function uses a non-reentrant model
 26637 ;;
 26638                           
 26639                           
 26640                           ;psect for function _TMR0_ISR
 26641  2144                     _TMR0_ISR:	
 26642                           
 26643                           ;tmr0.c: 122: PIR0bits.TMR0IF = 0;
 26644                           
 26645                           ;incstack = 0
 26646                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 26647  2144  0020               	movlb	0	; select bank0
 26648  2145  1290               	bcf	16,5	;volatile
 26649                           
 26650                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
 26651  2146  0023               	movlb	3	; select bank3
 26652  2147  0863               	movf	_TMR0_InterruptHandler^(0+384),w
 26653  2148  0464               	iorwf	(_TMR0_InterruptHandler+1)^(0+384),w
 26654  2149  1903               	btfsc	3,2
 26655  214A  0008               	return
 26656                           
 26657                           ;tmr0.c: 124: {
 26658                           ;tmr0.c: 125: TMR0_InterruptHandler();
 26659  214B  0864               	movf	(_TMR0_InterruptHandler+1)^(0+384),w
 26660  214C  008A               	movwf	10
 26661  214D  0863               	movf	_TMR0_InterruptHandler^(0+384),w
 26662  214E  000A               	callw
 26663  214F  31A1               	pagesel	$
 26664  2150  0008               	return
 26665  2151                     __end_of_TMR0_ISR:	
 26666                           
 26667                           	psect	text167
 26668  2707                     __ptext167:	
 26669 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 26670 ;; Defined at:
 26671 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 26672 ;; Parameters:    Size  Location     Type
 26673 ;;		None
 26674 ;; Auto vars:     Size  Location     Type
 26675 ;;		None
 26676 ;; Return value:  Size  Location     Type
 26677 ;;                  1    wreg      void 
 26678 ;; Registers used:
 26679 ;;		wreg, status,2, status,0, pclath, cstack
 26680 ;; Tracked objects:
 26681 ;;		On entry : 0/0
 26682 ;;		On exit  : 0/0
 26683 ;;		Unchanged: 0/0
 26684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26689 ;;Total ram usage:        0 bytes
 26690 ;; Hardware stack levels used:    1
 26691 ;; Hardware stack levels required when called:    3
 26692 ;; This function calls:
 26693 ;;		_TMR0_StopTimer
 26694 ;;		_TMR0_Write8bitTimer
 26695 ;;		i1_LEDsOn
 26696 ;; This function is called by:
 26697 ;;		_TMR0_Initialize
 26698 ;;		_TMR0_ISR
 26699 ;; This function uses a non-reentrant model
 26700 ;;
 26701                           
 26702                           
 26703                           ;psect for function _TMR0_DefaultInterruptHandler
 26704  2707                     _TMR0_DefaultInterruptHandler:	
 26705                           
 26706                           ;tmr0.c: 141: LEDsOn(second_top, 1);
 26707                           
 26708                           ;incstack = 0
 26709                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 26710  2707  0022               	movlb	2	; select bank2
 26711  2708  085D               	movf	(_second_top+3)^(0+256),w
 26712  2709  0020               	movlb	0	; select bank0
 26713  270A  00AA               	movwf	i1LEDsOn@LEDpins+3
 26714  270B  0022               	movlb	2	; select bank2
 26715  270C  085C               	movf	(_second_top+2)^(0+256),w
 26716  270D  0020               	movlb	0	; select bank0
 26717  270E  00A9               	movwf	i1LEDsOn@LEDpins+2
 26718  270F  0022               	movlb	2	; select bank2
 26719  2710  085B               	movf	(_second_top+1)^(0+256),w
 26720  2711  0020               	movlb	0	; select bank0
 26721  2712  00A8               	movwf	i1LEDsOn@LEDpins+1
 26722  2713  0022               	movlb	2	; select bank2
 26723  2714  085A               	movf	_second_top^(0+256),w
 26724  2715  0020               	movlb	0	; select bank0
 26725  2716  00A7               	movwf	i1LEDsOn@LEDpins
 26726  2717  3001               	movlw	1
 26727  2718  00AB               	movwf	i1LEDsOn@topOrBottom
 26728  2719  3000               	movlw	0
 26729  271A  00AC               	movwf	i1LEDsOn@topOrBottom+1
 26730  271B  31A3  23C2  31A7   	fcall	i1_LEDsOn
 26731                           
 26732                           ;tmr0.c: 142: LEDsOn(second_bottom,2);
 26733  271E  0022               	movlb	2	; select bank2
 26734  271F  0851               	movf	(_second_bottom+3)^(0+256),w
 26735  2720  0020               	movlb	0	; select bank0
 26736  2721  00AA               	movwf	i1LEDsOn@LEDpins+3
 26737  2722  0022               	movlb	2	; select bank2
 26738  2723  0850               	movf	(_second_bottom+2)^(0+256),w
 26739  2724  0020               	movlb	0	; select bank0
 26740  2725  00A9               	movwf	i1LEDsOn@LEDpins+2
 26741  2726  0022               	movlb	2	; select bank2
 26742  2727  084F               	movf	(_second_bottom+1)^(0+256),w
 26743  2728  0020               	movlb	0	; select bank0
 26744  2729  00A8               	movwf	i1LEDsOn@LEDpins+1
 26745  272A  0022               	movlb	2	; select bank2
 26746  272B  084E               	movf	_second_bottom^(0+256),w
 26747  272C  0020               	movlb	0	; select bank0
 26748  272D  00A7               	movwf	i1LEDsOn@LEDpins
 26749  272E  3002               	movlw	2
 26750  272F  00AB               	movwf	i1LEDsOn@topOrBottom
 26751  2730  3000               	movlw	0
 26752  2731  00AC               	movwf	i1LEDsOn@topOrBottom+1
 26753  2732  31A3  23C2  31A7   	fcall	i1_LEDsOn
 26754                           
 26755                           ;tmr0.c: 144: do { LATCbits.LATC1 = 0; } while(0);
 26756  2735  0022               	movlb	2	; select bank2
 26757  2736  108E               	bcf	14,1	;volatile
 26758                           
 26759                           ;tmr0.c: 145: TMR0_StopTimer();
 26760  2737  31AF  273D  31A7   	fcall	_TMR0_StopTimer
 26761                           
 26762                           ;tmr0.c: 146: TMR0_Write8bitTimer(0);
 26763  273A  3000               	movlw	0
 26764  273B  31AF  27AA         	fcall	_TMR0_Write8bitTimer
 26765  273D  0008               	return
 26766  273E                     __end_of_TMR0_DefaultInterruptHandler:	
 26767                           
 26768                           	psect	text168
 26769  23C2                     __ptext168:	
 26770 ;; *************** function i1_LEDsOn *****************
 26771 ;; Defined at:
 26772 ;;		line 6 in file "LEDcomm.c"
 26773 ;; Parameters:    Size  Location     Type
 26774 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 26775 ;;  topOrBottom     2   11[BANK0 ] int 
 26776 ;; Auto vars:     Size  Location     Type
 26777 ;;		None
 26778 ;; Return value:  Size  Location     Type
 26779 ;;                  1    wreg      void 
 26780 ;; Registers used:
 26781 ;;		wreg, status,2, status,0, pclath, cstack
 26782 ;; Tracked objects:
 26783 ;;		On entry : 0/0
 26784 ;;		On exit  : 0/0
 26785 ;;		Unchanged: 0/0
 26786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26787 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26789 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26790 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26791 ;;Total ram usage:       10 bytes
 26792 ;; Hardware stack levels used:    1
 26793 ;; Hardware stack levels required when called:    2
 26794 ;; This function calls:
 26795 ;;		i1_send_2length_2bytes_IK
 26796 ;; This function is called by:
 26797 ;;		_TMR0_DefaultInterruptHandler
 26798 ;; This function uses a non-reentrant model
 26799 ;;
 26800                           
 26801                           
 26802                           ;psect for function i1_LEDsOn
 26803  23C2                     i1_LEDsOn:	
 26804                           
 26805                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 26806                           
 26807                           ;incstack = 0
 26808                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 26809  23C2  0020               	movlb	0	; select bank0
 26810  23C3  0827               	movf	i1LEDsOn@LEDpins,w
 26811  23C4  00AD               	movwf	??i1_LEDsOn
 26812  23C5  0828               	movf	i1LEDsOn@LEDpins+1,w
 26813  23C6  00AE               	movwf	??i1_LEDsOn+1
 26814  23C7  0829               	movf	i1LEDsOn@LEDpins+2,w
 26815  23C8  00AF               	movwf	??i1_LEDsOn+2
 26816  23C9  082A               	movf	i1LEDsOn@LEDpins+3,w
 26817  23CA  00B0               	movwf	??i1_LEDsOn+3
 26818  23CB  3010               	movlw	16
 26819  23CC                     u866_25:	
 26820  23CC  36B0               	lsrf	??i1_LEDsOn+3,f
 26821  23CD  0CAF               	rrf	??i1_LEDsOn+2,f
 26822  23CE  0CAE               	rrf	??i1_LEDsOn+1,f
 26823  23CF  0CAD               	rrf	??i1_LEDsOn,f
 26824  23D0  0B89               	decfsz	9,f
 26825  23D1  2BCC               	goto	u866_25
 26826  23D2  082E               	movf	??i1_LEDsOn+1,w
 26827  23D3  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 26828  23D4  082D               	movf	??i1_LEDsOn,w
 26829  23D5  00A0               	movwf	i1send_2length_2bytes_IK@data1
 26830  23D6  0828               	movf	i1LEDsOn@LEDpins+1,w
 26831  23D7  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 26832  23D8  0827               	movf	i1LEDsOn@LEDpins,w
 26833  23D9  00A2               	movwf	i1send_2length_2bytes_IK@data2
 26834  23DA  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 26835  23DB  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 26836  23DC  082C               	movf	i1LEDsOn@topOrBottom+1,w
 26837  23DD  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 26838  23DE  082B               	movf	i1LEDsOn@topOrBottom,w
 26839  23DF  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 26840  23E0  31A1  21FC         	fcall	i1_send_2length_2bytes_IK
 26841  23E2  0008               	return
 26842  23E3                     __end_ofi1_LEDsOn:	
 26843                           
 26844                           	psect	text169
 26845  21FC                     __ptext169:	
 26846 ;; *************** function i1_send_2length_2bytes_IK *****************
 26847 ;; Defined at:
 26848 ;;		line 70 in file "LEDcomm.c"
 26849 ;; Parameters:    Size  Location     Type
 26850 ;;  data1           2    0[BANK0 ] unsigned int 
 26851 ;;  data2           2    2[BANK0 ] unsigned int 
 26852 ;;  latch_start     1    4[BANK0 ] unsigned char 
 26853 ;;  topOrBottom     2    5[BANK0 ] int 
 26854 ;; Auto vars:     Size  Location     Type
 26855 ;;		None
 26856 ;; Return value:  Size  Location     Type
 26857 ;;                  1    wreg      void 
 26858 ;; Registers used:
 26859 ;;		wreg, status,2, status,0, pclath, cstack
 26860 ;; Tracked objects:
 26861 ;;		On entry : 0/0
 26862 ;;		On exit  : 0/0
 26863 ;;		Unchanged: 0/0
 26864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26865 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26868 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26869 ;;Total ram usage:        8 bytes
 26870 ;; Hardware stack levels used:    1
 26871 ;; Hardware stack levels required when called:    1
 26872 ;; This function calls:
 26873 ;;		i1_send_2bytes_latchless_IK
 26874 ;;		i1_send_last_2bytes_IK
 26875 ;; This function is called by:
 26876 ;;		i1_LEDsOn
 26877 ;; This function uses a non-reentrant model
 26878 ;;
 26879                           
 26880                           
 26881                           ;psect for function i1_send_2length_2bytes_IK
 26882  21FC                     i1_send_2length_2bytes_IK:	
 26883                           
 26884                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 26885                           
 26886                           ;incstack = 0
 26887                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 26888  21FC  0020               	movlb	0	; select bank0
 26889  21FD  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 26890  21FE  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 26891  21FF  0820               	movf	i1send_2length_2bytes_IK@data1,w
 26892  2200  00F0               	movwf	i1send_2bytes_latchless_IK@data
 26893  2201  31A5  2504  31A1   	fcall	i1_send_2bytes_latchless_IK
 26894                           
 26895                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 26896  2204  0020               	movlb	0	; select bank0
 26897  2205  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 26898  2206  00F1               	movwf	i1send_last_2bytes_IK@data+1
 26899  2207  0822               	movf	i1send_2length_2bytes_IK@data2,w
 26900  2208  00F0               	movwf	i1send_last_2bytes_IK@data
 26901  2209  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 26902  220A  00FB               	movwf	??i1_send_2length_2bytes_IK
 26903  220B  087B               	movf	??i1_send_2length_2bytes_IK,w
 26904  220C  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 26905  220D  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 26906  220E  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 26907  220F  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 26908  2210  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 26909  2211  319A  2203         	fcall	i1_send_last_2bytes_IK
 26910  2213  0008               	return
 26911  2214                     __end_ofi1_send_2length_2bytes_IK:	
 26912                           
 26913                           	psect	text170
 26914  1A03                     __ptext170:	
 26915 ;; *************** function i1_send_last_2bytes_IK *****************
 26916 ;; Defined at:
 26917 ;;		line 19 in file "LEDcomm.c"
 26918 ;; Parameters:    Size  Location     Type
 26919 ;;  data            2    0[COMMON] unsigned int 
 26920 ;;  latch_start     1    2[COMMON] unsigned char 
 26921 ;;  topOrBottom     2    3[COMMON] int 
 26922 ;; Auto vars:     Size  Location     Type
 26923 ;;  send_last_2b    2    9[COMMON] int 
 26924 ;; Return value:  Size  Location     Type
 26925 ;;                  1    wreg      void 
 26926 ;; Registers used:
 26927 ;;		wreg, status,2, status,0
 26928 ;; Tracked objects:
 26929 ;;		On entry : 0/0
 26930 ;;		On exit  : 0/0
 26931 ;;		Unchanged: 0/0
 26932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26933 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26936 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26937 ;;Total ram usage:       11 bytes
 26938 ;; Hardware stack levels used:    1
 26939 ;; This function calls:
 26940 ;;		Nothing
 26941 ;; This function is called by:
 26942 ;;		i1_send_2length_2bytes_IK
 26943 ;; This function uses a non-reentrant model
 26944 ;;
 26945                           
 26946                           
 26947                           ;psect for function i1_send_last_2bytes_IK
 26948  1A03                     i1_send_last_2bytes_IK:	
 26949                           
 26950                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 26951                           
 26952                           ;incstack = 0
 26953                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 26954  1A03  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 26955  1A04  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 26956  1A05  1D03               	btfss	3,2
 26957  1A06  2A0A               	goto	i1l210
 26958  1A07  0022               	movlb	2	; select bank2
 26959  1A08  120D               	bcf	13,4	;volatile
 26960  1A09  2A0C               	goto	i1l8028
 26961  1A0A                     i1l210:	
 26962  1A0A  0022               	movlb	2	; select bank2
 26963  1A0B  100E               	bcf	14,0	;volatile
 26964  1A0C                     i1l8028:	
 26965                           
 26966                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 26967  1A0C  300F               	movlw	15
 26968  1A0D  00F9               	movwf	i1send_last_2bytes_IK@j
 26969  1A0E  3000               	movlw	0
 26970  1A0F  00FA               	movwf	i1send_last_2bytes_IK@j+1
 26971  1A10  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 26972  1A11  2A43               	goto	i1l231
 26973  1A12                     i1l214:	
 26974                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 26975                           
 26976  1A12  110C               	bcf	12,2	;volatile
 26977                           
 26978                           ;LEDcomm.c: 28: if (data & 1 << j){
 26979  1A13  3001               	movlw	1
 26980  1A14  00F5               	movwf	??i1_send_last_2bytes_IK
 26981  1A15  3000               	movlw	0
 26982  1A16  00F6               	movwf	??i1_send_last_2bytes_IK+1
 26983  1A17  0A79               	incf	i1send_last_2bytes_IK@j,w
 26984  1A18  2A1B               	goto	u800_24
 26985  1A19                     u800_25:	
 26986  1A19  35F5               	lslf	??i1_send_last_2bytes_IK,f
 26987  1A1A  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 26988  1A1B                     u800_24:	
 26989  1A1B  0B89               	decfsz	9,f
 26990  1A1C  2A19               	goto	u800_25
 26991  1A1D  0870               	movf	i1send_last_2bytes_IK@data,w
 26992  1A1E  0575               	andwf	??i1_send_last_2bytes_IK,w
 26993  1A1F  00F7               	movwf	??i1_send_last_2bytes_IK+2
 26994  1A20  0871               	movf	i1send_last_2bytes_IK@data+1,w
 26995  1A21  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 26996  1A22  00F8               	movwf	??i1_send_last_2bytes_IK+3
 26997  1A23  0877               	movf	??i1_send_last_2bytes_IK+2,w
 26998  1A24  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 26999  1A25  1903               	btfsc	3,2
 27000  1A26  2A29               	goto	i1l220
 27001                           
 27002                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 27003  1A27  150E               	bsf	14,2	;volatile
 27004                           
 27005                           ;LEDcomm.c: 30: }
 27006  1A28  2A2A               	goto	i1l8036
 27007  1A29                     i1l220:	
 27008                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 27009                           
 27010  1A29  110E               	bcf	14,2	;volatile
 27011  1A2A                     i1l8036:	
 27012                           
 27013                           ;LEDcomm.c: 33: if( j == latch_start) {
 27014  1A2A  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 27015  1A2B  00F5               	movwf	??i1_send_last_2bytes_IK
 27016  1A2C  01F6               	clrf	??i1_send_last_2bytes_IK+1
 27017  1A2D  087A               	movf	i1send_last_2bytes_IK@j+1,w
 27018  1A2E  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 27019  1A2F  1D03               	skipz
 27020  1A30  2A33               	goto	u802_25
 27021  1A31  0879               	movf	i1send_last_2bytes_IK@j,w
 27022  1A32  0675               	xorwf	??i1_send_last_2bytes_IK,w
 27023  1A33                     u802_25:	
 27024  1A33  1D03               	skipz
 27025  1A34  2A3C               	goto	i1l229
 27026                           
 27027                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 27028  1A35  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 27029  1A36  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 27030  1A37  1D03               	btfss	3,2
 27031  1A38  2A3B               	goto	i1l227
 27032  1A39  160D               	bsf	13,4	;volatile
 27033  1A3A  2A3C               	goto	i1l229
 27034  1A3B                     i1l227:	
 27035  1A3B  140E               	bsf	14,0	;volatile
 27036  1A3C                     i1l229:	
 27037                           ;LEDcomm.c: 37: }
 27038                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 27039                           
 27040  1A3C  150C               	bsf	12,2	;volatile
 27041  1A3D  30FF               	movlw	255
 27042  1A3E  07F9               	addwf	i1send_last_2bytes_IK@j,f
 27043  1A3F  30FF               	movlw	255
 27044  1A40  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 27045  1A41  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 27046  1A42  2A12               	goto	i1l214
 27047  1A43                     i1l231:	
 27048                           ;LEDcomm.c: 41: }
 27049                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 27050                           
 27051  1A43  110C               	bcf	12,2	;volatile
 27052                           
 27053                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 27054  1A44  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 27055  1A45  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 27056  1A46  1D03               	btfss	3,2
 27057  1A47  2A4A               	goto	i1l237
 27058  1A48  120D               	bcf	13,4	;volatile
 27059  1A49  0008               	return
 27060  1A4A                     i1l237:	
 27061  1A4A  100E               	bcf	14,0	;volatile
 27062  1A4B  0008               	return
 27063  1A4C                     __end_ofi1_send_last_2bytes_IK:	
 27064                           
 27065                           	psect	text171
 27066  2504                     __ptext171:	
 27067 ;; *************** function i1_send_2bytes_latchless_IK *****************
 27068 ;; Defined at:
 27069 ;;		line 49 in file "LEDcomm.c"
 27070 ;; Parameters:    Size  Location     Type
 27071 ;;  data            2    0[COMMON] unsigned int 
 27072 ;; Auto vars:     Size  Location     Type
 27073 ;;  send_2bytes_    2    6[COMMON] int 
 27074 ;; Return value:  Size  Location     Type
 27075 ;;                  1    wreg      void 
 27076 ;; Registers used:
 27077 ;;		wreg, status,2, status,0
 27078 ;; Tracked objects:
 27079 ;;		On entry : 0/0
 27080 ;;		On exit  : 0/0
 27081 ;;		Unchanged: 0/0
 27082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27086 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27087 ;;Total ram usage:        8 bytes
 27088 ;; Hardware stack levels used:    1
 27089 ;; This function calls:
 27090 ;;		Nothing
 27091 ;; This function is called by:
 27092 ;;		i1_send_2length_2bytes_IK
 27093 ;; This function uses a non-reentrant model
 27094 ;;
 27095                           
 27096                           
 27097                           ;psect for function i1_send_2bytes_latchless_IK
 27098  2504                     i1_send_2bytes_latchless_IK:	
 27099                           
 27100                           ;incstack = 0
 27101                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 27102                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 27103  2504  0022               	movlb	2	; select bank2
 27104  2505  120D               	bcf	13,4	;volatile
 27105                           
 27106                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 27107  2506  300F               	movlw	15
 27108  2507  00F6               	movwf	i1send_2bytes_latchless_IK@j
 27109  2508  3000               	movlw	0
 27110  2509  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 27111  250A  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 27112  250B  2D2B               	goto	i1l256
 27113  250C                     i1l246:	
 27114                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 27115                           
 27116  250C  110C               	bcf	12,2	;volatile
 27117                           
 27118                           ;LEDcomm.c: 56: if (data & 1 << j){
 27119  250D  3001               	movlw	1
 27120  250E  00F2               	movwf	??i1_send_2bytes_latchless_IK
 27121  250F  3000               	movlw	0
 27122  2510  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 27123  2511  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 27124  2512  2D15               	goto	u807_24
 27125  2513                     u807_25:	
 27126  2513  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 27127  2514  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 27128  2515                     u807_24:	
 27129  2515  0B89               	decfsz	9,f
 27130  2516  2D13               	goto	u807_25
 27131  2517  0870               	movf	i1send_2bytes_latchless_IK@data,w
 27132  2518  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 27133  2519  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 27134  251A  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 27135  251B  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 27136  251C  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 27137  251D  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 27138  251E  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 27139  251F  1903               	btfsc	3,2
 27140  2520  2D23               	goto	i1l252
 27141                           
 27142                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 27143  2521  150E               	bsf	14,2	;volatile
 27144                           
 27145                           ;LEDcomm.c: 58: }
 27146  2522  2D24               	goto	i1l254
 27147  2523                     i1l252:	
 27148                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 27149                           
 27150  2523  110E               	bcf	14,2	;volatile
 27151  2524                     i1l254:	
 27152                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 27153                           
 27154  2524  150C               	bsf	12,2	;volatile
 27155  2525  30FF               	movlw	255
 27156  2526  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 27157  2527  30FF               	movlw	255
 27158  2528  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 27159  2529  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 27160  252A  2D0C               	goto	i1l246
 27161  252B                     i1l256:	
 27162                           ;LEDcomm.c: 64: }
 27163                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 27164                           
 27165  252B  110C               	bcf	12,2	;volatile
 27166  252C  0008               	return
 27167  252D                     __end_ofi1_send_2bytes_latchless_IK:	
 27168                           
 27169                           	psect	text172
 27170  2FAA                     __ptext172:	
 27171 ;; *************** function _TMR0_Write8bitTimer *****************
 27172 ;; Defined at:
 27173 ;;		line 107 in file "mcc_generated_files/tmr0.c"
 27174 ;; Parameters:    Size  Location     Type
 27175 ;;  timerVal        1    wreg     unsigned char 
 27176 ;; Auto vars:     Size  Location     Type
 27177 ;;  timerVal        1    0[COMMON] unsigned char 
 27178 ;; Return value:  Size  Location     Type
 27179 ;;                  1    wreg      void 
 27180 ;; Registers used:
 27181 ;;		wreg
 27182 ;; Tracked objects:
 27183 ;;		On entry : 0/0
 27184 ;;		On exit  : 0/0
 27185 ;;		Unchanged: 0/0
 27186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27191 ;;Total ram usage:        1 bytes
 27192 ;; Hardware stack levels used:    1
 27193 ;; This function calls:
 27194 ;;		Nothing
 27195 ;; This function is called by:
 27196 ;;		_TMR0_DefaultInterruptHandler
 27197 ;; This function uses a non-reentrant model
 27198 ;;
 27199                           
 27200                           
 27201                           ;psect for function _TMR0_Write8bitTimer
 27202  2FAA                     _TMR0_Write8bitTimer:	
 27203                           
 27204                           ;incstack = 0
 27205                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 27206                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 27207  2FAA  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 27208                           
 27209                           ;tmr0.c: 110: TMR0L = timerVal;
 27210  2FAB  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 27211  2FAC  0020               	movlb	0	; select bank0
 27212  2FAD  0095               	movwf	21	;volatile
 27213  2FAE  0008               	return
 27214  2FAF                     __end_of_TMR0_Write8bitTimer:	
 27215                           
 27216                           	psect	text173
 27217  2F3D                     __ptext173:	
 27218 ;; *************** function _TMR0_StopTimer *****************
 27219 ;; Defined at:
 27220 ;;		line 91 in file "mcc_generated_files/tmr0.c"
 27221 ;; Parameters:    Size  Location     Type
 27222 ;;		None
 27223 ;; Auto vars:     Size  Location     Type
 27224 ;;		None
 27225 ;; Return value:  Size  Location     Type
 27226 ;;                  1    wreg      void 
 27227 ;; Registers used:
 27228 ;;		None
 27229 ;; Tracked objects:
 27230 ;;		On entry : 0/0
 27231 ;;		On exit  : 0/0
 27232 ;;		Unchanged: 0/0
 27233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27238 ;;Total ram usage:        0 bytes
 27239 ;; Hardware stack levels used:    1
 27240 ;; This function calls:
 27241 ;;		Nothing
 27242 ;; This function is called by:
 27243 ;;		_TMR0_DefaultInterruptHandler
 27244 ;; This function uses a non-reentrant model
 27245 ;;
 27246                           
 27247                           
 27248                           ;psect for function _TMR0_StopTimer
 27249  2F3D                     _TMR0_StopTimer:	
 27250                           
 27251                           ;tmr0.c: 94: T0CON0bits.T0EN = 0;
 27252                           
 27253                           ;incstack = 0
 27254                           ; Regs used in _TMR0_StopTimer: []
 27255  2F3D  0020               	movlb	0	; select bank0
 27256  2F3E  1397               	bcf	23,7	;volatile
 27257  2F3F  0008               	return
 27258  2F40                     __end_of_TMR0_StopTimer:	
 27259                           
 27260                           	psect	text174
 27261  22E9                     __ptext174:	
 27262 ;; *************** function _EUSART_Transmit_ISR *****************
 27263 ;; Defined at:
 27264 ;;		line 161 in file "mcc_generated_files/eusart.c"
 27265 ;; Parameters:    Size  Location     Type
 27266 ;;		None
 27267 ;; Auto vars:     Size  Location     Type
 27268 ;;		None
 27269 ;; Return value:  Size  Location     Type
 27270 ;;                  1    wreg      void 
 27271 ;; Registers used:
 27272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27273 ;; Tracked objects:
 27274 ;;		On entry : 0/0
 27275 ;;		On exit  : 0/0
 27276 ;;		Unchanged: 0/0
 27277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27282 ;;Total ram usage:        1 bytes
 27283 ;; Hardware stack levels used:    1
 27284 ;; This function calls:
 27285 ;;		Nothing
 27286 ;; This function is called by:
 27287 ;;		_INTERRUPT_InterruptManager
 27288 ;; This function uses a non-reentrant model
 27289 ;;
 27290                           
 27291                           
 27292                           ;psect for function _EUSART_Transmit_ISR
 27293  22E9                     _EUSART_Transmit_ISR:	
 27294                           
 27295                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 27296                           
 27297                           ;incstack = 0
 27298                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 27299  22E9  3008               	movlw	8
 27300  22EA  0020               	movlb	0	; select bank0
 27301  22EB  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 27302  22EC  1803               	skipnc
 27303  22ED  2B04               	goto	i1l438
 27304                           
 27305                           ;eusart.c: 166: {
 27306                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 27307  22EE  0859               	movf	_eusartTxTail,w
 27308  22EF  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 27309  22F0  0086               	movwf	6
 27310  22F1  3001               	movlw	1	; select bank3/4
 27311  22F2  0087               	movwf	7
 27312  22F3  0801               	movf	1,w
 27313  22F4  0023               	movlb	3	; select bank3
 27314  22F5  009A               	movwf	26	;volatile
 27315  22F6  3001               	movlw	1
 27316  22F7  00F0               	movwf	??_EUSART_Transmit_ISR
 27317  22F8  0870               	movf	??_EUSART_Transmit_ISR,w
 27318  22F9  0020               	movlb	0	; select bank0
 27319  22FA  07D9               	addwf	_eusartTxTail,f	;volatile
 27320                           
 27321                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 27322  22FB  3008               	movlw	8
 27323  22FC  0259               	subwf	_eusartTxTail,w	;volatile
 27324  22FD  1803               	btfsc	3,0
 27325                           
 27326                           ;eusart.c: 169: {
 27327                           ;eusart.c: 170: eusartTxTail = 0;
 27328  22FE  01D9               	clrf	_eusartTxTail	;volatile
 27329                           
 27330                           ;eusart.c: 171: }
 27331                           ;eusart.c: 172: eusartTxBufferRemaining++;
 27332  22FF  3001               	movlw	1
 27333  2300  00F0               	movwf	??_EUSART_Transmit_ISR
 27334  2301  0870               	movf	??_EUSART_Transmit_ISR,w
 27335  2302  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 27336                           
 27337                           ;eusart.c: 173: }
 27338  2303  0008               	return
 27339  2304                     i1l438:	
 27340                           
 27341                           ;eusart.c: 174: else
 27342                           ;eusart.c: 175: {
 27343                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 27344  2304  0021               	movlb	1	; select bank1
 27345  2305  1211               	bcf	17,4	;volatile
 27346  2306  0008               	return
 27347  2307                     __end_of_EUSART_Transmit_ISR:	
 27348                           
 27349                           	psect	text175
 27350  2294                     __ptext175:	
 27351 ;; *************** function _EUSART_Receive_ISR *****************
 27352 ;; Defined at:
 27353 ;;		line 180 in file "mcc_generated_files/eusart.c"
 27354 ;; Parameters:    Size  Location     Type
 27355 ;;		None
 27356 ;; Auto vars:     Size  Location     Type
 27357 ;;		None
 27358 ;; Return value:  Size  Location     Type
 27359 ;;                  1    wreg      void 
 27360 ;; Registers used:
 27361 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27362 ;; Tracked objects:
 27363 ;;		On entry : 0/0
 27364 ;;		On exit  : 0/0
 27365 ;;		Unchanged: 0/0
 27366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27371 ;;Total ram usage:        1 bytes
 27372 ;; Hardware stack levels used:    1
 27373 ;; This function calls:
 27374 ;;		Nothing
 27375 ;; This function is called by:
 27376 ;;		_INTERRUPT_InterruptManager
 27377 ;; This function uses a non-reentrant model
 27378 ;;
 27379                           
 27380                           
 27381                           ;psect for function _EUSART_Receive_ISR
 27382  2294                     _EUSART_Receive_ISR:	
 27383                           
 27384                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 27385                           
 27386                           ;incstack = 0
 27387                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 27388  2294  0023               	movlb	3	; select bank3
 27389  2295  1C9D               	btfss	29,1	;volatile
 27390  2296  2A99               	goto	i1l6798
 27391                           
 27392                           ;eusart.c: 184: {
 27393                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 27394  2297  121D               	bcf	29,4	;volatile
 27395                           
 27396                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 27397  2298  161D               	bsf	29,4	;volatile
 27398  2299                     i1l6798:	
 27399                           
 27400                           ;eusart.c: 189: }
 27401                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 27402  2299  0819               	movf	25,w	;volatile
 27403  229A  00F0               	movwf	??_EUSART_Receive_ISR
 27404  229B  0020               	movlb	0	; select bank0
 27405  229C  0858               	movf	_eusartRxHead,w
 27406  229D  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 27407  229E  0086               	movwf	6
 27408  229F  3001               	movlw	1	; select bank3/4
 27409  22A0  0087               	movwf	7
 27410  22A1  0870               	movf	??_EUSART_Receive_ISR,w
 27411  22A2  0081               	movwf	1
 27412  22A3  3001               	movlw	1
 27413  22A4  00F0               	movwf	??_EUSART_Receive_ISR
 27414  22A5  0870               	movf	??_EUSART_Receive_ISR,w
 27415  22A6  07D8               	addwf	_eusartRxHead,f	;volatile
 27416                           
 27417                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 27418  22A7  3008               	movlw	8
 27419  22A8  0258               	subwf	_eusartRxHead,w	;volatile
 27420  22A9  1803               	btfsc	3,0
 27421                           
 27422                           ;eusart.c: 194: {
 27423                           ;eusart.c: 195: eusartRxHead = 0;
 27424  22AA  01D8               	clrf	_eusartRxHead	;volatile
 27425                           
 27426                           ;eusart.c: 196: }
 27427                           ;eusart.c: 197: eusartRxCount++;
 27428  22AB  3001               	movlw	1
 27429  22AC  00F0               	movwf	??_EUSART_Receive_ISR
 27430  22AD  0870               	movf	??_EUSART_Receive_ISR,w
 27431  22AE  07D6               	addwf	_eusartRxCount,f	;volatile
 27432  22AF  0008               	return
 27433  22B0                     __end_of_EUSART_Receive_ISR:	
 27434  007E                     btemp	set	126	;btemp
 27435  007E                     int$flags	set	126
 27436  007E                     wtemp0	set	126


Data Sizes:
    Strings     525
    Constant    804
    Data        48
    BSS         242
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     62      80
    BANK2            80      2      80
    BANK3            80      4      73
    BANK4            80      0      72
    BANK5            80     28      68
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           16      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2c_ISR$2826	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(COMMON[2]), trunc@expon(BANK1[2]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_83(CODE[10]), STR_82(CODE[5]), STR_81(CODE[5]), STR_80(CODE[7]), 
		 -> STR_79(CODE[8]), STR_78(CODE[5]), STR_77(CODE[5]), STR_76(CODE[11]), 
		 -> STR_75(CODE[13]), STR_74(CODE[7]), STR_73(CODE[8]), STR_72(CODE[10]), 
		 -> STR_71(CODE[11]), STR_70(CODE[15]), STR_69(CODE[14]), STR_68(CODE[12]), 
		 -> STR_67(CODE[8]), STR_66(CODE[8]), STR_65(CODE[2]), STR_64(CODE[5]), 
		 -> STR_63(CODE[5]), STR_62(CODE[2]), STR_61(CODE[4]), STR_60(CODE[4]), 
		 -> STR_59(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_85(CODE[23]), STR_84(CODE[3]), STR_56(CODE[4]), STR_55(CODE[4]), 
		 -> STR_54(CODE[17]), STR_53(CODE[18]), STR_52(CODE[18]), STR_51(CODE[17]), 
		 -> STR_50(CODE[28]), STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[25]), 
		 -> STR_46(CODE[11]), STR_45(CODE[8]), STR_44(CODE[8]), STR_43(CODE[8]), 
		 -> STR_42(CODE[31]), STR_41(CODE[11]), STR_40(CODE[8]), STR_39(CODE[8]), 
		 -> STR_38(CODE[8]), STR_37(CODE[26]), STR_36(CODE[30]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[2]), STR_31(CODE[4]), 
		 -> STR_30(CODE[2]), STR_29(CODE[4]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[3]), 
		 -> STR_10(CODE[16]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[13]), STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[2]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 40
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv_fifo_downstroke(BANK5[40]), drv_fifo_upstroke(BANK4[40]), 
		 -> drv_write@buff(BANK0[2]), 

    S931$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S931$data_ptr	PTR unsigned char  size(2) Largest target is 40
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv_fifo_downstroke(BANK5[40]), drv_fifo_upstroke(BANK4[40]), 
		 -> drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 40
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv_fifo_downstroke(BANK5[40]), drv_fifo_upstroke(BANK4[40]), 
		 -> drv_write@buff(BANK0[2]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _main_initialize->_LED_setBrightnessRange
    _main_initialize->_LEDsPwr
    _drv_init->_drv_write
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _drv_reset->_drv_write
    _execCmd->_setDrvPiezoOnTime
    _timedActiveHeatOn->_LEDsOn
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setH2OnTime->___ftmul
    _setH1OffTime->___ftmul
    _setDrvPiezoOnTime->___ftmul
    ___ftmul->___awtoft
    _round->_trunc
    ___fttol->___ftmul
    ___altoft->___ftpack
    ___ftneg->___altoft
    ___ftadd->___ftmul
    ___awtoft->___awdiv
    _setDrvGain->_drv_write
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_setBrightnessRange
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _doMove->_LEDsOn
    _drv_write_wvfrm->_i2c_masterOperation
    _drv_write_DC->_drv_write
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    ___awdiv->___wmul
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _main_initialize->_drv_init
    _drv_init->_calcDownstroke
    _drv_init->_calcUpstroke
    _execCmd->_setDrvPeak
    _zeroPosition->_printf
    _timedActiveHeatOn->_printf
    _stop->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->_printf
    _setHeaterPostTime->_printf
    _setH2OnTime->___fttol
    _setH1OffTime->___fttol
    _setDrvPiezoOnTime->___fttol
    _setDrvPeak->_calcDownstroke
    _setDrvPeak->_calcUpstroke
    _calcUpstroke->_round
    _calcDownstroke->_round
    _round->_trunc
    _trunc->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _drv_read->_printf
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_execCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main_initialize->_drv_init

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  481513
                                              1 BANK2      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                    _main_initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    8490
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2508
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    2554
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _main_initialize                                      0     0      0  106689
             _LED_setBrightnessRange
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _drv_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drv_init                                             5     1      4   79637
                                             60 BANK1      1     1      0
                                              0 BANK3      4     0      4
                     _calcDownstroke
                       _calcUpstroke
                          _drv_reset
                          _drv_write
                           _i2c_open
                     _i2c_setAddress
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddress                                       2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     216
                                             19 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setI2cISR                                2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setBusCollisionISR                       2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drv_reset                                            1     1      0    8616
                                             21 BANK1      1     1      0
                          _drv_write
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              1     1      0  319824
                                              0 BANK2      1     1      0
                          _commCheck
                             _doMove
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                       _setH1OffTime
                        _setH2OnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                               _stop
                  _timedActiveHeatOn
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        12    10      2    6243
                                             41 BANK0      2     2      0
                                             21 BANK1     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _timedActiveHeatOn                                   13     7      6   11232
                                             21 BANK1     13     7      6
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stop                                                 2     0      2    6113
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    6221
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    6221
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                          8     4      4    6391
                                             41 BANK0      4     4      0
                                             21 BANK1      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9401
                                             21 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9746
                                             21 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4   11195
                                             21 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     2     0      2    6221
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2    6221
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setH2OnTime                                          2     0      2   20640
                                             37 BANK1      2     0      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setH1OffTime                                         2     0      2   20640
                                             37 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   20640
                                             44 BANK0      2     2      0
                                             37 BANK1      2     0      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4600
                                             38 BANK0      6     0      6
                                              0 BANK1     10    10      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2   62059
                                             60 BANK1      2     0      2
                     _calcDownstroke
                       _calcUpstroke
                             _printf
 ---------------------------------------------------------------------------------
 (3) _calcUpstroke                                         9     7      2   25020
                                             51 BANK1      9     7      2
                            ___awdiv
                           ___awtoft
                            ___fttol
                             ___wmul
                             _printf
                              _round
 ---------------------------------------------------------------------------------
 (3) _calcDownstroke                                       9     7      2   30818
                                             51 BANK1      9     7      2
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftneg
                            ___fttol
                             ___wmul
                             _printf
                              _round
 ---------------------------------------------------------------------------------
 (4) _round                                                6     3      3   10969
                                             45 BANK1      6     3      3
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftneg
                             ___wmul (ARG)
                              _trunc
 ---------------------------------------------------------------------------------
 (5) _trunc                                                9     6      3    4887
                                             44 BANK0      1     1      0
                                             37 BANK1      8     5      3
                           ___altoft
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                6     2      4     566
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4    1121
                                             23 BANK1     14    10      4
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (6) ___altoft                                             8     4      4    2802
                                             25 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     390
                                             33 BANK0      3     0      3
                           ___altoft (ARG)
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    5377
                                             10 BANK1     13     7      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2086
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    3290
                                             32 BANK0      6     3      3
                            ___awdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2464
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   14883
                                             21 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           12     8      4    6391
                                             21 BANK1     12     8      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          6     4      2    6283
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    6212
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    6113
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    6212
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   41075
                                             52 BANK1      3     1      2
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_read                                             6     4      2    7981
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                   7     3      4   14236
                                             21 BANK1      7     3      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12745
                                             42 BANK1     10     8      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (2) _LED_setBrightnessRange                              14    10      4    3417
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8979
                                             41 BANK0      1     1      0
                                             38 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         17    13      4    6453
                                             21 BANK1     17    13      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                           18    18      0   16872
                                             41 BANK1     18    18      0
                             _doMove
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           36    36      0   23307
                                             41 BANK1      8     8      0
                                              0 BANK5     28    28      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                              13    11      2   16612
                                             28 BANK1     13    11      2
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                     _calcHeaterPins
                       _drv_write_DC
                    _drv_write_wvfrm
 ---------------------------------------------------------------------------------
 (3) _drv_write_wvfrm                                      1     1      0    1767
                                             26 BANK0      1     1      0
                _i2c_masterOperation
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4    9930
                                             21 BANK1      7     3      4
                            ___awdiv
                          _drv_write
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8616
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    6113
                                              0 BANK1     21    15      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     632
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1061
                                             23 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    4804
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     194
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     108
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     108
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0    1795
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (12) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (13) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (13) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (13) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0    1083
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0    1083
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (14) i1_LEDsOn                                           10     4      6    1052
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (15) i1_send_2length_2bytes_IK                            8     1      7     819
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_last_2bytes_IK                              11     6      5     390
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (16) i1_send_2bytes_latchless_IK                          8     6      2     165
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_Write8bitTimer                                 1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
           ___wmul (ARG)
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write_wvfrm
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
           ___wmul (ARG)
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write_wvfrm
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
           ___wmul (ARG)
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write_wvfrm
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _calcDownstroke
         ___awdiv
           ___wmul (ARG)
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___wmul
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _round
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul (ARG)
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp (ARG)
       _calcUpstroke
         ___awdiv
           ___wmul (ARG)
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___wmul
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _round
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul (ARG)
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setH1OffTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setH2OnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _stop
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _timedActiveHeatOn
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _main_initialize
     _LED_setBrightnessRange
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___awdiv (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _drv_init
       _calcDownstroke
         ___awdiv
           ___wmul (ARG)
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___wmul
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _round
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul (ARG)
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp (ARG)
       _calcUpstroke
         ___awdiv
           ___wmul (ARG)
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___wmul
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _round
           ___awdiv (ARG)
             ___wmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul (ARG)
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp (ARG)
       _drv_reset
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _i2c_open
         _i2c1_driver_open
         _i2c1_driver_setBusCollisionISR
         _i2c1_driver_setI2cISR
         _mssp1_clearIRQ
       _i2c_setAddress
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      2      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      49      11       91.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      48      13       90.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1C2      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50     1C      44      16       85.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1C2      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              10      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jul 23 12:37:15 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
                            ___altoft@exp 003F          __end_of_TMR2_SetInterruptHandler 209E  
                                       pc 0002              __end_ofdrv2665@drv_fifo_sine 187A  
                  setLEDBrightnessRange@r 00B5             _do_I2C_SEND_RESTART$intlevel0 2057  
                       ??_getMotionStatus 0049                               __CFG_CP$OFF 0000  
                           ___altoft@sign 0040                              ___awdiv@sign 003D  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 2053  
                            _startAbsMove 22CC                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 11E6                              ___ftadd@exp1 00B6  
                            ___ftadd@exp2 00B5                               i1_do_I2C_RX 277D  
                             i1_do_I2C_TX 1B7D                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00B4                                       l210 1D66  
                                     l202 1EDA                                       l220 1D89  
                                     l214 1D6F                                       l231 1DA9  
                                     l304 16D6                                       l314 1732  
                                     l227 1D9E                                       l252 25FD  
                                     l308 16DF                                       l237 1DB3  
                                     l229 1DA0                                       l254 25FF  
                                     l246 25E3                                       l511 210D  
                                     l256 2607                                       l281 1585  
                                     l426 249E                                       l756 1DE7  
                                     l772 19DD                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                  i1_do_I2C_DO_NACK_RESTART 2F96  
            __size_of_i2c_masterOperation 0024                      _returnStop$intlevel0 2FD2  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 2199  
                   __size_of_do_I2C_RESET 000B                                       wreg 0009  
                            _startRelMove 2279                           _setHeaterToggle 15CA  
                   __end_ofi1_returnReset 0004                           ?i1_mssp1_setIRQ 0070  
                      i1_i2c1_driver_stop 2F4C           i2c1_driver_setBusCollisionISR@f 0031  
                                    S9608 2000                  setLEDBrightnessRange@tOB 00B7  
                       setDrvGain@setGain 00B8                              ?_EUSART_Read 0070  
                                    l1111 0997                                      l1114 09CA  
                                    l1117 09E4                                      l1119 09E9  
                                    l1231 0933                                      l1228 090C  
                                    l2133 225F                                      l1550 0EF4  
                                    l1551 0F4A                                      l1545 0EF2  
                                    l1548 0F13                                      l1566 0FFF  
                                    l1831 1F73                                      l1832 1F7B  
                                    l1824 1F60                                      l1648 22B9  
                                    l6010 2617                                      l6002 2665  
                                    l1915 0891                             i1returnStop@p 0070  
                                    l6014 2635                                      l1855 0D3E  
                                    l6008 260F                                      l8102 22B3  
                                    l8016 1CD6                                      l8122 1C72  
                                    l7410 205F                                      l8202 1594  
                                    l8140 1C91                                      l7404 2057  
                                    l8204 15A0                                      l8212 15C3  
                                    l8150 1CAC                                      l7422 2077  
                                    l8302 11E9                                      l8070 079F  
                                    l9110 06B5                                      l9102 0697  
                                    l8128 1C7D                                      l7432 2FD8  
                                    l7416 206F                                      l7512 2590  
                                    l7504 2584                                      l7520 1DBA  
                                    l8064 0770                                      l8208 15BC  
                                    l9200 055D                                      l6552 1A55  
                                    l8154 1CB4                                      l8146 1CA3  
                                    l8138 1C85                                      l8218 14EB  
                                    l9202 0568                                      l5930 2187  
                                    l9130 0700                                      l9122 06E2  
                                    l9114 06C4                                      l9106 06A6  
                                    l9050 05D4                                      l9042 05B1  
                                    l7700 1D8B                                      l7428 2FD2  
                                    l7508 258D                                      l7532 1DC6  
                                    l7524 1DC0                                      l7612 24CB  
                                    l7604 24BA                                      l7452 24B3  
                                    l8076 07E3                                      l8068 0796  
                                    l9204 0570                                      l9140 072C  
                                    l6822 2384                                      l7518 2593  
                                    l7550 19BF                                      l7438 2493  
                                    l7622 1F3D                                      l8166 240F  
                                    l9206 0578                                      l6582 26A0  
                                    l6574 1A94                                      l6566 1A71  
                                    l6558 1A5A                                      l9134 0716  
                                    l9126 06F1                                      l9118 06D3  
                                    l9070 061F                                      l9062 0601  
                                    l9054 05E3                                      l9046 05C5  
                                    l7456 20F8                                      l7392 2047  
                                    l7528 1DC3                                      l9304 02D8  
                                    l9224 0DBF                                      l8344 19AF  
                                    l8336 1991                                      l7632 1F65  
                                    l7624 1F47                                      l9160 03BD  
                                    l6584 26A8                                      l6576 1A95  
                                    l9144 073E                                      l7466 20A2  
                                    l7474 2130                                      l7482 2103  
                                    l7490 20D0                                      l7546 1E08  
                                    l7538 1DC9                                      l8290 2235  
                                    l8530 0A18                                      l8514 09AD  
                                    l9226 0DCF                                      l7634 1F6D  
                                    l7626 1F4C                                      l7618 1F36  
                                    l7810 1919                                      l8362 0BF0  
                                    l9170 040F                                      l9162 03D1  
                                    l9138 0725                                      l9090 066A  
                                    l9082 064C                                      l9074 062E  
                                    l9066 0610                                      l9058 05F2  
                                    l7564 19DF                                      l7652 1D1C  
                                    l7740 0F24                                      l7732 0EF6  
                                    l9244 0E51                                      l8620 193C  
                                    l7820 083D                                      l8356 0BD3  
                                    l9180 0473                                      l9172 0423  
                                    l9164 03DC                                      l9156 0395  
                                    l6588 26CB                                      l9148 0751  
                                    l7582 25B5                                      l7398 204F  
                                    l7574 19E5                                      l7662 1D4A  
                                    l7654 1D2A                                      l9270 00EF  
                                    l8622 1941                                      l8614 1935  
                                    l8630 194D                                      l8390 0C6C  
                                    l8374 0C3A                                      l9190 0512  
                                    l9182 0492                                      l9174 0437  
                                    l9166 03E7                                      l9158 03A9  
                                    l5990 2197                                      l9094 0679  
                                    l9086 065B                                      l9078 063D  
                                    l7576 25AF                                      l7568 19E2  
                                    l7920 247E                                      l7728 0EEF  
                                    l8616 1938                                      l8632 1960  
                                    l7808 1909                                      l7840 087B  
                                    l8712 163C                                      l9192 0531  
                                    l9184 04B1                                      l9176 044B  
                                    l9168 03FB                                      l7578 25B2  
                                    l7594 25BC                                      l7498 2067  
                                    l7922 2484                                      l7666 1D55  
                                    l7682 27EC                                      l7770 0F9D  
                                    l7754 0F59                                      l9274 0161  
                                    l8810 1B37                                      l9610 1952  
                                    l8618 193A                                      l8386 0C5E  
                                    l8378 0C48                                      l8706 1601  
                                    l9194 053C                                      l9186 04D0  
                                    l9178 045F                                      l9098 0688  
                                    l7692 1D68                                      l7588 25B9  
                                    l7676 27C6                                      l7780 0FAB  
                                    l7764 0F70                                      l9292 0193  
                                    l7940 0CCE                                      l7852 08A2  
                                    l8580 136B                                      l8572 1311  
                                    l9196 0547                                      l9188 04F3  
                                    l5996 263F                                      l9540 1FB2  
                                    l7926 248E                                      l7678 27D4  
                                    l7686 27F7                                      l7774 0FA5  
                                    l7758 0F6A                                      l7782 0ED3  
                                    l9278 0173                                      l7846 0888  
                                    l7838 086D                                      l7862 26DE  
                                    l8734 0909                                      l8726 08D0  
                                    l9198 0552                                      l5998 2647  
                                    l9550 1FD9                                      l8824 2427  
                                    l8832 243F                                      l8816 1B73  
                                    l8752 14A5                                      l8760 14CB  
                                    l7936 0CC7                                      l7848 0894  
                                    l8576 1359                                      l9560 1FAB  
                                    l9552 1FDE              TMR0_Load8bitPeriod@periodVal 0031  
                                    l9298 01A3                                      l8842 0A85  
                                    l8826 242F                                      l8754 14C1  
                                    l7970 0D1D                                      l7946 0CDD  
                                    l8850 1227                                      l9562 1FAF  
                                    l7796 2115                                      l8828 2437  
                                    l8596 2777                                      l7964 0D0A  
                                    l8772 12C4                                      l8780 12F4  
                                    l8852 121F                                      l7878 16D8  
                                    l8846 0AD2                                      l8838 0A3C  
                                    l7982 0D50                                      l7966 0D14  
                                    l7958 0CF7                                      l8774 12EA  
                                    l8870 1250                                      l8862 1244  
                                    l8854 122C                                      l9566 1FF6  
                                    l7888 1705                                      l8792 1AEA  
                                    l7976 0D30                                      l7968 0D19  
                                    l8872 1279                                      l7986 0D62  
                                    l7978 0D3A                           __end_of_LEDsPwr 1F2D  
                                    l7996 0D7D                                      l8868 124C  
                                    l8798 1B26                                      l8878 1289  
                                    STR_1 3032                                      STR_2 3032  
                                    STR_3 2863                       drv_init@output_gain 01E5  
                                    STR_4 290F                                      STR_5 293D  
                                    STR_6 28F2                                      STR_7 303C  
                                    STR_8 303C                                      STR_9 303C  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _PMD0 0911  
                                    _PMD1 0912                                      _PMD2 0913  
                                    u7015 1F42                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    u7035 1F5B                                      u7125 1D1F  
                                    u7215 27E2                                      u7055 1F68  
                                    u8105 23ED                                      u7145 1D2B  
                                    u7225 27ED                                      u7155 1D3F  
                                    u7165 1D4B                                      u8125 078A  
                                    u7334 25EE                                      u7335 25EC  
                                    u8135 07B0                                      u9015 0ACB  
                                    u7095 1F82                                      u7264 1D7A  
                                    u7265 1D78                                      u7425 0F93  
                                    u8410 1529                                      u8235 1C88  
                                    u7195 27C9                                      u8411 1527  
                                    u8315 1ED3                                      u8420 152A  
                                    u7285 1D95                                      u7525 0844  
                                    u8325 1EE8                                      u8430 1546  
                    ?_do_I2C_SEND_RESTART 0070                                      u8255 1C92  
                                    u8175 22BA                                      u8335 1F10  
                                    u8440 1547                                      u8265 1C9C  
                                    u8185 22BF                                      u8505 1761  
                                    u8275 1CA4                                      u7555 086E  
                                    u9500 0E94                                      u8605 0C50  
                                    u9510 0E9E                                      u7654 16F2  
                                    u8710 132A                                      u7655 16F0  
                                    u7815 0CF8                                      u7495 190E  
                                    u9520 0E9F                                      u7664 1712  
                                    u9505 0E90                                      u7665 1710  
                                    u7905 0D31                                      u7585 0889  
                                    u8705 130F                                      u9450 0E18  
                                    u8475 1208                                      u8635 0C6D  
                                    u8715 1326                                      u9620 01F0  
                                    u9460 0E22                                      u9445 0DFF  
                                    u7845 0D0B                                      u8485 165B  
                                    u8645 0C74                                      u8565 0C03  
                                    u9630 01F1                                      u9550 010F  
                                    u9470 0E23                                      u8910 12B2  
                                    u9623 01EC                                      u9615 01A1  
                                    u9455 0E14                                      u8575 0C19  
                                    u8735 1369                                      u9720 030B  
                                    u8840 1478                                      u8920 12D5  
                                    u9705 02D6                                      u9545 00ED  
                                    u8833 0927                                      u9730 031D  
                                    u9650 0215                                      u9570 0157  
                                    u8770 15DF                                      u8675 09A1  
                                    u9715 02E9                                      u9555 010B  
                                    u8755 274C                                      u7875 0D1E  
                                    u8595 0C49                                      u8915 12AE  
                                    u9740 031E                                      u9660 0281  
                                    u9644 01FA                                      u9580 0158  
                                    u8940 1B06                                      u8693 0A0C  
                                    u8685 09D8                                      u9725 0307  
                                    u9645 01F8                                      u8845 1474  
                                    u8925 12D1                                      u9750 0345  
                                    u9670 0282                                      u8870 149A  
                                    u8790 1615                                      u9663 027D  
                                    u9655 0211                                      u9575 0153  
                                    u9495 0E7B                                      u8775 15DB  
                                    u9760 0357                                      u8880 14B3  
                                    u8945 1B01                                      u9770 0358  
                                    u9690 02A5                                      u8970 1B53  
                                    u9755 0341                                      u9595 0171  
                                    u8875 1496                                      u8795 1611  
                                    u9684 028A                                      u9685 0288  
                                    u8885 14AF                                      u9695 02A1  
                                    u8975 1B4E                                      u8895 129A  
                                    _TMR2 001D                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0008                       ?i1_i2c1_driver_stop 0070  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _atoi 121D  
                                    _main 1F92                              ___ftpack@arg 0031  
               __size_of_do_I2C_SEND_STOP 0008                    __size_of_do_I2C_DO_ACK 0008  
                            ___ftpack@exp 0034                           _TMR0_StartTimer 2F5B  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      _stop 24DC  
                       ??i1_do_I2C_DO_ACK 0070                             __CFG_BOREN$ON 0000  
                            ?_LED_getData 00B5                   i1_i2c1_driver_getRXData 2F52  
                   ?_do_I2C_SEND_ADR_READ 0070                             __CFG_BORV$LOW 0000  
         ??_i2c1_driver_clearBusCollision 0070                                      start 0050  
                        _setHeaterPreTime 216B                     __size_of_zeroPosition 0075  
                           _i2c_setBuffer 21E7                    LED_test_openshort@type 00B5  
                 ??_setLEDBrightnessRange 004E                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                              ___ftmul@cntr 00A8  
                _send_2bytes_latchless_IK 25DA                           __end_of_i2c_ISR 24DC  
                            ___ftmul@sign 00A9                        timedActiveHeatOn@t 00C0  
                ??_do_I2C_DO_NACK_RESTART 0031                             i1_do_I2C_IDLE 2FB9  
                         _drv_write_wvfrm 222C                              ___fttol@exp1 00C4  
                            ?_setH2OnTime 00C5                             i1_do_I2C_RCEN 2FC8  
                            ___fttol@lval 00C0                   __end_of_TMR0_Initialize 21D2  
                            _do_I2C_RESET 20F4                            i1returnReset@p 0070  
            __size_of_TMR0_Write8bitTimer 0005            ??_TMR0_DefaultInterruptHandler 007C  
                           ?_EUSART_Write 0070            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 20CC                      ??i1_i2c1_driver_stop 0070  
                                   ?_atoi 0037                  __end_of_i2c1_driver_open 20F4  
                                   ?_main 0070                           __end_of___awdiv 1CB9  
                __end_of_i2c1_driver_stop 2F6A                           __end_of___ftadd 0DA3  
                                   STR_10 28FF                                     STR_11 303C  
                                   STR_20 303C                                     STR_12 302E  
                                   STR_21 303C                                     STR_13 303C  
                                   STR_30 2863                                     STR_22 303C  
                                   STR_14 303F                                     STR_23 303C  
                                   STR_15 303C                                     STR_31 3032  
                                   STR_32 2863                                     STR_24 303C  
                                   STR_16 303C                                     STR_40 29F6  
                                   STR_25 303C                                     STR_17 303C  
                                   STR_33 3045                                     STR_41 2995  
                           __CFG_WDTE$OFF 0000                                     STR_34 303C  
                                   STR_18 303C                                     STR_26 303F  
                                   STR_50 2865                                     STR_42 2828  
                    send_last_2bytes_IK@j 003A                                     STR_27 303C  
                                   STR_19 303C                                     STR_43 29EE  
                                   STR_35 3042                                     STR_51 28EE  
                                   STR_44 29E6                                     STR_28 303F  
                                   STR_60 3022                                     STR_52 28CB  
                                   STR_36 2847                                     STR_53 28CB  
                                   STR_45 29F6                                     STR_29 3032  
                                   STR_61 3026                                     STR_37 2881  
                                   STR_46 2995                                     STR_62 3024  
                                   STR_38 29EE                                     STR_70 292E  
                                   STR_54 28DD                                     STR_55 302A  
                                   STR_63 3005                                     STR_39 29E6  
                                   STR_71 297F                                     STR_47 289B  
                                   STR_56 302A                                     STR_64 300F  
                                   STR_80 29FE                                     STR_48 29BD  
                                   STR_72 29A0                                     STR_57 29FC  
                                   STR_65 304A                                     STR_81 3019  
                                   STR_73 29D6                                     STR_49 29B4  
                                   STR_58 29FC                                     STR_82 3014  
                                   STR_74 2A05                                     STR_66 29C6  
                                   STR_59 301E                                     STR_67 29CE  
                                   STR_83 29AA                                     STR_75 295A  
                                   STR_84 28C8                                     STR_76 298A  
                                   STR_68 2973                                     STR_77 3000  
                                   STR_69 294C                                     STR_85 28B4  
                                   STR_78 300A                                     STR_79 29DE  
                         __end_of___ftneg 20B0                           __end_of___lldiv 1D5E  
                                   ?_stop 00B5                                     u10107 1396  
                                   u10117 13A5                                     u10207 0A0F  
                                   u10127 13BA                                     u10217 2111  
                                   u10137 13CE                                     u10147 08B1  
                         __end_of___ftmul 0C9F                                     u10157 092A  
                                   u10167 1992                                     u10087 1F99  
                                   u10177 1728                                     u10097 138A  
                                   u10187 09A4                           ___awdiv@divisor 0037  
                                   u10197 09DB                           __end_of___llmod 2800  
                         __end_of___fttol 08AB                                     _T2CON 001F  
              __end_of_i2c1_driver_TXData 2FE0                            __CFG_DEBUG$OFF 0000  
                        __end_ofi1_LEDsOn 23E3                                     i1l210 1A0A  
                                   i1l220 1A29                                     i1l214 1A12  
                                   i1l231 1A43                                     i1l227 1A3B  
                                   i1l252 2523                                     i1l237 1A4A  
                                   i1l229 1A3C                                     i1l254 2524  
                                   i1l246 250C                                     i1l256 252B  
                                   i1l362 0013                                     i1l371 0043  
                                   i1l365 0022                                     i1l438 2304  
                                   i1l367 002F                                     i1l376 004B  
                                   i1l369 0039                                     i1l756 1BA9  
                                   i1l772 2798                           ___awdiv@counter 003C  
                        __end_of_LEDpower 304A                                     _OSCEN 091D  
                                   _TMR0H 0016                                     _TMR0L 0015  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                        __end_ofsin@coeff_a 292E  
                      __end_ofsin@coeff_b 2973         __size_of_TMR0_SetInterruptHandler 0009  
           i1send_2length_2bytes_IK@data1 0020             i1send_2length_2bytes_IK@data2 0022  
               ?_TMR0_SetInterruptHandler 0031                               i2c_open@ret 0034  
                        __end_of_TMR0_ISR 2151                          __end_of_TMR2_ISR 215E  
                         __end_of_execCmd 058B                        __size_ofi1_i2c_ISR 0020  
                           ___awtoft@sign 0045                __end_of_i2c1_driver_isNACK 216B  
                         __end_of_dpowers 2828                            _WDT_Initialize 2F9A  
                                   _frexp 26D1                                     _errno 015E  
                       _timedActiveHeatOn 08AB                           __end_of_isdigit 2189  
            ?i1_do_I2C_SEND_RESTART_WRITE 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                           ___ftpack@sign 0035                                     atoi@a 003C  
                                   atoi@s 003E                                     _putch 2FE0  
                                   _round 1E0F                     ??_do_I2C_SEND_RESTART 0031  
                                   _trunc 1CB9                 send_2bytes_latchless_IK@j 0037  
                       ?i1_mssp1_clearIRQ 0070    __end_of_i2c1_driver_setBusCollisionISR 20B9  
 __size_of_i2c1_driver_setBusCollisionISR 0009            _i2c1_driver_setBusCollisionISR 20B0  
                            _zeroPosition 1301                                     pclath 000A  
                      setDrvPiezoOnTime@t 00C5                   __size_of_mssp1_clearIRQ 0003  
                    i1_i2c1_driver_TXData 2FB4                        ?_timedActiveHeatOn 00B5  
      __end_ofi1_send_2bytes_latchless_IK 252D                i1_send_2bytes_latchless_IK 2504  
                    setLEDPwr@topOrBottom 00B7                            _i2c_setAddress 207B  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                      ??i1_mssp1_clearIRQ 0070                                     wtemp0 007E  
                         _TMR2_StartTimer 2F5E                           __end_of_stricmp 26D1  
        __size_of_TMR2_LoadPeriodRegister 0005                           __end_of_strcspn 263A  
                         __end_of_toupper 2199                         ??_main_initialize 004E  
                          ?_i2c_setBuffer 0031                     __size_of_calcUpstroke 007F  
                     _send_last_2bytes_IK 1D5E                      i1_i2c1_driver_isNACK 2120  
                       _setHeaterPostTime 21AB                       ??_timedActiveHeatOn 00BB  
                           _fsmStateTable 0248                           __initialization 0052  
          __size_ofi1_do_I2C_SEND_RESTART 0004                                _i2c_poller 2115  
           __end_ofi1_do_I2C_SEND_RESTART 2F8A                            _remainingSteps 0142  
                            __end_of_atoi 128E                                _i2c_status 0120  
                          ?i1_do_I2C_IDLE 0070                              __end_of_main 2000  
                      ?_setHeaterPostTime 00B5                            ?i1_do_I2C_RCEN 0070  
                            __end_of_stop 2504                 LED_readConfig@topOrBottom 00C6  
              __end_ofi1_do_I2C_SEND_STOP 2F8E                          __end_of_i2c_open 1AE3  
                          ??_EUSART_Write 0031                   __end_of_TMR2_Initialize 21AB  
                           ?_setH1OffTime 00C5               ?_INTERRUPT_InterruptManager 0070  
                           ?_LED_testComm 00CA                   __end_of_setHeaterToggle 1647  
                          i1_do_I2C_RESET 2FF2                             _do_I2C_DO_ACK 2063  
                                  ??_atoi 0039                  _TMR2_SetInterruptHandler 2095  
                                  ??_main 016F                             ___fttol@sign1 00BF  
                     ??_setHeaterPostTime 0049                                    ??_stop 0049  
           __size_of_i2c1_driver_sendNACK 0004                           _TMR2_WriteTimer 2FAF  
                    ?_send_last_2bytes_IK 0031                             ?_drv_write_DC 00B5  
                               ??_LEDsPwr 0048                    __end_of_WDT_Initialize 2F9E  
           __size_of_i2c1_driver_resetBus 0001                               drv_read@reg 004B  
                      setHeaterPostTime@t 00B5                 __end_of_timedActiveHeatOn 0960  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                              ?_setMoveMask 00B5  
                      setHeaterToggle@num 00B5                          _piezo_on_time_ms 00EA  
                 __end_of_TMR0_StartTimer 2F5E                             _drv_fifo_sine 187A  
                                  ?_frexp 0031                          __end_of___altoft 1931  
                        ___llmod@dividend 0043                      __size_of_getMoveMask 004D  
                        ___awdiv@dividend 0039                          __end_of___awtoft 2426  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELB 018D                                    _ANSELC 018E  
                  __end_of_i2c_setAddress 2083                          __end_of___ftpack 1F92  
                                  ?_round 00CD                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 0017                                    _T0CON1 0018  
                                  ?_trunc 00C5                              _calcUpstroke 1647  
                 ?i1_do_I2C_SEND_ADR_READ 0070                      drv2665@drv_fifo_sine 1800  
                   ?i1_i2c1_driver_TXData 0070                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l8036 1A2A                                    i1l8028 1A0C  
               ??i1_i2c1_driver_getRXData 0070                                    i1l6628 2FF2  
                                  i1l8420 2F82                                    i1l6638 2FB9  
                                  i1l8414 2F7E                                    i1l6662 2FC8  
                                  i1l8432 2F8A                                    i1l8450 11E4  
                                  i1l8426 2F86                                    i1l8444 2F96  
                                  i1l8454 0002                                    i1l8438 2F92  
                                  i1l9326 2372                                    i1l9318 2362  
                                  i1l6798 2299                                    i1l8912 2453  
                                  i1l8904 2449                                    i1l8920 1B7D  
                                  i1l8908 2450                                    i1l8932 1B89  
                                  i1l8924 1B83                                    i1l8918 2456  
                                  i1l8950 277D                                    i1l8928 1B86  
                                  i1l8882 2033                                    i1l8890 2FF9  
                                  i1l8946 1BC5                                    i1l8938 1B8C  
                                  i1l8964 279A                                    i1l8982 255C  
                                  i1l8974 27A0                                    i1l8976 2556  
                                  i1l8968 279D                                    i1l8978 2559  
                                  i1l8994 2563                                    i1l8898 2F8E  
                                  i1l8988 2560                                    _LEDsOn 23E3  
           ??i1_do_I2C_SEND_RESTART_WRITE 0070                                    u800_24 1A1B  
                                  u800_25 1A19                                    u802_25 1A33  
                                  _OSCFRQ 091F                                    u807_24 2515  
                                  u807_25 2513                    ??_do_I2C_SEND_ADR_READ 0032  
                         drv_write_DC@val 00B5                                    _TX1REG 019A  
                                  u866_25 23CC                      __size_of_getPosition 003F  
                                  _WDTCON 0097                                    _TX1STA 019E  
                               ??_i2c_ISR 0036               __size_of_LED_test_openshort 007C  
               __end_of_setHeaterPostTime 21BE                   __end_of_drv_write_wvfrm 2245  
                   ?i1_i2c1_driver_isNACK 0070                            __CFG_PWRTE$OFF 0000  
           LED_test_openshort@topOrBottom 00B7                     _i2c1_driver_getRXData 2F6D  
                     LED_getData@readData 00C0                   __size_of_LED_readConfig 0029  
                     _do_I2C_RX$intlevel0 19BF                     __size_ofi1_returnStop 0002  
             __end_of_do_I2C_DO_NACK_STOP 2073                         __end_ofi1_i2c_ISR 2382  
                                  ___wmul 22B0                                 ??___awdiv 003B  
   __end_of_i2c1_driver_clearBusCollision 2F46    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 2F43                                 ??___ftadd 00B0  
                          __CFG_STVREN$ON 0000                                    _doMove 0960  
                               ??___ftneg 0044                                 ??___lldiv 0039  
                               ??___ftmul 00A0                                 ??___llmod 0047  
                               ??___fttol 00BB               i1send_2bytes_latchless_IK@j 0076  
         __size_of_do_I2C_DO_NACK_RESTART 0008                         startAbsMove@steps 00B5  
                          ??_setH1OffTime 004C                          __end_of_drv_init 13EB  
                        __end_of_drv_read 19BB                    __end_ofi1_do_I2C_RESET 2FF9  
                        __end_of_drv_sine 11E4                   ?_send_2length_2bytes_IK 003C  
                     _EUSART_Transmit_ISR 22E9                            ??_LED_testComm 00CC  
                        ?_TMR0_Initialize 0070                          ___awdiv@quotient 003E  
                          ?_do_I2C_DO_ACK 0070                          __end_of_parseCmd 075C  
                                  _printf 0ECE                                    _strchr 225F  
                                  _strtok 1A4C                                    _strspn 263A  
                               ??_execCmd 004E                     ___ftmul@f3_as_product 00A5  
                  i2c1_driver_setI2cISR@f 0031                     i2c_setAddress@address 0032  
                   ??_send_last_2bytes_IK 0036               __end_of_i2c1_driver_sendACK 2FA2  
                          _PMD_Initialize 203B            __end_of_do_I2C_DO_ADDRESS_NACK 25AB  
                          ??_drv_write_DC 00B9                                 ??_isdigit 0031  
                         ?_WDT_Initialize 0070               __end_of_i2c1_driver_restart 2F67  
                            ?_returnReset 0031                   timedActiveHeatOn@onTime 00B5  
           _do_I2C_DO_NACK_STOP$intlevel0 206F                     _i2c1_driver_setI2cISR 20B9  
             __end_of_i2c1_driver_startRX 2F6D                                    round@f 00D0  
                      LEDsPwr@topOrBottom 0046                                    round@x 00CD  
       __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024            __end_ofi1_do_I2C_SEND_ADR_READ 203B  
                 __end_of_TMR2_StartTimer 2F61  TMR2_SetInterruptHandler@InterruptHandler 0031  
TMR0_SetInterruptHandler@InterruptHandler 0031                 ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                     _calcDownstroke$2824 00D7             timedActiveHeatOn@topOrBorBoth 00B9  
                                  trunc@i 00C8                                    trunc@x 00C5  
                               ??_stricmp 0035                                 ??_strcspn 003A  
                               ??_toupper 0031                      ?_EUSART_Transmit_ISR 0070  
                         ?_i2c_setAddress 0070                         i1_do_I2C_TX_EMPTY 2556  
                    __size_of_EUSART_Read 0020                         _SYSTEM_Initialize 21D2  
          __size_ofi1_send_last_2bytes_IK 0049                   __end_of__initialization 00D7  
                              ___altoft@c 0039             __end_ofi1_send_last_2bytes_IK 1A4C  
                         ??_i2c_setBuffer 0035            _do_I2C_SEND_ADR_READ$intlevel0 2130  
                        _do_I2C_SEND_STOP 205B                              i1_returnStop 11E4  
                              ___ftadd@f1 00AA                                ___ftadd@f2 00AD  
                         _getMotionStatus 2426                     i1_do_I2C_DO_NACK_STOP 2F92  
                      __size_of_do_I2C_RX 0048                        __size_of_do_I2C_TX 0059  
                      ?i1_do_I2C_TX_EMPTY 0070                        ?_SYSTEM_Initialize 0070  
                      __size_of_doAbsMove 02B3                          _moveVector_downs 004E  
              __end_of_mssp1_IRQisEnabled 20E0                       _i2c_masterOperation 246D  
                __size_of_do_I2C_TX_EMPTY 002F                                ___ftneg@f1 0041  
                              ___awtoft@c 0040                                 ?i1_LEDsOn 0027  
                         ??i1_do_I2C_IDLE 0070                           ??i1_do_I2C_RCEN 0070  
                              ___ftmul@f1 0046                                ___ftmul@f2 0049  
              __end_of_mssp1_waitForEvent 2115                      __size_of_LED_getData 0087  
                              ___fttol@f1 00B7                               ?_i2c_poller 0070  
                          __pcstackCOMMON 0070                ??i1_do_I2C_DO_NACK_RESTART 0070  
                     _do_I2C_TX$intlevel0 1DBA                       ??i1_do_I2C_TX_EMPTY 0070  
          __end_of_send_2length_2bytes_IK 222C                              __pidataBANK0 2FA6  
                            __pidataBANK1 2FEC                              __pidataBANK2 2FE6  
                            __pidataBANK4 23A2                       ??_SYSTEM_Initialize 0033  
                              _absCommand 013E                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                        __size_of_doRelMove 012B  
                 __end_of_TMR2_WriteTimer 2FB4                     i1_i2c1_driver_sendACK 2F76  
                           __end_of_frexp 2707                     i1i2c1_driver_TXData@d 0070  
                         ?i1_do_I2C_RESET 0070                             __end_of_putch 2FE6  
                           __end_of_round 1E6A                             __end_of_trunc 1D0B  
                        ?_TMR2_Initialize 0070                     i1_i2c1_driver_restart 2F49  
       __size_ofi1_send_2length_2bytes_IK 0018                    __end_of_PMD_Initialize 2043  
                        ?_setHeaterToggle 00B5                      __size_of_setH2OnTime 004E  
               ?i1_send_2length_2bytes_IK 0020                        __size_of_getActive 004D  
                            ?i1_do_I2C_RX 0070                              ?i1_do_I2C_TX 0070  
                   i1_i2c1_driver_startRX 2F4F                          ??i1_mssp1_setIRQ 0070  
                    ?_i2c_masterOperation 0070              ??i1_do_I2C_SEND_RESTART_READ 0070  
                      __size_of_commCheck 00C7                  __end_of_setHeaterPreTime 217A  
                            LED_getData@j 00C4                __size_of_timedActiveHeatOn 00B5  
                         i1_do_I2C_DO_ACK 2F8E               __end_of_TMR0_Load8bitPeriod 2FC3  
               __end_ofi1_do_I2C_TX_EMPTY 2580                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 2073                    ??i1_i2c1_driver_TXData 0070  
                          _do_I2C_TX$1134 0034                                   ??_frexp 0035  
               __end_of_SYSTEM_Initialize 21E7                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0033                                   ??_round 004D  
                                 ??_trunc 004C                            _mssp1_clearIRQ 2F73  
                              __pbssBANK0 004E                                __pbssBANK1 00DE  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                __pbssBANK5 02A0  
                 __size_of_calcHeaterPins 0076                       _TMR0_Write8bitTimer 2FAA  
              ??_send_2bytes_latchless_IK 0033                      __end_of_EUSART_Write 24B6  
                                 ?_LEDsOn 0044                            _moveVector_ups 00E6  
                 _TMR2_LoadPeriodRegister 2FC3                                 ?_i2c_open 0070  
                 drv_write_DC@duration_ms 00B7                                _activeMask 00E2  
                ??i1_i2c1_driver_sendNACK 0070                           drv2665@drv_sine 1000  
                      __size_of_drv_reset 000A                    ??i1_i2c1_driver_isNACK 0070  
              __size_of_setHeaterPostTime 0013                        __size_of_drv_write 0024  
             __size_of_EUSART_Receive_ISR 001C                        __size_of_setLEDPwr 001E  
                  ?_i2c1_driver_getRXData 0070                  ??i1_i2c1_driver_resetBus 0070  
                        ?_drv_write_wvfrm 0070                              drv_read@buff 004C  
                              ??i1_LEDsOn 002D                     _do_I2C_IDLE$intlevel0 20A2  
                          _SSP1DATPPSbits 0E21              __size_of_i2c_busCollisionISR 0003  
                              __pmaintext 1F92                                doAbsMove@i 00CB  
                           ??_do_I2C_IDLE 0031                        __size_of_setActive 0076  
                           ??_do_I2C_RCEN 0031          __end_of_TMR0_SetInterruptHandler 2095  
                 __size_of_TMR0_StopTimer 0003            __size_of_setLEDBrightnessRange 001E  
                                 ?___wmul 0031             __end_of_setLEDBrightnessRange 2325  
                              ??_TMR0_ISR 007C                           __CFG_PPS1WAY$ON 0000  
                              _cmd_struct 01B8                                ??_TMR2_ISR 0071  
                                 ?_doMove 00BC                           ??_do_I2C_DO_ACK 0031  
                              __pintentry 0004                         startRelMove@steps 00B5  
                   setHeaterToggle@topOrB 00B7                      ?_TMR0_Write8bitTimer 0070  
                               ?___altoft 0039                       i2c_setBuffer@buffer 0031  
                               ?___awtoft 0040                                 ?___ftpack 0031  
                          _SSP1CLKPPSbits 0E20                                   ?_printf 00A0  
                         ?_PMD_Initialize 0070                                   ?_strchr 0031  
          ?_i2c1_driver_clearBusCollision 0070                                   ?_strtok 003F  
                                 ?_strspn 0038                     ??_i2c_masterOperation 0037  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 1A03  
                       __end_of_do_I2C_TX 1E0F                         ?_i2c1_driver_stop 0070  
                           _eusartRxCount 0056                         __end_of_doAbsMove 038E  
                ?i1_do_I2C_SEND_ADR_WRITE 0070                           calcDownstroke@i 00DA  
                                 _SP1BRGH 019C                                   _SP1BRGL 019B  
                  ?_i2c1_driver_setI2cISR 0031                                   _LEDsPwr 1EC9  
                      ??_i2c1_driver_open 0031                        ??_i2c1_driver_stop 0031  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                           ?_mssp1_setIRQ 0070                           _main_initialize 0AE2  
                                 _NVMADRH 0892                                   _NVMADRL 0891  
                                 _NVMDATH 0894                                   _OSCTUNE 091E  
                                 _NVMDATL 0893                                   _NVMCON2 0896  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                  __end_of_mssp1_clearIRQ 2F76                                   _SSP1MSK 0213  
                 __end_of_getMotionStatus 2449                   __size_of_TMR2_StopTimer 0003  
                     __size_of_i2c_poller 000B                              setH2OnTime@t 00C5  
                 __size_of_calcDownstroke 00B3                          ?_TMR2_StartTimer 0070  
                 ??_do_I2C_SEND_ADR_WRITE 0032       _do_I2C_SEND_RESTART_WRITE$intlevel0 204F  
                       __end_of_doRelMove 0ECE               ??_do_I2C_SEND_RESTART_WRITE 0031  
                    __size_of_setMoveMask 0073                      __end_of_setH1OffTime 1C19  
                  ?i1_do_I2C_DO_NACK_STOP 0070                        _i2c1_driver_TXData 2FDA  
                    __end_of_LED_testComm 154E                                ??_i2c_open 0033  
                               ?_drv_init 01E5                                 ?_drv_read 00B5  
                         __size_of_LEDsOn 0021                        _i2c1_driver_i2cISR 0164  
             ?i1_send_2bytes_latchless_IK 0070         LED_setBrightnessRange@topOrBottom 0046  
                       __end_of_getActive 1B30                                   _i2c_ISR 24B6  
                               ?_parseCmd 0045                         __end_of_commCheck 0AE2  
                    __end_of_drv_write_DC 121D                     _returnReset$intlevel0 2FD8  
                   _do_I2C_RCEN$intlevel0 20D0                        _i2c1_driver_isNACK 215E  
                     ?_i2c1_driver_TXData 0070                              drv_write@reg 004B  
              ??_TMR2_SetInterruptHandler 0033                            _LED_readConfig 252D  
        _do_I2C_DO_ADDRESS_NACK$intlevel0 2584                        __end_of_TMR0_RANGE 303C  
                      __end_of_TMR2_RANGE 3039                    ?i1_i2c1_driver_sendACK 0070  
                              doRelMove@j 00D9                    __size_ofi1_returnReset 0002  
                                 ___awdiv 1C67                                   ___ftadd 0C9F  
                                 ___ftneg 20A7                                   ___lldiv 1D0B  
               __size_ofi1_mssp1_clearIRQ 0003                           __size_of___wmul 001C  
                                 ___ftmul 0BB6                                   ___llmod 27BD  
                                 ___fttol 0824                     ??_TMR0_Write8bitTimer 0070  
                         __size_of_doMove 00BB                    ?i1_i2c1_driver_restart 0070  
                        ?_TMR2_WriteTimer 0070                         ??_do_I2C_TX_EMPTY 0031  
                              ??___altoft 003D                       ?_i2c1_driver_isNACK 0070  
                                 _cmdRead 0160                    ?i1_i2c1_driver_startRX 0070  
                              ??___awtoft 0043                                ??___ftpack 0036  
                 __end_ofi1_do_I2C_DO_ACK 2F92                                   __ptext1 058B  
                                 __ptext2 1A4C                                   __ptext3 263A  
                                 __ptext4 260A                                   __ptext5 225F  
                                 __ptext6 269D                                   __ptext7 2189  
                                 __ptext8 121D                                   __ptext9 217A  
             __size_ofi1_i2c1_driver_stop 0003                       __end_of_do_I2C_IDLE 20A7  
                         __size_of_printf 0132                       __end_of_do_I2C_RCEN 20D6  
                       __end_of_drv_reset 20EA                                   _execCmd 038E  
                         __size_of_strchr 001A                           __size_of_strtok 004B  
                         __size_of_strspn 0030                         __end_of_drv_write 0824  
                                 _dpowers 2800                  ??_LED_setBrightnessRange 0048  
                   _OSCILLATOR_Initialize 20C2                                   _readIdx 0052  
                               _T2CONbits 001F                                   doMove@t 00C3  
                                 _isdigit 217A                            setActive@onOff 00B7  
                       __end_of_setLEDPwr 2343               __end_of_do_I2C_SEND_RESTART 205B  
                          ??_mssp1_setIRQ 0031                      ??_i2c1_driver_TXData 0031  
                ??_PIN_MANAGER_Initialize 0031                    i2c_masterOperation@ret 0039  
                      calcUpstroke@maxVal 00D3                        i1_do_I2C_SEND_STOP 2F8A  
                 __end_ofdrv2665@drv_sine 10F2                         __end_of_setActive 14D7  
                         ?_mssp1_clearIRQ 0070                _do_I2C_SEND_STOP$intlevel0 205F  
              __size_ofi1_do_I2C_TX_EMPTY 002A                 ??_TMR2_LoadPeriodRegister 0031  
                _do_I2C_SEND_RESTART_READ 2043                __size_of_SYSTEM_Initialize 0015  
                              _setDrvGain 1931                         setActive@probeNum 00B5  
                                 clrloop0 2139                                _setDrvPeak 2343  
                                 _stricmp 269D                                   _strcspn 260A  
                                 _toupper 2189                      __size_of_returnReset 0006  
                    end_of_initialization 00D7                      drv_init@idle_timeout 01E7  
                    ??_i2c1_driver_isNACK 0031                                _second_top 015A  
                              getActive@i 00B7               TMR0_Write8bitTimer@timerVal 0070  
                              ??_drv_init 00DC                                ??_drv_read 0049  
                            setLEDPwr@pwr 00B5                                   init_ram 07F4  
            __end_of_i2c1_driver_sendNACK 2FA6                       ?i1_do_I2C_SEND_STOP 0070  
                                 initloop 07F5           __size_ofi1_i2c1_driver_sendNACK 0004  
                              ??_parseCmd 0046                    __end_of_LED_readConfig 2556  
                       _EUSART_Initialize 2245              __end_of_i2c1_driver_resetBus 2033  
                         ___lldiv@divisor 0031           __size_ofi1_i2c1_driver_resetBus 0001  
                         ___lldiv@counter 003E                        ?_EUSART_Initialize 0070  
                                 printf@c 00B4                                   printf@f 00A0  
                              _motionType 0055                 _do_I2C_SEND_RESTART_WRITE 204B  
                       LEDsOn@topOrBottom 0048                     i1_do_I2C_SEND_RESTART 2F86  
        __end_ofi1_do_I2C_DO_ADDRESS_NACK 246D           __end_ofi1_do_I2C_SEND_ADR_WRITE 3000  
                     ??_EUSART_Initialize 0031                          ??_WDT_Initialize 0031  
                               i1_i2c_ISR 2362                      ??i1_do_I2C_SEND_STOP 0070  
                                 strspn@i 003C                                _returnStop 2FCE  
                 __end_of_main_initialize 0BB6                  _TMR0_SetInterruptHandler 208C  
                               _PORTCbits 000E                  __end_of_do_I2C_SEND_STOP 2063  
      __end_ofi1_do_I2C_SEND_RESTART_READ 2F82                i1_do_I2C_SEND_RESTART_READ 2F7E  
                    __size_ofi1_do_I2C_RX 0040                      __size_ofi1_do_I2C_TX 004E  
                  _inter_step_interval_ms 0168                          ??_i2c_setAddress 0031  
                           ??_getMoveMask 0049                     __size_of_EUSART_Write 0025  
                           i1_returnReset 0002                               returnStop@p 0031  
                        ?_getMotionStatus 00B5                             ??_getPosition 0049  
                     LED_test_openshort@j 00BA                          __CFG_FEXTOSC$OFF 0000  
                          _calcHeaterPins 13EB          __end_of_send_2bytes_latchless_IK 260A  
              __end_of_LED_test_openshort 15CA                   TMR2_WriteTimer@timerVal 0070  
                               _RXPPSbits 0E24                 __end_of_EUSART_Initialize 225F  
          send_last_2bytes_IK@latch_start 0033               LED_setBrightnessRange@range 0044  
                          __end_of_LEDsOn 2404          __end_ofi1_send_2length_2bytes_IK 2214  
                         ?_LED_readConfig 00C6             __size_of_do_I2C_SEND_ADR_READ 000C  
                        ??i1_do_I2C_RESET 0070                               ___ftmul@exp 00A4  
                            ??_i2c_poller 0037                            _TMR0_StopTimer 2F3D  
                             _do_I2C_IDLE 209E                               _do_I2C_RCEN 20CC  
                       __size_ofi1_LEDsOn 0021                   LED_testComm@topOrBottom 00CA  
    __end_of_TMR2_DefaultInterruptHandler 208C     __size_of_TMR2_DefaultInterruptHandler 0009  
            _TMR2_DefaultInterruptHandler 2083               __end_of_send_last_2bytes_IK 1DB6  
                           ?_startAbsMove 00B5                            __end_of___wmul 22CC  
                          __end_of_doMove 0A1B                              _EUSART_Write 2491  
                       __size_of_TMR0_ISR 000D                                ?i1_i2c_ISR 0070  
                       __size_of_TMR2_ISR 000D                        _mssp1_IRQisEnabled 20D6  
                  i1_i2c1_driver_sendNACK 2F7A                          ?i1_do_I2C_DO_ACK 0070  
                  ?_OSCILLATOR_Initialize 0070              __size_of_do_I2C_DO_NACK_STOP 0008  
        TMR2_LoadPeriodRegister@periodVal 0031                            __end_of_printf 1000  
                      _mssp1_waitForEvent 210A       __size_ofi1_send_2bytes_latchless_IK 0029  
                  i1_i2c1_driver_resetBus 2F3C                            __end_of_strchr 2279  
         __size_of_LED_setBrightnessRange 0098                   ?_do_I2C_DO_NACK_RESTART 0070  
                          __end_of_strtok 1A97                            __end_of_strspn 266A  
                       setHeaterPreTime@t 00B5                       start_initialization 0052  
                           ?_startRelMove 00B5                         ?_setHeaterPreTime 00B5  
                     _i2c_busCollisionISR 2F46                     __size_of_setH1OffTime 004E  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0033  
                     ?_mssp1_IRQisEnabled 0070                            ?i1_returnReset 0070  
                ?i1_i2c1_driver_getRXData 0070                    __end_of_calcHeaterPins 1461  
                   __size_of_LED_testComm 0077                            _TMR2_StopTimer 2F40  
                           ??_EUSART_Read 0031                            _calcDownstroke 174D  
     __end_ofi1_do_I2C_SEND_RESTART_WRITE 2F86               i1_do_I2C_SEND_RESTART_WRITE 2F82  
                            _first_bottom 0156                        ??_setHeaterPreTime 0049  
                             ?_setDrvGain 00B5                               ?_setDrvPeak 00DC  
                     ?_mssp1_waitForEvent 0070                             _second_bottom 014E  
                             putch@txData 0033                        __end_of_i2c_poller 2120  
            __size_of_i2c1_driver_sendACK 0004                           i2c_open@address 0035  
                     __end_of_getMoveMask 1B7D                   i2c_setBuffer@bufferSize 0033  
                                ??_LEDsOn 004A                   ??_i2c1_driver_getRXData 0031  
                   __size_of_drv_write_DC 0037                                frexp@value 0031  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                         ___llmod@divisor 003F                             ??_LED_getData 00B9  
                         ___llmod@counter 0048                     __end_of_i2c_setBuffer 21FC  
                     __end_of_getPosition 277D                         __size_of_i2c_open 004C  
                  __end_of_TMR0_StopTimer 2F40                       _heater_post_time_ms 016C  
                   i1_send_last_2bytes_IK 1A03       LED_setBrightnessRange@LED_configReg 00A0  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                    __end_of_mssp1_setIRQ 2F73                              _drv_peak_val 00EE  
                    ??_mssp1_IRQisEnabled 0031                          i1_do_I2C_TX$1134 0073  
                              LEDsPwr@pwr 0044                          ??_PMD_Initialize 0031  
                   __end_ofi1_do_I2C_IDLE 2FBE                     __end_ofi1_do_I2C_RCEN 2FCE  
                                ??___wmul 0035                    ?i1_do_I2C_SEND_RESTART 0070  
                    ??_mssp1_waitForEvent 0031                             ??_setH2OnTime 004C  
                                ??_doMove 00BE                          i1_mssp1_clearIRQ 2F58  
                          ??_startAbsMove 0049                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005A                               __pdataBANK1 00EA  
                             __pdataBANK2 0168                               __pdataBANK4 0248  
                    calcDownstroke@maxVal 00D3                 _do_I2C_TX_EMPTY$intlevel0 25AF  
                            _setH1OffTime 1BCB             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0031                         _setDrvPiezoOnTime 1E6A  
                            _LED_testComm 14D7                                  ??_printf 00A6  
                 ??_i2c1_driver_setI2cISR 0033                          ?_main_initialize 0070  
                                ??_strchr 0035            i1send_2bytes_latchless_IK@data 0070  
          __end_of_do_I2C_DO_NACK_RESTART 207B                                  ??_strtok 0041  
                                ??_strspn 003A                         __size_of___altoft 003D  
                    _i2c1_driver_sendNACK 2FA2                         __size_of___awtoft 0022  
                       __size_of___ftpack 0065                        ?_setDrvPiezoOnTime 00C5  
                             __pbssBIGRAM 2790               __end_of_EUSART_Transmit_ISR 2307  
                          ??_startRelMove 0049                  i1_do_I2C_DO_ADDRESS_NACK 2449  
                  __end_of_TMR2_StopTimer 2F43                            setDrvGain@gain 00B5  
                             __pbssCOMMON 007D                    __end_of_calcDownstroke 1800  
                                ?_LEDsPwr 0044                                 ___latbits 0003  
                    _i2c1_driver_resetBus 2032                              _drv_write_DC 11E6  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK2 016E                             __pcstackBANK3 01E5  
                           __pcstackBANK5 02C8         __size_ofi1_do_I2C_DO_NACK_RESTART 0004  
                __size_of_TMR2_Initialize 0012                                 _do_I2C_RX 19BB  
               ?i1_do_I2C_DO_NACK_RESTART 0070                                 _do_I2C_TX 1DB6  
                         ?_calcHeaterPins 0070                   ??i1_do_I2C_DO_NACK_STOP 0070  
                               _doAbsMove 00DB                  __size_of_setHeaterToggle 007D  
                            _isdigit$2203 0031                       ??_setDrvPiezoOnTime 004C  
                           ?_zeroPosition 00B5                             LEDsOn@LEDpins 0044  
          __size_of_do_I2C_SEND_ADR_WRITE 000B             __size_ofi1_i2c1_driver_TXData 0005  
              __end_of_EUSART_Receive_ISR 22B0             __end_of_do_I2C_SEND_ADR_WRITE 210A  
              __size_of_EUSART_Initialize 001A                 __size_of_i2c1_driver_open 000A  
                              sin@coeff_a 291F                                sin@coeff_b 2967  
                            doMove@t_1585 00C5                              doMove@t_1586 00C7  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
         _do_I2C_SEND_ADR_WRITE$intlevel0 2103          __size_ofi1_do_I2C_SEND_ADR_WRITE 0007  
                     __end_of_EUSART_Read 23A2              __size_of_TMR0_Load8bitPeriod 0005  
                               _doRelMove 0DA3                           _do_I2C_TX_EMPTY 25AB  
                       parseCmd@cmdString 0047                     _TMR0_InterruptHandler 01E3  
                               __pnvBANK0 005E                                 __pnvBANK3 01E1  
                  _LED_setBrightnessRange 075C                   ??i1_i2c1_driver_sendACK 0070  
                __size_of_TMR0_StartTimer 0003                         __size_of_drv_init 0075  
                       __size_of_drv_read 0047                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070             __size_ofi1_i2c1_driver_isNACK 000C  
                  _PIN_MANAGER_Initialize 266A                   ??i1_i2c1_driver_restart 0070  
                               _getActive 1AE3                         __size_of_parseCmd 01D1  
                            setDrvPeak@pk 00DC                       __end_of_drv_address 304D  
                    EUSART_Read@readValue 0032                   ??i1_i2c1_driver_startRX 0070  
                          ??_do_I2C_RESET 0031                  i1_send_2length_2bytes_IK 21FC  
                     __end_of_LED_getData 174D                                  ?___awdiv 0037  
                               __ptext100 2F6D                                 __ptext101 2FA2  
                               __ptext110 1C67                                 __ptext102 2032  
                               __ptext111 13EB                                 __ptext103 2F6A  
                               __ptext120 2199                                 __ptext112 2F5E  
                               __ptext104 2FD4                                 __ptext121 2095  
                               __ptext113 2F5B                                 __ptext105 2FCE  
                               __ptext130 2362                                 __ptext122 21BE  
                               __ptext114 23E3                                 __ptext106 2F67  
                               __ptext131 2F58                                 __ptext123 208C  
                               __ptext115 2214                                 __ptext107 2F64  
                               __ptext140 2033                                 __ptext132 277D  
                               __ptext124 203B                                 __ptext116 1D5E  
                               __ptext108 2F9E                                 __ptext141 2F8A  
                               __ptext133 1B7D                                 __ptext125 266A  
                               __ptext117 25DA                                 __ptext109 2F61  
                                ?___ftadd 00AA                                 __ptext150 2FB4  
                               __ptext142 2F86                                 __ptext134 2449  
                               __ptext126 20C2                                 __ptext118 21D2  
                               __ptext151 2F52                                 __ptext143 2F82  
                               __ptext135 2F96                                 __ptext127 2245  
                               __ptext119 2F9A                                 __ptext160 2F46  
                               __ptext152 2F7A                                 __ptext144 2F7E  
                               __ptext136 2F92                                 __ptext128 2382  
                               __ptext161 2F43                                 __ptext153 2F3C  
                               __ptext145 2FB9                                 __ptext137 2F8E  
                               __ptext170 1A03                                 __ptext162 2151  
                               __ptext154 2F4F                                 __ptext146 2FF2  
                               __ptext138 2FC8                                 __ptext171 2504  
                               __ptext163 2083                                 __ptext155 0002  
                               __ptext147 2556                                 __ptext139 2FF9  
                               __ptext172 2FAA                                 __ptext164 2FAF  
                               __ptext156 11E4                                 __ptext148 2F55  
                               __ptext173 2F3D                                 __ptext165 2F40  
                               __ptext157 2F4C                                 __ptext149 2120  
                               __ptext174 22E9                                 __ptext166 2144  
                               __ptext158 2F49                                 __ptext175 2294  
                               __ptext167 2707                                 __ptext159 2F76  
                               __ptext168 23C2                                 __ptext169 21FC  
             __end_of_i2c_masterOperation 2491                                  ?___ftneg 0041  
                                ?___lldiv 0031                                  ?___ftmul 0046  
                                ?___llmod 003F                                  ?___fttol 00B7  
                               _commCheck 0A1B                 __end_of_setDrvPiezoOnTime 1EC9  
                ??_do_I2C_DO_ADDRESS_NACK 0031                         _calcUpstroke$2823 00D7  
             _i2c1_driver_busCollisionISR 0166                              _eusartRxHead 0058  
                     __size_of_setDrvGain 0043         __size_of_send_2bytes_latchless_IK 0030  
                            _eusartTxHead 007D                       __size_of_setDrvPeak 001F  
                            _eusartRxTail 0057                 ?_send_2bytes_latchless_IK 0031  
                __size_of_drv_write_wvfrm 0019                              _eusartTxTail 0059  
                         doAbsMove@i_1601 00CF                           doAbsMove@i_1603 00CD  
                   __end_of_do_I2C_DO_ACK 206B                     _setLEDBrightnessRange 2307  
                             ??i1_i2c_ISR 0075              ??_INTERRUPT_InterruptManager 007C  
                               __pswtext1 2000                ??_do_I2C_SEND_RESTART_READ 0031  
                   ?_i2c1_driver_sendNACK 0070           __end_ofi1_i2c1_driver_getRXData 2F55  
                 _eusartTxBufferRemaining 005E                                  ?_execCmd 0070  
                ??i1_do_I2C_SEND_ADR_READ 0071                          ??_mssp1_clearIRQ 0031  
                                _BAUD1CON 019F                       __end_of_setH2OnTime 1C67  
                         ??i1_returnReset 0071                                  ?_isdigit 0070  
                  LED_testComm@readResult 00CE                           ?_TMR2_StopTimer 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                         ?_calcDownstroke 00D3                                 _first_top 0152  
                             _getMoveMask 1B30                   send_last_2bytes_IK@data 0031  
                           ??_setMoveMask 0049                     __end_of_drv_fifo_sine 18F4  
                               _drv_reset 20E0                         parseCmd@paramIter 0048  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                               _drv_write 0800                                ?_doAbsMove 0070  
                       _i2c1_driver_start 2F61                            ??_zeroPosition 00B7  
             send_2length_2bytes_IK@data1 003C               send_2length_2bytes_IK@data2 003E  
                               _setLEDPwr 2325                            __size_of_frexp 0036  
          send_last_2bytes_IK@topOrBottom 0034                                  ?_stricmp 0033  
                                ?_strcspn 0038                                  ?_toupper 0070  
                           ?_calcUpstroke 00D3                               _getPosition 273E  
                 __size_ofi1_mssp1_setIRQ 0003                            __size_of_putch 0006  
                          __size_of_round 005B                            __size_of_trunc 0052  
                       _i2c_ISR$intlevel0 24BA                        ?_i2c1_driver_start 0070  
                          _eusartRxBuffer 01A0                             zeroPosition@i 0049  
                               _setActive 1461                         ??_TMR0_Initialize 0033  
                          _eusartTxBuffer 01A8                            ___wmul@product 0035  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                    ?i1_send_last_2bytes_IK 0070  
                              ?_doRelMove 0070                  ??_send_2length_2bytes_IK 0043  
                     __size_of_returnStop 0006                 i1send_last_2bytes_IK@data 0070  
                               clear_ram0 2138                                  _PIE0bits 0090  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
             __end_of_TMR0_Write8bitTimer 2FAF                       ??_i2c1_driver_start 0031  
                                i1_LEDsOn 23C2                             setH1OffTime@t 00C5  
     __size_of_INTERRUPT_InterruptManager 004C                                  _LEDpower 3048  
              ??_TMR0_SetInterruptHandler 0033                                  _PIR0bits 0010  
                                _PIR1bits 0011                                ?_getActive 00B5  
                  _currentPositions_steps 2790                        _heater_pre_time_ms 00EC  
                LED_testComm@oldConfigReg 00D0                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR0_ISR 2144  
                                _TMR2_ISR 2151                                ?_commCheck 00D4  
                                _SSP1STAT 0214                __end_ofi1_i2c1_driver_stop 2F4F  
                       ___wmul@multiplier 0031                         ?_do_I2C_SEND_STOP 0070  
             ?i1_do_I2C_SEND_RESTART_READ 0070                                printf@flag 00B2  
                              printf@prec 00AC            ??_TMR2_DefaultInterruptHandler 0071  
       __size_of_TMR2_SetInterruptHandler 0009                  __size_of_TMR2_WriteTimer 0005  
               __end_of_i2c1_driver_start 2F64                             ??_returnReset 0032  
                      ??_do_I2C_SEND_STOP 0031                 ?_TMR2_SetInterruptHandler 0031  
             __size_of_i2c1_driver_TXData 0006                                ?_drv_reset 0070  
                       _drv_fifo_upstroke 0220                          __size_of_LEDsPwr 0064  
       __end_of_do_I2C_SEND_RESTART_WRITE 2053                                ?_drv_write 0049  
                          ??_calcUpstroke 00D5                               _EUSART_Read 2382  
                 __end_of_do_I2C_TX_EMPTY 25DA                         doAbsMove@allThere 00C9  
       send_2length_2bytes_IK@latch_start 0040       i1send_2length_2bytes_IK@latch_start 0024  
                              ?_setLEDPwr 00B5                          ??_LED_readConfig 0049  
                    __end_of_startAbsMove 22E9              __size_of_do_I2C_SEND_RESTART 0008  
             __size_of_i2c1_driver_isNACK 000D                    LED_getData@topOrBottom 00B5  
                 _do_I2C_DO_ACK$intlevel0 2067                                  _i2c_open 1A97  
                              ?_setActive 00B5                       __end_of_setMoveMask 1301  
                           ?i1_returnStop 0070                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0033                               _drv_address 304C  
                       ??_setHeaterToggle 00B9                       _do_I2C_DO_NACK_STOP 206B  
                               frexp@eptr 0034                               _LED_getData 16C6  
                        __size_of_i2c_ISR 0026                           i1LEDsOn@LEDpins 0027  
                           drv_write@data 0049                             drv_write_DC@i 00BA  
                           drv_write@buff 004C                      __end_of_startRelMove 2294  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                      _LED_test_openshort 154E                   ?i1_i2c1_driver_sendNACK 0070  
                 ??_OSCILLATOR_Initialize 0031                __size_of_setDrvPiezoOnTime 005F  
                             _setH2OnTime 1C19                    ?_setLEDBrightnessRange 00B5  
                       ??_TMR0_StartTimer 0031                       _i2c1_driver_sendACK 2F9E  
                        __size_of___awdiv 0052                          __size_of___ftadd 0104  
                        __size_of___ftneg 0009           __size_of_do_I2C_DO_ADDRESS_NACK 002B  
        i1send_last_2bytes_IK@latch_start 0072                          __size_of___lldiv 0053  
                                ___altoft 18F4                          __size_of___ftmul 00E9  
                     i2c1_driver_TXData@d 0031                          __size_of___llmod 0043  
                        __size_of___fttol 0087                    ??_i2c1_driver_sendNACK 0031  
                                ___awtoft 2404                   ?i1_i2c1_driver_resetBus 0070  
                                ___ftpack 1F2D          ??_i2c1_driver_setBusCollisionISR 0033  
         ?_i2c1_driver_setBusCollisionISR 0031                             ??i1_do_I2C_RX 0070  
                           ??i1_do_I2C_TX 0071        _do_I2C_SEND_RESTART_READ$intlevel0 2047  
                     _i2c1_driver_restart 2F64                                 parseCmd@p 004A  
                               parseCmd@s 0045               __size_ofi1_do_I2C_SEND_STOP 0004  
                           LEDsPwr@pwrAll 00A0                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 2F6A                       ?_LED_test_openshort 00B5  
            __end_of_do_I2C_SEND_ADR_READ 2138                    ??_i2c1_driver_resetBus 0031  
         __size_ofi1_do_I2C_SEND_ADR_READ 0008                      _demoHeaterToggle_bot 01B0  
                        __size_of_execCmd 01FD                  ?_TMR2_LoadPeriodRegister 0070  
                    _demoHeaterToggle_top 01B4                                _T0CON0bits 0017  
                       ??_drv_write_wvfrm 003A                          __size_of_isdigit 000F  
                                _demoLong 005A                              _mssp1_setIRQ 2F70  
                             ??_do_I2C_RX 0031                               ??_do_I2C_TX 0032  
                             ??_doAbsMove 02C8                                  __ptext10 0AE2  
                                __ptext11 1376                                  __ptext20 08AB  
                                __ptext12 207B                                  __ptext21 24DC  
                                __ptext13 1A97                                  __ptext30 21AB  
                                __ptext22 2279                                  __ptext14 20B9  
                                __ptext31 1C19                                  __ptext23 22CC  
                                __ptext15 20B0                                  __ptext40 1E0F  
                                __ptext32 1BCB                                  __ptext24 128E  
                                __ptext16 20EA                                  __ptext41 1CB9  
                                __ptext33 2FC3                                  __ptext25 2325  
                                __ptext17 20E0                                  __ptext50 1931  
                                __ptext42 26D1                                  __ptext34 1E6A  
                                __ptext26 1EC9                                  __ptext18 038E  
                                __ptext51 1461                                  __ptext43 0824  
                                __ptext35 0BB6                                  __ptext27 2307  
                                __ptext19 1301                                  __ptext60 075C  
                                __ptext52 273E                                  __ptext44 18F4  
                                __ptext36 2FBE                                  __ptext28 15CA  
                                __ptext61 252D                                  __ptext53 1B30  
                                __ptext45 20A7                                  __ptext37 2343  
                                __ptext29 216B                                  __ptext70 2FE0  
                                __ptext62 16C6                                  __ptext54 2426  
                                __ptext46 0C9F                                  __ptext38 1647  
                                __ptext71 2491                                  __ptext63 0DA3  
                                __ptext55 1AE3                                  __ptext47 22B0  
                                __ptext39 174D                                  __ptext80 2F73  
                                __ptext72 27BD                                  __ptext64 00DB  
                                __ptext56 0A1B                                  __ptext48 2404  
                                __ptext81 19BB                                  __ptext73 1D0B  
                                __ptext65 0960                                  __ptext57 1974  
                                __ptext49 1F2D                                  __ptext90 205B  
                                __ptext82 1DB6                                  __ptext74 21E7  
                                __ptext66 222C                                  __ptext58 154E  
                                __ptext91 2053                                  __ptext83 2580  
                                __ptext75 246D                                  __ptext67 11E6  
                                __ptext59 14D7                                  __ptext92 204B  
                                __ptext84 2073                                  __ptext76 20D6  
                                __ptext68 0800                                  __ptext93 2043  
                                __ptext85 206B                                  __ptext77 2115  
                                __ptext69 0ECE                                  __ptext94 209E  
                                __ptext86 2063                                  __ptext78 210A  
                                __ptext95 20F4                                  __ptext87 20CC  
                                __ptext79 24B6                                  __ptext96 25AB  
                                __ptext88 20FF                                  __ptext97 2F70  
                                __ptext89 212C                                  __ptext98 215E  
                                __ptext99 2FDA                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                              ??_setDrvGain 00B7  
                            ??_setDrvPeak 004D                  __end_ofi1_mssp1_clearIRQ 2F5B  
            send_2bytes_latchless_IK@data 0031                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 20FF                       i1LEDsOn@topOrBottom 002B  
                        __size_of_stricmp 0034                          __size_of_strcspn 0030  
                        __size_of_toupper 0010                            ??i1_returnStop 0071  
                 i1_do_I2C_SEND_ADR_WRITE 2FF9                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 2FDA                                  _drv_init 1376  
                                _drv_read 1974                                  _drv_sine 10F2  
                        _i2c1_driver_open 20EA                                trunc@expon 00CB  
                        _i2c1_driver_stop 2F67                             __size_of_atoi 0071  
                           __size_of_main 006E                      ?_i2c1_driver_startRX 0070  
                                _errorOut 0162                      ??_LED_test_openshort 00B9  
                                _readdata 01CD            __size_of_i2c1_driver_getRXData 0003  
                             ??_doRelMove 00C9                             __size_of_stop 0028  
           __end_of_i2c1_driver_getRXData 2F70                                  _parseCmd 058B  
         __size_of_send_2length_2bytes_IK 0018      __end_of_TMR0_DefaultInterruptHandler 273E  
   __size_of_TMR0_DefaultInterruptHandler 0037              _TMR0_DefaultInterruptHandler 2707  
                __size_of_getMotionStatus 0023                 __size_of_setHeaterPreTime 000F  
                 ??i1_do_I2C_SEND_RESTART 0070          __size_ofi1_i2c1_driver_getRXData 0003  
                                _moveMask 00DE                   i2c_masterOperation@read 0038  
                             ??_getActive 0049                                _RC1STAbits 019D  
    __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004            __end_ofi1_i2c1_driver_sendNACK 2F7E  
                              _RB5PPSbits 0E9D                          setMoveMask@onOff 00B7  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
              ??i1_do_I2C_DO_ADDRESS_NACK 0070                                _RB7PPSbits 0E9F  
                                atoi@sign 003B                               ??_commCheck 00D6  
        __end_ofi1_do_I2C_DO_NACK_RESTART 2F9A                         _LED_configReg_bot 0146  
          __end_ofi1_i2c1_driver_resetBus 2F3D                      __end_of_zeroPosition 1376  
                       _LED_configReg_top 014A                         ??_TMR2_StartTimer 0031  
      __end_of_INTERRUPT_InterruptManager 0050                _INTERRUPT_InterruptManager 0004  
                               printf@val 00AE                              _SSP1STATbits 0214  
                      __end_of_setDrvGain 1974          __end_of_do_I2C_SEND_RESTART_READ 204B  
                      __end_of_setDrvPeak 2362                              ??_returnStop 0032  
                                execCmd@s 016E                     ??_do_I2C_DO_NACK_STOP 0031  
                        ??_calcHeaterPins 0031                       _TMR0_Load8bitPeriod 2FBE  
               mssp1_waitForEvent@timeout 0031            __size_of_i2c1_driver_setI2cISR 0009  
           __end_of_i2c1_driver_setI2cISR 20C2                                _INTCONbits 000B  
            __size_of_send_last_2bytes_IK 0058                               _NVMCON1bits 0895  
              __size_of_i2c1_driver_start 0003                               ??_drv_reset 00B5  
                             _setMoveMask 128E                       __end_ofi1_do_I2C_RX 27BD  
                          __pstringtext10 291F                            __pstringtext11 2967  
                          __pstringtext20 28EE                            __pstringtext12 2828  
                     __end_ofi1_do_I2C_TX 1BCB                            __pstringtext21 28FF  
                          __pstringtext13 2847                            __pstringtext30 2995  
                          __pstringtext22 290F                            __pstringtext14 2865  
                          __pstringtext31 29A0                            __pstringtext23 292E  
                          __pstringtext15 2881                            __pstringtext40 29EE  
                          __pstringtext32 29AA                            __pstringtext24 293D  
                          __pstringtext16 289B                            __pstringtext41 29F6  
                          __pstringtext33 29B4                            __pstringtext25 294C  
                          __pstringtext17 28B4                            __pstringtext50 301E  
                          __pstringtext42 29FE                            __pstringtext34 29BD  
                          __pstringtext26 295A                            __pstringtext18 28CB  
                          __pstringtext51 3022                            __pstringtext43 2A05  
                          __pstringtext35 29C6                            __pstringtext27 2973  
                          __pstringtext19 28DD                            __pstringtext60 304A  
                          __pstringtext52 3026                            __pstringtext44 3000  
                          __pstringtext36 29CE                            __pstringtext28 297F  
                          __pstringtext61 0000                            __pstringtext53 302A  
                          __pstringtext45 3005                            __pstringtext37 29D6  
                          __pstringtext29 298A                            __pstringtext54 302E  
                          __pstringtext46 300A                            __pstringtext38 29DE  
                          __pstringtext55 3032                            __pstringtext47 300F  
                          __pstringtext39 29E6                            __pstringtext56 303C  
                          __pstringtext48 3014                            __pstringtext57 303F  
                          __pstringtext49 3019                            __pstringtext58 3042  
                          __pstringtext59 3045                                  isdigit@c 0032  
                             ??_drv_write 004A                  __size_ofi1_do_I2C_DO_ACK 0004  
                             ??_setLEDPwr 004E                     ??_i2c1_driver_sendACK 0031  
                        ?_do_I2C_TX_EMPTY 0070                            i1_mssp1_setIRQ 2F55  
                 __size_of_WDT_Initialize 0004                    _do_I2C_DO_ADDRESS_NACK 2580  
          __size_ofi1_do_I2C_DO_NACK_STOP 0004                                  intlevel1 0000  
           __end_ofi1_do_I2C_DO_NACK_STOP 2F96                    _do_I2C_RESET$intlevel0 20F8  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0031  
                       ??_TMR2_WriteTimer 0070                   ?_LED_setBrightnessRange 0044  
                             ??_setActive 00B9                                 strchr@chr 0033  
                   ??_i2c1_driver_startRX 0031                                 strchr@ptr 0031  
              ??i1_send_2length_2bytes_IK 007B                          ___lldiv@dividend 0035  
                 ?_PIN_MANAGER_Initialize 0070                   __size_of_i2c_setAddress 0008  
                    ?_TMR0_Load8bitPeriod 0070              ??i1_send_2bytes_latchless_IK 0072  
                  i1_do_I2C_SEND_ADR_READ 2033                         __CFG_CLKOUTEN$OFF 0000  
                               stricmp@s1 0038                                 stricmp@s2 0033  
                               strcspn@s1 003E                                 strcspn@s2 0038  
                      __end_of_returnStop 2FD4                              getMoveMask@i 00B7  
                     _drv_fifo_downstroke 02A0       __size_ofi1_do_I2C_SEND_RESTART_READ 0004  
          __size_ofi1_i2c1_driver_sendACK 0004             ?_TMR0_DefaultInterruptHandler 0070  
           __end_ofi1_i2c1_driver_sendACK 2F7A               __size_of_mssp1_IRQisEnabled 000A  
          __size_ofi1_i2c1_driver_restart 0003                                  printf@ap 00B3  
           __end_ofi1_i2c1_driver_restart 2F4C                        _EUSART_Receive_ISR 2294  
             __size_of_mssp1_waitForEvent 000B                   drv_write_wvfrm@upOrDown 003A  
          __size_ofi1_i2c1_driver_startRX 0003                      __end_of_calcUpstroke 16C6  
            __end_ofi1_i2c1_driver_TXData 2FB9             __end_ofi1_i2c1_driver_startRX 2F52  
                        ??_TMR2_StopTimer 0070           __end_of_TMR2_LoadPeriodRegister 2FC8  
                        ??_calcDownstroke 00D5                             __pstringtext1 1000  
                           __pstringtext2 10F2                             __pstringtext3 1800  
                           __pstringtext4 187A                             __pstringtext5 2800  
                           __pstringtext6 3036                             __pstringtext7 3039  
                           __pstringtext8 3048                             __pstringtext9 304C  
                 __size_ofi1_do_I2C_RESET 0007                    _send_2length_2bytes_IK 2214  
                     ?_EUSART_Receive_ISR 0070              __end_ofi1_i2c1_driver_isNACK 212C  
                              _TMR0_RANGE 3039                          ___lldiv@quotient 003A  
                         _TMR0_Initialize 21BE                                  stricmp@r 0037  
                              _TMR2_RANGE 3036                                  strcspn@i 003C  
       send_2length_2bytes_IK@topOrBottom 0041       i1send_2length_2bytes_IK@topOrBottom 0025  
                  __size_of_i2c_setBuffer 0015                              ?_getMoveMask 00B5  
                   __size_of_startAbsMove 001D                                  toupper@c 0032  
                  __end_ofi1_mssp1_setIRQ 2F58                               _returnReset 2FD4  
                                strtok@s1 0044                                  strtok@s2 003F  
                                strspn@s1 003E                                  strspn@s2 0038  
        _do_I2C_DO_NACK_RESTART$intlevel0 2077                                  strtok@sp 0054  
               ??i1_do_I2C_SEND_ADR_WRITE 0071                  __size_of_main_initialize 00D4  
          __end_of_LED_setBrightnessRange 07F4                              getPosition@a 00B5  
                            ?_getPosition 00B5                    __size_ofi1_do_I2C_IDLE 0005  
                  __size_ofi1_do_I2C_RCEN 0006                   ??i1_send_last_2bytes_IK 0075  
                      EUSART_Write@txData 0032              __size_of_EUSART_Transmit_ISR 001E  
          __end_of_PIN_MANAGER_Initialize 269D               __end_of_i2c_busCollisionISR 2F49  
                           calcUpstroke@i 00DA                     __size_of_startRelMove 001B  
                   ??_TMR0_Load8bitPeriod 0031                       setMoveMask@probeNum 00B5  
                    ??_EUSART_Receive_ISR 0070                     _TMR2_InterruptHandler 01E1  
                   _do_I2C_SEND_ADR_WRITE 20FF                      _do_I2C_SEND_ADR_READ 212C  
